Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 1
pmScript.ASM



      1						 .386
      2	00000000				 .model	flat, STDCALL
      3
      4		  =0000			 UNICODE equ	 0
      5					 INCLUDE ..\Win32.INC
1     6					 ;Commented out	because	of errors:
1     7					 ;PROCESS_ALL_ACCESS
1     8					 ;THREAD_ALL_ACCESS
1     9					 ;SECTION_ALL_ACCESS
1    10
1    11					 ;Changed because of errors:
1    12
1    13					 ;From:	PostQuitMessage	    PROCDESC	WINAPI	:SWORD
1    14					 ;To:	PostQuitMessage	    PROCDESC	WINAPI	:DWORD
1    15
1    16
1    17					 ;Main include file for	Win32 applications built with TASM5.
1    18					 ;Supplied on Companion	Disk for book
1    19					 ;"Windows Assembly Language and Systems Programming"
1    20					 ;by Barry Kauler, published by	R&D Books / Miller Freeman, USA, 1997.
1    21					 ;
1    22					 ;I have inserted some comments, marked	by "*bk*".
1    23					 ;some unicode support,	but a bit patchy.  What	is missing mainly is
1    24					 ;the prototypes and structures	for UNICODE characters.	 All API
1    25					 ;functions ending in "....A" are ANSI character, while	UNICODE
1    26					 ;functions end	in "....W".  Maybe someone will	be moved to fix	this?
1    27					 ;Also,	I have stuck stuff into	this file "here	and there" and it
1    28					 ;could	do with	a bit of organising.
1    29
1    30
1    31					 ;I would like to acknowledge Sven Schreiber:
1    32					 ;				   W32Main.inc
1    33					 ;			   Win32 Main Header File V1.00
1    34					 ;		 03-14-1996 Sven B. Schreiber sbs@psbs.franken.de
1    35					 ;			  This is Public Domain	Software
1    36					 ;His file W32MAIN.INC is part of his WALK32 Windows 95	assembly language
1    37					 ;development tools, all public	domain.	 I have	incorporated much of
1    38					 ;W32MAIN.INC into this	file.
1    39
1    40					 ;I would like to acknowledge Wayne Radburn.
1    41					 ;Wayne	has a public domain example assembly language program for Windows 95,
1    42					 ;included on the Companion Disk as SKELETON.ZIP.  It is for MASM 6.11.
1    43					 ;I have "borrowed" from his file WINDOWSA.INC,	which has the API
1    44					 ;prototypes. I	have modified the prototypes to	suit TASM 5.0.
1    45
1    46
1    47
1    48					 ;------------------------------------------------------------------------------
1    49					 ;
1    50		  = ACHAR		 CHAR				 textequ <ACHAR>	 ;ansi char type
1    51		  =0001			 CHAR_				 equ	 1		 ;ansi char size
1    52					 ;
1    53					 ;
1    54					 ;------------------------------------------------------------------------------
1    55
1    56
1    57					 ;
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 2
pmScript.ASM



1    58					 ;	 BASIC TYPES
1    59					 ;........................................................................
1    60					 ACHAR				 typedef BYTE		 ;ansi character
1    61					 ATOM				 typedef DWORD		 ;string atom
1    62					 BOOL				 typedef DWORD		 ;boolean variable
1    63					 COLORREF			 typedef DWORD		 ;rgb color
1    64					 DWORDLONG			 typedef QWORD		 ;long double word
1    65					 GLOBALHANDLE			 typedef DWORD		 ;global handle
1    66					 HACCEL				 typedef DWORD		 ;accelerator handle
1    67					 HANDLE				 typedef DWORD		 ;unspecified handle
1    68					 HBITMAP			 typedef DWORD		 ;bitmap handle
1    69					 HBRUSH				 typedef DWORD		 ;brush	handle
1    70					 HCOLORSPACE			 typedef DWORD		 ;color	space handle
1    71					 HCURSOR			 typedef DWORD		 ;cursor handle
1    72					 HDC				 typedef DWORD		 ;device context handle
1    73					 HDWP				 typedef DWORD		 ;defer	win pos	handle
1    74					 HENHMETAFILE			 typedef DWORD		 ;enh. metafile	handle
1    75					 HFILE				 typedef DWORD		 ;file handle
1    76					 HFONT				 typedef DWORD		 ;font handle
1    77					 HGLOBAL			 typedef DWORD		 ;global handle
1    78					 HHOOK				 typedef DWORD		 ;hook handle
1    79					 HICON				 typedef DWORD		 ;icon handle
1    80					 HINSTANCE			 typedef DWORD		 ;instance handle
1    81					 HINTERNET			 typedef DWORD		 ;internet handle
1    82					 HLOCAL				 typedef DWORD		 ;local	handle
1    83					 HMENU				 typedef DWORD		 ;menu handle
1    84					 HMETAFILE			 typedef DWORD		 ;metafile handle
1    85					 HPALETTE			 typedef DWORD		 ;palette handle
1    86					 HPEN				 typedef DWORD		 ;pen handle
1    87					 HRGN				 typedef DWORD		 ;region handle
1    88					 HRSRC				 typedef DWORD		 ;resource handle
1    89					 HSTR				 typedef DWORD		 ;string handle
1    90					 HTASK				 typedef DWORD		 ;task handle
1    91					 HTREEITEM			 typedef DWORD		 ;tree view item handle
1    92					 HWND				 typedef DWORD		 ;window handle
1    93					 INTEGER			 typedef DWORD		 ;standard integer
1    94					 LOCALHANDLE			 typedef DWORD		 ;local	handle
1    95					 LONG				 typedef DWORD		 ;long integer
1    96					 LONGINT			 typedef DWORD		 ;long integer
1    97					 LPARAM				 typedef DWORD		 ;long parameter
1    98					 LPBOOL				 typedef DWORD		 ;long ptr to boolean
1    99					 LPBYTE				 typedef DWORD		 ;long ptr to byte
1   100					 LPCSTR				 typedef DWORD		 ;long ptr to string
1   101					 LPCTSTR			 typedef DWORD		 ;long ptr to string
1   102					 LPCVOID			 typedef DWORD		 ;long ptr to buffer
1   103					 LPDWORD			 typedef DWORD		 ;long ptr to dword
1   104					 LPFN				 typedef DWORD		 ;long ptr to function
1   105					 LPINT				 typedef DWORD		 ;long ptr to integer
1   106					 LPLONG				 typedef DWORD		 ;long ptr to long int
1   107					 LPSTR				 typedef DWORD		 ;long ptr to string
1   108					 LPTSTR				 typedef DWORD		 ;long ptr to string
1   109					 LPVOID				 typedef DWORD		 ;long ptr to buffer
1   110					 LPWORD				 typedef DWORD		 ;long ptr to word
1   111					 LRESULT			 typedef DWORD		 ;long result
1   112					 POINTER			 typedef DWORD		 ;pointer to anything
1   113					 PVOID				 typedef DWORD		 ;pointer to buffer
1   114					 SHORTINT			 typedef WORD		 ;short	integer
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 3
pmScript.ASM



1   115					 UINT				 typedef DWORD		 ;unsigned integer
1   116					 WCHAR				 typedef WORD		 ;unicode character
1   117					 WNDPROC			 typedef DWORD		 ;window procedure
1   118					 WPARAM				 typedef DWORD		 ;word parameter
1   119					 ;
1   120					 ;
1   121					 ;
1   122		  =0000			 NULL				 equ	 0		 ;null
1   123		  =0000			 FALSE				 equ	 0		 ;boolean false
1   124		  =0001			 TRUE				 equ	 1		 ;boolean true
1   125					 ;
1   126					 ;------------------------------------------------------------------------------
1   127					 ;
1   128		  =0080			 BUTTON				 equ	 0080h		 ;button class
1   129		  =0081			 EDIT				 equ	 0081h		 ;edit class
1   130		  =0082			 STATIC				 equ	 0082h		 ;static class
1   131		  =0083			 LISTBOX			 equ	 0083h		 ;list box class
1   132		  =0084			 SCROLLBAR			 equ	 0084h		 ;scroll bar class
1   133		  =0085			 COMBOBOX			 equ	 0085h		 ;combo	box class
1   134					 ;
1   135					 ;------------------------------------------------------------------------------
1   136					 ;
1   137		  =0104			 MAX_PATH			 equ	 260		 ;maximum path length
1   138		  =0080			 OFS_MAXPATHNAME		 equ	 128		 ;max OF] path len
1   139					 ;
1   140					 ;------------------------------------------------------------------------------
1   141					 ;
1   142		  =FFFFFFFF		 INVALID_HANDLE_VALUE		 equ	 0FFFFFFFFh	 ;invalid handle
1   143		  =FFFFFFFF		 INVALID_FILE_SIZE		 equ	 0FFFFFFFFh	 ;invalid file size
1   144		  =FFFFFFFF		 INVALID_FILE_POINTER		 equ	 0FFFFFFFFh	 ;invalid file pointer
1   145					 ;
1   146					 ;==============================================================================
1   147					 ;
1   148					 ;	 WIN32 CONSTANTS
1   149					 ;
1   150					 ;==============================================================================
1   151					 ;
1   152					 ; ========================
1   153					 ; bitmap compression types
1   154					 ; ========================
1   155					 ;
1   156		  =0000			 BI_RGB				 equ	 0
1   157		  =0001			 BI_RLE8			 equ	 1
1   158		  =0002			 BI_RLE4			 equ	 2
1   159		  =0003			 BI_BITFIELDS			 equ	 3
1   160					 ;
1   161					 ;------------------------------------------------------------------------------
1   162					 ;
1   163					 ; =======================
1   164					 ; button control messages
1   165					 ; =======================
1   166					 ;
1   167		  =00F0			 BM_GETCHECK			 equ	 00F0h
1   168		  =00F1			 BM_SETCHECK			 equ	 00F1h
1   169		  =00F2			 BM_GETSTATE			 equ	 00F2h
1   170		  =00F3			 BM_SETSTATE			 equ	 00F3h
1   171		  =00F4			 BM_SETSTYLE			 equ	 00F4h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 4
pmScript.ASM



1   172		  =00F5			 BM_CLICK			 equ	 00F5h
1   173		  =00F6			 BM_GETIMAGE			 equ	 00F6h
1   174		  =00F7			 BM_SETIMAGE			 equ	 00F7h
1   175					 ;
1   176					 ;------------------------------------------------------------------------------
1   177					 ;
1   178					 ; ============================
1   179					 ; button control notifications
1   180					 ; ============================
1   181					 ;
1   182		  =0000			 BN_CLICKED			 equ	 0000h
1   183		  =0001			 BN_PAINT			 equ	 0001h
1   184		  =0002			 BN_HILITE			 equ	 0002h
1   185		  =0003			 BN_UNHILITE			 equ	 0003h
1   186		  =0004			 BN_DISABLE			 equ	 0004h
1   187		  =0005			 BN_DOUBLECLICKED		 equ	 0005h
1   188		  =0006			 BN_SETFOCUS			 equ	 0006h
1   189		  =0007			 BN_KILLFOCUS			 equ	 0007h
1   190					 ;
1   191					 BN_PUSHED			 equ	 BN_HILITE
1   192					 BN_UNPUSHED			 equ	 BN_UNHILITE
1   193					 BN_DBLCLK			 equ	 BN_DOUBLECLICKED
1   194					 ;
1   195					 ;------------------------------------------------------------------------------
1   196					 ;
1   197					 ; =====================
1   198					 ; button control styles
1   199					 ; =====================
1   200					 ;
1   201		  =0000			 BS_PUSHBUTTON			 equ	 0000h
1   202		  =0001			 BS_DEFPUSHBUTTON		 equ	 0001h
1   203		  =0002			 BS_CHECKBOX			 equ	 0002h
1   204		  =0003			 BS_AUTOCHECKBOX		 equ	 0003h
1   205		  =0004			 BS_RADIOBUTTON			 equ	 0004h
1   206		  =0005			 BS_3STATE			 equ	 0005h
1   207		  =0006			 BS_AUTO3STATE			 equ	 0006h
1   208		  =0007			 BS_GROUPBOX			 equ	 0007h
1   209		  =0008			 BS_USERBUTTON			 equ	 0008h
1   210		  =0009			 BS_AUTORADIOBUTTON		 equ	 0009h
1   211		  =000B			 BS_OWNERDRAW			 equ	 000Bh
1   212		  =0020			 BS_LEFTTEXT			 equ	 0020h
1   213		  =0000			 BS_TEXT			 equ	 0000h
1   214		  =0040			 BS_ICON			 equ	 0040h
1   215		  =0080			 BS_BITMAP			 equ	 0080h
1   216		  =0100			 BS_LEFT			 equ	 0100h
1   217		  =0200			 BS_RIGHT			 equ	 0200h
1   218		  =0300			 BS_CENTER			 equ	 0300h
1   219		  =0400			 BS_TOP				 equ	 0400h
1   220		  =0800			 BS_BOTTOM			 equ	 0800h
1   221		  =0C00			 BS_VCENTER			 equ	 0C00h
1   222		  =1000			 BS_PUSHLIKE			 equ	 1000h
1   223		  =2000			 BS_MULTILINE			 equ	 2000h
1   224		  =4000			 BS_NOTIFY			 equ	 4000h
1   225		  =8000			 BS_FLAT			 equ	 8000h
1   226					 ;
1   227					 BS_RIGHTBUTTON			 equ	 BS_LEFTTEXT
1   228					 ;
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 5
pmScript.ASM



1   229					 ;------------------------------------------------------------------------------
1   230					 ;
1   231					 ; ==================
1   232					 ; combo box messages
1   233					 ; ==================
1   234					 ;
1   235		  =0140			 CB_GETEDITSEL			 equ	 0140h
1   236		  =0141			 CB_LIMITTEXT			 equ	 0141h
1   237		  =0142			 CB_SETEDITSEL			 equ	 0142h
1   238		  =0143			 CB_ADDSTRING			 equ	 0143h
1   239		  =0144			 CB_DELETESTRING		 equ	 0144h
1   240		  =0145			 CB_DIR				 equ	 0145h
1   241		  =0146			 CB_GETCOUNT			 equ	 0146h
1   242		  =0147			 CB_GETCURSEL			 equ	 0147h
1   243		  =0148			 CB_GETLBTEXT			 equ	 0148h
1   244		  =0149			 CB_GETLBTEXTLEN		 equ	 0149h
1   245		  =014A			 CB_INSERTSTRING		 equ	 014Ah
1   246		  =014B			 CB_RESETCONTENT		 equ	 014Bh
1   247		  =014C			 CB_FINDSTRING			 equ	 014Ch
1   248		  =014D			 CB_SELECTSTRING		 equ	 014Dh
1   249		  =014E			 CB_SETCURSEL			 equ	 014Eh
1   250		  =014F			 CB_SHOWDROPDOWN		 equ	 014Fh
1   251		  =0150			 CB_GETITEMDATA			 equ	 0150h
1   252		  =0151			 CB_SETITEMDATA			 equ	 0151h
1   253		  =0152			 CB_GETDROPPEDCONTROLRECT	 equ	 0152h
1   254		  =0153			 CB_SETITEMHEIGHT		 equ	 0153h
1   255		  =0154			 CB_GETITEMHEIGHT		 equ	 0154h
1   256		  =0155			 CB_SETEXTENDEDUI		 equ	 0155h
1   257		  =0156			 CB_GETEXTENDEDUI		 equ	 0156h
1   258		  =0157			 CB_GETDROPPEDSTATE		 equ	 0157h
1   259		  =0158			 CB_FINDSTRINGEXACT		 equ	 0158h
1   260		  =0159			 CB_SETLOCALE			 equ	 0159h
1   261		  =015A			 CB_GETLOCALE			 equ	 015Ah
1   262		  =015B			 CB_GETTOPINDEX			 equ	 015Bh
1   263		  =015C			 CB_SETTOPINDEX			 equ	 015Ch
1   264		  =015D			 CB_GETHORIZONTALEXTENT		 equ	 015Dh
1   265		  =015E			 CB_SETHORIZONTALEXTENT		 equ	 015Eh
1   266		  =015F			 CB_GETDROPPEDWIDTH		 equ	 015Fh
1   267		  =0160			 CB_SETDROPPEDWIDTH		 equ	 0160h
1   268		  =0161			 CB_INITSTORAGE			 equ	 0161h
1   269		  =0162			 CB_MSGMAX			 equ	 0162h
1   270					 ;
1   271					 ;------------------------------------------------------------------------------
1   272					 ;
1   273					 ; =======================
1   274					 ; combo box return values
1   275					 ; =======================
1   276					 ;
1   277		  =0000			 CB_OKAY			 equ	  0
1   278		  =-0001		 CB_ERR				 equ	 -1
1   279		  =-0002		 CB_ERRSPACE			 equ	 -2
1   280					 ;
1   281					 ;------------------------------------------------------------------------------
1   282					 ;
1   283					 ; ======================
1   284					 ; CreateDIBitmap() codes
1   285					 ; ======================
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 6
pmScript.ASM



1   286					 ;
1   287		  =0004			 CBM_INIT			 equ	 4
1   288					 ;
1   289					 ;------------------------------------------------------------------------------
1   290					 ;
1   291					 ; ============================
1   292					 ; combo box notification codes
1   293					 ; ============================
1   294					 ;
1   295		  =-0001		 CBN_ERRSPACE			 equ	 -1
1   296		  =0001			 CBN_SELCHANGE			 equ	  1
1   297		  =0002			 CBN_DBLCLK			 equ	  2
1   298		  =0003			 CBN_SETFOCUS			 equ	  3
1   299		  =0004			 CBN_KILLFOCUS			 equ	  4
1   300		  =0005			 CBN_EDITCHANGE			 equ	  5
1   301		  =0006			 CBN_EDITUPDATE			 equ	  6
1   302		  =0007			 CBN_DROPDOWN			 equ	  7
1   303		  =0008			 CBN_CLOSEUP			 equ	  8
1   304		  =0009			 CBN_SELENDOK			 equ	  9
1   305		  =000A			 CBN_SELENDCANCEL		 equ	 10
1   306					 ;
1   307					 ;------------------------------------------------------------------------------
1   308					 ;
1   309					 ; ================
1   310					 ; combo box styles
1   311					 ; ================
1   312					 ;
1   313		  =0001			 CBS_SIMPLE			 equ	 0001h
1   314		  =0002			 CBS_DROPDOWN			 equ	 0002h
1   315		  =0003			 CBS_DROPDOWNLIST		 equ	 0003h
1   316		  =0010			 CBS_OWNERDRAWFIXED		 equ	 0010h
1   317		  =0020			 CBS_OWNERDRAWVARIABLE		 equ	 0020h
1   318		  =0040			 CBS_AUTOHSCROLL		 equ	 0040h
1   319		  =0080			 CBS_OEMCONVERT			 equ	 0080h
1   320		  =0100			 CBS_SORT			 equ	 0100h
1   321		  =0200			 CBS_HASSTRINGS			 equ	 0200h
1   322		  =0400			 CBS_NOINTEGRALHEIGHT		 equ	 0400h
1   323		  =0800			 CBS_DISABLENOSCROLL		 equ	 0800h
1   324		  =2000			 CBS_UPPERCASE			 equ	 2000h
1   325		  =4000			 CBS_LOWERCASE			 equ	 4000h
1   326					 ;
1   327					 ;------------------------------------------------------------------------------
1   328					 ;
1   329					 ; =================
1   330					 ; clipboard formats
1   331					 ; =================
1   332					 ;
1   333		  =0001			 CF_TEXT			 equ	 0001h
1   334		  =0002			 CF_BITMAP			 equ	 0002h
1   335		  =0003			 CF_METAFILEPICT		 equ	 0003h
1   336		  =0004			 CF_SYLK			 equ	 0004h
1   337		  =0005			 CF_DIF				 equ	 0005h
1   338		  =0006			 CF_TIFF			 equ	 0006h
1   339		  =0007			 CF_OEMTEXT			 equ	 0007h
1   340		  =0008			 CF_DIB				 equ	 0008h
1   341		  =0009			 CF_PALETTE			 equ	 0009h
1   342		  =000A			 CF_PENDATA			 equ	 000Ah
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 7
pmScript.ASM



1   343		  =000B			 CF_RIFF			 equ	 000Bh
1   344		  =000C			 CF_WAVE			 equ	 000Ch
1   345		  =000D			 CF_UNICODETEXT			 equ	 000Dh
1   346		  =000E			 CF_ENHMETAFILE			 equ	 000Eh
1   347		  =000F			 CF_HDROP			 equ	 000Fh
1   348		  =0010			 CF_LOCALE			 equ	 0010h
1   349		  =0011			 CF_MAX				 equ	 0011h
1   350					 ;
1   351		  =0080			 CF_OWNERDISPLAY		 equ	 0080h
1   352		  =0081			 CF_DSPTEXT			 equ	 0081h
1   353		  =0082			 CF_DSPBITMAP			 equ	 0082h
1   354		  =0083			 CF_DSPMETAFILEPICT		 equ	 0083h
1   355		  =008E			 CF_DSPENHMETAFILE		 equ	 008Eh
1   356					 ;
1   357		  =0200			 CF_PRIVATEFIRST		 equ	 0200h
1   358		  =02FF			 CF_PRIVATELAST			 equ	 02FFh
1   359					 ;
1   360		  =0300			 CF_GDIOBJFIRST			 equ	 0300h
1   361		  =03FF			 CF_GDIOBJLAST			 equ	 03FFh
1   362					 ;
1   363					 ;------------------------------------------------------------------------------
1   364					 ;
1   365					 ; ===========
1   366					 ; color types
1   367					 ; ===========
1   368					 ;
1   369		  =0000			 COLOR_SCROLLBAR		 equ	  0
1   370		  =0001			 COLOR_BACKGROUND		 equ	  1
1   371		  =0002			 COLOR_ACTIVECAPTION		 equ	  2
1   372		  =0003			 COLOR_INACTIVECAPTION		 equ	  3
1   373		  =0004			 COLOR_MENU			 equ	  4
1   374		  =0005			 COLOR_WINDOW			 equ	  5
1   375		  =0006			 COLOR_WINDOWFRAME		 equ	  6
1   376		  =0007			 COLOR_MENUTEXT			 equ	  7
1   377		  =0008			 COLOR_WINDOWTEXT		 equ	  8
1   378		  =0009			 COLOR_CAPTIONTEXT		 equ	  9
1   379		  =000A			 COLOR_ACTIVEBORDER		 equ	 10
1   380		  =000B			 COLOR_INACTIVEBORDER		 equ	 11
1   381		  =000C			 COLOR_APPWORKSPACE		 equ	 12
1   382		  =000D			 COLOR_HIGHLIGHT		 equ	 13
1   383		  =000E			 COLOR_HIGHLIGHTTEXT		 equ	 14
1   384		  =000F			 COLOR_BTNFACE			 equ	 15
1   385		  =0010			 COLOR_BTNSHADOW		 equ	 16
1   386		  =0011			 COLOR_GRAYTEXT			 equ	 17
1   387		  =0012			 COLOR_BTNTEXT			 equ	 18
1   388		  =0013			 COLOR_INACTIVECAPTIONTEXT	 equ	 19
1   389		  =0014			 COLOR_BTNHIGHLIGHT		 equ	 20
1   390		  =0015			 COLOR_3DDKSHADOW		 equ	 21
1   391		  =0016			 COLOR_3DLIGHT			 equ	 22
1   392		  =0017			 COLOR_INFOTEXT			 equ	 23
1   393		  =0018			 COLOR_INFOBK			 equ	 24
1   394					 ;
1   395					 COLOR_DESKTOP			 equ	 COLOR_BACKGROUND
1   396					 COLOR_3DFACE			 equ	 COLOR_BTNFACE
1   397					 COLOR_3DSHADOW			 equ	 COLOR_BTNSHADOW
1   398					 COLOR_3DHIGHLIGHT		 equ	 COLOR_BTNHIGHLIGHT
1   399					 COLOR_3DHILIGHT		 equ	 COLOR_BTNHIGHLIGHT
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 8
pmScript.ASM



1   400					 COLOR_BTNHILIGHT		 equ	 COLOR_BTNHIGHLIGHT
1   401					 ;
1   402					 ;------------------------------------------------------------------------------
1   403					 ;
1   404					 ; ===================
1   405					 ; network connections
1   406					 ; ===================
1   407					 ;
1   408		  =0001			 CONNECT_UPDATE_PROFILE		 equ	 00000001h
1   409		  =0002			 CONNECT_UPDATE_RECENT		 equ	 00000002h
1   410		  =0004			 CONNECT_TEMPORARY		 equ	 00000004h
1   411		  =0008			 CONNECT_INTERACTIVE		 equ	 00000008h
1   412		  =0010			 CONNECT_PROMPT			 equ	 00000010h
1   413		  =0020			 CONNECT_NEED_DRIVE		 equ	 00000020h
1   414		  =0040			 CONNECT_REFCOUNT		 equ	 00000040h
1   415		  =0080			 CONNECT_REDIRECT		 equ	 00000080h
1   416		  =0100			 CONNECT_LOCALDRIVE		 equ	 00000100h
1   417		  =0200			 CONNECT_CURRENT_MEDIA		 equ	 00000200h
1   418					 ;
1   419		  =0001			 NETPROPERTY_PERSISTENT		 equ	 1
1   420					 ;
1   421					 ;------------------------------------------------------------------------------
1   422					 ;
1   423					 ; ====================
1   424					 ; thread context flags
1   425					 ; ====================
1   426					 ;
1   427		  =00010000		 CONTEXT_i386			 equ	 00010000h
1   428		  =00010000		 CONTEXT_i486			 equ	 00010000h
1   429					 ;
1   430		  =00010001		 CONTEXT_CONTROL		 equ	 CONTEXT_i386+00000001h
1   431		  =00010002		 CONTEXT_INTEGER		 equ	 CONTEXT_i386+00000002h
1   432		  =00010004		 CONTEXT_SEGMENTS		 equ	 CONTEXT_i386+00000004h
1   433		  =00010008		 CONTEXT_FLOATING_POINT		 equ	 CONTEXT_i386+00000008h
1   434		  =00010010		 CONTEXT_DEBUG_REGISTERS	 equ	 CONTEXT_i386+00000010h
1   435					 ;
1   436		  =00030007		 CONTEXT_FULL		 equ CONTEXT_CONTROL+CONTEXT_INTEGER+CONTEXT_SEGMENTS
1   437					 ;
1   438		  =0050			 SIZE_OF_80387_REGISTERS	 equ	 80
1   439					 ;
1   440					 ;------------------------------------------------------------------------------
1   441					 ;
1   442					 ; ==========
1   443					 ; code	pages
1   444					 ; ==========
1   445					 ;
1   446		  =0000			 CP_ACP				 equ	 0
1   447		  =0001			 CP_OEMCP			 equ	 1
1   448		  =0002			 CP_MACCP			 equ	 2
1   449					 ;
1   450					 ;------------------------------------------------------------------------------
1   451					 ;
1   452					 ; ============
1   453					 ; class styles
1   454					 ; ============
1   455					 ;
1   456		  =0001			 CS_VREDRAW			 equ	 00000001h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 9
pmScript.ASM



1   457		  =0002			 CS_HREDRAW			 equ	 00000002h
1   458		  =0004			 CS_KEYCVTWINDOW		 equ	 00000004h
1   459		  =0008			 CS_DBLCLKS			 equ	 00000008h
1   460		  =0020			 CS_OWNDC			 equ	 00000020h
1   461		  =0040			 CS_CLASSDC			 equ	 00000040h
1   462		  =0080			 CS_PARENTDC			 equ	 00000080h
1   463		  =0100			 CS_NOKEYCVT			 equ	 00000100h
1   464		  =0200			 CS_NOCLOSE			 equ	 00000200h
1   465		  =0800			 CS_SAVEBITS			 equ	 00000800h
1   466		  =1000			 CS_BYTEALIGNCLIENT		 equ	 00001000h
1   467		  =2000			 CS_BYTEALIGNWINDOW		 equ	 00002000h
1   468		  =4000			 CS_GLOBALCLASS			 equ	 00004000h
1   469		  =00010000		 CS_IME				 equ	 00010000h
1   470					 ;
1   471					 ;------------------------------------------------------------------------------
1   472					 ;
1   473					 ; ===================
1   474					 ; control color types
1   475					 ; ===================
1   476					 ;
1   477		  =0000			 CTLCOLOR_MSGBOX		 equ	 0
1   478		  =0001			 CTLCOLOR_EDIT			 equ	 1
1   479		  =0002			 CTLCOLOR_LISTBOX		 equ	 2
1   480		  =0003			 CTLCOLOR_BTN			 equ	 3
1   481		  =0004			 CTLCOLOR_DLG			 equ	 4
1   482		  =0005			 CTLCOLOR_SCROLLBAR		 equ	 5
1   483		  =0006			 CTLCOLOR_STATIC		 equ	 6
1   484		  =0007			 CTLCOLOR_MAX			 equ	 7
1   485					 ;
1   486					 ;------------------------------------------------------------------------------
1   487					 ;
1   488					 ; =======================
1   489					 ; CreateWindow() commands
1   490					 ; =======================
1   491					 ;
1   492		  =80000000		 CW_USEDEFAULT			 equ	 80000000h
1   493					 ;
1   494					 ;------------------------------------------------------------------------------
1   495					 ;
1   496					 ; ===================
1   497					 ; device capabilities
1   498					 ; ===================
1   499					 ;
1   500		  =0001			 DC_FIELDS			 equ	  1
1   501		  =0002			 DC_PAPERS			 equ	  2
1   502		  =0003			 DC_PAPERSIZE			 equ	  3
1   503		  =0004			 DC_MINEXTENT			 equ	  4
1   504		  =0005			 DC_MAXEXTENT			 equ	  5
1   505		  =0006			 DC_BINS			 equ	  6
1   506		  =0007			 DC_DUPLEX			 equ	  7
1   507		  =0008			 DC_SIZE			 equ	  8
1   508		  =0009			 DC_EXTRA			 equ	  9
1   509		  =000A			 DC_VERSION			 equ	 10
1   510		  =000B			 DC_DRIVER			 equ	 11
1   511		  =000C			 DC_BINNAMES			 equ	 12
1   512		  =000D			 DC_ENUMRESOLUTIONS		 equ	 13
1   513		  =000E			 DC_FILEDEPENDENCIES		 equ	 14
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 10
pmScript.ASM



1   514		  =000F			 DC_TRUETYPE			 equ	 15
1   515		  =0010			 DC_PAPERNAMES			 equ	 16
1   516		  =0011			 DC_ORIENTATION			 equ	 17
1   517		  =0012			 DC_COPIES			 equ	 18
1   518					 ;
1   519					 ;------------------------------------------------------------------------------
1   520					 ;
1   521					 ; ====================
1   522					 ; dib color table id's
1   523					 ; ====================
1   524					 ;
1   525		  =0000			 DIB_RGB_COLORS			 equ	 0
1   526		  =0001			 DIB_PAL_COLORS			 equ	 1
1   527					 ;
1   528					 ;------------------------------------------------------------------------------
1   529					 ;
1   530					 ; ====================
1   531					 ; DLL LibMain() events
1   532					 ; ====================
1   533					 ;
1   534		  =0000			 DLL_PROCESS_DETACH		 equ	 0
1   535		  =0001			 DLL_PROCESS_ATTACH		 equ	 1
1   536		  =0002			 DLL_THREAD_ATTACH		 equ	 2
1   537		  =0003			 DLL_THREAD_DETACH		 equ	 3
1   538					 ;
1   539					 ;------------------------------------------------------------------------------
1   540					 ;
1   541					 ; ======================
1   542					 ; device mode selections
1   543					 ; ======================
1   544					 ;
1   545		  =0001			 DM_UPDATE			 equ	 1
1   546		  =0002			 DM_COPY			 equ	 2
1   547		  =0004			 DM_PROMPT			 equ	 4
1   548		  =0008			 DM_MODIFY			 equ	 8
1   549					 ;
1   550					 DM_IN_BUFFER			 equ	 DM_MODIFY
1   551					 DM_IN_PROMPT			 equ	 DM_PROMPT
1   552					 DM_OUT_BUFFER			 equ	 DM_COPY
1   553					 DM_OUT_DEFAULT			 equ	 DM_UPDATE
1   554					 ;
1   555					 ;------------------------------------------------------------------------------
1   556					 ;
1   557					 ; =============
1   558					 ; dialog styles
1   559					 ; =============
1   560					 ;
1   561		  =0001			 DS_ABSALIGN			 equ	 0001h
1   562		  =0002			 DS_SYSMODAL			 equ	 0002h
1   563		  =0004			 DS_3DLOOK			 equ	 0004h
1   564		  =0008			 DS_FIXEDSYS			 equ	 0008h
1   565		  =0010			 DS_NOFAILCREATE		 equ	 0010h
1   566		  =0020			 DS_LOCALEDIT			 equ	 0020h	 ;edit items get local storage
1   567		  =0040			 DS_SETFONT			 equ	 0040h	 ;user specified font
1   568		  =0080			 DS_MODALFRAME			 equ	 0080h	 ;combinable with WS_CAPTION
1   569		  =0100			 DS_NOIDLEMSG			 equ	 0100h	 ;don't	send WM_ENTERIDLE
1   570		  =0200			 DS_SETFOREGROUND		 equ	 0200h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 11
pmScript.ASM



1   571		  =0400			 DS_CONTROL			 equ	 0400h
1   572		  =0800			 DS_CENTER			 equ	 0800h
1   573		  =1000			 DS_CENTERMOUSE			 equ	 1000h
1   574		  =2000			 DS_CONTEXTHELP			 equ	 2000h
1   575					 ;
1   576		  =0081			 DS_MODAL			 equ	 DS_ABSALIGN+DS_MODALFRAME
1   577					 DS_MODELESS			 equ	 DS_ABSALIGN
1   578					 ;
1   579					 ;------------------------------------------------------------------------------
1   580					 ;
1   581					 ; =======================
1   582					 ; DrawText() format flags
1   583					 ; =======================
1   584					 ;
1   585		  =0000			 DT_TOP				 equ	 00000000h
1   586		  =0000			 DT_LEFT			 equ	 00000000h
1   587		  =0001			 DT_CENTER			 equ	 00000001h
1   588		  =0002			 DT_RIGHT			 equ	 00000002h
1   589		  =0004			 DT_VCENTER			 equ	 00000004h
1   590		  =0008			 DT_BOTTOM			 equ	 00000008h
1   591		  =0010			 DT_WORDBREAK			 equ	 00000010h
1   592		  =0020			 DT_SINGLELINE			 equ	 00000020h
1   593		  =0040			 DT_EXPANDTABS			 equ	 00000040h
1   594		  =0080			 DT_TABSTOP			 equ	 00000080h
1   595		  =0100			 DT_NOCLIP			 equ	 00000100h
1   596		  =0200			 DT_EXTERNALLEADING		 equ	 00000200h
1   597		  =0400			 DT_CALCRECT			 equ	 00000400h
1   598		  =0800			 DT_NOPREFIX			 equ	 00000800h
1   599		  =1000			 DT_INTERNAL			 equ	 00001000h
1   600		  =2000			 DT_EDITCONTROL			 equ	 00002000h
1   601		  =4000			 DT_PATH_ELLIPSIS		 equ	 00004000h
1   602		  =8000			 DT_END_ELLIPSIS		 equ	 00008000h
1   603		  =00010000		 DT_MODIFYSTRING		 equ	 00010000h
1   604		  =00020000		 DT_RTLREADING			 equ	 00020000h
1   605		  =00040000		 DT_WORD_ELLIPSIS		 equ	 00040000h
1   606					 ;
1   607					 ;------------------------------------------------------------------------------
1   608					 ;
1   609					 ; =====================
1   610					 ; edit	control	messages
1   611					 ; =====================
1   612					 ;
1   613		  =00B0			 EM_GETSEL			 equ	 00B0h
1   614		  =00B1			 EM_SETSEL			 equ	 00B1h
1   615		  =00B2			 EM_GETRECT			 equ	 00B2h
1   616		  =00B3			 EM_SETRECT			 equ	 00B3h
1   617		  =00B4			 EM_SETRECTNP			 equ	 00B4h
1   618		  =00B5			 EM_SCROLL			 equ	 00B5h
1   619		  =00B6			 EM_LINESCROLL			 equ	 00B6h
1   620		  =00B7			 EM_SCROLLCARET			 equ	 00B7h
1   621		  =00B8			 EM_GETMODIFY			 equ	 00B8h
1   622		  =00B9			 EM_SETMODIFY			 equ	 00B9h
1   623		  =00BA			 EM_GETLINECOUNT		 equ	 00BAh
1   624		  =00BB			 EM_LINEINDEX			 equ	 00BBh
1   625		  =00BC			 EM_SETHANDLE			 equ	 00BCh
1   626		  =00BD			 EM_GETHANDLE			 equ	 00BDh
1   627		  =00BE			 EM_GETTHUMB			 equ	 00BEh
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 12
pmScript.ASM



1   628		  =00C1			 EM_LINELENGTH			 equ	 00C1h
1   629		  =00C2			 EM_REPLACESEL			 equ	 00C2h
1   630		  =00C4			 EM_GETLINE			 equ	 00C4h
1   631		  =00C5			 EM_LIMITTEXT			 equ	 00C5h
1   632		  =00C6			 EM_CANUNDO			 equ	 00C6h
1   633		  =00C7			 EM_UNDO			 equ	 00C7h
1   634		  =00C8			 EM_FMTLINES			 equ	 00C8h
1   635		  =00C9			 EM_LINEFROMCHAR		 equ	 00C9h
1   636		  =00CB			 EM_SETTABSTOPS			 equ	 00CBh
1   637		  =00CC			 EM_SETPASSWORDCHAR		 equ	 00CCh
1   638		  =00CD			 EM_EMPTYUNDOBUFFER		 equ	 00CDh
1   639		  =00CE			 EM_GETFIRSTVISIBLELINE		 equ	 00CEh
1   640		  =00CF			 EM_SETREADONLY			 equ	 00CFh
1   641		  =00D0			 EM_SETWORDBREAKPROC		 equ	 00D0h
1   642		  =00D1			 EM_GETWORDBREAKPROC		 equ	 00D1h
1   643		  =00D2			 EM_GETPASSWORDCHAR		 equ	 00D2h
1   644		  =00D3			 EM_SETMARGINS			 equ	 00D3h
1   645		  =00D4			 EM_GETMARGINS			 equ	 00D4h
1   646		  =00D5			 EM_GETLIMITTEXT		 equ	 00D5h
1   647		  =00D6			 EM_POSFROMCHAR			 equ	 00D6h
1   648		  =00D7			 EM_CHARFROMPOS			 equ	 00D7h
1   649					 ;
1   650					 EM_SETLIMITTEXT		 equ	 EM_LIMITTEXT
1   651					 ;
1   652					 ;------------------------------------------------------------------------------
1   653					 ;
1   654					 ; ==========================
1   655					 ; edit	control	notifications
1   656					 ; ==========================
1   657					 ;
1   658		  =0100			 EN_SETFOCUS			 equ	 0100h
1   659		  =0200			 EN_KILLFOCUS			 equ	 0200h
1   660		  =0300			 EN_CHANGE			 equ	 0300h
1   661		  =0400			 EN_UPDATE			 equ	 0400h
1   662		  =0500			 EN_ERRSPACE			 equ	 0500h
1   663		  =0501			 EN_MAXTEXT			 equ	 0501h
1   664		  =0601			 EN_HSCROLL			 equ	 0601h
1   665		  =0602			 EN_VSCROLL			 equ	 0602h
1   666					 ;
1   667					 ;------------------------------------------------------------------------------
1   668					 ;
1   669					 ; ===========
1   670					 ; error codes
1   671					 ; ===========
1   672					 ;
1   673		  =0000			 ERROR_SUCCESS				 equ	    0
1   674		  =0000			 NO_ERROR				 equ	    0
1   675					 ;
1   676		  =0001			 ERROR_INVALID_FUNCTION			 equ	    1
1   677		  =0002			 ERROR_FILE_NOT_FOUND			 equ	    2
1   678		  =0003			 ERROR_PATH_NOT_FOUND			 equ	    3
1   679		  =0004			 ERROR_TOO_MANY_OPEN_FILES		 equ	    4
1   680		  =0005			 ERROR_ACCESS_DENIED			 equ	    5
1   681		  =0006			 ERROR_INVALID_HANDLE			 equ	    6
1   682		  =0007			 ERROR_ARENA_TRASHED			 equ	    7
1   683		  =0008			 ERROR_NOT_ENOUGH_MEMORY		 equ	    8
1   684		  =0009			 ERROR_INVALID_BLOCK			 equ	    9
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 13
pmScript.ASM



1   685		  =000A			 ERROR_BAD_ENVIRONMENT			 equ	   10
1   686		  =000B			 ERROR_BAD_FORMAT			 equ	   11
1   687		  =000C			 ERROR_INVALID_ACCESS			 equ	   12
1   688		  =000D			 ERROR_INVALID_DATA			 equ	   13
1   689		  =000E			 ERROR_OUTOFMEMORY			 equ	   14
1   690		  =000F			 ERROR_INVALID_DRIVE			 equ	   15
1   691		  =0010			 ERROR_CURRENT_DIRECTORY		 equ	   16
1   692		  =0011			 ERROR_NOT_SAME_DEVICE			 equ	   17
1   693		  =0012			 ERROR_NO_MORE_FILES			 equ	   18
1   694		  =0013			 ERROR_WRITE_PROTECT			 equ	   19
1   695		  =0014			 ERROR_BAD_UNIT				 equ	   20
1   696		  =0015			 ERROR_NOT_READY			 equ	   21
1   697		  =0016			 ERROR_BAD_COMMAND			 equ	   22
1   698		  =0017			 ERROR_CRC				 equ	   23
1   699		  =0018			 ERROR_BAD_LENGTH			 equ	   24
1   700		  =0019			 ERROR_SEEK				 equ	   25
1   701		  =001A			 ERROR_NOT_DOS_DISK			 equ	   26
1   702		  =001B			 ERROR_SECTOR_NOT_FOUND			 equ	   27
1   703		  =001C			 ERROR_OUT_OF_PAPER			 equ	   28
1   704		  =001D			 ERROR_WRITE_FAULT			 equ	   29
1   705		  =001E			 ERROR_READ_FAULT			 equ	   30
1   706		  =001F			 ERROR_GEN_FAILURE			 equ	   31
1   707		  =0020			 ERROR_SHARING_VIOLATION		 equ	   32
1   708		  =0021			 ERROR_LOCK_VIOLATION			 equ	   33
1   709		  =0022			 ERROR_WRONG_DISK			 equ	   34
1   710		  =0024			 ERROR_SHARING_BUFFER_EXCEEDED		 equ	   36
1   711		  =0026			 ERROR_HANDLE_EOF			 equ	   38
1   712		  =0027			 ERROR_HANDLE_DISK_FULL			 equ	   39
1   713		  =0032			 ERROR_NOT_SUPPORTED			 equ	   50
1   714		  =0033			 ERROR_REM_NOT_LIST			 equ	   51
1   715		  =0034			 ERROR_DUP_NAME				 equ	   52
1   716		  =0035			 ERROR_BAD_NETPATH			 equ	   53
1   717		  =0036			 ERROR_NETWORK_BUSY			 equ	   54
1   718		  =0037			 ERROR_DEV_NOT_EXIST			 equ	   55
1   719		  =0038			 ERROR_TOO_MANY_CMDS			 equ	   56
1   720		  =0039			 ERROR_ADAP_HDW_ERR			 equ	   57
1   721		  =003A			 ERROR_BAD_NET_RESP			 equ	   58
1   722		  =003B			 ERROR_UNEXP_NET_ERR			 equ	   59
1   723		  =003C			 ERROR_BAD_REM_ADAP			 equ	   60
1   724		  =003D			 ERROR_PRINTQ_FULL			 equ	   61
1   725		  =003E			 ERROR_NO_SPOOL_SPACE			 equ	   62
1   726		  =003F			 ERROR_PRINT_CANCELLED			 equ	   63
1   727		  =0040			 ERROR_NETNAME_DELETED			 equ	   64
1   728		  =0041			 ERROR_NETWORK_ACCESS_DENIED		 equ	   65
1   729		  =0042			 ERROR_BAD_DEV_TYPE			 equ	   66
1   730		  =0043			 ERROR_BAD_NET_NAME			 equ	   67
1   731		  =0044			 ERROR_TOO_MANY_NAMES			 equ	   68
1   732		  =0045			 ERROR_TOO_MANY_SESS			 equ	   69
1   733		  =0046			 ERROR_SHARING_PAUSED			 equ	   70
1   734		  =0047			 ERROR_REQ_NOT_ACCEP			 equ	   71
1   735		  =0048			 ERROR_REDIR_PAUSED			 equ	   72
1   736		  =0050			 ERROR_FILE_EXISTS			 equ	   80
1   737		  =0052			 ERROR_CANNOT_MAKE			 equ	   82
1   738		  =0053			 ERROR_FAIL_I24				 equ	   83
1   739		  =0054			 ERROR_OUT_OF_STRUCTURES		 equ	   84
1   740		  =0055			 ERROR_ALREADY_ASSIGNED			 equ	   85
1   741		  =0056			 ERROR_INVALID_PASSWORD			 equ	   86
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 14
pmScript.ASM



1   742		  =0057			 ERROR_INVALID_PARAMETER		 equ	   87
1   743		  =0058			 ERROR_NET_WRITE_FAULT			 equ	   88
1   744		  =0059			 ERROR_NO_PROC_SLOTS			 equ	   89
1   745		  =0064			 ERROR_TOO_MANY_SEMAPHORES		 equ	  100
1   746		  =0065			 ERROR_EXCL_SEM_ALREADY_OWNED		 equ	  101
1   747		  =0066			 ERROR_SEM_IS_SET			 equ	  102
1   748		  =0067			 ERROR_TOO_MANY_SEM_REQUESTS		 equ	  103
1   749		  =0068			 ERROR_INVALID_AT_INTERRUPT_TIME	 equ	  104
1   750		  =0069			 ERROR_SEM_OWNER_DIED			 equ	  105
1   751		  =006A			 ERROR_SEM_USER_LIMIT			 equ	  106
1   752		  =006B			 ERROR_DISK_CHANGE			 equ	  107
1   753		  =006C			 ERROR_DRIVE_LOCKED			 equ	  108
1   754		  =006D			 ERROR_BROKEN_PIPE			 equ	  109
1   755		  =006E			 ERROR_OPEN_FAILED			 equ	  110
1   756		  =006F			 ERROR_BUFFER_OVERFLOW			 equ	  111
1   757		  =0070			 ERROR_DISK_FULL			 equ	  112
1   758		  =0071			 ERROR_NO_MORE_SEARCH_HANDLES		 equ	  113
1   759		  =0072			 ERROR_INVALID_TARGET_HANDLE		 equ	  114
1   760		  =0075			 ERROR_INVALID_CATEGORY			 equ	  117
1   761		  =0076			 ERROR_INVALID_VERIFY_SWITCH		 equ	  118
1   762		  =0077			 ERROR_BAD_DRIVER_LEVEL			 equ	  119
1   763		  =0078			 ERROR_CALL_NOT_IMPLEMENTED		 equ	  120
1   764		  =0079			 ERROR_SEM_TIMEOUT			 equ	  121
1   765		  =007A			 ERROR_INSUFFICIENT_BUFFER		 equ	  122
1   766		  =007B			 ERROR_INVALID_NAME			 equ	  123
1   767		  =007C			 ERROR_INVALID_LEVEL			 equ	  124
1   768		  =007D			 ERROR_NO_VOLUME_LABEL			 equ	  125
1   769		  =007E			 ERROR_MOD_NOT_FOUND			 equ	  126
1   770		  =007F			 ERROR_PROC_NOT_FOUND			 equ	  127
1   771		  =0080			 ERROR_WAIT_NO_CHILDREN			 equ	  128
1   772		  =0081			 ERROR_CHILD_NOT_COMPLETE		 equ	  129
1   773		  =0082			 ERROR_DIRECT_ACCESS_HANDLE		 equ	  130
1   774		  =0083			 ERROR_NEGATIVE_SEEK			 equ	  131
1   775		  =0084			 ERROR_SEEK_ON_DEVICE			 equ	  132
1   776		  =0085			 ERROR_IS_JOIN_TARGET			 equ	  133
1   777		  =0086			 ERROR_IS_JOINED			 equ	  134
1   778		  =0087			 ERROR_IS_SUBSTED			 equ	  135
1   779		  =0088			 ERROR_NOT_JOINED			 equ	  136
1   780		  =0089			 ERROR_NOT_SUBSTED			 equ	  137
1   781		  =008A			 ERROR_JOIN_TO_JOIN			 equ	  138
1   782		  =008B			 ERROR_SUBST_TO_SUBST			 equ	  139
1   783		  =008C			 ERROR_JOIN_TO_SUBST			 equ	  140
1   784		  =008D			 ERROR_SUBST_TO_JOIN			 equ	  141
1   785		  =008E			 ERROR_BUSY_DRIVE			 equ	  142
1   786		  =008F			 ERROR_SAME_DRIVE			 equ	  143
1   787		  =0090			 ERROR_DIR_NOT_ROOT			 equ	  144
1   788		  =0091			 ERROR_DIR_NOT_EMPTY			 equ	  145
1   789		  =0092			 ERROR_IS_SUBST_PATH			 equ	  146
1   790		  =0093			 ERROR_IS_JOIN_PATH			 equ	  147
1   791		  =0094			 ERROR_PATH_BUSY			 equ	  148
1   792		  =0095			 ERROR_IS_SUBST_TARGET			 equ	  149
1   793		  =0096			 ERROR_SYSTEM_TRACE			 equ	  150
1   794		  =0097			 ERROR_INVALID_EVENT_COUNT		 equ	  151
1   795		  =0098			 ERROR_TOO_MANY_MUXWAITERS		 equ	  152
1   796		  =0099			 ERROR_INVALID_LIST_FORMAT		 equ	  153
1   797		  =009A			 ERROR_LABEL_TOO_LONG			 equ	  154
1   798		  =009B			 ERROR_TOO_MANY_TCBS			 equ	  155
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 15
pmScript.ASM



1   799		  =009C			 ERROR_SIGNAL_REFUSED			 equ	  156
1   800		  =009D			 ERROR_DISCARDED			 equ	  157
1   801		  =009E			 ERROR_NOT_LOCKED			 equ	  158
1   802		  =009F			 ERROR_BAD_THREADID_ADDR		 equ	  159
1   803		  =00A0			 ERROR_BAD_ARGUMENTS			 equ	  160
1   804		  =00A1			 ERROR_BAD_PATHNAME			 equ	  161
1   805		  =00A2			 ERROR_SIGNAL_PENDING			 equ	  162
1   806		  =00A4			 ERROR_MAX_THRDS_REACHED		 equ	  164
1   807		  =00A7			 ERROR_LOCK_FAILED			 equ	  167
1   808		  =00AA			 ERROR_BUSY				 equ	  170
1   809		  =00AD			 ERROR_CANCEL_VIOLATION			 equ	  173
1   810		  =00AE			 ERROR_ATOMIC_LOCKS_NOT_SUPPORTED	 equ	  174
1   811		  =00B4			 ERROR_INVALID_SEGMENT_NUMBER		 equ	  180
1   812		  =00B6			 ERROR_INVALID_ORDINAL			 equ	  182
1   813		  =00B7			 ERROR_ALREADY_EXISTS			 equ	  183
1   814		  =00BA			 ERROR_INVALID_FLAG_NUMBER		 equ	  186
1   815		  =00BB			 ERROR_SEM_NOT_FOUND			 equ	  187
1   816		  =00BC			 ERROR_INVALID_STARTING_CODESEG		 equ	  188
1   817		  =00BD			 ERROR_INVALID_STACKSEG			 equ	  189
1   818		  =00BE			 ERROR_INVALID_MODULETYPE		 equ	  190
1   819		  =00BF			 ERROR_INVALID_EXE_SIGNATURE		 equ	  191
1   820		  =00C0			 ERROR_EXE_MARKED_INVALID		 equ	  192
1   821		  =00C1			 ERROR_BAD_EXE_FORMAT			 equ	  193
1   822		  =00C2			 ERROR_ITERATED_DATA_EXCEEDS_64k	 equ	  194
1   823		  =00C3			 ERROR_INVALID_MINALLOCSIZE		 equ	  195
1   824		  =00C4			 ERROR_DYNLINK_FROM_INVALID_RING	 equ	  196
1   825		  =00C5			 ERROR_IOPL_NOT_ENABLED			 equ	  197
1   826		  =00C6			 ERROR_INVALID_SEGDPL			 equ	  198
1   827		  =00C7			 ERROR_AUTODATASEG_EXCEEDS_64k		 equ	  199
1   828		  =00C8			 ERROR_RING2SEG_MUST_BE_MOVABLE		 equ	  200
1   829		  =00C9			 ERROR_RELOC_CHAIN_XEEDS_SEGLIM		 equ	  201
1   830		  =00CA			 ERROR_INFLOOP_IN_RELOC_CHAIN		 equ	  202
1   831		  =00CB			 ERROR_ENVVAR_NOT_FOUND			 equ	  203
1   832		  =00CD			 ERROR_NO_SIGNAL_SENT			 equ	  205
1   833		  =00CE			 ERROR_FILENAME_EXCED_RANGE		 equ	  206
1   834		  =00CF			 ERROR_RING2_STACK_IN_USE		 equ	  207
1   835		  =00D0			 ERROR_META_EXPANSION_TOO_LONG		 equ	  208
1   836		  =00D1			 ERROR_INVALID_SIGNAL_NUMBER		 equ	  209
1   837		  =00D2			 ERROR_THREAD_1_INACTIVE		 equ	  210
1   838		  =00D4			 ERROR_LOCKED				 equ	  212
1   839		  =00D6			 ERROR_TOO_MANY_MODULES			 equ	  214
1   840		  =00D7			 ERROR_NESTING_NOT_ALLOWED		 equ	  215
1   841		  =00E6			 ERROR_BAD_PIPE				 equ	  230
1   842		  =00E7			 ERROR_PIPE_BUSY			 equ	  231
1   843		  =00E8			 ERROR_NO_DATA				 equ	  232
1   844		  =00E9			 ERROR_PIPE_NOT_CONNECTED		 equ	  233
1   845		  =00EA			 ERROR_MORE_DATA			 equ	  234
1   846		  =00F0			 ERROR_VC_DISCONNECTED			 equ	  240
1   847		  =00FE			 ERROR_INVALID_EA_NAME			 equ	  254
1   848		  =00FF			 ERROR_EA_LIST_INCONSISTENT		 equ	  255
1   849		  =0103			 ERROR_NO_MORE_ITEMS			 equ	  259
1   850		  =010A			 ERROR_CANNOT_COPY			 equ	  266
1   851		  =010B			 ERROR_DIRECTORY			 equ	  267
1   852		  =0113			 ERROR_EAS_DIDNT_FIT			 equ	  275
1   853		  =0114			 ERROR_EA_FILE_CORRUPT			 equ	  276
1   854		  =0115			 ERROR_EA_TABLE_FULL			 equ	  277
1   855		  =0116			 ERROR_INVALID_EA_HANDLE		 equ	  278
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 16
pmScript.ASM



1   856		  =011A			 ERROR_EAS_NOT_SUPPORTED		 equ	  282
1   857		  =0120			 ERROR_NOT_OWNER			 equ	  288
1   858		  =012A			 ERROR_TOO_MANY_POSTS			 equ	  298
1   859		  =012B			 ERROR_PARTIAL_COPY			 equ	  299
1   860		  =013D			 ERROR_MR_MID_NOT_FOUND			 equ	  317
1   861		  =01E7			 ERROR_INVALID_ADDRESS			 equ	  487
1   862		  =0216			 ERROR_ARITHMETIC_OVERFLOW		 equ	  534
1   863		  =0217			 ERROR_PIPE_CONNECTED			 equ	  535
1   864		  =0218			 ERROR_PIPE_LISTENING			 equ	  536
1   865		  =03E2			 ERROR_EA_ACCESS_DENIED			 equ	  994
1   866		  =03E3			 ERROR_OPERATION_ABORTED		 equ	  995
1   867		  =03E4			 ERROR_IO_INCOMPLETE			 equ	  996
1   868		  =03E5			 ERROR_IO_PENDING			 equ	  997
1   869		  =03E6			 ERROR_NOACCESS				 equ	  998
1   870		  =03E7			 ERROR_SWAPERROR			 equ	  999
1   871		  =03E9			 ERROR_STACK_OVERFLOW			 equ	 1001
1   872		  =03EA			 ERROR_INVALID_MESSAGE			 equ	 1002
1   873		  =03EB			 ERROR_CAN_NOT_COMPLETE			 equ	 1003
1   874		  =03EC			 ERROR_INVALID_FLAGS			 equ	 1004
1   875		  =03ED			 ERROR_UNRECOGNIZED_VOLUME		 equ	 1005
1   876		  =03EE			 ERROR_FILE_INVALID			 equ	 1006
1   877		  =03EF			 ERROR_FULLSCREEN_MODE			 equ	 1007
1   878		  =03F0			 ERROR_NO_TOKEN				 equ	 1008
1   879		  =03F1			 ERROR_BADDB				 equ	 1009
1   880		  =03F2			 ERROR_BADKEY				 equ	 1010
1   881		  =03F3			 ERROR_CANTOPEN				 equ	 1011
1   882		  =03F4			 ERROR_CANTREAD				 equ	 1012
1   883		  =03F5			 ERROR_CANTWRITE			 equ	 1013
1   884		  =03F6			 ERROR_REGISTRY_RECOVERED		 equ	 1014
1   885		  =03F7			 ERROR_REGISTRY_CORRUPT			 equ	 1015
1   886		  =03F8			 ERROR_REGISTRY_IO_FAILED		 equ	 1016
1   887		  =03F9			 ERROR_NOT_REGISTRY_FILE		 equ	 1017
1   888		  =03FA			 ERROR_KEY_DELETED			 equ	 1018
1   889		  =03FB			 ERROR_NO_LOG_SPACE			 equ	 1019
1   890		  =03FC			 ERROR_KEY_HAS_CHILDREN			 equ	 1020
1   891		  =03FD			 ERROR_CHILD_MUST_BE_VOLATILE		 equ	 1021
1   892		  =03FE			 ERROR_NOTIFY_ENUM_DIR			 equ	 1022
1   893		  =041B			 ERROR_DEPENDENT_SERVICES_RUNNING	 equ	 1051
1   894		  =041C			 ERROR_INVALID_SERVICE_CONTROL		 equ	 1052
1   895		  =041D			 ERROR_SERVICE_REQUEST_TIMEOUT		 equ	 1053
1   896		  =041E			 ERROR_SERVICE_NO_THREAD		 equ	 1054
1   897		  =041F			 ERROR_SERVICE_DATABASE_LOCKED		 equ	 1055
1   898		  =0420			 ERROR_SERVICE_ALREADY_RUNNING		 equ	 1056
1   899		  =0421			 ERROR_INVALID_SERVICE_ACCOUNT		 equ	 1057
1   900		  =0422			 ERROR_SERVICE_DISABLED			 equ	 1058
1   901		  =0423			 ERROR_CIRCULAR_DEPENDENCY		 equ	 1059
1   902		  =0424			 ERROR_SERVICE_DOES_NOT_EXIST		 equ	 1060
1   903		  =0425			 ERROR_SERVICE_CANNOT_ACCEPT_CTRL	 equ	 1061
1   904		  =0426			 ERROR_SERVICE_NOT_ACTIVE		 equ	 1062
1   905		  =0427			 ERROR_FAILED_SERVICE_CONTROLLER_CONNECT equ	 1063
1   906		  =0428			 ERROR_EXCEPTION_IN_SERVICE		 equ	 1064
1   907		  =0429			 ERROR_DATABASE_DOES_NOT_EXIST		 equ	 1065
1   908		  =042A			 ERROR_SERVICE_SPECIFIC_ERROR		 equ	 1066
1   909		  =042B			 ERROR_PROCESS_ABORTED			 equ	 1067
1   910		  =042C			 ERROR_SERVICE_DEPENDENCY_FAIL		 equ	 1068
1   911		  =042D			 ERROR_SERVICE_LOGON_FAILED		 equ	 1069
1   912		  =042E			 ERROR_SERVICE_START_HANG		 equ	 1070
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 17
pmScript.ASM



1   913		  =042F			 ERROR_INVALID_SERVICE_LOCK		 equ	 1071
1   914		  =0430			 ERROR_SERVICE_MARKED_FOR_DELETE	 equ	 1072
1   915		  =0431			 ERROR_SERVICE_EXISTS			 equ	 1073
1   916		  =0432			 ERROR_ALREADY_RUNNING_LKG		 equ	 1074
1   917		  =0433			 ERROR_SERVICE_DEPENDENCY_DELETED	 equ	 1075
1   918		  =0434			 ERROR_BOOT_ALREADY_ACCEPTED		 equ	 1076
1   919		  =0435			 ERROR_SERVICE_NEVER_STARTED		 equ	 1077
1   920		  =0436			 ERROR_DUPLICATE_SERVICE_NAME		 equ	 1078
1   921		  =044C			 ERROR_END_OF_MEDIA			 equ	 1100
1   922		  =044D			 ERROR_FILEMARK_DETECTED		 equ	 1101
1   923		  =044E			 ERROR_BEGINNING_OF_MEDIA		 equ	 1102
1   924		  =044F			 ERROR_SETMARK_DETECTED			 equ	 1103
1   925		  =0450			 ERROR_NO_DATA_DETECTED			 equ	 1104
1   926		  =0451			 ERROR_PARTITION_FAILURE		 equ	 1105
1   927		  =0452			 ERROR_INVALID_BLOCK_LENGTH		 equ	 1106
1   928		  =0453			 ERROR_DEVICE_NOT_PARTITIONED		 equ	 1107
1   929		  =0454			 ERROR_UNABLE_TO_LOCK_MEDIA		 equ	 1108
1   930		  =0455			 ERROR_UNABLE_TO_UNLOAD_MEDIA		 equ	 1109
1   931		  =0456			 ERROR_MEDIA_CHANGED			 equ	 1110
1   932		  =0457			 ERROR_BUS_RESET			 equ	 1111
1   933		  =0458			 ERROR_NO_MEDIA_IN_DRIVE		 equ	 1112
1   934		  =0459			 ERROR_NO_UNICODE_TRANSLATION		 equ	 1113
1   935		  =045A			 ERROR_DLL_INIT_FAILED			 equ	 1114
1   936		  =045B			 ERROR_SHUTDOWN_IN_PROGRESS		 equ	 1115
1   937		  =045C			 ERROR_NO_SHUTDOWN_IN_PROGRESS		 equ	 1116
1   938		  =045D			 ERROR_IO_DEVICE			 equ	 1117
1   939		  =045E			 ERROR_SERIAL_NO_DEVICE			 equ	 1118
1   940		  =045F			 ERROR_IRQ_BUSY				 equ	 1119
1   941		  =0460			 ERROR_MORE_WRITES			 equ	 1120
1   942		  =0461			 ERROR_COUNTER_TIMEOUT			 equ	 1121
1   943		  =0462			 ERROR_FLOPPY_ID_MARK_NOT_FOUND		 equ	 1122
1   944		  =0463			 ERROR_FLOPPY_WRONG_CYLINDER		 equ	 1123
1   945		  =0464			 ERROR_FLOPPY_UNKNOWN_ERROR		 equ	 1124
1   946		  =0465			 ERROR_FLOPPY_BAD_REGISTERS		 equ	 1125
1   947		  =0466			 ERROR_DISK_RECALIBRATE_FAILED		 equ	 1126
1   948		  =0467			 ERROR_DISK_OPERATION_FAILED		 equ	 1127
1   949		  =0468			 ERROR_DISK_RESET_FAILED		 equ	 1128
1   950		  =0469			 ERROR_EOM_OVERFLOW			 equ	 1129
1   951		  =046A			 ERROR_NOT_ENOUGH_SERVER_MEMORY		 equ	 1130
1   952		  =046B			 ERROR_POSSIBLE_DEADLOCK		 equ	 1131
1   953		  =046C			 ERROR_MAPPED_ALIGNMENT			 equ	 1132
1   954		  =0474			 ERROR_SET_POWER_STATE_VETOED		 equ	 1140
1   955		  =0475			 ERROR_SET_POWER_STATE_FAILED		 equ	 1141
1   956		  =047E			 ERROR_OLD_WIN_VERSION			 equ	 1150
1   957		  =047F			 ERROR_APP_WRONG_OS			 equ	 1151
1   958		  =0480			 ERROR_SINGLE_INSTANCE_APP		 equ	 1152
1   959		  =0481			 ERROR_RMODE_APP			 equ	 1153
1   960		  =0482			 ERROR_INVALID_DLL			 equ	 1154
1   961		  =0483			 ERROR_NO_ASSOCIATION			 equ	 1155
1   962		  =0484			 ERROR_DDE_FAIL				 equ	 1156
1   963		  =0485			 ERROR_DLL_NOT_FOUND			 equ	 1157
1   964		  =089A			 ERROR_BAD_USERNAME			 equ	 2202
1   965		  =08CA			 ERROR_NOT_CONNECTED			 equ	 2250
1   966		  =0961			 ERROR_OPEN_FILES			 equ	 2401
1   967		  =0962			 ERROR_ACTIVE_CONNECTIONS		 equ	 2402
1   968		  =0964			 ERROR_DEVICE_IN_USE			 equ	 2404
1   969		  =04B0			 ERROR_BAD_DEVICE			 equ	 1200
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 18
pmScript.ASM



1   970		  =04B1			 ERROR_CONNECTION_UNAVAIL		 equ	 1201
1   971		  =04B2			 ERROR_DEVICE_ALREADY_REMEMBERED	 equ	 1202
1   972		  =04B3			 ERROR_NO_NET_OR_BAD_PATH		 equ	 1203
1   973		  =04B4			 ERROR_BAD_PROVIDER			 equ	 1204
1   974		  =04B5			 ERROR_CANNOT_OPEN_PROFILE		 equ	 1205
1   975		  =04B6			 ERROR_BAD_PROFILE			 equ	 1206
1   976		  =04B7			 ERROR_NOT_CONTAINER			 equ	 1207
1   977		  =04B8			 ERROR_EXTENDED_ERROR			 equ	 1208
1   978		  =04B9			 ERROR_INVALID_GROUPNAME		 equ	 1209
1   979		  =04BA			 ERROR_INVALID_COMPUTERNAME		 equ	 1210
1   980		  =04BB			 ERROR_INVALID_EVENTNAME		 equ	 1211
1   981		  =04BC			 ERROR_INVALID_DOMAINNAME		 equ	 1212
1   982		  =04BD			 ERROR_INVALID_SERVICENAME		 equ	 1213
1   983		  =04BE			 ERROR_INVALID_NETNAME			 equ	 1214
1   984		  =04BF			 ERROR_INVALID_SHARENAME		 equ	 1215
1   985		  =04C0			 ERROR_INVALID_PASSWORDNAME		 equ	 1216
1   986		  =04C1			 ERROR_INVALID_MESSAGENAME		 equ	 1217
1   987		  =04C2			 ERROR_INVALID_MESSAGEDEST		 equ	 1218
1   988		  =04C3			 ERROR_SESSION_CREDENTIAL_CONFLICT	 equ	 1219
1   989		  =04C4			 ERROR_REMOTE_SESSION_LIMIT_EXCEEDED	 equ	 1220
1   990		  =04C5			 ERROR_DUP_DOMAINNAME			 equ	 1221
1   991		  =04C6			 ERROR_NO_NETWORK			 equ	 1222
1   992		  =04C7			 ERROR_CANCELLED			 equ	 1223
1   993		  =04C8			 ERROR_USER_MAPPED_FILE			 equ	 1224
1   994		  =04C9			 ERROR_CONNECTION_REFUSED		 equ	 1225
1   995		  =04CA			 ERROR_GRACEFUL_DISCONNECT		 equ	 1226
1   996		  =04CB			 ERROR_ADDRESS_ALREADY_ASSOCIATED	 equ	 1227
1   997		  =04CC			 ERROR_ADDRESS_NOT_ASSOCIATED		 equ	 1228
1   998		  =04CD			 ERROR_CONNECTION_INVALID		 equ	 1229
1   999		  =04CE			 ERROR_CONNECTION_ACTIVE		 equ	 1230
1  1000		  =04CF			 ERROR_NETWORK_UNREACHABLE		 equ	 1231
1  1001		  =04D0			 ERROR_HOST_UNREACHABLE			 equ	 1232
1  1002		  =04D1			 ERROR_PROTOCOL_UNREACHABLE		 equ	 1233
1  1003		  =04D2			 ERROR_PORT_UNREACHABLE			 equ	 1234
1  1004		  =04D3			 ERROR_REQUEST_ABORTED			 equ	 1235
1  1005		  =04D4			 ERROR_CONNECTION_ABORTED		 equ	 1236
1  1006		  =04D5			 ERROR_RETRY				 equ	 1237
1  1007		  =04D6			 ERROR_CONNECTION_COUNT_LIMIT		 equ	 1238
1  1008		  =04D7			 ERROR_LOGIN_TIME_RESTRICTION		 equ	 1239
1  1009		  =04D8			 ERROR_LOGIN_WKSTA_RESTRICTION		 equ	 1240
1  1010		  =04D9			 ERROR_INCORRECT_ADDRESS		 equ	 1241
1  1011		  =04DA			 ERROR_ALREADY_REGISTERED		 equ	 1242
1  1012		  =04DB			 ERROR_SERVICE_NOT_FOUND		 equ	 1243
1  1013		  =04DC			 ERROR_NOT_AUTHENTICATED		 equ	 1244
1  1014		  =04DD			 ERROR_NOT_LOGGED_ON			 equ	 1245
1  1015		  =04DE			 ERROR_CONTINUE				 equ	 1246
1  1016		  =04DF			 ERROR_ALREADY_INITIALIZED		 equ	 1247
1  1017		  =04E0			 ERROR_NO_MORE_DEVICES			 equ	 1248
1  1018		  =0514			 ERROR_NOT_ALL_ASSIGNED			 equ	 1300
1  1019		  =0515			 ERROR_SOME_NOT_MAPPED			 equ	 1301
1  1020		  =0516			 ERROR_NO_QUOTAS_FOR_ACCOUNT		 equ	 1302
1  1021		  =0517			 ERROR_LOCAL_USER_SESSION_KEY		 equ	 1303
1  1022		  =0518			 ERROR_NULL_LM_PASSWORD			 equ	 1304
1  1023		  =0519			 ERROR_UNKNOWN_REVISION			 equ	 1305
1  1024		  =051A			 ERROR_REVISION_MISMATCH		 equ	 1306
1  1025		  =051B			 ERROR_INVALID_OWNER			 equ	 1307
1  1026		  =051C			 ERROR_INVALID_PRIMARY_GROUP		 equ	 1308
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 19
pmScript.ASM



1  1027		  =051D			 ERROR_NO_IMPERSONATION_TOKEN		 equ	 1309
1  1028		  =051E			 ERROR_CANT_DISABLE_MANDATORY		 equ	 1310
1  1029		  =051F			 ERROR_NO_LOGON_SERVERS			 equ	 1311
1  1030		  =0520			 ERROR_NO_SUCH_LOGON_SESSION		 equ	 1312
1  1031		  =0521			 ERROR_NO_SUCH_PRIVILEGE		 equ	 1313
1  1032		  =0522			 ERROR_PRIVILEGE_NOT_HELD		 equ	 1314
1  1033		  =0523			 ERROR_INVALID_ACCOUNT_NAME		 equ	 1315
1  1034		  =0524			 ERROR_USER_EXISTS			 equ	 1316
1  1035		  =0525			 ERROR_NO_SUCH_USER			 equ	 1317
1  1036		  =0526			 ERROR_GROUP_EXISTS			 equ	 1318
1  1037		  =0527			 ERROR_NO_SUCH_GROUP			 equ	 1319
1  1038		  =0528			 ERROR_MEMBER_IN_GROUP			 equ	 1320
1  1039		  =0529			 ERROR_MEMBER_NOT_IN_GROUP		 equ	 1321
1  1040		  =052A			 ERROR_LAST_ADMIN			 equ	 1322
1  1041		  =052B			 ERROR_WRONG_PASSWORD			 equ	 1323
1  1042		  =052C			 ERROR_ILL_FORMED_PASSWORD		 equ	 1324
1  1043		  =052D			 ERROR_PASSWORD_RESTRICTION		 equ	 1325
1  1044		  =052E			 ERROR_LOGON_FAILURE			 equ	 1326
1  1045		  =052F			 ERROR_ACCOUNT_RESTRICTION		 equ	 1327
1  1046		  =0530			 ERROR_INVALID_LOGON_HOURS		 equ	 1328
1  1047		  =0531			 ERROR_INVALID_WORKSTATION		 equ	 1329
1  1048		  =0532			 ERROR_PASSWORD_EXPIRED			 equ	 1330
1  1049		  =0533			 ERROR_ACCOUNT_DISABLED			 equ	 1331
1  1050		  =0534			 ERROR_NONE_MAPPED			 equ	 1332
1  1051		  =0535			 ERROR_TOO_MANY_LUIDS_REQUESTED		 equ	 1333
1  1052		  =0536			 ERROR_LUIDS_EXHAUSTED			 equ	 1334
1  1053		  =0537			 ERROR_INVALID_SUB_AUTHORITY		 equ	 1335
1  1054		  =0538			 ERROR_INVALID_ACL			 equ	 1336
1  1055		  =0539			 ERROR_INVALID_SID			 equ	 1337
1  1056		  =053A			 ERROR_INVALID_SECURITY_DESCR		 equ	 1338
1  1057		  =053C			 ERROR_BAD_INHERITANCE_ACL		 equ	 1340
1  1058		  =053D			 ERROR_SERVER_DISABLED			 equ	 1341
1  1059		  =053E			 ERROR_SERVER_NOT_DISABLED		 equ	 1342
1  1060		  =053F			 ERROR_INVALID_ID_AUTHORITY		 equ	 1343
1  1061		  =0540			 ERROR_ALLOTTED_SPACE_EXCEEDED		 equ	 1344
1  1062		  =0541			 ERROR_INVALID_GROUP_ATTRIBUTES		 equ	 1345
1  1063		  =0542			 ERROR_BAD_IMPERSONATION_LEVEL		 equ	 1346
1  1064		  =0543			 ERROR_CANT_OPEN_ANONYMOUS		 equ	 1347
1  1065		  =0544			 ERROR_BAD_VALIDATION_CLASS		 equ	 1348
1  1066		  =0545			 ERROR_BAD_TOKEN_TYPE			 equ	 1349
1  1067		  =0546			 ERROR_NO_SECURITY_ON_OBJECT		 equ	 1350
1  1068		  =0547			 ERROR_CANT_ACCESS_DOMAIN_INFO		 equ	 1351
1  1069		  =0548			 ERROR_INVALID_SERVER_STATE		 equ	 1352
1  1070		  =0549			 ERROR_INVALID_DOMAIN_STATE		 equ	 1353
1  1071		  =054A			 ERROR_INVALID_DOMAIN_ROLE		 equ	 1354
1  1072		  =054B			 ERROR_NO_SUCH_DOMAIN			 equ	 1355
1  1073		  =054C			 ERROR_DOMAIN_EXISTS			 equ	 1356
1  1074		  =054D			 ERROR_DOMAIN_LIMIT_EXCEEDED		 equ	 1357
1  1075		  =054E			 ERROR_INTERNAL_DB_CORRUPTION		 equ	 1358
1  1076		  =054F			 ERROR_INTERNAL_ERROR			 equ	 1359
1  1077		  =0550			 ERROR_GENERIC_NOT_MAPPED		 equ	 1360
1  1078		  =0551			 ERROR_BAD_DESCRIPTOR_FORMAT		 equ	 1361
1  1079		  =0552			 ERROR_NOT_LOGON_PROCESS		 equ	 1362
1  1080		  =0553			 ERROR_LOGON_SESSION_EXISTS		 equ	 1363
1  1081		  =0554			 ERROR_NO_SUCH_PACKAGE			 equ	 1364
1  1082		  =0555			 ERROR_BAD_LOGON_SESSION_STATE		 equ	 1365
1  1083		  =0556			 ERROR_LOGON_SESSION_COLLISION		 equ	 1366
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 20
pmScript.ASM



1  1084		  =0557			 ERROR_INVALID_LOGON_TYPE		 equ	 1367
1  1085		  =0558			 ERROR_CANNOT_IMPERSONATE		 equ	 1368
1  1086		  =0559			 ERROR_RXACT_INVALID_STATE		 equ	 1369
1  1087		  =055A			 ERROR_RXACT_COMMIT_FAILURE		 equ	 1370
1  1088		  =055B			 ERROR_SPECIAL_ACCOUNT			 equ	 1371
1  1089		  =055C			 ERROR_SPECIAL_GROUP			 equ	 1372
1  1090		  =055D			 ERROR_SPECIAL_USER			 equ	 1373
1  1091		  =055E			 ERROR_MEMBERS_PRIMARY_GROUP		 equ	 1374
1  1092		  =055F			 ERROR_TOKEN_ALREADY_IN_USE		 equ	 1375
1  1093		  =0560			 ERROR_NO_SUCH_ALIAS			 equ	 1376
1  1094		  =0561			 ERROR_MEMBER_NOT_IN_ALIAS		 equ	 1377
1  1095		  =0562			 ERROR_MEMBER_IN_ALIAS			 equ	 1378
1  1096		  =0563			 ERROR_ALIAS_EXISTS			 equ	 1379
1  1097		  =0564			 ERROR_LOGON_NOT_GRANTED		 equ	 1380
1  1098		  =0565			 ERROR_TOO_MANY_SECRETS			 equ	 1381
1  1099		  =0566			 ERROR_SECRET_TOO_LONG			 equ	 1382
1  1100		  =0567			 ERROR_INTERNAL_DB_ERROR		 equ	 1383
1  1101		  =0568			 ERROR_TOO_MANY_CONTEXT_IDS		 equ	 1384
1  1102		  =0569			 ERROR_LOGON_TYPE_NOT_GRANTED		 equ	 1385
1  1103		  =056A			 ERROR_NT_CROSS_ENCRYPTION_REQUIRED	 equ	 1386
1  1104		  =056B			 ERROR_NO_SUCH_MEMBER			 equ	 1387
1  1105		  =056C			 ERROR_INVALID_MEMBER			 equ	 1388
1  1106		  =056D			 ERROR_TOO_MANY_SIDS			 equ	 1389
1  1107		  =056E			 ERROR_LM_CROSS_ENCRYPTION_REQUIRED	 equ	 1390
1  1108		  =056F			 ERROR_NO_INHERITANCE			 equ	 1391
1  1109		  =0570			 ERROR_FILE_CORRUPT			 equ	 1392
1  1110		  =0571			 ERROR_DISK_CORRUPT			 equ	 1393
1  1111		  =0572			 ERROR_NO_USER_SESSION_KEY		 equ	 1394
1  1112		  =0573			 ERROR_LICENSE_QUOTA_EXCEEDED		 equ	 1395
1  1113		  =0578			 ERROR_INVALID_WINDOW_HANDLE		 equ	 1400
1  1114		  =0579			 ERROR_INVALID_MENU_HANDLE		 equ	 1401
1  1115		  =057A			 ERROR_INVALID_CURSOR_HANDLE		 equ	 1402
1  1116		  =057B			 ERROR_INVALID_ACCEL_HANDLE		 equ	 1403
1  1117		  =057C			 ERROR_INVALID_HOOK_HANDLE		 equ	 1404
1  1118		  =057D			 ERROR_INVALID_DWP_HANDLE		 equ	 1405
1  1119		  =057E			 ERROR_TLW_WITH_WSCHILD			 equ	 1406
1  1120		  =057F			 ERROR_CANNOT_FIND_WND_CLASS		 equ	 1407
1  1121		  =0580			 ERROR_WINDOW_OF_OTHER_THREAD		 equ	 1408
1  1122		  =0581			 ERROR_HOTKEY_ALREADY_REGISTERED	 equ	 1409
1  1123		  =0582			 ERROR_CLASS_ALREADY_EXISTS		 equ	 1410
1  1124		  =0583			 ERROR_CLASS_DOES_NOT_EXIST		 equ	 1411
1  1125		  =0584			 ERROR_CLASS_HAS_WINDOWS		 equ	 1412
1  1126		  =0585			 ERROR_INVALID_INDEX			 equ	 1413
1  1127		  =0586			 ERROR_INVALID_ICON_HANDLE		 equ	 1414
1  1128		  =0587			 ERROR_PRIVATE_DIALOG_INDEX		 equ	 1415
1  1129		  =0588			 ERROR_LISTBOX_ID_NOT_FOUND		 equ	 1416
1  1130		  =0589			 ERROR_NO_WILDCARD_CHARACTERS		 equ	 1417
1  1131		  =058A			 ERROR_CLIPBOARD_NOT_OPEN		 equ	 1418
1  1132		  =058B			 ERROR_HOTKEY_NOT_REGISTERED		 equ	 1419
1  1133		  =058C			 ERROR_WINDOW_NOT_DIALOG		 equ	 1420
1  1134		  =058D			 ERROR_CONTROL_ID_NOT_FOUND		 equ	 1421
1  1135		  =058E			 ERROR_INVALID_COMBOBOX_MESSAGE		 equ	 1422
1  1136		  =058F			 ERROR_WINDOW_NOT_COMBOBOX		 equ	 1423
1  1137		  =0590			 ERROR_INVALID_EDIT_HEIGHT		 equ	 1424
1  1138		  =0591			 ERROR_DC_NOT_FOUND			 equ	 1425
1  1139		  =0592			 ERROR_INVALID_HOOK_FILTER		 equ	 1426
1  1140		  =0593			 ERROR_INVALID_FILTER_PROC		 equ	 1427
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 21
pmScript.ASM



1  1141		  =0594			 ERROR_HOOK_NEEDS_HMOD			 equ	 1428
1  1142		  =0595			 ERROR_GLOBAL_ONLY_HOOK			 equ	 1429
1  1143		  =0596			 ERROR_JOURNAL_HOOK_SET			 equ	 1430
1  1144		  =0597			 ERROR_HOOK_NOT_INSTALLED		 equ	 1431
1  1145		  =0598			 ERROR_INVALID_LB_MESSAGE		 equ	 1432
1  1146		  =0599			 ERROR_SETCOUNT_ON_BAD_LB		 equ	 1433
1  1147		  =059A			 ERROR_LB_WITHOUT_TABSTOPS		 equ	 1434
1  1148		  =059B			 ERROR_DESTROY_OBJECT_OF_OTHER_THREAD	 equ	 1435
1  1149		  =059C			 ERROR_CHILD_WINDOW_MENU		 equ	 1436
1  1150		  =059D			 ERROR_NO_SYSTEM_MENU			 equ	 1437
1  1151		  =059E			 ERROR_INVALID_MSGBOX_STYLE		 equ	 1438
1  1152		  =059F			 ERROR_INVALID_SPI_VALUE		 equ	 1439
1  1153		  =05A0			 ERROR_SCREEN_ALREADY_LOCKED		 equ	 1440
1  1154		  =05A1			 ERROR_HWNDS_HAVE_DIFF_PARENT		 equ	 1441
1  1155		  =05A2			 ERROR_NOT_CHILD_WINDOW			 equ	 1442
1  1156		  =05A3			 ERROR_INVALID_GW_COMMAND		 equ	 1443
1  1157		  =05A4			 ERROR_INVALID_THREAD_ID		 equ	 1444
1  1158		  =05A5			 ERROR_NON_MDICHILD_WINDOW		 equ	 1445
1  1159		  =05A6			 ERROR_POPUP_ALREADY_ACTIVE		 equ	 1446
1  1160		  =05A7			 ERROR_NO_SCROLLBARS			 equ	 1447
1  1161		  =05A8			 ERROR_INVALID_SCROLLBAR_RANGE		 equ	 1448
1  1162		  =05A9			 ERROR_INVALID_SHOWWIN_COMMAND		 equ	 1449
1  1163		  =05AA			 ERROR_NO_SYSTEM_RESOURCES		 equ	 1450
1  1164		  =05AB			 ERROR_NONPAGED_SYSTEM_RESOURCES	 equ	 1451
1  1165		  =05AC			 ERROR_PAGED_SYSTEM_RESOURCES		 equ	 1452
1  1166		  =05AD			 ERROR_WORKING_SET_QUOTA		 equ	 1453
1  1167		  =05AE			 ERROR_PAGEFILE_QUOTA			 equ	 1454
1  1168		  =05AF			 ERROR_COMMITMENT_LIMIT			 equ	 1455
1  1169		  =05B0			 ERROR_MENU_ITEM_NOT_FOUND		 equ	 1456
1  1170		  =05DC			 ERROR_EVENTLOG_FILE_CORRUPT		 equ	 1500
1  1171		  =05DD			 ERROR_EVENTLOG_CANT_START		 equ	 1501
1  1172		  =05DE			 ERROR_LOG_FILE_FULL			 equ	 1502
1  1173		  =05DF			 ERROR_EVENTLOG_FILE_CHANGED		 equ	 1503
1  1174		  =06F8			 ERROR_INVALID_USER_BUFFER		 equ	 1784
1  1175		  =06F9			 ERROR_UNRECOGNIZED_MEDIA		 equ	 1785
1  1176		  =06FA			 ERROR_NO_TRUST_LSA_SECRET		 equ	 1786
1  1177		  =06FB			 ERROR_NO_TRUST_SAM_ACCOUNT		 equ	 1787
1  1178		  =06FC			 ERROR_TRUSTED_DOMAIN_FAILURE		 equ	 1788
1  1179		  =06FD			 ERROR_TRUSTED_RELATIONSHIP_FAILURE	 equ	 1789
1  1180		  =06FE			 ERROR_TRUST_FAILURE			 equ	 1790
1  1181		  =0700			 ERROR_NETLOGON_NOT_STARTED		 equ	 1792
1  1182		  =0701			 ERROR_ACCOUNT_EXPIRED			 equ	 1793
1  1183		  =0702			 ERROR_REDIRECTOR_HAS_OPEN_HANDLES	 equ	 1794
1  1184		  =0703			 ERROR_PRINTER_DRIVER_ALREADY_INSTALLED	 equ	 1795
1  1185		  =0704			 ERROR_UNKNOWN_PORT			 equ	 1796
1  1186		  =0705			 ERROR_UNKNOWN_PRINTER_DRIVER		 equ	 1797
1  1187		  =0706			 ERROR_UNKNOWN_PRINTPROCESSOR		 equ	 1798
1  1188		  =0707			 ERROR_INVALID_SEPARATOR_FILE		 equ	 1799
1  1189		  =0708			 ERROR_INVALID_PRIORITY			 equ	 1800
1  1190		  =0709			 ERROR_INVALID_PRINTER_NAME		 equ	 1801
1  1191		  =070A			 ERROR_PRINTER_ALREADY_EXISTS		 equ	 1802
1  1192		  =070B			 ERROR_INVALID_PRINTER_COMMAND		 equ	 1803
1  1193		  =070C			 ERROR_INVALID_DATATYPE			 equ	 1804
1  1194		  =070D			 ERROR_INVALID_ENVIRONMENT		 equ	 1805
1  1195		  =070F			 ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT equ	 1807
1  1196		  =0710			 ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT equ	 1808
1  1197		  =0711			 ERROR_NOLOGON_SERVER_TRUST_ACCOUNT	 equ	 1809
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 22
pmScript.ASM



1  1198		  =0712			 ERROR_DOMAIN_TRUST_INCONSISTENT	 equ	 1810
1  1199		  =0713			 ERROR_SERVER_HAS_OPEN_HANDLES		 equ	 1811
1  1200		  =0714			 ERROR_RESOURCE_DATA_NOT_FOUND		 equ	 1812
1  1201		  =0715			 ERROR_RESOURCE_TYPE_NOT_FOUND		 equ	 1813
1  1202		  =0716			 ERROR_RESOURCE_NAME_NOT_FOUND		 equ	 1814
1  1203		  =0717			 ERROR_RESOURCE_LANG_NOT_FOUND		 equ	 1815
1  1204		  =0718			 ERROR_NOT_ENOUGH_QUOTA			 equ	 1816
1  1205		  =076D			 ERROR_INVALID_TIME			 equ	 1901
1  1206		  =076E			 ERROR_INVALID_FORM_NAME		 equ	 1902
1  1207		  =076F			 ERROR_INVALID_FORM_SIZE		 equ	 1903
1  1208		  =0770			 ERROR_ALREADY_WAITING			 equ	 1904
1  1209		  =0771			 ERROR_PRINTER_DELETED			 equ	 1905
1  1210		  =0772			 ERROR_INVALID_PRINTER_STATE		 equ	 1906
1  1211		  =0773			 ERROR_PASSWORD_MUST_CHANGE		 equ	 1907
1  1212		  =0774			 ERROR_DOMAIN_CONTROLLER_NOT_FOUND	 equ	 1908
1  1213		  =0775			 ERROR_ACCOUNT_LOCKED_OUT		 equ	 1909
1  1214		  =07D0			 ERROR_INVALID_PIXEL_FORMAT		 equ	 2000
1  1215		  =07D1			 ERROR_BAD_DRIVER			 equ	 2001
1  1216		  =07D2			 ERROR_INVALID_WINDOW_STYLE		 equ	 2002
1  1217		  =07D3			 ERROR_METAFILE_NOT_SUPPORTED		 equ	 2003
1  1218		  =07D4			 ERROR_TRANSFORM_NOT_SUPPORTED		 equ	 2004
1  1219		  =07D5			 ERROR_CLIPPING_NOT_SUPPORTED		 equ	 2005
1  1220		  =0BB8			 ERROR_UNKNOWN_PRINT_MONITOR		 equ	 3000
1  1221		  =0BB9			 ERROR_PRINTER_DRIVER_IN_USE		 equ	 3001
1  1222		  =0BBA			 ERROR_SPOOL_FILE_NOT_FOUND		 equ	 3002
1  1223		  =0BBB			 ERROR_SPL_NO_STARTDOC			 equ	 3003
1  1224		  =0BBC			 ERROR_SPL_NO_ADDJOB			 equ	 3004
1  1225		  =0BBD			 ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED equ	 3005
1  1226		  =0BBE			 ERROR_PRINT_MONITOR_ALREADY_INSTALLED	 equ	 3006
1  1227		  =0FA0			 ERROR_WINS_INTERNAL			 equ	 4000
1  1228		  =0FA1			 ERROR_CAN_NOT_DEL_LOCAL_WINS		 equ	 4001
1  1229		  =0FA2			 ERROR_STATIC_INIT			 equ	 4002
1  1230		  =0FA3			 ERROR_INC_BACKUP			 equ	 4003
1  1231		  =0FA4			 ERROR_FULL_BACKUP			 equ	 4004
1  1232		  =0FA5			 ERROR_REC_NON_EXISTENT			 equ	 4005
1  1233		  =0FA6			 ERROR_RPL_NOT_ALLOWED			 equ	 4006
1  1234		  =17E6			 ERROR_NO_BROWSER_SERVERS_FOUND		 equ	 6118
1  1235					 ;
1  1236					 ;------------------------------------------------------------------------------
1  1237					 ;
1  1238					 ; ===================
1  1239					 ; edit	control	styles
1  1240					 ; ===================
1  1241					 ;
1  1242		  =0000			 ES_LEFT			 equ	 0000h
1  1243		  =0001			 ES_CENTER			 equ	 0001h
1  1244		  =0002			 ES_RIGHT			 equ	 0002h
1  1245		  =0004			 ES_MULTILINE			 equ	 0004h
1  1246		  =0008			 ES_UPPERCASE			 equ	 0008h
1  1247		  =0010			 ES_LOWERCASE			 equ	 0010h
1  1248		  =0020			 ES_PASSWORD			 equ	 0020h
1  1249		  =0040			 ES_AUTOVSCROLL			 equ	 0040h
1  1250		  =0080			 ES_AUTOHSCROLL			 equ	 0080h
1  1251		  =0100			 ES_NOHIDESEL			 equ	 0100h
1  1252		  =0400			 ES_OEMCONVERT			 equ	 0400h
1  1253		  =0800			 ES_READONLY			 equ	 0800h
1  1254		  =1000			 ES_WANTRETURN			 equ	 1000h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 23
pmScript.ASM



1  1255		  =2000			 ES_NUMBER			 equ	 2000h
1  1256					 ;
1  1257		  =0084			 ES_DEFAULT			 equ	 ES_MULTILINE+ES_AUTOHSCROLL
1  1258					 ;
1  1259					 ;------------------------------------------------------------------------------
1  1260					 ;
1  1261					 ; =============
1  1262					 ; font	families
1  1263					 ; =============
1  1264					 ;
1  1265		  =0000			 FF_DONTCARE			 equ	 0000h
1  1266		  =0010			 FF_ROMAN			 equ	 0010h
1  1267		  =0020			 FF_SWISS			 equ	 0020h
1  1268		  =0030			 FF_MODERN			 equ	 0030h
1  1269		  =0040			 FF_SCRIPT			 equ	 0040h
1  1270		  =0050			 FF_DECORATIVE			 equ	 0050h
1  1271					 ;
1  1272					 ;------------------------------------------------------------------------------
1  1273					 ;
1  1274					 ; ===============
1  1275					 ; file	attributes
1  1276					 ; ===============
1  1277					 ;
1  1278		  =0001			 FILE_ATTRIBUTE_READONLY	 equ	 00000001h
1  1279		  =0002			 FILE_ATTRIBUTE_HIDDEN		 equ	 00000002h
1  1280		  =0004			 FILE_ATTRIBUTE_SYSTEM		 equ	 00000004h
1  1281		  =0010			 FILE_ATTRIBUTE_DIRECTORY	 equ	 00000010h
1  1282		  =0020			 FILE_ATTRIBUTE_ARCHIVE		 equ	 00000020h
1  1283		  =0080			 FILE_ATTRIBUTE_NORMAL		 equ	 00000080h
1  1284		  =0100			 FILE_ATTRIBUTE_TEMPORARY	 equ	 00000100h
1  1285		  =0800			 FILE_ATTRIBUTE_COMPRESSED	 equ	 00000800h
1  1286					 ;
1  1287					 ;------------------------------------------------------------------------------
1  1288					 ;
1  1289					 ; ===================
1  1290					 ; file	creation flags
1  1291					 ; ===================
1  1292					 ;
1  1293		  =80000000		 FILE_FLAG_WRITE_THROUGH	 equ	 80000000h
1  1294		  =40000000		 FILE_FLAG_OVERLAPPED		 equ	 40000000h
1  1295		  =20000000		 FILE_FLAG_NO_BUFFERING		 equ	 20000000h
1  1296		  =10000000		 FILE_FLAG_RANDOM_ACCESS	 equ	 10000000h
1  1297		  =08000000		 FILE_FLAG_SEQUENTIAL_SCAN	 equ	 08000000h
1  1298		  =04000000		 FILE_FLAG_DELETE_ON_CLOSE	 equ	 04000000h
1  1299		  =02000000		 FILE_FLAG_BACKUP_SEMANTICS	 equ	 02000000h
1  1300		  =01000000		 FILE_FLAG_POSIX_SEMANTICS	 equ	 01000000h
1  1301					 ;
1  1302					 ;------------------------------------------------------------------------------
1  1303					 ;
1  1304					 ; ==================
1  1305					 ; file	notifications
1  1306					 ; ==================
1  1307					 ;
1  1308		  =0001			 FILE_NOTIFY_CHANGE_FILE_NAME	 equ	 0001h
1  1309		  =0002			 FILE_NOTIFY_CHANGE_DIR_NAME	 equ	 0002h
1  1310		  =0004			 FILE_NOTIFY_CHANGE_ATTRIBUTES	 equ	 0004h
1  1311		  =0008			 FILE_NOTIFY_CHANGE_SIZE	 equ	 0008h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 24
pmScript.ASM



1  1312		  =0010			 FILE_NOTIFY_CHANGE_LAST_WRITE	 equ	 0010h
1  1313		  =0100			 FILE_NOTIFY_CHANGE_SECURITY	 equ	 0100h
1  1314					 ;
1  1315					 ;------------------------------------------------------------------------------
1  1316					 ;
1  1317					 ; ================
1  1318					 ; file	share modes
1  1319					 ; ================
1  1320					 ;
1  1321		  =0000			 FILE_SHARE_NONE		 equ	 0000h
1  1322		  =0001			 FILE_SHARE_READ		 equ	 0001h
1  1323		  =0002			 FILE_SHARE_WRITE		 equ	 0002h
1  1324					 ;
1  1325		  =0003			 FILE_SHARE_READWRITE		 equ	 FILE_SHARE_READ+FILE_SHARE_WRITE
1  1326					 ;
1  1327					 ;------------------------------------------------------------------------------
1  1328					 ;
1  1329					 ; ========================
1  1330					 ; SetFilePointer() methods
1  1331					 ; ========================
1  1332					 ;
1  1333		  =0000			 FILE_BEGIN			 equ	 0
1  1334		  =0001			 FILE_CURRENT			 equ	 1
1  1335		  =0002			 FILE_END			 equ	 2
1  1336					 ;
1  1337					 ;------------------------------------------------------------------------------
1  1338					 ;
1  1339					 ; =================
1  1340					 ; file	system flags
1  1341					 ; =================
1  1342					 ;
1  1343		  =0001			 FILE_CASE_SENSITIVE_SEARCH	 equ	 00000001h
1  1344		  =0002			 FILE_CASE_PRESERVED_NAMES	 equ	 00000002h
1  1345		  =0004			 FILE_UNICODE_ON_DISK		 equ	 00000004h
1  1346		  =0008			 FILE_PERSISTENT_ACLS		 equ	 00000008h
1  1347		  =0010			 FILE_FILE_COMPRESSION		 equ	 00000010h
1  1348		  =8000			 FILE_VOLUME_IS_COMPRESSED	 equ	 00008000h
1  1349					 ;
1  1350					 FS_CASE_SENSITIVE		 equ	 FILE_CASE_SENSITIVE_SEARCH
1  1351					 FS_CASE_IS_PRESERVED		 equ	 FILE_CASE_PRESERVED_NAMES
1  1352					 FS_UNICODE_STORED_ON_DISK	 equ	 FILE_UNICODE_ON_DISK
1  1353					 FS_PERSISTENT_ACLS		 equ	 FILE_PERSISTENT_ACLS
1  1354					 FS_FILE_COMPRESSION		 equ	 FILE_FILE_COMPRESSION
1  1355					 FS_VOL_IS_COMPRESSED		 equ	 FILE_VOLUME_IS_COMPRESSED
1  1356					 ;
1  1357					 ;------------------------------------------------------------------------------
1  1358					 ;
1  1359					 ; ============
1  1360					 ; font	weights
1  1361					 ; ============
1  1362					 ;
1  1363		  =0000			 FW_DONTCARE			 equ	 000
1  1364		  =0064			 FW_THIN			 equ	 100
1  1365		  =00C8			 FW_EXTRALIGHT			 equ	 200
1  1366		  =012C			 FW_LIGHT			 equ	 300
1  1367		  =0190			 FW_NORMAL			 equ	 400
1  1368		  =01F4			 FW_MEDIUM			 equ	 500
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 25
pmScript.ASM



1  1369		  =0258			 FW_SEMIBOLD			 equ	 600
1  1370		  =02BC			 FW_BOLD			 equ	 700
1  1371		  =0320			 FW_EXTRABOLD			 equ	 800
1  1372		  =0384			 FW_HEAVY			 equ	 900
1  1373					 ;
1  1374					 FW_ULTRALIGHT			 equ	 FW_EXTRALIGHT
1  1375					 FW_REGULAR			 equ	 FW_NORMAL
1  1376					 FW_DEMIBOLD			 equ	 FW_SEMIBOLD
1  1377					 FW_ULTRABOLD			 equ	 FW_EXTRABOLD
1  1378					 FW_BLACK			 equ	 FW_HEAVY
1  1379					 ;
1  1380					 ;------------------------------------------------------------------------------
1  1381					 ;
1  1382					 ; ======================
1  1383					 ; GetClassLong() offsets
1  1384					 ; ======================
1  1385					 ;
1  1386		  =-0008		 GCL_MENUNAME			 equ	 -08
1  1387		  =-000A		 GCL_HBRBACKGROUND		 equ	 -10
1  1388		  =-000C		 GCL_HCURSOR			 equ	 -12
1  1389		  =-000E		 GCL_HICON			 equ	 -14
1  1390		  =-0010		 GCL_HMODULE			 equ	 -16
1  1391		  =-0012		 GCL_CBWNDEXTRA			 equ	 -18
1  1392		  =-0014		 GCL_CBCLSEXTRA			 equ	 -20
1  1393		  =-0018		 GCL_WNDPROC			 equ	 -24
1  1394		  =-001A		 GCL_STYLE			 equ	 -26
1  1395		  =-0020		 GCW_ATOM			 equ	 -32
1  1396		  =-0022		 GCL_HICONSM			 equ	 -34
1  1397					 ;
1  1398					 ;------------------------------------------------------------------------------
1  1399					 ;
1  1400					 ; =================
1  1401					 ; file	access types
1  1402					 ; =================
1  1403					 ;
1  1404		  =10000000		 GENERIC_ALL			 equ	 10000000h
1  1405		  =20000000		 GENERIC_EXECUTE		 equ	 20000000h
1  1406		  =40000000		 GENERIC_WRITE			 equ	 40000000h
1  1407		  =80000000		 GENERIC_READ			 equ	 80000000h
1  1408					 ;
1  1409		  =C0000000		 GENERIC_READWRITE		 equ	 GENERIC_READ+GENERIC_WRITE
1  1410					 ;
1  1411					 ;------------------------------------------------------------------------------
1  1412					 ;
1  1413					 ; ===================
1  1414					 ; global memory flags
1  1415					 ; ===================
1  1416					 ;
1  1417		  =0000			 GMEM_FIXED			 equ	 0000h
1  1418		  =0002			 GMEM_MOVEABLE			 equ	 0002h
1  1419		  =0010			 GMEM_NOCOMPACT			 equ	 0010h
1  1420		  =0020			 GMEM_NODISCARD			 equ	 0020h
1  1421		  =0040			 GMEM_ZEROINIT			 equ	 0040h
1  1422		  =0080			 GMEM_MODIFY			 equ	 0080h
1  1423		  =0100			 GMEM_DISCARDABLE		 equ	 0100h
1  1424		  =1000			 GMEM_NOT_BANKED		 equ	 1000h
1  1425		  =2000			 GMEM_SHARE			 equ	 2000h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 26
pmScript.ASM



1  1426		  =2000			 GMEM_DDESHARE			 equ	 2000h
1  1427		  =4000			 GMEM_NOTIFY			 equ	 4000h
1  1428		  =8000			 GMEM_INVALID_HANDLE		 equ	 8000h
1  1429					 ;
1  1430		  =7F72			 GMEM_VALID_FLAGS		 equ	 7F72h
1  1431					 GMEM_LOWER			 equ	 GMEM_NOT_BANKED
1  1432					 ;
1  1433					 ;------------------------------------------------------------------------------
1  1434					 ;
1  1435					 ; ================
1  1436					 ; GetWindow() id's
1  1437					 ; ================
1  1438					 ;
1  1439		  =0000			 GW_HWNDFIRST			 equ	 0
1  1440		  =0001			 GW_HWNDLAST			 equ	 1
1  1441		  =0002			 GW_HWNDNEXT			 equ	 2
1  1442		  =0003			 GW_HWNDPREV			 equ	 3
1  1443		  =0004			 GW_OWNER			 equ	 4
1  1444		  =0005			 GW_CHILD			 equ	 5
1  1445					 ;
1  1446		  =0005			 GW_MAX				 equ	 5
1  1447					 ;
1  1448					 ;------------------------------------------------------------------------------
1  1449					 ;
1  1450					 ; =======================
1  1451					 ; GetWindowLong() offsets
1  1452					 ; =======================
1  1453					 ;
1  1454		  =-0004		 GWL_WNDPROC			 equ	 -04
1  1455		  =-0006		 GWL_HINSTANCE			 equ	 -06
1  1456		  =-0008		 GWL_HWNDPARENT			 equ	 -08
1  1457		  =-0010		 GWL_STYLE			 equ	 -16
1  1458		  =-0014		 GWL_EXSTYLE			 equ	 -20
1  1459		  =-0015		 GWL_USERDATA			 equ	 -21
1  1460		  =-000C		 GWL_ID				 equ	 -12
1  1461					 ;
1  1462					 ;------------------------------------------------------------------------------
1  1463					 ;
1  1464					 ; ==================
1  1465					 ; WinHelp() commands
1  1466					 ; ==================
1  1467					 ;
1  1468		  =0001			 HELP_CONTEXT			 equ	 0001h
1  1469		  =0002			 HELP_QUIT			 equ	 0002h
1  1470		  =0003			 HELP_INDEX			 equ	 0003h
1  1471		  =0003			 HELP_CONTENTS			 equ	 0003h
1  1472		  =0004			 HELP_HELPONHELP		 equ	 0004h
1  1473		  =0005			 HELP_SETINDEX			 equ	 0005h
1  1474		  =0005			 HELP_SETCONTENTS		 equ	 0005h
1  1475		  =0008			 HELP_CONTEXTPOPUP		 equ	 0008h
1  1476		  =0009			 HELP_FORCEFILE			 equ	 0009h
1  1477		  =000A			 HELP_CONTEXTMENU		 equ	 000Ah
1  1478		  =000B			 HELP_FINDER			 equ	 000Bh
1  1479		  =000C			 HELP_WM_HELP			 equ	 000Ch
1  1480		  =000D			 HELP_SETPOPUP_POS		 equ	 000Dh
1  1481		  =0010			 HELP_TCARD_DATA		 equ	 0010h
1  1482		  =0011			 HELP_TCARD_OTHER_CALLER	 equ	 0011h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 27
pmScript.ASM



1  1483		  =0101			 HELP_KEY			 equ	 0101h
1  1484		  =0102			 HELP_COMMAND			 equ	 0102h
1  1485		  =0105			 HELP_PARTIALKEY		 equ	 0105h
1  1486		  =0201			 HELP_MULTIKEY			 equ	 0201h
1  1487		  =0203			 HELP_SETWINPOS			 equ	 0203h
1  1488		  =8000			 HELP_TCARD			 equ	 8000h
1  1489					 ;
1  1490					 ;------------------------------------------------------------------------------
1  1491					 ;
1  1492					 ; =======================
1  1493					 ; hit test position codes
1  1494					 ; =======================
1  1495					 ;
1  1496		  =-0002		 HTERROR			 equ	 -2
1  1497		  =-0001		 HTTRANSPARENT			 equ	 -1
1  1498		  =0000			 HTNOWHERE			 equ	  0
1  1499		  =0001			 HTCLIENT			 equ	  1
1  1500		  =0002			 HTCAPTION			 equ	  2
1  1501		  =0003			 HTSYSMENU			 equ	  3
1  1502		  =0004			 HTGROWBOX			 equ	  4
1  1503		  =0005			 HTMENU				 equ	  5
1  1504		  =0006			 HTHSCROLL			 equ	  6
1  1505		  =0007			 HTVSCROLL			 equ	  7
1  1506		  =0008			 HTMINBUTTON			 equ	  8
1  1507		  =0009			 HTMAXBUTTON			 equ	  9
1  1508					 ;
1  1509					 HTSIZEFIRST			 equ	 HTLEFT
1  1510		  =000A			 HTLEFT				 equ	 10
1  1511		  =000B			 HTRIGHT			 equ	 11
1  1512		  =000C			 HTTOP				 equ	 12
1  1513		  =000D			 HTTOPLEFT			 equ	 13
1  1514		  =000E			 HTTOPRIGHT			 equ	 14
1  1515		  =000F			 HTBOTTOM			 equ	 15
1  1516		  =0010			 HTBOTTOMLEFT			 equ	 16
1  1517		  =0011			 HTBOTTOMRIGHT			 equ	 17
1  1518					 HTSIZELAST			 equ	 HTBOTTOMRIGHT
1  1519					 ;
1  1520		  =0012			 HTBORDER			 equ	 18
1  1521		  =0013			 HTOBJECT			 equ	 19
1  1522		  =0014			 HTCLOSE			 equ	 20
1  1523		  =0015			 HTHELP				 equ	 21
1  1524					 ;
1  1525					 HTSIZE				 equ	 HTGROWBOX
1  1526					 HTREDUCE			 equ	 HTMINBUTTON
1  1527					 HTZOOM				 equ	 HTMAXBUTTON
1  1528					 ;
1  1529					 ;------------------------------------------------------------------------------
1  1530					 ;
1  1531					 ; ===================
1  1532					 ; toolbar bitmap id's
1  1533					 ; ===================
1  1534					 ;
1  1535		  =0000			 IDB_STD_SMALL_COLOR		 equ	  0
1  1536		  =0001			 IDB_STD_LARGE_COLOR		 equ	  1
1  1537		  =0004			 IDB_VIEW_SMALL_COLOR		 equ	  4
1  1538		  =0005			 IDB_VIEW_LARGE_COLOR		 equ	  5
1  1539					 ;
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 28
pmScript.ASM



1  1540		  =-0001		 HINST_COMMCTRL			 equ	 -1
1  1541					 ;
1  1542					 ;------------------------------------------------------------------------------
1  1543					 ;
1  1544					 ; ====================
1  1545					 ; standard cursor id's
1  1546					 ; ====================
1  1547					 ;
1  1548		  =7F00			 IDC_ARROW			 equ	 32512
1  1549		  =7F01			 IDC_IBEAM			 equ	 32513
1  1550		  =7F02			 IDC_WAIT			 equ	 32514
1  1551		  =7F03			 IDC_CROSS			 equ	 32515
1  1552		  =7F04			 IDC_UPARROW			 equ	 32516
1  1553		  =7F80			 IDC_SIZE			 equ	 32640	 ;obsolete, use	IDC_SIZEALL
1  1554		  =7F81			 IDC_ICON			 equ	 32641	 ;obsolete, use	IDC_ARROW
1  1555		  =7F82			 IDC_SIZENWSE			 equ	 32642
1  1556		  =7F83			 IDC_SIZENESW			 equ	 32643
1  1557		  =7F84			 IDC_SIZEWE			 equ	 32644
1  1558		  =7F85			 IDC_SIZENS			 equ	 32645
1  1559		  =7F86			 IDC_SIZEALL			 equ	 32646
1  1560		  =7F88			 IDC_NO				 equ	 32648
1  1561		  =7F8A			 IDC_APPSTARTING		 equ	 32650
1  1562		  =7F8B			 IDC_HELP			 equ	 32651
1  1563					 ;
1  1564					 ;------------------------------------------------------------------------------
1  1565					 ;
1  1566					 ; ==================
1  1567					 ; standard icon id's
1  1568					 ; ==================
1  1569					 ;
1  1570		  =7F00			 IDI_APPLICATION		 equ	 32512
1  1571		  =7F01			 IDI_HAND			 equ	 32513
1  1572		  =7F02			 IDI_QUESTION			 equ	 32514
1  1573		  =7F03			 IDI_EXCLAMATION		 equ	 32515
1  1574		  =7F04			 IDI_ASTERISK			 equ	 32516
1  1575		  =7F05			 IDI_WINLOGO			 equ	 32517
1  1576					 ;
1  1577					 ;------------------------------------------------------------------------------
1  1578					 ;
1  1579					 ; ===================
1  1580					 ; dialog command id's
1  1581					 ; ===================
1  1582					 ;
1  1583		  =0001			 IDOK				 equ	 1
1  1584		  =0002			 IDCANCEL			 equ	 2
1  1585		  =0003			 IDABORT			 equ	 3
1  1586		  =0004			 IDRETRY			 equ	 4
1  1587		  =0005			 IDIGNORE			 equ	 5
1  1588		  =0006			 IDYES				 equ	 6
1  1589		  =0007			 IDNO				 equ	 7
1  1590		  =0008			 IDCLOSE			 equ	 8
1  1591		  =0009			 IDHELP				 equ	 9
1  1592					 ;
1  1593					 ;------------------------------------------------------------------------------
1  1594					 ;
1  1595					 ; =============================
1  1596					 ; keyboard message lParam flags
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 29
pmScript.ASM



1  1597					 ; =============================
1  1598					 ;
1  1599		  =0100			 KF_EXTENDED			 equ	 0100h
1  1600		  =0800			 KF_DLGMODE			 equ	 0800h
1  1601		  =1000			 KF_MENUMODE			 equ	 1000h
1  1602		  =2000			 KF_ALTDOWN			 equ	 2000h
1  1603		  =4000			 KF_REPEAT			 equ	 4000h
1  1604		  =8000			 KF_UP				 equ	 8000h
1  1605					 ;
1  1606					 ;------------------------------------------------------------------------------
1  1607					 ;
1  1608					 ; ================
1  1609					 ; listbox messages
1  1610					 ; ================
1  1611					 ;
1  1612		  =0180			 LB_ADDSTRING			 equ	 0180h
1  1613		  =0181			 LB_INSERTSTRING		 equ	 0181h
1  1614		  =0182			 LB_DELETESTRING		 equ	 0182h
1  1615		  =0183			 LB_SELITEMRANGEEX		 equ	 0183h
1  1616		  =0184			 LB_RESETCONTENT		 equ	 0184h
1  1617		  =0185			 LB_SETSEL			 equ	 0185h
1  1618		  =0186			 LB_SETCURSEL			 equ	 0186h
1  1619		  =0187			 LB_GETSEL			 equ	 0187h
1  1620		  =0188			 LB_GETCURSEL			 equ	 0188h
1  1621		  =0189			 LB_GETTEXT			 equ	 0189h
1  1622		  =018A			 LB_GETTEXTLEN			 equ	 018Ah
1  1623		  =018B			 LB_GETCOUNT			 equ	 018Bh
1  1624		  =018C			 LB_SELECTSTRING		 equ	 018Ch
1  1625		  =018D			 LB_DIR				 equ	 018Dh
1  1626		  =018E			 LB_GETTOPINDEX			 equ	 018Eh
1  1627		  =018F			 LB_FINDSTRING			 equ	 018Fh
1  1628		  =0190			 LB_GETSELCOUNT			 equ	 0190h
1  1629		  =0191			 LB_GETSELITEMS			 equ	 0191h
1  1630		  =0192			 LB_SETTABSTOPS			 equ	 0192h
1  1631		  =0193			 LB_GETHORIZONTALEXTENT		 equ	 0193h
1  1632		  =0194			 LB_SETHORIZONTALEXTENT		 equ	 0194h
1  1633		  =0195			 LB_SETCOLUMNWIDTH		 equ	 0195h
1  1634		  =0196			 LB_ADDFILE			 equ	 0196h
1  1635		  =0197			 LB_SETTOPINDEX			 equ	 0197h
1  1636		  =0198			 LB_GETITEMRECT			 equ	 0198h
1  1637		  =0199			 LB_GETITEMDATA			 equ	 0199h
1  1638		  =019A			 LB_SETITEMDATA			 equ	 019Ah
1  1639		  =019B			 LB_SELITEMRANGE		 equ	 019Bh
1  1640		  =019C			 LB_SETANCHORINDEX		 equ	 019Ch
1  1641		  =019D			 LB_GETANCHORINDEX		 equ	 019Dh
1  1642		  =019E			 LB_SETCARETINDEX		 equ	 019Eh
1  1643		  =019F			 LB_GETCARETINDEX		 equ	 019Fh
1  1644		  =01A0			 LB_SETITEMHEIGHT		 equ	 01A0h
1  1645		  =01A1			 LB_GETITEMHEIGHT		 equ	 01A1h
1  1646		  =01A2			 LB_FINDSTRINGEXACT		 equ	 01A2h
1  1647		  =01A5			 LB_SETLOCALE			 equ	 01A5h
1  1648		  =01A6			 LB_GETLOCALE			 equ	 01A6h
1  1649		  =01A7			 LB_SETCOUNT			 equ	 01A7h
1  1650		  =01A8			 LB_INITSTORAGE			 equ	 01A8h
1  1651		  =01A9			 LB_ITEMFROMPOINT		 equ	 01A9h
1  1652		  =01B0			 LB_MSGMAX			 equ	 01B0h
1  1653					 ;
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 30
pmScript.ASM



1  1654					 ;------------------------------------------------------------------------------
1  1655					 ;
1  1656					 ; =====================
1  1657					 ; listbox return values
1  1658					 ; =====================
1  1659					 ;
1  1660		  =0000			 LB_OKAY			 equ	  0
1  1661		  =-0001		 LB_ERR				 equ	 -1
1  1662		  =-0002		 LB_ERRSPACE			 equ	 -2
1  1663					 ;
1  1664					 ;------------------------------------------------------------------------------
1  1665					 ;
1  1666					 ; ==========================
1  1667					 ; listbox notification	codes
1  1668					 ; ==========================
1  1669					 ;
1  1670		  =-0002		 LBN_ERRSPACE			 equ	 -2
1  1671		  =0001			 LBN_SELCHANGE			 equ	  1
1  1672		  =0002			 LBN_DBLCLK			 equ	  2
1  1673		  =0003			 LBN_SELCANCEL			 equ	  3
1  1674		  =0004			 LBN_SETFOCUS			 equ	  4
1  1675		  =0005			 LBN_KILLFOCUS			 equ	  5
1  1676					 ;
1  1677					 ;------------------------------------------------------------------------------
1  1678					 ;
1  1679					 ; ==============
1  1680					 ; listbox styles
1  1681					 ; ==============
1  1682					 ;
1  1683		  =0001			 LBS_NOTIFY			 equ	 00000001h
1  1684		  =0002			 LBS_SORT			 equ	 00000002h
1  1685		  =0004			 LBS_NOREDRAW			 equ	 00000004h
1  1686		  =0008			 LBS_MULTIPLESEL		 equ	 00000008h
1  1687		  =0010			 LBS_OWNERDRAWFIXED		 equ	 00000010h
1  1688		  =0020			 LBS_OWNERDRAWVARIABLE		 equ	 00000020h
1  1689		  =0040			 LBS_HASSTRINGS			 equ	 00000040h
1  1690		  =0080			 LBS_USETABSTOPS		 equ	 00000080h
1  1691		  =0100			 LBS_NOINTEGRALHEIGHT		 equ	 00000100h
1  1692		  =0200			 LBS_MULTICOLUMN		 equ	 00000200h
1  1693		  =0400			 LBS_WANTKEYBOARDINPUT		 equ	 00000400h
1  1694		  =0800			 LBS_EXTENDEDSEL		 equ	 00000800h
1  1695		  =1000			 LBS_DISABLENOSCROLL		 equ	 00001000h
1  1696		  =2000			 LBS_NODATA			 equ	 00002000h
1  1697		  =4000			 LBS_NOSEL			 equ	 00004000h
1  1698		  =00A00003		 LBS_STANDARD			 equ	 00A00003h
1  1699					 ;
1  1700					 ;------------------------------------------------------------------------------
1  1701					 ;
1  1702					 ; ==================
1  1703					 ; local memory	flags
1  1704					 ; ==================
1  1705					 ;
1  1706		  =0000			 LMEM_FIXED			 equ	 0000h
1  1707		  =0002			 LMEM_MOVEABLE			 equ	 0002h
1  1708		  =0010			 LMEM_NOCOMPACT			 equ	 0010h
1  1709		  =0020			 LMEM_NODISCARD			 equ	 0020h
1  1710		  =0040			 LMEM_ZEROINIT			 equ	 0040h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 31
pmScript.ASM



1  1711		  =0080			 LMEM_MODIFY			 equ	 0080h
1  1712		  =00FF			 LMEM_LOCKCOUNT			 equ	 00FFh
1  1713		  =0F00			 LMEM_DISCARDABLE		 equ	 0F00h
1  1714		  =4000			 LMEM_DISCARDED			 equ	 4000h
1  1715		  =8000			 LMEM_INVALID_HANDLE		 equ	 8000h
1  1716					 ;
1  1717		  =0F72			 LMEM_VALID_FLAGS		 equ	 0F72h
1  1718					 ;
1  1719					 NONZEROLHND			 equ	 LMEM_MOVEABLE
1  1720					 NONZEROLPTR			 equ	 LMEM_FIXED
1  1721					 ;
1  1722		  =0042			 LHND				 equ	 LMEM_ZEROINIT+LMEM_MOVEABLE
1  1723		  =0040			 LPTR				 equ	 LMEM_ZEROINIT+LMEM_FIXED
1  1724					 ;
1  1725					 ;------------------------------------------------------------------------------
1  1726					 ;
1  1727					 ; ==================
1  1728					 ; list	view messages
1  1729					 ; ==================
1  1730					 ;
1  1731		  =1000			 LVM_FIRST			 equ	 1000h
1  1732					 ;
1  1733		  =1000			 LVM_GETBKCOLOR			 equ	 LVM_FIRST+000
1  1734		  =1001			 LVM_SETBKCOLOR			 equ	 LVM_FIRST+001
1  1735		  =1002			 LVM_GETIMAGELIST		 equ	 LVM_FIRST+002
1  1736		  =1003			 LVM_SETIMAGELIST		 equ	 LVM_FIRST+003
1  1737		  =1004			 LVM_GETITEMCOUNT		 equ	 LVM_FIRST+004
1  1738		  =1005			 LVM_GETITEMA			 equ	 LVM_FIRST+005
1  1739		  =1006			 LVM_SETITEMA			 equ	 LVM_FIRST+006
1  1740		  =1007			 LVM_INSERTITEMA		 equ	 LVM_FIRST+007
1  1741		  =1008			 LVM_DELETEITEM			 equ	 LVM_FIRST+008
1  1742		  =1009			 LVM_DELETEALLITEMS		 equ	 LVM_FIRST+009
1  1743		  =100A			 LVM_GETCALLBACKMASK		 equ	 LVM_FIRST+010
1  1744		  =100B			 LVM_SETCALLBACKMASK		 equ	 LVM_FIRST+011
1  1745		  =100C			 LVM_GETNEXTITEM		 equ	 LVM_FIRST+012
1  1746		  =100D			 LVM_FINDITEMA			 equ	 LVM_FIRST+013
1  1747		  =100E			 LVM_GETITEMRECT		 equ	 LVM_FIRST+014
1  1748		  =100F			 LVM_SETITEMPOSITION		 equ	 LVM_FIRST+015
1  1749		  =1010			 LVM_GETITEMPOSITION		 equ	 LVM_FIRST+016
1  1750		  =1011			 LVM_GETSTRINGWIDTHA		 equ	 LVM_FIRST+017
1  1751		  =1012			 LVM_HITTEST			 equ	 LVM_FIRST+018
1  1752		  =1013			 LVM_ENSUREVISIBLE		 equ	 LVM_FIRST+019
1  1753		  =1014			 LVM_SCROLL			 equ	 LVM_FIRST+020
1  1754		  =1015			 LVM_REDRAWITEMS		 equ	 LVM_FIRST+021
1  1755		  =1016			 LVM_ARRANGE			 equ	 LVM_FIRST+022
1  1756		  =1017			 LVM_EDITLABELA			 equ	 LVM_FIRST+023
1  1757		  =1018			 LVM_GETEDITCONTROL		 equ	 LVM_FIRST+024
1  1758		  =1019			 LVM_GETCOLUMNA			 equ	 LVM_FIRST+025
1  1759		  =101A			 LVM_SETCOLUMNA			 equ	 LVM_FIRST+026
1  1760		  =101B			 LVM_INSERTCOLUMNA		 equ	 LVM_FIRST+027
1  1761		  =101C			 LVM_DELETECOLUMN		 equ	 LVM_FIRST+028
1  1762		  =101D			 LVM_GETCOLUMNWIDTH		 equ	 LVM_FIRST+029
1  1763		  =101E			 LVM_SETCOLUMNWIDTH		 equ	 LVM_FIRST+030
1  1764		  =1021			 LVM_CREATEDRAGIMAGE		 equ	 LVM_FIRST+033
1  1765		  =1022			 LVM_GETVIEWRECT		 equ	 LVM_FIRST+034
1  1766		  =1023			 LVM_GETTEXTCOLOR		 equ	 LVM_FIRST+035
1  1767		  =1024			 LVM_SETTEXTCOLOR		 equ	 LVM_FIRST+036
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 32
pmScript.ASM



1  1768		  =1025			 LVM_GETTEXTBKCOLOR		 equ	 LVM_FIRST+037
1  1769		  =1026			 LVM_SETTEXTBKCOLOR		 equ	 LVM_FIRST+038
1  1770		  =1027			 LVM_GETTOPINDEX		 equ	 LVM_FIRST+039
1  1771		  =1028			 LVM_GETCOUNTPERPAGE		 equ	 LVM_FIRST+040
1  1772		  =1029			 LVM_GETORIGIN			 equ	 LVM_FIRST+041
1  1773		  =102A			 LVM_UPDATE			 equ	 LVM_FIRST+042
1  1774		  =102B			 LVM_SETITEMSTATE		 equ	 LVM_FIRST+043
1  1775		  =102C			 LVM_GETITEMSTATE		 equ	 LVM_FIRST+044
1  1776		  =102D			 LVM_GETITEMTEXTA		 equ	 LVM_FIRST+045
1  1777		  =102E			 LVM_SETITEMTEXTA		 equ	 LVM_FIRST+046
1  1778		  =102F			 LVM_SETITEMCOUNT		 equ	 LVM_FIRST+047
1  1779		  =1030			 LVM_SORTITEMS			 equ	 LVM_FIRST+048
1  1780		  =1031			 LVM_SETITEMPOSITION32		 equ	 LVM_FIRST+049
1  1781		  =1032			 LVM_GETSELECTEDCOUNT		 equ	 LVM_FIRST+050
1  1782		  =1033			 LVM_GETITEMSPACING		 equ	 LVM_FIRST+051
1  1783		  =1034			 LVM_GETISEARCHSTRINGA		 equ	 LVM_FIRST+052
1  1784					 ;
1  1785		  =104B			 LVM_GETITEMW			 equ	 LVM_FIRST+075
1  1786		  =104C			 LVM_SETITEMW			 equ	 LVM_FIRST+076
1  1787		  =104D			 LVM_INSERTITEMW		 equ	 LVM_FIRST+077
1  1788		  =1053			 LVM_FINDITEMW			 equ	 LVM_FIRST+083
1  1789		  =1057			 LVM_GETSTRINGWIDTHW		 equ	 LVM_FIRST+087
1  1790		  =105F			 LVM_GETCOLUMNW			 equ	 LVM_FIRST+095
1  1791		  =1060			 LVM_SETCOLUMNW			 equ	 LVM_FIRST+096
1  1792		  =1061			 LVM_INSERTCOLUMNW		 equ	 LVM_FIRST+097
1  1793		  =1073			 LVM_GETITEMTEXTW		 equ	 LVM_FIRST+115
1  1794		  =1074			 LVM_SETITEMTEXTW		 equ	 LVM_FIRST+116
1  1795		  =1075			 LVM_GETISEARCHSTRINGW		 equ	 LVM_FIRST+117
1  1796		  =1076			 LVM_EDITLABELW			 equ	 LVM_FIRST+118
1  1797					 ;
1  1798					 LVM_GETITEM			 equ	 LVM_GETITEMA
1  1799					 LVM_SETITEM			 equ	 LVM_SETITEMA
1  1800					 LVM_INSERTITEM			 equ	 LVM_INSERTITEMA
1  1801					 LVM_FINDITEM			 equ	 LVM_FINDITEMA
1  1802					 LVM_GETSTRINGWIDTH		 equ	 LVM_GETSTRINGWIDTHA
1  1803					 LVM_GETCOLUMN			 equ	 LVM_GETCOLUMNA
1  1804					 LVM_SETCOLUMN			 equ	 LVM_SETCOLUMNA
1  1805					 LVM_INSERTCOLUMN		 equ	 LVM_INSERTCOLUMNA
1  1806					 LVM_GETITEMTEXT		 equ	 LVM_GETITEMTEXTA
1  1807					 LVM_SETITEMTEXT		 equ	 LVM_SETITEMTEXTA
1  1808					 LVM_GETISEARCHSTRING		 equ	 LVM_GETISEARCHSTRINGA
1  1809					 LVM_EDITLABEL			 equ	 LVM_EDITLABELA
1  1810					 ;
1  1811					 ;------------------------------------------------------------------------------
1  1812					 ;
1  1813					 ; =======================
1  1814					 ; list	view notifications
1  1815					 ; =======================
1  1816					 ;
1  1817		  =-0064		 LVN_FIRST			 equ	 -100
1  1818		  =-00C7		 LVN_LAST			 equ	 LVN_FIRST-99
1  1819					 ;
1  1820		  =-0064		 LVN_ITEMCHANGING		 equ	 LVN_FIRST-00
1  1821		  =-0065		 LVN_ITEMCHANGED		 equ	 LVN_FIRST-01
1  1822		  =-0066		 LVN_INSERTITEM			 equ	 LVN_FIRST-02
1  1823		  =-0067		 LVN_DELETEITEM			 equ	 LVN_FIRST-03
1  1824		  =-0068		 LVN_DELETEALLITEMS		 equ	 LVN_FIRST-04
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 33
pmScript.ASM



1  1825		  =-0069		 LVN_BEGINLABELEDITA		 equ	 LVN_FIRST-05
1  1826		  =-006A		 LVN_ENDLABELEDITA		 equ	 LVN_FIRST-06
1  1827		  =-006C		 LVN_COLUMNCLICK		 equ	 LVN_FIRST-08
1  1828		  =-006D		 LVN_BEGINDRAG			 equ	 LVN_FIRST-09
1  1829		  =-006F		 LVN_BEGINRDRAG			 equ	 LVN_FIRST-11
1  1830		  =-0096		 LVN_GETDISPINFOA		 equ	 LVN_FIRST-50
1  1831		  =-0097		 LVN_SETDISPINFOA		 equ	 LVN_FIRST-51
1  1832					 ;
1  1833		  =-00AF		 LVN_BEGINLABELEDITW		 equ	 LVN_FIRST-75
1  1834		  =-00B0		 LVN_ENDLABELEDITW		 equ	 LVN_FIRST-76
1  1835		  =-00B1		 LVN_GETDISPINFOW		 equ	 LVN_FIRST-77
1  1836		  =-00B2		 LVN_SETDISPINFOW		 equ	 LVN_FIRST-78
1  1837					 ;
1  1838					 LVN_BEGINLABELEDIT		 equ	 LVN_BEGINLABELEDITA
1  1839					 LVN_ENDLABELEDIT		 equ	 LVN_ENDLABELEDITA
1  1840					 LVN_GETDISPINFO		 equ	 LVN_GETDISPINFOA
1  1841					 LVN_SETDISPINFO		 equ	 LVN_SETDISPINFOA
1  1842					 ;
1  1843					 ;------------------------------------------------------------------------------
1  1844					 ;
1  1845					 ; ================
1  1846					 ; list	view styles
1  1847					 ; ================
1  1848					 ;
1  1849		  =0003			 LVS_TYPEMASK			 equ	 00000003h
1  1850		  =0000			 LVS_ICON			 equ	 00000000h
1  1851		  =0001			 LVS_REPORT			 equ	 00000001h
1  1852		  =0002			 LVS_SMALLICON			 equ	 00000002h
1  1853		  =0003			 LVS_LIST			 equ	 00000003h
1  1854					 ;
1  1855		  =0004			 LVS_SINGLESEL			 equ	 00000004h
1  1856		  =0008			 LVS_SHOWSELALWAYS		 equ	 00000008h
1  1857		  =0010			 LVS_SORTASCENDING		 equ	 00000010h
1  1858		  =0020			 LVS_SORTDESCENDING		 equ	 00000020h
1  1859		  =0040			 LVS_SHAREIMAGELISTS		 equ	 00000040h
1  1860		  =0080			 LVS_NOLABELWRAP		 equ	 00000080h
1  1861		  =0100			 LVS_AUTOARRANGE		 equ	 00000100h
1  1862		  =0200			 LVS_EDITLABELS			 equ	 00000200h
1  1863					 ;
1  1864		  =FC00			 LVS_TYPESTYLEMASK		 equ	 0000FC00h
1  1865					 ;
1  1866		  =0C00			 LVS_ALIGNMASK			 equ	 00000C00h
1  1867		  =0000			 LVS_ALIGNTOP			 equ	 00000000h
1  1868		  =0400			 LVS_OWNERDRAWFIXED		 equ	 00000400h
1  1869		  =0800			 LVS_ALIGNLEFT			 equ	 00000800h
1  1870					 ;
1  1871		  =2000			 LVS_NOSCROLL			 equ	 00002000h
1  1872		  =4000			 LVS_NOCOLUMNHEADER		 equ	 00004000h
1  1873		  =8000			 LVS_NOSORTHEADER		 equ	 00008000h
1  1874					 ;
1  1875					 ;------------------------------------------------------------------------------
1  1876					 ;
1  1877					 ; ==================
1  1878					 ; MessageBox()	flags
1  1879					 ; ==================
1  1880					 ;
1  1881		  =0000			 MB_OK				 equ	 00000000h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 34
pmScript.ASM



1  1882		  =0001			 MB_OKCANCEL			 equ	 00000001h
1  1883		  =0002			 MB_ABORTRETRYIGNORE		 equ	 00000002h
1  1884		  =0003			 MB_YESNOCANCEL			 equ	 00000003h
1  1885		  =0004			 MB_YESNO			 equ	 00000004h
1  1886		  =0005			 MB_RETRYCANCEL			 equ	 00000005h
1  1887					 ;
1  1888		  =0010			 MB_ICONHAND			 equ	 00000010h
1  1889		  =0020			 MB_ICONQUESTION		 equ	 00000020h
1  1890		  =0030			 MB_ICONEXCLAMATION		 equ	 00000030h
1  1891		  =0040			 MB_ICONASTERISK		 equ	 00000040h
1  1892					 ;
1  1893					 MB_ICONWARNING			 equ	 MB_ICONEXCLAMATION
1  1894					 MB_ICONERROR			 equ	 MB_ICONHAND
1  1895					 MB_ICONINFORMATION		 equ	 MB_ICONASTERISK
1  1896					 MB_ICONSTOP			 equ	 MB_ICONHAND
1  1897					 ;
1  1898		  =0000			 MB_DEFBUTTON1			 equ	 00000000h
1  1899		  =0100			 MB_DEFBUTTON2			 equ	 00000100h
1  1900		  =0200			 MB_DEFBUTTON3			 equ	 00000200h
1  1901		  =0300			 MB_DEFBUTTON4			 equ	 00000300h
1  1902					 ;
1  1903		  =0000			 MB_APPLMODAL			 equ	 00000000h
1  1904		  =1000			 MB_SYSTEMMODAL			 equ	 00001000h
1  1905		  =2000			 MB_TASKMODAL			 equ	 00002000h
1  1906		  =4000			 MB_HELP			 equ	 00004000h
1  1907		  =00080000		 MB_RIGHT			 equ	 00080000h
1  1908		  =00100000		 MB_RTLREADING			 equ	 00100000h
1  1909					 ;
1  1910		  =8000			 MB_NOFOCUS			 equ	 00008000h
1  1911		  =00010000		 MB_SETFOREGROUND		 equ	 00010000h
1  1912		  =00020000		 MB_DEFAULT_DESKTOP_ONLY	 equ	 00020000h
1  1913		  =00040000		 MB_SERVICE_NOTIFICATION	 equ	 00040000h
1  1914					 ;
1  1915		  =000F			 MB_TYPEMASK			 equ	 0000000Fh
1  1916		  =0080			 MB_USERICON			 equ	 00000080h
1  1917		  =00F0			 MB_ICONMASK			 equ	 000000F0h
1  1918		  =0F00			 MB_DEFMASK			 equ	 00000F00h
1  1919		  =3000			 MB_MODEMASK			 equ	 00003000h
1  1920		  =C000			 MB_MISCMASK			 equ	 0000C000h
1  1921					 ;
1  1922					 ;------------------------------------------------------------------------------
1  1923					 ;
1  1924					 ; ==========
1  1925					 ; menu	flags
1  1926					 ; ==========
1  1927					 ;
1  1928		  =0000			 MF_INSERT			 equ	 00000000h
1  1929		  =0080			 MF_CHANGE			 equ	 00000080h
1  1930		  =0100			 MF_APPEND			 equ	 00000100h
1  1931		  =0200			 MF_DELETE			 equ	 00000200h
1  1932		  =1000			 MF_REMOVE			 equ	 00001000h
1  1933					 ;
1  1934		  =0000			 MF_BYCOMMAND			 equ	 00000000h
1  1935		  =0400			 MF_BYPOSITION			 equ	 00000400h
1  1936					 ;
1  1937		  =0800			 MF_SEPARATOR			 equ	 00000800h
1  1938					 ;
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 35
pmScript.ASM



1  1939		  =0000			 MF_ENABLED			 equ	 00000000h
1  1940		  =0001			 MF_GRAYED			 equ	 00000001h
1  1941		  =0002			 MF_DISABLED			 equ	 00000002h
1  1942					 ;
1  1943		  =0000			 MF_UNCHECKED			 equ	 00000000h
1  1944		  =0008			 MF_CHECKED			 equ	 00000008h
1  1945		  =0200			 MF_USECHECKBITMAPS		 equ	 00000200h
1  1946					 ;
1  1947		  =0000			 MF_STRING			 equ	 00000000h
1  1948		  =0004			 MF_BITMAP			 equ	 00000004h
1  1949		  =0100			 MF_OWNERDRAW			 equ	 00000100h
1  1950					 ;
1  1951		  =0010			 MF_POPUP			 equ	 00000010h
1  1952		  =0020			 MF_MENUBARBREAK		 equ	 00000020h
1  1953		  =0040			 MF_MENUBREAK			 equ	 00000040h
1  1954					 ;
1  1955		  =0000			 MF_UNHILITE			 equ	 00000000h
1  1956		  =0080			 MF_HILITE			 equ	 00000080h
1  1957					 ;
1  1958		  =1000			 MF_DEFAULT			 equ	 00001000h
1  1959		  =2000			 MF_SYSMENU			 equ	 00002000h
1  1960		  =4000			 MF_HELP			 equ	 00004000h
1  1961		  =4000			 MF_RIGHTJUSTIFY		 equ	 00004000h
1  1962					 ;
1  1963		  =8000			 MF_MOUSESELECT			 equ	 00008000h
1  1964		  =0080			 MF_END				 equ	 00000080h	 ;obsolete
1  1965					 ;
1  1966					 MFT_STRING			 equ	 MF_STRING
1  1967					 MFT_BITMAP			 equ	 MF_BITMAP
1  1968					 MFT_MENUBARBREAK		 equ	 MF_MENUBARBREAK
1  1969					 MFT_MENUBREAK			 equ	 MF_MENUBREAK
1  1970					 MFT_OWNERDRAW			 equ	 MF_OWNERDRAW
1  1971		  =0200			 MFT_RADIOCHECK			 equ	 00000200h
1  1972					 MFT_SEPARATOR			 equ	 MF_SEPARATOR
1  1973		  =2000			 MFT_RIGHTORDER			 equ	 00002000h
1  1974					 MFT_RIGHTJUSTIFY		 equ	 MF_RIGHTJUSTIFY
1  1975					 ;
1  1976		  =0003			 MFS_GRAYED			 equ	 00000003h
1  1977					 MFS_DISABLED			 equ	 MFS_GRAYED
1  1978					 MFS_CHECKED			 equ	 MF_CHECKED
1  1979					 MFS_HILITE			 equ	 MF_HILITE
1  1980					 MFS_ENABLED			 equ	 MF_ENABLED
1  1981					 MFS_UNCHECKED			 equ	 MF_UNCHECKED
1  1982					 MFS_UNHILITE			 equ	 MF_UNHILITE
1  1983					 MFS_DEFAULT			 equ	 MF_DEFAULT
1  1984					 ;
1  1985					 ;------------------------------------------------------------------------------
1  1986					 ;
1  1987					 ; ========================
1  1988					 ; mouse message key states
1  1989					 ; ========================
1  1990					 ;
1  1991		  =0001			 MK_LBUTTON			 equ	 0001h
1  1992		  =0002			 MK_RBUTTON			 equ	 0002h
1  1993		  =0004			 MK_SHIFT			 equ	 0004h
1  1994		  =0008			 MK_CONTROL			 equ	 0008h
1  1995		  =0010			 MK_MBUTTON			 equ	 0010h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 36
pmScript.ASM



1  1996					 ;
1  1997					 ;------------------------------------------------------------------------------
1  1998					 ;
1  1999					 ; ==================
1  2000					 ; owner draw actions
1  2001					 ; ==================
1  2002					 ;
1  2003		  =0001			 ODA_DRAWENTIRE			 equ	 0001h
1  2004		  =0002			 ODA_SELECT			 equ	 0002h
1  2005		  =0004			 ODA_FOCUS			 equ	 0004h
1  2006					 ;
1  2007					 ;------------------------------------------------------------------------------
1  2008					 ;
1  2009					 ; =================
1  2010					 ; owner draw states
1  2011					 ; =================
1  2012					 ;
1  2013		  =0001			 ODS_SELECTED			 equ	 0001h
1  2014		  =0002			 ODS_GRAYED			 equ	 0002h
1  2015		  =0004			 ODS_DISABLED			 equ	 0004h
1  2016		  =0008			 ODS_CHECKED			 equ	 0008h
1  2017		  =0010			 ODS_FOCUS			 equ	 0010h
1  2018		  =0020			 ODS_DEFAULT			 equ	 0020h
1  2019		  =1000			 ODS_COMBOBOXEDIT		 equ	 1000h
1  2020					 ;
1  2021					 ;------------------------------------------------------------------------------
1  2022					 ;
1  2023					 ; ================
1  2024					 ; owner draw types
1  2025					 ; ================
1  2026					 ;
1  2027		  =0001			 ODT_MENU			 equ	 1
1  2028		  =0002			 ODT_LISTBOX			 equ	 2
1  2029		  =0003			 ODT_COMBOBOX			 equ	 3
1  2030		  =0004			 ODT_BUTTON			 equ	 4
1  2031		  =0005			 ODT_STATIC			 equ	 5
1  2032					 ;
1  2033					 ;------------------------------------------------------------------------------
1  2034					 ;
1  2035					 ; ==================
1  2036					 ; OPENFILENAME	flags
1  2037					 ; ==================
1  2038					 ;
1  2039		  =0001			 OFN_READONLY			 equ	 00000001h
1  2040		  =0002			 OFN_OVERWRITEPROMPT		 equ	 00000002h
1  2041		  =0004			 OFN_HIDEREADONLY		 equ	 00000004h
1  2042		  =0008			 OFN_NOCHANGEDIR		 equ	 00000008h
1  2043		  =0010			 OFN_SHOWHELP			 equ	 00000010h
1  2044		  =0020			 OFN_ENABLEHOOK			 equ	 00000020h
1  2045		  =0040			 OFN_ENABLETEMPLATE		 equ	 00000040h
1  2046		  =0080			 OFN_ENABLETEMPLATEHANDLE	 equ	 00000080h
1  2047		  =0100			 OFN_NOVALIDATE			 equ	 00000100h
1  2048		  =0200			 OFN_ALLOWMULTISELECT		 equ	 00000200h
1  2049		  =0400			 OFN_EXTENSIONDIFFERENT		 equ	 00000400h
1  2050		  =0800			 OFN_PATHMUSTEXIST		 equ	 00000800h
1  2051		  =1000			 OFN_FILEMUSTEXIST		 equ	 00001000h
1  2052		  =2000			 OFN_CREATEPROMPT		 equ	 00002000h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 37
pmScript.ASM



1  2053		  =4000			 OFN_SHAREAWARE			 equ	 00004000h
1  2054		  =8000			 OFN_NOREADONLYRETURN		 equ	 00008000h
1  2055		  =00010000		 OFN_NOTESTFILECREATE		 equ	 00010000h
1  2056		  =00020000		 OFN_NONETWORKBUTTON		 equ	 00020000h
1  2057		  =00040000		 OFN_NOLONGNAMES		 equ	 00040000h
1  2058		  =00080000		 OFN_EXPLORER			 equ	 00080000h
1  2059		  =00100000		 OFN_NODEREFERENCELINKS		 equ	 00100000h
1  2060		  =00200000		 OFN_LONGNAMES			 equ	 00200000h
1  2061					 ;
1  2062					 ;------------------------------------------------------------------------------
1  2063					 ;
1  2064					 ; ==============================
1  2065					 ; OPENFILENAME	hook return codes
1  2066					 ; ==============================
1  2067					 ;
1  2068		  =0000			 OFN_SHAREWARN			 equ	 0
1  2069		  =0001			 OFN_SHARENOWARN		 equ	 1
1  2070		  =0002			 OFN_SHAREFALLTHROUGH		 equ	 2
1  2071					 ;
1  2072					 ;------------------------------------------------------------------------------
1  2073					 ;
1  2074					 ; ================
1  2075					 ; pipe	definitions
1  2076					 ; ================
1  2077					 ;
1  2078		  =0001			 PIPE_ACCESS_INBOUND		 equ	 00000001h
1  2079		  =0002			 PIPE_ACCESS_OUTBOUND		 equ	 00000002h
1  2080		  =0003			 PIPE_ACCESS_DUPLEX		 equ	 00000003h
1  2081					 ;
1  2082		  =0000			 PIPE_CLIENT_END		 equ	 00000000h
1  2083		  =0001			 PIPE_SERVER_END		 equ	 00000001h
1  2084					 ;
1  2085		  =0000			 PIPE_WAIT			 equ	 00000000h
1  2086		  =0001			 PIPE_NOWAIT			 equ	 00000001h
1  2087					 ;
1  2088		  =0000			 PIPE_READMODE_BYTE		 equ	 00000000h
1  2089		  =0002			 PIPE_READMODE_MESSAGE		 equ	 00000002h
1  2090					 ;
1  2091		  =0000			 PIPE_TYPE_BYTE			 equ	 00000000h
1  2092		  =0004			 PIPE_TYPE_MESSAGE		 equ	 00000004h
1  2093					 ;
1  2094		  =00FF			 PIPE_UNLIMITED_INSTANCES	 equ	 255
1  2095					 ;
1  2096					 ;------------------------------------------------------------------------------
1  2097					 ;
1  2098					 ; ====================
1  2099					 ; process access flags
1  2100					 ; ====================
1  2101					 ;
1  2102		  =0001			 PROCESS_TERMINATE		 equ	 0001h
1  2103		  =0002			 PROCESS_CREATE_THREAD		 equ	 0002h
1  2104		  =0008			 PROCESS_VM_OPERATION		 equ	 0008h
1  2105		  =0010			 PROCESS_VM_READ		 equ	 0010h
1  2106		  =0020			 PROCESS_VM_WRITE		 equ	 0020h
1  2107		  =0040			 PROCESS_DUP_HANDLE		 equ	 0040h
1  2108		  =0080			 PROCESS_CREATE_PROCESS		 equ	 0080h
1  2109		  =0100			 PROCESS_SET_QUOTA		 equ	 0100h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 38
pmScript.ASM



1  2110		  =0200			 PROCESS_SET_INFORMATION	 equ	 0200h
1  2111		  =0400			 PROCESS_QUERY_INFORMATION	 equ	 0400h
1  2112					 ;
1  2113					 ;PROCESS_ALL_ACCESS	  equ STANDARD_RIGHTS_REQUIRED+SYNCHRONIZE+0FFFh
1  2114					 ;
1  2115					 ;------------------------------------------------------------------------------
1  2116					 ;
1  2117					 ; ========================
1  2118					 ; binary raster operations
1  2119					 ; ========================
1  2120					 ;
1  2121		  =0001			 R2_BLACK			 equ	  1		 ;0
1  2122		  =0002			 R2_NOTMERGEPEN			 equ	  2		 ;DPon
1  2123		  =0003			 R2_MASKNOTPEN			 equ	  3		 ;DPna
1  2124		  =0004			 R2_NOTCOPYPEN			 equ	  4		 ;PN
1  2125		  =0005			 R2_MASKPENNOT			 equ	  5		 ;PDna
1  2126		  =0006			 R2_NOT				 equ	  6		 ;Dn
1  2127		  =0007			 R2_XORPEN			 equ	  7		 ;DPx
1  2128		  =0008			 R2_NOTMASKPEN			 equ	  8		 ;DPan
1  2129		  =0009			 R2_MASKPEN			 equ	  9		 ;DPa
1  2130		  =000A			 R2_NOTXORPEN			 equ	 10		 ;DPxn
1  2131		  =000B			 R2_NOP				 equ	 11		 ;D
1  2132		  =000C			 R2_MERGENOTPEN			 equ	 12		 ;DPno
1  2133		  =000D			 R2_COPYPEN			 equ	 13		 ;P
1  2134		  =000E			 R2_MERGEPENNOT			 equ	 14		 ;PDno
1  2135		  =000F			 R2_MERGEPEN			 equ	 15		 ;DPo
1  2136		  =0010			 R2_WHITE			 equ	 16		 ;1
1  2137		  =0010			 R2_LAST			 equ	 16
1  2138					 ;
1  2139					 ;------------------------------------------------------------------------------
1  2140					 ;
1  2141					 ; =================
1  2142					 ; network resources
1  2143					 ; =================
1  2144					 ;
1  2145		  =0001			 RESOURCE_CONNECTED		 equ	 00000001h
1  2146		  =0002			 RESOURCE_GLOBALNET		 equ	 00000002h
1  2147		  =0003			 RESOURCE_REMEMBERED		 equ	 00000003h
1  2148		  =0004			 RESOURCE_RECENT		 equ	 00000004h
1  2149		  =0005			 RESOURCE_CONTEXT		 equ	 00000005h
1  2150					 ;
1  2151		  =0000			 RESOURCETYPE_ANY		 equ	 00000000h
1  2152		  =0001			 RESOURCETYPE_DISK		 equ	 00000001h
1  2153		  =0002			 RESOURCETYPE_PRINT		 equ	 00000002h
1  2154		  =0008			 RESOURCETYPE_RESERVED		 equ	 00000008h
1  2155		  =-0001		 RESOURCETYPE_UNKNOWN		 equ	 -1
1  2156					 ;
1  2157		  =0001			 RESOURCEUSAGE_CONNECTABLE	 equ	 00000001h
1  2158		  =0002			 RESOURCEUSAGE_CONTAINER	 equ	 00000002h
1  2159		  =0004			 RESOURCEUSAGE_NOLOCALDEVICE	 equ	 00000004h
1  2160		  =0008			 RESOURCEUSAGE_SIBLING		 equ	 00000008h
1  2161		  =80000000		 RESOURCEUSAGE_RESERVED		 equ	 80000000h
1  2162					 ;
1  2163		  =0003			 RESOURCEUSAGE_ALL		 equ	 RESOURCEUSAGE_CONNECTABLE+\
   2164										 RESOURCEUSAGE_CONTAINER
1  2165					 ;
1  2166		  =0000			 RESOURCEDISPLAYTYPE_GENERIC	 equ	 00000000h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 39
pmScript.ASM



1  2167		  =0001			 RESOURCEDISPLAYTYPE_DOMAIN	 equ	 00000001h
1  2168		  =0002			 RESOURCEDISPLAYTYPE_SERVER	 equ	 00000002h
1  2169		  =0003			 RESOURCEDISPLAYTYPE_SHARE	 equ	 00000003h
1  2170		  =0004			 RESOURCEDISPLAYTYPE_FILE	 equ	 00000004h
1  2171		  =0005			 RESOURCEDISPLAYTYPE_GROUP	 equ	 00000005h
1  2172		  =0006			 RESOURCEDISPLAYTYPE_NETWORK	 equ	 00000006h
1  2173		  =0007			 RESOURCEDISPLAYTYPE_ROOT	 equ	 00000007h
1  2174		  =0008			 RESOURCEDISPLAYTYPE_SHAREADMIN	 equ	 00000008h
1  2175		  =0009			 RESOURCEDISPLAYTYPE_DIRECTORY	 equ	 00000009h
1  2176		  =000A			 RESOURCEDISPLAYTYPE_TREE	 equ	 0000000Ah
1  2177					 ;
1  2178					 ;------------------------------------------------------------------------------
1  2179					 ;
1  2180					 ; ==========
1  2181					 ; rgb colors
1  2182					 ; ==========
1  2183					 ;
1  2184		  =0000			 RGB_BLACK			 equ	 00000000h
1  2185		  =00202020		 RGB_VDKGRAY32			 equ	 00202020h
1  2186		  =00404040		 RGB_DKGRAY			 equ	 00404040h
1  2187		  =00808080		 RGB_SOLIDGRAY			 equ	 00808080h
1  2188		  =00C0C0C0		 RGB_SOLIDLTGRAY		 equ	 00C0C0C0h
1  2189		  =00E0E0E0		 RGB_EBONY			 equ	 00E0E0E0h
1  2190		  =00FF0000		 RGB_BLUE			 equ	 00FF0000h
1  2191		  =FF00			 RGB_GREEN			 equ	 0000FF00h
1  2192		  =00FF			 RGB_RED			 equ	 000000FFh
1  2193					 ;
1  2194		  =00FFFF00		 RGB_CYAN			 equ	 RGB_BLUE + RGB_GREEN
1  2195		  =00FF00FF		 RGB_MAGENTA			 equ	 RGB_BLUE	      +	RGB_RED
1  2196		  =FFFF			 RGB_YELLOW			 equ		    RGB_GREEN +	RGB_RED
1  2197		  =00FFFFFF		 RGB_WHITE			 equ	 RGB_BLUE + RGB_GREEN +	RGB_RED
1  2198					 ;
1  2199		  =00800000		 RGB_DKBLUE			 equ	 00800000h
1  2200		  =8000			 RGB_DKGREEN			 equ	 00008000h
1  2201		  =0080			 RGB_DKRED			 equ	 00000080h
1  2202					 ;
1  2203		  =00808000		 RGB_DKCYAN			 equ	 RGB_DKBLUE + RGB_DKGREEN
1  2204		  =00800080		 RGB_DKMAGENTA			 equ	 RGB_DKBLUE		  + RGB_DKRED
1  2205		  =8080			 RGB_DKYELLOW			 equ		      RGB_DKGREEN + RGB_DKRED
1  2206					 ;
1  2207					 ;------------------------------------------------------------------------------
1  2208					 ;
1  2209					 ; ===================
1  2210					 ; CombineRgn()	styles
1  2211					 ; ===================
1  2212					 ;
1  2213		  =0001			 RGN_AND			 equ	 1
1  2214		  =0002			 RGN_OR				 equ	 2
1  2215		  =0003			 RGN_XOR			 equ	 3
1  2216		  =0004			 RGN_DIFF			 equ	 4
1  2217		  =0005			 RGN_COPY			 equ	 5
1  2218					 RGN_MIN			 equ	 RGN_AND
1  2219					 RGN_MAX			 equ	 RGN_COPY
1  2220					 ;
1  2221					 ;------------------------------------------------------------------------------
1  2222					 ;
1  2223					 ; ====================
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 40
pmScript.ASM



1  2224					 ; scroll bar constants
1  2225					 ; ====================
1  2226					 ;
1  2227		  =0000			 SB_HORZ			 equ	 0
1  2228		  =0001			 SB_VERT			 equ	 1
1  2229		  =0002			 SB_CTL				 equ	 2
1  2230		  =0003			 SB_BOTH			 equ	 3
1  2231					 ;
1  2232					 ;------------------------------------------------------------------------------
1  2233					 ;
1  2234					 ; ===================
1  2235					 ; scroll bar commands
1  2236					 ; ===================
1  2237					 ;
1  2238		  =0000			 SB_LINEUP			 equ	 0
1  2239		  =0000			 SB_LINELEFT			 equ	 0
1  2240		  =0001			 SB_LINEDOWN			 equ	 1
1  2241		  =0001			 SB_LINERIGHT			 equ	 1
1  2242		  =0002			 SB_PAGEUP			 equ	 2
1  2243		  =0002			 SB_PAGELEFT			 equ	 2
1  2244		  =0003			 SB_PAGEDOWN			 equ	 3
1  2245		  =0003			 SB_PAGERIGHT			 equ	 3
1  2246		  =0004			 SB_THUMBPOSITION		 equ	 4
1  2247		  =0005			 SB_THUMBTRACK			 equ	 5
1  2248		  =0006			 SB_TOP				 equ	 6
1  2249		  =0006			 SB_LEFT			 equ	 6
1  2250		  =0007			 SB_BOTTOM			 equ	 7
1  2251		  =0007			 SB_RIGHT			 equ	 7
1  2252		  =0008			 SB_ENDSCROLL			 equ	 8
1  2253					 ;
1  2254					 ;------------------------------------------------------------------------------
1  2255					 ;
1  2256					 ; ===================
1  2257					 ; status bar messages
1  2258					 ; ===================
1  2259					 ;
1  2260		  =0401			 SB_SETTEXTA			 equ	 WM_USER+01
1  2261		  =0402			 SB_GETTEXTA			 equ	 WM_USER+02
1  2262		  =0403			 SB_GETTEXTLENGTHA		 equ	 WM_USER+03
1  2263		  =0404			 SB_SETPARTS			 equ	 WM_USER+04
1  2264		  =0406			 SB_GETPARTS			 equ	 WM_USER+06
1  2265		  =0407			 SB_GETBORDERS			 equ	 WM_USER+07
1  2266		  =0408			 SB_SETMINHEIGHT		 equ	 WM_USER+08
1  2267		  =0409			 SB_SIMPLE			 equ	 WM_USER+09
1  2268		  =040A			 SB_GETRECT			 equ	 WM_USER+10
1  2269		  =040B			 SB_SETTEXTW			 equ	 WM_USER+11
1  2270		  =040C			 SB_GETTEXTLENGTHW		 equ	 WM_USER+12
1  2271		  =040D			 SB_GETTEXTW			 equ	 WM_USER+13
1  2272					 ;
1  2273					 SB_GETTEXT			 equ	 SB_GETTEXTA
1  2274					 SB_SETTEXT			 equ	 SB_SETTEXTA
1  2275					 SB_GETTEXTLENGTH		 equ	 SB_GETTEXTLENGTHA
1  2276					 ;
1  2277					 ;------------------------------------------------------------------------------
1  2278					 ;
1  2279					 ; ===================
1  2280					 ; scroll bar messages
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 41
pmScript.ASM



1  2281					 ; ===================
1  2282					 ;
1  2283		  =00E0			 SBM_SETPOS			 equ	 00E0h
1  2284		  =00E1			 SBM_GETPOS			 equ	 00E1h
1  2285		  =00E2			 SBM_SETRANGE			 equ	 00E2h
1  2286		  =00E3			 SBM_GETRANGE			 equ	 00E3h
1  2287		  =00E4			 SBM_ENABLE_ARROWS		 equ	 00E4h
1  2288		  =00E6			 SBM_SETRANGEREDRAW		 equ	 00E6h
1  2289		  =00E9			 SBM_SETSCROLLINFO		 equ	 00E9h
1  2290		  =00EA			 SBM_GETSCROLLINFO		 equ	 00EAh
1  2291					 ;
1  2292					 ;------------------------------------------------------------------------------
1  2293					 ;
1  2294					 ; =================
1  2295					 ; scroll bar styles
1  2296					 ; =================
1  2297					 ;
1  2298		  =0000			 SBS_HORZ			 equ	 0000h
1  2299		  =0001			 SBS_VERT			 equ	 0001h
1  2300		  =0002			 SBS_TOPALIGN			 equ	 0002h
1  2301		  =0002			 SBS_LEFTALIGN			 equ	 0002h
1  2302		  =0004			 SBS_BOTTOMALIGN		 equ	 0004h
1  2303		  =0004			 SBS_RIGHTALIGN			 equ	 0004h
1  2304		  =0002			 SBS_SIZEBOXTOPLEFTALIGN	 equ	 0002h
1  2305		  =0004			 SBS_SIZEBOXBOTTOMRIGHTALIGN	 equ	 0004h
1  2306		  =0008			 SBS_SIZEBOX			 equ	 0008h
1  2307		  =0010			 SBS_SIZEGRIP			 equ	 0010h
1  2308					 ;
1  2309					 ;------------------------------------------------------------------------------
1  2310					 ;
1  2311					 ; ================
1  2312					 ; status bar types
1  2313					 ; ================
1  2314					 ;
1  2315		  =0000			 SBT_DEFAULT			 equ	 0000h
1  2316		  =0100			 SBT_NOBORDERS			 equ	 0100h
1  2317		  =0200			 SBT_POPOUT			 equ	 0200h
1  2318		  =0400			 SBT_RTLREADING			 equ	 0400h
1  2319		  =1000			 SBT_OWNERDRAW			 equ	 1000h
1  2320					 ;
1  2321					 ;------------------------------------------------------------------------------
1  2322					 ;
1  2323					 ; ===================
1  2324					 ; security attributes
1  2325					 ; ===================
1  2326					 ;
1  2327		  =0000			 SECURITY_ANONYMOUS		 equ	 00000000h
1  2328		  =00010000		 SECURITY_IDENTIFICATION	 equ	 00010000h
1  2329		  =00020000		 SECURITY_IMPERSONATION		 equ	 00020000h
1  2330		  =00030000		 SECURITY_DELEGATION		 equ	 00030000h
1  2331					 ;
1  2332		  =00040000		 SECURITY_CONTEXT_TRACKING	 equ	 00040000h
1  2333		  =00080000		 SECURITY_EFFECTIVE_ONLY	 equ	 00080000h
1  2334					 ;
1  2335		  =00100000		 SECURITY_SQOS_PRESENT		 equ	 00100000h
1  2336		  =001F0000		 SECURITY_VALID_SQOS_FLAGS	 equ	 001F0000h
1  2337					 ;
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 42
pmScript.ASM



1  2338					 ;------------------------------------------------------------------------------
1  2339					 ;
1  2340					 ; =====================
1  2341					 ; WM_SIZE wParam values
1  2342					 ; =====================
1  2343					 ;
1  2344		  =0000			 SIZE_RESTORED			 equ	 0
1  2345		  =0001			 SIZE_MINIMIZED			 equ	 1
1  2346		  =0002			 SIZE_MAXIMIZED			 equ	 2
1  2347		  =0003			 SIZE_MAXSHOW			 equ	 3
1  2348		  =0004			 SIZE_MAXHIDE			 equ	 4
1  2349					 ;
1  2350					 SIZENORMAL			 equ	 SIZE_RESTORED
1  2351					 SIZEICONIC			 equ	 SIZE_MINIMIZED
1  2352					 SIZEFULLSCREEN			 equ	 SIZE_MAXIMIZED
1  2353					 SIZEZOOMSHOW			 equ	 SIZE_MAXSHOW
1  2354					 SIZEZOOMHIDE			 equ	 SIZE_MAXHIDE
1  2355					 ;
1  2356					 ;------------------------------------------------------------------------------
1  2357					 ;
1  2358					 ; ========================
1  2359					 ; GetSystemMetrics() codes
1  2360					 ; ========================
1  2361					 ;
1  2362		  =0000			 SM_CXSCREEN			 equ	  0
1  2363		  =0001			 SM_CYSCREEN			 equ	  1
1  2364		  =0002			 SM_CXVSCROLL			 equ	  2
1  2365		  =0003			 SM_CYHSCROLL			 equ	  3
1  2366		  =0004			 SM_CYCAPTION			 equ	  4
1  2367		  =0005			 SM_CXBORDER			 equ	  5
1  2368		  =0006			 SM_CYBORDER			 equ	  6
1  2369		  =0007			 SM_CXDLGFRAME			 equ	  7
1  2370		  =0008			 SM_CYDLGFRAME			 equ	  8
1  2371		  =0009			 SM_CYVTHUMB			 equ	  9
1  2372		  =000A			 SM_CXHTHUMB			 equ	 10
1  2373		  =000B			 SM_CXICON			 equ	 11
1  2374		  =000C			 SM_CYICON			 equ	 12
1  2375		  =000D			 SM_CXCURSOR			 equ	 13
1  2376		  =000E			 SM_CYCURSOR			 equ	 14
1  2377		  =000F			 SM_CYMENU			 equ	 15
1  2378		  =0010			 SM_CXFULLSCREEN		 equ	 16
1  2379		  =0011			 SM_CYFULLSCREEN		 equ	 17
1  2380		  =0012			 SM_CYKANJIWINDOW		 equ	 18
1  2381		  =0013			 SM_MOUSEPRESENT		 equ	 19
1  2382		  =0014			 SM_CYVSCROLL			 equ	 20
1  2383		  =0015			 SM_CXHSCROLL			 equ	 21
1  2384		  =0016			 SM_DEBUG			 equ	 22
1  2385		  =0017			 SM_SWAPBUTTON			 equ	 23
1  2386		  =0018			 SM_RESERVED1			 equ	 24
1  2387		  =0019			 SM_RESERVED2			 equ	 25
1  2388		  =001A			 SM_RESERVED3			 equ	 26
1  2389		  =001B			 SM_RESERVED4			 equ	 27
1  2390		  =001C			 SM_CXMIN			 equ	 28
1  2391		  =001D			 SM_CYMIN			 equ	 29
1  2392		  =001E			 SM_CXSIZE			 equ	 30
1  2393		  =001F			 SM_CYSIZE			 equ	 31
1  2394		  =0020			 SM_CXFRAME			 equ	 32
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 43
pmScript.ASM



1  2395		  =0021			 SM_CYFRAME			 equ	 33
1  2396		  =0022			 SM_CXMINTRACK			 equ	 34
1  2397		  =0023			 SM_CYMINTRACK			 equ	 35
1  2398		  =0024			 SM_CXDOUBLECLK			 equ	 36
1  2399		  =0025			 SM_CYDOUBLECLK			 equ	 37
1  2400		  =0026			 SM_CXICONSPACING		 equ	 38
1  2401		  =0027			 SM_CYICONSPACING		 equ	 39
1  2402		  =0028			 SM_MENUDROPALIGNMENT		 equ	 40
1  2403		  =0029			 SM_PENWINDOWS			 equ	 41
1  2404		  =002A			 SM_DBCSENABLED			 equ	 42
1  2405		  =002B			 SM_CMOUSEBUTTONS		 equ	 43
1  2406		  =002C			 SM_SECURE			 equ	 44
1  2407		  =002D			 SM_CXEDGE			 equ	 45
1  2408		  =002E			 SM_CYEDGE			 equ	 46
1  2409		  =002F			 SM_CXMINSPACING		 equ	 47
1  2410		  =0030			 SM_CYMINSPACING		 equ	 48
1  2411		  =0031			 SM_CXSMICON			 equ	 49
1  2412		  =0032			 SM_CYSMICON			 equ	 50
1  2413		  =0033			 SM_CYSMCAPTION			 equ	 51
1  2414		  =0034			 SM_CXSMSIZE			 equ	 52
1  2415		  =0035			 SM_CYSMSIZE			 equ	 53
1  2416		  =0036			 SM_CXMENUSIZE			 equ	 54
1  2417		  =0037			 SM_CYMENUSIZE			 equ	 55
1  2418		  =0038			 SM_ARRANGE			 equ	 56
1  2419		  =0039			 SM_CXMINIMIZED			 equ	 57
1  2420		  =003A			 SM_CYMINIMIZED			 equ	 58
1  2421		  =003B			 SM_CXMAXTRACK			 equ	 59
1  2422		  =003C			 SM_CYMAXTRACK			 equ	 60
1  2423		  =003D			 SM_CXMAXIMIZED			 equ	 61
1  2424		  =003E			 SM_CYMAXIMIZED			 equ	 62
1  2425		  =003F			 SM_NETWORK			 equ	 63
1  2426		  =0043			 SM_CLEANBOOT			 equ	 67
1  2427		  =0044			 SM_CXDRAG			 equ	 68
1  2428		  =0045			 SM_CYDRAG			 equ	 69
1  2429		  =0046			 SM_SHOWSOUNDS			 equ	 70
1  2430		  =0047			 SM_CXMENUCHECK			 equ	 71
1  2431		  =0048			 SM_CYMENUCHECK			 equ	 72
1  2432		  =0049			 SM_SLOWMACHINE			 equ	 73
1  2433		  =004A			 SM_MIDEASTENABLED		 equ	 74
1  2434					 ;
1  2435					 SM_CXFIXEDFRAME		 equ	 SM_CXDLGFRAME
1  2436					 SM_CYFIXEDFRAME		 equ	 SM_CYDLGFRAME
1  2437					 SM_CXSIZEFRAME			 equ	 SM_CXFRAME
1  2438					 SM_CYSIZEFRAME			 equ	 SM_CYFRAME
1  2439					 ;
1  2440					 ;------------------------------------------------------------------------------
1  2441					 ;
1  2442					 ; =====================
1  2443					 ; static control styles
1  2444					 ; =====================
1  2445					 ;
1  2446		  =0000			 SS_LEFT			 equ	 0000h
1  2447		  =0001			 SS_CENTER			 equ	 0001h
1  2448		  =0002			 SS_RIGHT			 equ	 0002h
1  2449		  =0003			 SS_ICON			 equ	 0003h
1  2450		  =0004			 SS_BLACKRECT			 equ	 0004h
1  2451		  =0005			 SS_GRAYRECT			 equ	 0005h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 44
pmScript.ASM



1  2452		  =0006			 SS_WHITERECT			 equ	 0006h
1  2453		  =0007			 SS_BLACKFRAME			 equ	 0007h
1  2454		  =0008			 SS_GRAYFRAME			 equ	 0008h
1  2455		  =0009			 SS_WHITEFRAME			 equ	 0009h
1  2456		  =000A			 SS_USERITEM			 equ	 000Ah
1  2457		  =000B			 SS_SIMPLE			 equ	 000Bh
1  2458		  =000C			 SS_LEFTNOWORDWRAP		 equ	 000Ch
1  2459		  =000E			 SS_BITMAP			 equ	 000Eh
1  2460		  =000D			 SS_OWNERDRAW			 equ	 000Dh
1  2461		  =000F			 SS_ENHMETAFILE			 equ	 000Fh
1  2462		  =0010			 SS_ETCHEDHORZ			 equ	 0010h
1  2463		  =0011			 SS_ETCHEDVERT			 equ	 0011h
1  2464		  =0012			 SS_ETCHEDFRAME			 equ	 0012h
1  2465		  =001F			 SS_TYPEMASK			 equ	 001Fh
1  2466		  =0080			 SS_NOPREFIX			 equ	 0080h
1  2467		  =0100			 SS_NOTIFY			 equ	 0100h
1  2468		  =0200			 SS_CENTERIMAGE			 equ	 0200h
1  2469		  =0400			 SS_RIGHTJUST			 equ	 0400h
1  2470		  =0800			 SS_REALSIZEIMAGE		 equ	 0800h
1  2471		  =1000			 SS_SUNKEN			 equ	 1000h
1  2472					 ;
1  2473					 ;------------------------------------------------------------------------------
1  2474					 ;
1  2475					 ; ================
1  2476					 ; startup commands
1  2477					 ; ================
1  2478					 ;
1  2479		  =0001			 STARTF_USESHOWWINDOW		 equ	 00000001h
1  2480		  =0002			 STARTF_USESIZE			 equ	 00000002h
1  2481		  =0004			 STARTF_USEPOSITION		 equ	 00000004h
1  2482		  =0008			 STARTF_USECOUNTCHARS		 equ	 00000008h
1  2483		  =0010			 STARTF_USEFILLATTRIBUTE	 equ	 00000010h
1  2484		  =0020			 STARTF_RUNFULLSCREEN		 equ	 00000020h	 ;ignored for non-x86
1  2485		  =0040			 STARTF_FORCEONFEEDBACK		 equ	 00000040h
1  2486		  =0080			 STARTF_FORCEOFFFEEDBACK	 equ	 00000080h
1  2487		  =0100			 STARTF_USESTDHANDLES		 equ	 00000100h
1  2488		  =0200			 STARTF_USEHOTKEY		 equ	 00000200h
1  2489					 ;
1  2490					 ;------------------------------------------------------------------------------
1  2491					 ;
1  2492					 ; ============
1  2493					 ; status codes
1  2494					 ; ============
1  2495					 ;
1  2496		  =0000			 STATUS_WAIT_0			 equ	 000000000h
1  2497		  =0080			 STATUS_ABANDONED_WAIT_0	 equ	 000000080h
1  2498		  =00C0			 STATUS_USER_APC		 equ	 0000000C0h
1  2499		  =0102			 STATUS_TIMEOUT			 equ	 000000102h
1  2500		  =0103			 STATUS_PENDING			 equ	 000000103h
1  2501		  =40000005		 STATUS_SEGMENT_NOTIFICATION	 equ	 040000005h
1  2502		  =80000001		 STATUS_GUARD_PAGE_VIOLATION	 equ	 080000001h
1  2503		  =80000002		 STATUS_DATATYPE_MISALIGNMENT	 equ	 080000002h
1  2504		  =80000003		 STATUS_BREAKPOINT		 equ	 080000003h
1  2505		  =80000004		 STATUS_SINGLE_STEP		 equ	 080000004h
1  2506		  =C0000005		 STATUS_ACCESS_VIOLATION	 equ	 0C0000005h
1  2507		  =C0000006		 STATUS_IN_PAGE_ERROR		 equ	 0C0000006h
1  2508		  =C0000017		 STATUS_NO_MEMORY		 equ	 0C0000017h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 45
pmScript.ASM



1  2509		  =C000001D		 STATUS_ILLEGAL_INSTRUCTION	 equ	 0C000001Dh
1  2510		  =C0000025		 STATUS_NONCONTINUABLE_EXCEPTION equ	 0C0000025h
1  2511		  =C0000026		 STATUS_INVALID_DISPOSITION	 equ	 0C0000026h
1  2512		  =C000008C		 STATUS_ARRAY_BOUNDS_EXCEEDED	 equ	 0C000008Ch
1  2513		  =C000008D		 STATUS_FLOAT_DENORMAL_OPERAND	 equ	 0C000008Dh
1  2514		  =C000008E		 STATUS_FLOAT_DIVIDE_BY_ZERO	 equ	 0C000008Eh
1  2515		  =C000008F		 STATUS_FLOAT_INEXACT_RESULT	 equ	 0C000008Fh
1  2516		  =C0000090		 STATUS_FLOAT_INVALID_OPERATION	 equ	 0C0000090h
1  2517		  =C0000091		 STATUS_FLOAT_OVERFLOW		 equ	 0C0000091h
1  2518		  =C0000092		 STATUS_FLOAT_STACK_CHECK	 equ	 0C0000092h
1  2519		  =C0000093		 STATUS_FLOAT_UNDERFLOW		 equ	 0C0000093h
1  2520		  =C0000094		 STATUS_INTEGER_DIVIDE_BY_ZERO	 equ	 0C0000094h
1  2521		  =C0000095		 STATUS_INTEGER_OVERFLOW	 equ	 0C0000095h
1  2522		  =C0000096		 STATUS_PRIVILEGED_INSTRUCTION	 equ	 0C0000096h
1  2523		  =C00000FD		 STATUS_STACK_OVERFLOW		 equ	 0C00000FDh
1  2524		  =C000013A		 STATUS_CONTROL_C_EXIT		 equ	 0C000013Ah
1  2525					 ;
1  2526					 ;------------------------------------------------------------------------------
1  2527					 ;
1  2528					 ; ========================
1  2529					 ; toolbar standard bitmaps
1  2530					 ; ========================
1  2531					 ;
1  2532		  =0000			 STD_CUT			 equ	  0
1  2533		  =0001			 STD_COPY			 equ	  1
1  2534		  =0002			 STD_PASTE			 equ	  2
1  2535		  =0003			 STD_UNDO			 equ	  3
1  2536		  =0004			 STD_REDOW			 equ	  4
1  2537		  =0005			 STD_DELETE			 equ	  5
1  2538		  =0006			 STD_FILENEW			 equ	  6
1  2539		  =0007			 STD_FILEOPEN			 equ	  7
1  2540		  =0008			 STD_FILESAVE			 equ	  8
1  2541		  =0009			 STD_PRINTPRE			 equ	  9
1  2542		  =000A			 STD_PROPERTIES			 equ	 10
1  2543		  =000B			 STD_HELP			 equ	 11
1  2544		  =000C			 STD_FIND			 equ	 12
1  2545		  =000D			 STD_REPLACE			 equ	 13
1  2546		  =000E			 STD_PRINT			 equ	 14
1  2547					 ;
1  2548					 ;------------------------------------------------------------------------------
1  2549					 ;
1  2550					 ; =====================
1  2551					 ; standard file handles
1  2552					 ; =====================
1  2553					 ;
1  2554		  =-000A		 STD_INPUT_HANDLE		 equ	 -10
1  2555		  =-000B		 STD_OUTPUT_HANDLE		 equ	 -11
1  2556		  =-000C		 STD_ERROR_HANDLE		 equ	 -12
1  2557					 ;
1  2558					 ;------------------------------------------------------------------------------
1  2559					 ;
1  2560					 ; =====================
1  2561					 ; ShowWindow()	commands
1  2562					 ; =====================
1  2563					 ;
1  2564		  =0000			 SW_HIDE			 equ	  0
1  2565		  =0001			 SW_SHOWNORMAL			 equ	  1
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 46
pmScript.ASM



1  2566		  =0001			 SW_NORMAL			 equ	  1
1  2567		  =0002			 SW_SHOWMINIMIZED		 equ	  2
1  2568		  =0003			 SW_SHOWMAXIMIZED		 equ	  3
1  2569		  =0003			 SW_MAXIMIZE			 equ	  3
1  2570		  =0004			 SW_SHOWNOACTIVATE		 equ	  4
1  2571		  =0005			 SW_SHOW			 equ	  5
1  2572		  =0006			 SW_MINIMIZE			 equ	  6
1  2573		  =0007			 SW_SHOWMINNOACTIVE		 equ	  7
1  2574		  =0008			 SW_SHOWNA			 equ	  8
1  2575		  =0009			 SW_RESTORE			 equ	  9
1  2576		  =000A			 SW_SHOWDEFAULT			 equ	 10
1  2577		  =000A			 SW_MAX				 equ	 10
1  2578					 ;
1  2579					 ;------------------------------------------------------------------------------
1  2580					 ;
1  2581					 ; ====================
1  2582					 ; SetWindowPos() flags
1  2583					 ; ====================
1  2584					 ;
1  2585		  =0001			 SWP_NOSIZE			 equ	 0001h
1  2586		  =0002			 SWP_NOMOVE			 equ	 0002h
1  2587		  =0004			 SWP_NOZORDER			 equ	 0004h
1  2588		  =0008			 SWP_NOREDRAW			 equ	 0008h
1  2589		  =0010			 SWP_NOACTIVATE			 equ	 0010h
1  2590		  =0020			 SWP_FRAMECHANGED		 equ	 0020h
1  2591		  =0040			 SWP_SHOWWINDOW			 equ	 0040h
1  2592		  =0080			 SWP_HIDEWINDOW			 equ	 0080h
1  2593		  =0100			 SWP_NOCOPYBITS			 equ	 0100h
1  2594		  =0200			 SWP_NOOWNERZORDER		 equ	 0200h
1  2595		  =0400			 SWP_NOSENDCHANGING		 equ	 0400h
1  2596		  =2000			 SWP_DEFERERASE			 equ	 2000h
1  2597		  =4000			 SWP_ASYNCWINDOWPOS		 equ	 4000h
1  2598					 ;
1  2599					 SWP_DRAWFRAME			 equ	 SWP_FRAMECHANGED
1  2600					 SWP_NOREPOSITION		 equ	 SWP_NOOWNERZORDER
1  2601					 ;
1  2602					 ;------------------------------------------------------------------------------
1  2603					 ;
1  2604					 ; ======================
1  2605					 ; text	alignment options
1  2606					 ; ======================
1  2607					 ;
1  2608		  =0000			 TA_NOUPDATECP			 equ	 0000h
1  2609		  =0001			 TA_UPDATECP			 equ	 0001h
1  2610					 ;
1  2611		  =0000			 TA_LEFT			 equ	 0000h
1  2612		  =0002			 TA_RIGHT			 equ	 0002h
1  2613		  =0006			 TA_CENTER			 equ	 0006h
1  2614					 ;
1  2615		  =0000			 TA_TOP				 equ	 0000h
1  2616		  =0008			 TA_BOTTOM			 equ	 0008h
1  2617		  =0018			 TA_BASELINE			 equ	 0018h
1  2618		  =0100			 TA_RTLREADING			 equ	 0100h
1  2619		  =011F			 TA_MASK			 equ	 TA_BASELINE+TA_CENTER+TA_UPDATECP+\
   2620										 TA_RTLREADING
1  2621					 ;
1  2622					 ;------------------------------------------------------------------------------
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 47
pmScript.ASM



1  2623					 ;
1  2624					 ; ================
1  2625					 ; toolbar messages
1  2626					 ; ================
1  2627					 ;
1  2628		  =0401			 TB_ENABLEBUTTON		 equ	 WM_USER+01
1  2629		  =0402			 TB_CHECKBUTTON			 equ	 WM_USER+02
1  2630		  =0403			 TB_PRESSBUTTON			 equ	 WM_USER+03
1  2631		  =0404			 TB_HIDEBUTTON			 equ	 WM_USER+04
1  2632		  =0405			 TB_INDETERMINATE		 equ	 WM_USER+05
1  2633		  =0409			 TB_ISBUTTONENABLED		 equ	 WM_USER+09
1  2634		  =040A			 TB_ISBUTTONCHECKED		 equ	 WM_USER+10
1  2635		  =040B			 TB_ISBUTTONPRESSED		 equ	 WM_USER+11
1  2636		  =040C			 TB_ISBUTTONHIDDEN		 equ	 WM_USER+12
1  2637		  =040D			 TB_ISBUTTONINDETERMINATE	 equ	 WM_USER+13
1  2638		  =0411			 TB_SETSTATE			 equ	 WM_USER+17
1  2639		  =0412			 TB_GETSTATE			 equ	 WM_USER+18
1  2640		  =0413			 TB_ADDBITMAP			 equ	 WM_USER+19
1  2641		  =0414			 TB_ADDBUTTONS			 equ	 WM_USER+20
1  2642		  =0415			 TB_INSERTBUTTON		 equ	 WM_USER+21
1  2643		  =0416			 TB_DELETEBUTTON		 equ	 WM_USER+22
1  2644		  =0417			 TB_GETBUTTON			 equ	 WM_USER+23
1  2645		  =0418			 TB_BUTTONCOUNT			 equ	 WM_USER+24
1  2646		  =0419			 TB_COMMANDTOINDEX		 equ	 WM_USER+25
1  2647		  =041A			 TB_SAVERESTOREA		 equ	 WM_USER+26
1  2648		  =041B			 TB_CUSTOMIZE			 equ	 WM_USER+27
1  2649		  =041C			 TB_ADDSTRINGA			 equ	 WM_USER+28
1  2650		  =041D			 TB_GETITEMRECT			 equ	 WM_USER+29
1  2651		  =041E			 TB_BUTTONSTRUCTSIZE		 equ	 WM_USER+30
1  2652		  =041F			 TB_SETBUTTONSIZE		 equ	 WM_USER+31
1  2653		  =0420			 TB_SETBITMAPSIZE		 equ	 WM_USER+32
1  2654		  =0421			 TB_AUTOSIZE			 equ	 WM_USER+33
1  2655		  =0423			 TB_GETTOOLTIPS			 equ	 WM_USER+35
1  2656		  =0424			 TB_SETTOOLTIPS			 equ	 WM_USER+36
1  2657		  =0425			 TB_SETPARENT			 equ	 WM_USER+37
1  2658		  =0427			 TB_SETROWS			 equ	 WM_USER+39
1  2659		  =0428			 TB_GETROWS			 equ	 WM_USER+40
1  2660		  =0429			 TB_GETBITMAPFLAGS		 equ	 WM_USER+41
1  2661		  =042A			 TB_SETCMDID			 equ	 WM_USER+42
1  2662		  =042B			 TB_CHANGEBITMAP		 equ	 WM_USER+43
1  2663		  =042C			 TB_GETBITMAP			 equ	 WM_USER+44
1  2664		  =042D			 TB_GETBUTTONTEXTA		 equ	 WM_USER+45
1  2665		  =042E			 TB_REPLACEBITMAP		 equ	 WM_USER+46
1  2666					 ;
1  2667		  =044B			 TB_GETBUTTONTEXTW		 equ	 WM_USER+75
1  2668		  =044C			 TB_SAVERESTOREW		 equ	 WM_USER+76
1  2669		  =044D			 TB_ADDSTRINGW			 equ	 WM_USER+77
1  2670					 ;
1  2671					 TB_GETBUTTONTEXT		 equ	 TB_GETBUTTONTEXTA
1  2672					 TB_SAVERESTORE			 equ	 TB_SAVERESTOREA
1  2673					 TB_ADDSTRING			 equ	 TB_ADDSTRINGA
1  2674					 ;
1  2675					 ;------------------------------------------------------------------------------
1  2676					 ;
1  2677					 ; =====================
1  2678					 ; toolbar notifications
1  2679					 ; =====================
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 48
pmScript.ASM



1  2680					 ;
1  2681		  =-02BC		 TBN_FIRST			 equ	 -700
1  2682		  =-02D0		 TBN_LAST			 equ	 TBN_FIRST-20
1  2683					 ;
1  2684		  =-02BC		 TBN_GETBUTTONINFOA		 equ	 TBN_FIRST-00
1  2685		  =-02BD		 TBN_BEGINDRAG			 equ	 TBN_FIRST-01
1  2686		  =-02BE		 TBN_ENDDRAG			 equ	 TBN_FIRST-02
1  2687		  =-02BF		 TBN_BEGINADJUST		 equ	 TBN_FIRST-03
1  2688		  =-02C0		 TBN_ENDADJUST			 equ	 TBN_FIRST-04
1  2689		  =-02C1		 TBN_RESET			 equ	 TBN_FIRST-05
1  2690		  =-02C2		 TBN_QUERYINSERT		 equ	 TBN_FIRST-06
1  2691		  =-02C3		 TBN_QUERYDELETE		 equ	 TBN_FIRST-07
1  2692		  =-02C4		 TBN_TOOLBARCHANGE		 equ	 TBN_FIRST-08
1  2693		  =-02C5		 TBN_CUSTHELP			 equ	 TBN_FIRST-09
1  2694		  =-02D0		 TBN_GETBUTTONINFOW		 equ	 TBN_FIRST-20
1  2695					 ;
1  2696					 ;------------------------------------------------------------------------------
1  2697					 ;
1  2698					 ; ==============
1  2699					 ; toolbar states
1  2700					 ; ==============
1  2701					 ;
1  2702		  =0001			 TBSTATE_CHECKED		 equ	 0001h
1  2703		  =0002			 TBSTATE_PRESSED		 equ	 0002h
1  2704		  =0004			 TBSTATE_ENABLED		 equ	 0004h
1  2705		  =0008			 TBSTATE_HIDDEN			 equ	 0008h
1  2706		  =0010			 TBSTATE_INDETERMINATE		 equ	 0010h
1  2707		  =0020			 TBSTATE_WRAP			 equ	 0020h
1  2708					 ;
1  2709					 ;------------------------------------------------------------------------------
1  2710					 ;
1  2711					 ; ==============
1  2712					 ; toolbar styles
1  2713					 ; ==============
1  2714					 ;
1  2715		  =0000			 TBSTYLE_BUTTON			 equ	 0000h
1  2716		  =0001			 TBSTYLE_SEP			 equ	 0001h
1  2717		  =0002			 TBSTYLE_CHECK			 equ	 0002h
1  2718		  =0004			 TBSTYLE_GROUP			 equ	 0004h
1  2719		  =0100			 TBSTYLE_TOOLTIPS		 equ	 0100h
1  2720		  =0200			 TBSTYLE_WRAPABLE		 equ	 0200h
1  2721		  =0400			 TBSTYLE_ALTDRAG		 equ	 0400h
1  2722					 ;
1  2723		  =0006			 TBSTYLE_CHECKGROUP		 equ	 TBSTYLE_GROUP+TBSTYLE_CHECK
1  2724					 ;
1  2725					 ;------------------------------------------------------------------------------
1  2726					 ;
1  2727					 ; ===================
1  2728					 ; thread access flags
1  2729					 ; ===================
1  2730					 ;
1  2731		  =0001			 THREAD_TERMINATE		 equ	 0001h
1  2732		  =0002			 THREAD_SUSPEND_RESUME		 equ	 0002h
1  2733		  =0008			 THREAD_GET_CONTEXT		 equ	 0008h
1  2734		  =0010			 THREAD_SET_CONTEXT		 equ	 0010h
1  2735		  =0020			 THREAD_SET_INFORMATION		 equ	 0020h
1  2736		  =0040			 THREAD_QUERY_INFORMATION	 equ	 0040h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 49
pmScript.ASM



1  2737		  =0080			 THREAD_SET_THREAD_TOKEN	 equ	 0080h
1  2738		  =0100			 THREAD_IMPERSONATE		 equ	 0100h
1  2739		  =0200			 THREAD_DIRECT_IMPERSONATION	 equ	 0200h
1  2740					 ;
1  2741					 ;THREAD_ALL_ACCESS	  equ STANDARD_RIGHTS_REQUIRED+SYNCHRONIZE+03FFh
1  2742					 ;
1  2743					 ;------------------------------------------------------------------------------
1  2744					 ;
1  2745					 ; =================
1  2746					 ; thread priorities
1  2747					 ; =================
1  2748					 ;
1  2749		  =-000F		 THREAD_BASE_PRIORITY_IDLE	 equ	 -15
1  2750		  =-0002		 THREAD_BASE_PRIORITY_MIN	 equ	  -2
1  2751		  =0002			 THREAD_BASE_PRIORITY_MAX	 equ	   2
1  2752		  =000F			 THREAD_BASE_PRIORITY_LOWRT	 equ	  15
1  2753					 ;
1  2754					 THREAD_PRIORITY_LOWEST		 equ	 THREAD_BASE_PRIORITY_MIN
1  2755		  =-0001		 THREAD_PRIORITY_BELOW_NORMAL	 equ	 THREAD_PRIORITY_LOWEST+1
1  2756		  =0000			 THREAD_PRIORITY_NORMAL		 equ	   0
1  2757		  =0001			 THREAD_PRIORITY_ABOVE_NORMAL	 equ	 THREAD_PRIORITY_HIGHEST-1
1  2758					 THREAD_PRIORITY_HIGHEST	 equ	 THREAD_BASE_PRIORITY_MAX
1  2759					 ;
1  2760					 THREAD_PRIORITY_TIME_CRITICAL	 equ	 THREAD_BASE_PRIORITY_LOWRT
1  2761					 THREAD_PRIORITY_IDLE		 equ	 THREAD_BASE_PRIORITY_IDLE
1  2762					 ;
1  2763		  =-0001		 THREAD_PRIORITY_ERROR_RETURN	 equ	  -1
1  2764					 ;
1  2765					 ;------------------------------------------------------------------------------
1  2766					 ;
1  2767					 ; ==================
1  2768					 ; tree	view messages
1  2769					 ; ==================
1  2770					 ;
1  2771		  =1100			 TVM_FIRST			 equ	 1100h
1  2772					 TV_FIRST			 equ	 TVM_FIRST
1  2773					 ;
1  2774		  =1100			 TVM_INSERTITEMA		 equ	 TVM_FIRST+00
1  2775		  =1101			 TVM_DELETEITEM			 equ	 TVM_FIRST+01
1  2776		  =1102			 TVM_EXPAND			 equ	 TVM_FIRST+02
1  2777		  =1104			 TVM_GETITEMRECT		 equ	 TVM_FIRST+04
1  2778		  =1105			 TVM_GETCOUNT			 equ	 TVM_FIRST+05
1  2779		  =1106			 TVM_GETINDENT			 equ	 TVM_FIRST+06
1  2780		  =1107			 TVM_SETINDENT			 equ	 TVM_FIRST+07
1  2781		  =1108			 TVM_GETIMAGELIST		 equ	 TVM_FIRST+08
1  2782		  =1109			 TVM_SETIMAGELIST		 equ	 TVM_FIRST+09
1  2783		  =110A			 TVM_GETNEXTITEM		 equ	 TVM_FIRST+10
1  2784		  =110B			 TVM_SELECTITEM			 equ	 TVM_FIRST+11
1  2785		  =110C			 TVM_GETITEMA			 equ	 TVM_FIRST+12
1  2786		  =110D			 TVM_SETITEMA			 equ	 TVM_FIRST+13
1  2787		  =110E			 TVM_EDITLABELA			 equ	 TVM_FIRST+14
1  2788		  =110F			 TVM_GETEDITCONTROL		 equ	 TVM_FIRST+15
1  2789		  =1110			 TVM_GETVISIBLECOUNT		 equ	 TVM_FIRST+16
1  2790		  =1111			 TVM_HITTEST			 equ	 TVM_FIRST+17
1  2791		  =1112			 TVM_CREATEDRAGIMAGE		 equ	 TVM_FIRST+18
1  2792		  =1113			 TVM_SORTCHILDREN		 equ	 TVM_FIRST+19
1  2793		  =1114			 TVM_ENSUREVISIBLE		 equ	 TVM_FIRST+20
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 50
pmScript.ASM



1  2794		  =1115			 TVM_SORTCHILDRENCB		 equ	 TVM_FIRST+21
1  2795		  =1116			 TVM_ENDEDITLABELNOW		 equ	 TVM_FIRST+22
1  2796		  =1117			 TVM_GETISEARCHSTRINGA		 equ	 TVM_FIRST+23
1  2797					 ;
1  2798		  =1132			 TVM_INSERTITEMW		 equ	 TVM_FIRST+50
1  2799		  =113E			 TVM_GETITEMW			 equ	 TVM_FIRST+62
1  2800		  =113F			 TVM_SETITEMW			 equ	 TVM_FIRST+63
1  2801		  =1140			 TVM_GETISEARCHSTRINGW		 equ	 TVM_FIRST+64
1  2802		  =1141			 TVM_EDITLABELW			 equ	 TVM_FIRST+65
1  2803					 ;
1  2804					 TVM_INSERTITEM			 equ	 TVM_INSERTITEMA
1  2805					 TVM_GETITEM			 equ	 TVM_GETITEMA
1  2806					 TVM_SETITEM			 equ	 TVM_SETITEMA
1  2807					 TVM_GETISEARCHSTRING		 equ	 TVM_GETISEARCHSTRINGA
1  2808					 TVM_EDITLABEL			 equ	 TVM_EDITLABELA
1  2809					 ;
1  2810					 ;------------------------------------------------------------------------------
1  2811					 ;
1  2812					 ; =======================
1  2813					 ; tree	view notifications
1  2814					 ; =======================
1  2815					 ;
1  2816		  =-0190		 TVN_FIRST			 equ	 -400
1  2817		  =-01F3		 TVN_LAST			 equ	 TVN_FIRST-99
1  2818					 ;
1  2819		  =-0191		 TVN_SELCHANGINGA		 equ	 TVN_FIRST-01
1  2820		  =-0192		 TVN_SELCHANGEDA		 equ	 TVN_FIRST-02
1  2821		  =-0193		 TVN_GETDISPINFOA		 equ	 TVN_FIRST-03
1  2822		  =-0194		 TVN_SETDISPINFOA		 equ	 TVN_FIRST-04
1  2823		  =-0195		 TVN_ITEMEXPANDINGA		 equ	 TVN_FIRST-05
1  2824		  =-0196		 TVN_ITEMEXPANDEDA		 equ	 TVN_FIRST-06
1  2825		  =-0197		 TVN_BEGINDRAGA			 equ	 TVN_FIRST-07
1  2826		  =-0198		 TVN_BEGINRDRAGA		 equ	 TVN_FIRST-08
1  2827		  =-0199		 TVN_DELETEITEMA		 equ	 TVN_FIRST-09
1  2828		  =-019B		 TVN_ENDLABELEDITA		 equ	 TVN_FIRST-11
1  2829		  =-019C		 TVN_KEYDOWN			 equ	 TVN_FIRST-12
1  2830					 ;
1  2831		  =-01C2		 TVN_SELCHANGINGW		 equ	 TVN_FIRST-50
1  2832		  =-01C3		 TVN_SELCHANGEDW		 equ	 TVN_FIRST-51
1  2833		  =-01C4		 TVN_GETDISPINFOW		 equ	 TVN_FIRST-52
1  2834		  =-01C5		 TVN_SETDISPINFOW		 equ	 TVN_FIRST-53
1  2835		  =-01C6		 TVN_ITEMEXPANDINGW		 equ	 TVN_FIRST-54
1  2836		  =-01C7		 TVN_ITEMEXPANDEDW		 equ	 TVN_FIRST-55
1  2837		  =-01C8		 TVN_BEGINDRAGW			 equ	 TVN_FIRST-56
1  2838		  =-01C9		 TVN_BEGINRDRAGW		 equ	 TVN_FIRST-57
1  2839		  =-01CA		 TVN_DELETEITEMW		 equ	 TVN_FIRST-58
1  2840		  =-019A		 TVN_BEGINLABELEDITA		 equ	 TVN_FIRST-10
1  2841		  =-01CB		 TVN_BEGINLABELEDITW		 equ	 TVN_FIRST-59
1  2842		  =-01CC		 TVN_ENDLABELEDITW		 equ	 TVN_FIRST-60
1  2843					 ;
1  2844					 TVN_SELCHANGING		 equ	 TVN_SELCHANGINGA
1  2845					 TVN_SELCHANGED			 equ	 TVN_SELCHANGEDA
1  2846					 TVN_GETDISPINFO		 equ	 TVN_GETDISPINFOA
1  2847					 TVN_SETDISPINFO		 equ	 TVN_SETDISPINFOA
1  2848					 TVN_ITEMEXPANDING		 equ	 TVN_ITEMEXPANDINGA
1  2849					 TVN_ITEMEXPANDED		 equ	 TVN_ITEMEXPANDEDA
1  2850					 TVN_BEGINDRAG			 equ	 TVN_BEGINDRAGA
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 51
pmScript.ASM



1  2851					 TVN_BEGINRDRAG			 equ	 TVN_BEGINRDRAGA
1  2852					 TVN_DELETEITEM			 equ	 TVN_DELETEITEMA
1  2853					 TVN_BEGINLABELEDIT		 equ	 TVN_BEGINLABELEDITA
1  2854					 TVN_ENDLABELEDIT		 equ	 TVN_ENDLABELEDITA
1  2855					 ;
1  2856					 ;------------------------------------------------------------------------------
1  2857					 ;
1  2858					 ; ================
1  2859					 ; tree	view styles
1  2860					 ; ================
1  2861					 ;
1  2862		  =0001			 TVS_HASBUTTONS			 equ	 00000001h
1  2863		  =0002			 TVS_HASLINES			 equ	 00000002h
1  2864		  =0004			 TVS_LINESATROOT		 equ	 00000004h
1  2865		  =0008			 TVS_EDITLABELS			 equ	 00000008h
1  2866		  =0010			 TVS_DISABLEDRAGDROP		 equ	 00000010h
1  2867		  =0020			 TVS_SHOWSELALWAYS		 equ	 00000020h
1  2868					 ;
1  2869					 ;------------------------------------------------------------------------------
1  2870					 ;
1  2871					 ; ================
1  2872					 ; os platform id's
1  2873					 ; ================
1  2874					 ;
1  2875		  =0000			 VER_PLATFORM_WIN32s		 equ	 0
1  2876		  =0001			 VER_PLATFORM_WIN32_WINDOWS	 equ	 1
1  2877		  =0002			 VER_PLATFORM_WIN32_NT		 equ	 2
1  2878					 ;
1  2879					 ;------------------------------------------------------------------------------
1  2880					 ;
1  2881					 ; ====================
1  2882					 ; toolbar view	bitmaps
1  2883					 ; ====================
1  2884					 ;
1  2885		  =0000			 VIEW_LARGEICONS		 equ	  0
1  2886		  =0001			 VIEW_SMALLICONS		 equ	  1
1  2887		  =0002			 VIEW_LIST			 equ	  2
1  2888		  =0003			 VIEW_DETAILS			 equ	  3
1  2889		  =0004			 VIEW_SORTNAME			 equ	  4
1  2890		  =0005			 VIEW_SORTSIZE			 equ	  5
1  2891		  =0006			 VIEW_SORTDATE			 equ	  6
1  2892		  =0007			 VIEW_SORTTYPE			 equ	  7
1  2893		  =0008			 VIEW_PARENTFOLDER		 equ	  8
1  2894		  =0009			 VIEW_NETCONNECT		 equ	  9
1  2895		  =000A			 VIEW_NETDISCONNECT		 equ	 10
1  2896		  =000B			 VIEW_NEWFOLDER			 equ	 11
1  2897					 ;
1  2898					 ;------------------------------------------------------------------------------
1  2899					 ;
1  2900					 ; =====================
1  2901					 ; standard virtual keys
1  2902					 ; =====================
1  2903					 ;
1  2904		  =0001			 VK_LBUTTON			 equ	 01h
1  2905		  =0002			 VK_RBUTTON			 equ	 02h
1  2906		  =0003			 VK_CANCEL			 equ	 03h
1  2907		  =0004			 VK_MBUTTON			 equ	 04h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 52
pmScript.ASM



1  2908					 ;
1  2909		  =0008			 VK_BACK			 equ	 08h
1  2910		  =0009			 VK_TAB				 equ	 09h
1  2911		  =000C			 VK_CLEAR			 equ	 0Ch
1  2912		  =000D			 VK_RETURN			 equ	 0Dh
1  2913		  =0010			 VK_SHIFT			 equ	 10h
1  2914		  =0011			 VK_CONTROL			 equ	 11h
1  2915		  =0012			 VK_MENU			 equ	 12h
1  2916		  =0013			 VK_PAUSE			 equ	 13h
1  2917		  =0014			 VK_CAPITAL			 equ	 14h
1  2918		  =001B			 VK_ESCAPE			 equ	 1Bh
1  2919					 ;
1  2920		  =0020			 VK_SPACE			 equ	 20h
1  2921		  =0021			 VK_PRIOR			 equ	 21h
1  2922		  =0022			 VK_NEXT			 equ	 22h
1  2923		  =0023			 VK_END				 equ	 23h
1  2924		  =0024			 VK_HOME			 equ	 24h
1  2925		  =0025			 VK_LEFT			 equ	 25h
1  2926		  =0026			 VK_UP				 equ	 26h
1  2927		  =0027			 VK_RIGHT			 equ	 27h
1  2928		  =0028			 VK_DOWN			 equ	 28h
1  2929		  =0029			 VK_SELECT			 equ	 29h
1  2930		  =002A			 VK_PRINT			 equ	 2Ah
1  2931		  =002B			 VK_EXECUTE			 equ	 2Bh
1  2932		  =002C			 VK_SNAPSHOT			 equ	 2Ch
1  2933		  =002D			 VK_INSERT			 equ	 2Dh
1  2934		  =002E			 VK_DELETE			 equ	 2Eh
1  2935		  =002F			 VK_HELP			 equ	 2Fh
1  2936					 ;
1  2937		  =005B			 VK_LWIN			 equ	 5Bh
1  2938		  =005C			 VK_RWIN			 equ	 5Ch
1  2939		  =005D			 VK_APPS			 equ	 5Dh
1  2940					 ;
1  2941		  =0060			 VK_NUMPAD0			 equ	 60h
1  2942		  =0061			 VK_NUMPAD1			 equ	 61h
1  2943		  =0062			 VK_NUMPAD2			 equ	 62h
1  2944		  =0063			 VK_NUMPAD3			 equ	 63h
1  2945		  =0064			 VK_NUMPAD4			 equ	 64h
1  2946		  =0065			 VK_NUMPAD5			 equ	 65h
1  2947		  =0066			 VK_NUMPAD6			 equ	 66h
1  2948		  =0067			 VK_NUMPAD7			 equ	 67h
1  2949		  =0068			 VK_NUMPAD8			 equ	 68h
1  2950		  =0069			 VK_NUMPAD9			 equ	 69h
1  2951		  =006A			 VK_MULTIPLY			 equ	 6Ah
1  2952		  =006B			 VK_ADD				 equ	 6Bh
1  2953		  =006C			 VK_SEPARATOR			 equ	 6Ch
1  2954		  =006D			 VK_SUBTRACT			 equ	 6Dh
1  2955		  =006E			 VK_DECIMAL			 equ	 6Eh
1  2956		  =006F			 VK_DIVIDE			 equ	 6Fh
1  2957		  =0070			 VK_F1				 equ	 70h
1  2958		  =0071			 VK_F2				 equ	 71h
1  2959		  =0072			 VK_F3				 equ	 72h
1  2960		  =0073			 VK_F4				 equ	 73h
1  2961		  =0074			 VK_F5				 equ	 74h
1  2962		  =0075			 VK_F6				 equ	 75h
1  2963		  =0076			 VK_F7				 equ	 76h
1  2964		  =0077			 VK_F8				 equ	 77h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 53
pmScript.ASM



1  2965		  =0078			 VK_F9				 equ	 78h
1  2966		  =0079			 VK_F10				 equ	 79h
1  2967		  =007A			 VK_F11				 equ	 7Ah
1  2968		  =007B			 VK_F12				 equ	 7Bh
1  2969		  =007C			 VK_F13				 equ	 7Ch
1  2970		  =007D			 VK_F14				 equ	 7Dh
1  2971		  =007E			 VK_F15				 equ	 7Eh
1  2972		  =007F			 VK_F16				 equ	 7Fh
1  2973		  =0080			 VK_F17				 equ	 80h
1  2974		  =0081			 VK_F18				 equ	 81h
1  2975		  =0082			 VK_F19				 equ	 82h
1  2976		  =0083			 VK_F20				 equ	 83h
1  2977		  =0084			 VK_F21				 equ	 84h
1  2978		  =0085			 VK_F22				 equ	 85h
1  2979		  =0086			 VK_F23				 equ	 86h
1  2980		  =0087			 VK_F24				 equ	 87h
1  2981					 ;
1  2982		  =0090			 VK_NUMLOCK			 equ	 90h
1  2983		  =0091			 VK_SCROLL			 equ	 91h
1  2984					 ;
1  2985					 ;------------------------------------------------------------------------------
1  2986					 ;
1  2987					 ; ====================
1  2988					 ; special virtual keys
1  2989					 ; ====================
1  2990					 ;
1  2991		  =00A0			 VK_LSHIFT			 equ	 0A0h
1  2992		  =00A1			 VK_RSHIFT			 equ	 0A1h
1  2993		  =00A2			 VK_LCONTROL			 equ	 0A2h
1  2994		  =00A3			 VK_RCONTROL			 equ	 0A3h
1  2995		  =00A4			 VK_LMENU			 equ	 0A4h
1  2996		  =00A5			 VK_RMENU			 equ	 0A5h
1  2997					 ;
1  2998		  =00E5			 VK_PROCESSKEY			 equ	 0E5h
1  2999					 ;
1  3000		  =00F6			 VK_ATTN			 equ	 0F6h
1  3001		  =00F7			 VK_CRSEL			 equ	 0F7h
1  3002		  =00F8			 VK_EXSEL			 equ	 0F8h
1  3003		  =00F9			 VK_EREOF			 equ	 0F9h
1  3004		  =00FA			 VK_PLAY			 equ	 0FAh
1  3005		  =00FB			 VK_ZOOM			 equ	 0FBh
1  3006		  =00FC			 VK_NONAME			 equ	 0FCh
1  3007		  =00FD			 VK_PA1				 equ	 0FDh
1  3008		  =00FE			 VK_OEM_CLEAR			 equ	 0FEh
1  3009					 ;
1  3010					 ;------------------------------------------------------------------------------
1  3011					 ;
1  3012					 ; =================
1  3013					 ; wait	status codes
1  3014					 ; =================
1  3015					 ;
1  3016		  =-0001		 WAIT_FAILED			 equ	 -1
1  3017					 WAIT_OBJECT_0			 equ	 STATUS_WAIT_0
1  3018					 ;
1  3019					 WAIT_ABANDONED			 equ	 STATUS_ABANDONED_WAIT_0
1  3020					 WAIT_ABANDONED_0		 equ	 STATUS_ABANDONED_WAIT_0
1  3021					 ;
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 54
pmScript.ASM



1  3022					 WAIT_TIMEOUT			 equ	 STATUS_TIMEOUT
1  3023					 WAIT_IO_COMPLETION		 equ	 STATUS_USER_APC
1  3024					 STILL_ACTIVE			 equ	 STATUS_PENDING
1  3025					 ;
1  3026		  =0040			 MAXIMUM_WAIT_OBJECTS		 equ	  64
1  3027		  =007F			 MAXIMUM_SUSPEND_COUNT		 equ	 127
1  3028		  =-0001		 INFINITE			 equ	  -1
1  3029					 ;
1  3030					 ;------------------------------------------------------------------------------
1  3031					 ;
1  3032					 ; ===============
1  3033					 ; window messages
1  3034					 ; ===============
1  3035					 ;
1  3036		  =0000			 WM_NULL			 equ	 0000h
1  3037		  =0001			 WM_CREATE			 equ	 0001h
1  3038		  =0002			 WM_DESTROY			 equ	 0002h
1  3039		  =0003			 WM_MOVE			 equ	 0003h
1  3040		  =0005			 WM_SIZE			 equ	 0005h
1  3041		  =0006			 WM_ACTIVATE			 equ	 0006h
1  3042		  =0007			 WM_SETFOCUS			 equ	 0007h
1  3043		  =0008			 WM_KILLFOCUS			 equ	 0008h
1  3044		  =000A			 WM_ENABLE			 equ	 000Ah
1  3045		  =000B			 WM_SETREDRAW			 equ	 000Bh
1  3046		  =000C			 WM_SETTEXT			 equ	 000Ch
1  3047		  =000D			 WM_GETTEXT			 equ	 000Dh
1  3048		  =000E			 WM_GETTEXTLENGTH		 equ	 000Eh
1  3049		  =000F			 WM_PAINT			 equ	 000Fh
1  3050		  =0010			 WM_CLOSE			 equ	 0010h
1  3051		  =0011			 WM_QUERYENDSESSION		 equ	 0011h
1  3052		  =0012			 WM_QUIT			 equ	 0012h
1  3053		  =0013			 WM_QUERYOPEN			 equ	 0013h
1  3054		  =0014			 WM_ERASEBKGND			 equ	 0014h
1  3055		  =0015			 WM_SYSCOLORCHANGE		 equ	 0015h
1  3056		  =0016			 WM_ENDSESSION			 equ	 0016h
1  3057		  =0018			 WM_SHOWWINDOW			 equ	 0018h
1  3058		  =001A			 WM_WININICHANGE		 equ	 001Ah
1  3059					 WM_SETTINGCHANGE		 equ	 WM_WININICHANGE
1  3060		  =001B			 WM_DEVMODECHANGE		 equ	 001Bh
1  3061		  =001C			 WM_ACTIVATEAPP			 equ	 001Ch
1  3062		  =001D			 WM_FONTCHANGE			 equ	 001Dh
1  3063		  =001E			 WM_TIMECHANGE			 equ	 001Eh
1  3064		  =001F			 WM_CANCELMODE			 equ	 001Fh
1  3065		  =0020			 WM_SETCURSOR			 equ	 0020h
1  3066		  =0021			 WM_MOUSEACTIVATE		 equ	 0021h
1  3067		  =0022			 WM_CHILDACTIVATE		 equ	 0022h
1  3068		  =0023			 WM_QUEUESYNC			 equ	 0023h
1  3069		  =0024			 WM_GETMINMAXINFO		 equ	 0024h
1  3070		  =0026			 WM_PAINTICON			 equ	 0026h
1  3071		  =0027			 WM_ICONERASEBKGND		 equ	 0027h
1  3072		  =0028			 WM_NEXTDLGCTL			 equ	 0028h
1  3073		  =002A			 WM_SPOOLERSTATUS		 equ	 002Ah
1  3074		  =002B			 WM_DRAWITEM			 equ	 002Bh
1  3075		  =002C			 WM_MEASUREITEM			 equ	 002Ch
1  3076		  =002D			 WM_DELETEITEM			 equ	 002Dh
1  3077		  =002E			 WM_VKEYTOITEM			 equ	 002Eh
1  3078		  =002F			 WM_CHARTOITEM			 equ	 002Fh
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 55
pmScript.ASM



1  3079		  =0030			 WM_SETFONT			 equ	 0030h
1  3080		  =0031			 WM_GETFONT			 equ	 0031h
1  3081		  =0032			 WM_SETHOTKEY			 equ	 0032h
1  3082		  =0033			 WM_GETHOTKEY			 equ	 0033h
1  3083		  =0037			 WM_QUERYDRAGICON		 equ	 0037h
1  3084		  =0039			 WM_COMPAREITEM			 equ	 0039h
1  3085		  =0041			 WM_COMPACTING			 equ	 0041h
1  3086		  =0044			 WM_COMMNOTIFY			 equ	 0044h		 ;no longer suported
1  3087		  =0046			 WM_WINDOWPOSCHANGING		 equ	 0046h
1  3088		  =0047			 WM_WINDOWPOSCHANGED		 equ	 0047h
1  3089		  =0048			 WM_POWER			 equ	 0048h
1  3090		  =004A			 WM_COPYDATA			 equ	 004Ah
1  3091		  =004B			 WM_CANCELJOURNAL		 equ	 004Bh
1  3092		  =004E			 WM_NOTIFY			 equ	 004Eh
1  3093		  =0050			 WM_INPUTLANGCHANGEREQUEST	 equ	 0050h
1  3094		  =0051			 WM_INPUTLANGCHANGE		 equ	 0051h
1  3095		  =0052			 WM_TCARD			 equ	 0052h
1  3096		  =0053			 WM_HELP			 equ	 0053h
1  3097		  =0054			 WM_USERCHANGED			 equ	 0054h
1  3098		  =0055			 WM_NOTIFYFORMAT		 equ	 0055h
1  3099		  =007B			 WM_CONTEXTMENU			 equ	 007Bh
1  3100		  =007C			 WM_STYLECHANGING		 equ	 007Ch
1  3101		  =007D			 WM_STYLECHANGED		 equ	 007Dh
1  3102		  =007E			 WM_DISPLAYCHANGE		 equ	 007Eh
1  3103		  =007F			 WM_GETICON			 equ	 007Fh
1  3104		  =0080			 WM_SETICON			 equ	 0080h
1  3105		  =0081			 WM_NCCREATE			 equ	 0081h
1  3106		  =0082			 WM_NCDESTROY			 equ	 0082h
1  3107		  =0083			 WM_NCCALCSIZE			 equ	 0083h
1  3108		  =0084			 WM_NCHITTEST			 equ	 0084h
1  3109		  =0085			 WM_NCPAINT			 equ	 0085h
1  3110		  =0086			 WM_NCACTIVATE			 equ	 0086h
1  3111		  =0087			 WM_GETDLGCODE			 equ	 0087h
1  3112					 ;
1  3113		  =00A0			 WM_NCMOUSEMOVE			 equ	 00A0h
1  3114		  =00A1			 WM_NCLBUTTONDOWN		 equ	 00A1h
1  3115		  =00A2			 WM_NCLBUTTONUP			 equ	 00A2h
1  3116		  =00A3			 WM_NCLBUTTONDBLCLK		 equ	 00A3h
1  3117		  =00A4			 WM_NCRBUTTONDOWN		 equ	 00A4h
1  3118		  =00A5			 WM_NCRBUTTONUP			 equ	 00A5h
1  3119		  =00A6			 WM_NCRBUTTONDBLCLK		 equ	 00A6h
1  3120		  =00A7			 WM_NCMBUTTONDOWN		 equ	 00A7h
1  3121		  =00A8			 WM_NCMBUTTONUP			 equ	 00A8h
1  3122		  =00A9			 WM_NCMBUTTONDBLCLK		 equ	 00A9h
1  3123					 ;
1  3124		  =0100			 WM_KEYFIRST			 equ	 0100h
1  3125		  =0100			 WM_KEYDOWN			 equ	 0100h
1  3126		  =0101			 WM_KEYUP			 equ	 0101h
1  3127		  =0102			 WM_CHAR			 equ	 0102h
1  3128		  =0103			 WM_DEADCHAR			 equ	 0103h
1  3129		  =0104			 WM_SYSKEYDOWN			 equ	 0104h
1  3130		  =0105			 WM_SYSKEYUP			 equ	 0105h
1  3131		  =0106			 WM_SYSCHAR			 equ	 0106h
1  3132		  =0107			 WM_SYSDEADCHAR			 equ	 0107h
1  3133		  =0108			 WM_KEYLAST			 equ	 0108h
1  3134					 ;
1  3135		  =010D			 WM_IME_STARTCOMPOSITION	 equ	 010Dh
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 56
pmScript.ASM



1  3136		  =010E			 WM_IME_ENDCOMPOSITION		 equ	 010Eh
1  3137		  =010F			 WM_IME_COMPOSITION		 equ	 010Fh
1  3138		  =010F			 WM_IME_KEYLAST			 equ	 010Fh
1  3139		  =0110			 WM_INITDIALOG			 equ	 0110h
1  3140		  =0111			 WM_COMMAND			 equ	 0111h
1  3141		  =0112			 WM_SYSCOMMAND			 equ	 0112h
1  3142		  =0113			 WM_TIMER			 equ	 0113h
1  3143		  =0114			 WM_HSCROLL			 equ	 0114h
1  3144		  =0115			 WM_VSCROLL			 equ	 0115h
1  3145		  =0116			 WM_INITMENU			 equ	 0116h
1  3146		  =0117			 WM_INITMENUPOPUP		 equ	 0117h
1  3147		  =011F			 WM_MENUSELECT			 equ	 011Fh
1  3148		  =0120			 WM_MENUCHAR			 equ	 0120h
1  3149		  =0121			 WM_ENTERIDLE			 equ	 0121h
1  3150		  =0132			 WM_CTLCOLORMSGBOX		 equ	 0132h
1  3151		  =0133			 WM_CTLCOLOREDIT		 equ	 0133h
1  3152		  =0134			 WM_CTLCOLORLISTBOX		 equ	 0134h
1  3153		  =0135			 WM_CTLCOLORBTN			 equ	 0135h
1  3154		  =0136			 WM_CTLCOLORDLG			 equ	 0136h
1  3155		  =0137			 WM_CTLCOLORSCROLLBAR		 equ	 0137h
1  3156		  =0138			 WM_CTLCOLORSTATIC		 equ	 0138h
1  3157					 ;
1  3158		  =0200			 WM_MOUSEFIRST			 equ	 0200h
1  3159		  =0200			 WM_MOUSEMOVE			 equ	 0200h
1  3160		  =0201			 WM_LBUTTONDOWN			 equ	 0201h
1  3161		  =0202			 WM_LBUTTONUP			 equ	 0202h
1  3162		  =0203			 WM_LBUTTONDBLCLK		 equ	 0203h
1  3163		  =0204			 WM_RBUTTONDOWN			 equ	 0204h
1  3164		  =0205			 WM_RBUTTONUP			 equ	 0205h
1  3165		  =0206			 WM_RBUTTONDBLCLK		 equ	 0206h
1  3166		  =0207			 WM_MBUTTONDOWN			 equ	 0207h
1  3167		  =0208			 WM_MBUTTONUP			 equ	 0208h
1  3168		  =0209			 WM_MBUTTONDBLCLK		 equ	 0209h
1  3169		  =0209			 WM_MOUSELAST			 equ	 0209h
1  3170					 ;
1  3171		  =0210			 WM_PARENTNOTIFY		 equ	 0210h
1  3172		  =0211			 WM_ENTERMENULOOP		 equ	 0211h
1  3173		  =0212			 WM_EXITMENULOOP		 equ	 0212h
1  3174		  =0213			 WM_NEXTMENU			 equ	 0213h
1  3175		  =0214			 WM_SIZING			 equ	 0214h
1  3176		  =0215			 WM_CAPTURECHANGED		 equ	 0215h
1  3177		  =0216			 WM_MOVING			 equ	 0216h
1  3178		  =0218			 WM_POWERBROADCAST		 equ	 0218h
1  3179		  =0219			 WM_DEVICECHANGE		 equ	 0219h
1  3180		  =0220			 WM_MDICREATE			 equ	 0220h
1  3181		  =0221			 WM_MDIDESTROY			 equ	 0221h
1  3182		  =0222			 WM_MDIACTIVATE			 equ	 0222h
1  3183		  =0223			 WM_MDIRESTORE			 equ	 0223h
1  3184		  =0224			 WM_MDINEXT			 equ	 0224h
1  3185		  =0225			 WM_MDIMAXIMIZE			 equ	 0225h
1  3186		  =0226			 WM_MDITILE			 equ	 0226h
1  3187		  =0227			 WM_MDICASCADE			 equ	 0227h
1  3188		  =0228			 WM_MDIICONARRANGE		 equ	 0228h
1  3189		  =0229			 WM_MDIGETACTIVE		 equ	 0229h
1  3190		  =0230			 WM_MDISETMENU			 equ	 0230h
1  3191		  =0231			 WM_ENTERSIZEMOVE		 equ	 0231h
1  3192		  =0232			 WM_EXITSIZEMOVE		 equ	 0232h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 57
pmScript.ASM



1  3193		  =0233			 WM_DROPFILES			 equ	 0233h
1  3194		  =0234			 WM_MDIREFRESHMENU		 equ	 0234h
1  3195					 ;
1  3196		  =0281			 WM_IME_SETCONTEXT		 equ	 0281h
1  3197		  =0282			 WM_IME_NOTIFY			 equ	 0282h
1  3198		  =0283			 WM_IME_CONTROL			 equ	 0283h
1  3199		  =0284			 WM_IME_COMPOSITIONFULL		 equ	 0284h
1  3200		  =0285			 WM_IME_SELECT			 equ	 0285h
1  3201		  =0286			 WM_IME_CHAR			 equ	 0286h
1  3202		  =0290			 WM_IME_KEYDOWN			 equ	 0290h
1  3203		  =0291			 WM_IME_KEYUP			 equ	 0291h
1  3204					 ;
1  3205		  =02A1			 WM_MOUSEHOVER			 equ	 02A1h
1  3206					 ;
1  3207		  =0300			 WM_CUT				 equ	 0300h
1  3208		  =0301			 WM_COPY			 equ	 0301h
1  3209		  =0302			 WM_PASTE			 equ	 0302h
1  3210		  =0303			 WM_CLEAR			 equ	 0303h
1  3211		  =0304			 WM_UNDO			 equ	 0304h
1  3212		  =0305			 WM_RENDERFORMAT		 equ	 0305h
1  3213		  =0306			 WM_RENDERALLFORMATS		 equ	 0306h
1  3214		  =0307			 WM_DESTROYCLIPBOARD		 equ	 0307h
1  3215		  =0308			 WM_DRAWCLIPBOARD		 equ	 0308h
1  3216		  =0309			 WM_PAINTCLIPBOARD		 equ	 0309h
1  3217		  =030A			 WM_VSCROLLCLIPBOARD		 equ	 030Ah
1  3218		  =030B			 WM_SIZECLIPBOARD		 equ	 030Bh
1  3219		  =030C			 WM_ASKCBFORMATNAME		 equ	 030Ch
1  3220		  =030D			 WM_CHANGECBCHAIN		 equ	 030Dh
1  3221		  =030E			 WM_HSCROLLCLIPBOARD		 equ	 030Eh
1  3222		  =030F			 WM_QUERYNEWPALETTE		 equ	 030Fh
1  3223		  =0310			 WM_PALETTEISCHANGING		 equ	 0310h
1  3224		  =0311			 WM_PALETTECHANGED		 equ	 0311h
1  3225		  =0312			 WM_HOTKEY			 equ	 0312h
1  3226		  =0317			 WM_PRINT			 equ	 0317h
1  3227		  =0318			 WM_PRINTCLIENT			 equ	 0318h
1  3228					 ;
1  3229		  =0358			 WM_HANDHELDFIRST		 equ	 0358h
1  3230		  =035F			 WM_HANDHELDLAST		 equ	 035Fh
1  3231					 ;
1  3232		  =0360			 WM_AFXFIRST			 equ	 0360h
1  3233		  =037F			 WM_AFXLAST			 equ	 037Fh
1  3234					 ;
1  3235		  =0380			 WM_PENWINFIRST			 equ	 0380h
1  3236		  =038F			 WM_PENWINLAST			 equ	 038Fh
1  3237					 ;
1  3238		  =03E0			 WM_DDE_FIRST			 equ	 03E0h
1  3239					 WM_DDE_INITIATE		 equ	 WM_DDE_FIRST
1  3240		  =03E1			 WM_DDE_TERMINATE		 equ	 WM_DDE_FIRST+1
1  3241		  =03E2			 WM_DDE_ADVISE			 equ	 WM_DDE_FIRST+2
1  3242		  =03E3			 WM_DDE_UNADVISE		 equ	 WM_DDE_FIRST+3
1  3243		  =03E4			 WM_DDE_ACK			 equ	 WM_DDE_FIRST+4
1  3244		  =03E5			 WM_DDE_DATA			 equ	 WM_DDE_FIRST+5
1  3245		  =03E6			 WM_DDE_REQUEST			 equ	 WM_DDE_FIRST+6
1  3246		  =03E7			 WM_DDE_POKE			 equ	 WM_DDE_FIRST+7
1  3247		  =03E8			 WM_DDE_EXECUTE			 equ	 WM_DDE_FIRST+8
1  3248		  =03E8			 WM_DDE_LAST			 equ	 03E8h
1  3249					 ;
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 58
pmScript.ASM



1  3250		  =0400			 WM_USER			 equ	 0400h
1  3251		  =8000			 WM_APP				 equ	 8000h
1  3252					 ;
1  3253					 ;------------------------------------------------------------------------------
1  3254					 ;
1  3255					 ; ====================
1  3256					 ; WNet*() status codes
1  3257					 ; ====================
1  3258					 ;
1  3259					 WN_SUCCESS			 equ	 NO_ERROR
1  3260					 WN_NO_ERROR			 equ	 NO_ERROR
1  3261					 ;
1  3262					 WN_NOT_SUPPORTED		 equ	 ERROR_NOT_SUPPORTED
1  3263					 WN_CANCEL			 equ	 ERROR_CANCELLED
1  3264					 WN_RETRY			 equ	 ERROR_RETRY
1  3265					 WN_NET_ERROR			 equ	 ERROR_UNEXP_NET_ERR
1  3266					 WN_MORE_DATA			 equ	 ERROR_MORE_DATA
1  3267					 WN_BAD_POINTER			 equ	 ERROR_INVALID_ADDRESS
1  3268					 WN_BAD_VALUE			 equ	 ERROR_INVALID_PARAMETER
1  3269					 WN_BAD_USER			 equ	 ERROR_BAD_USERNAME
1  3270					 WN_BAD_PASSWORD		 equ	 ERROR_INVALID_PASSWORD
1  3271					 WN_ACCESS_DENIED		 equ	 ERROR_ACCESS_DENIED
1  3272					 WN_FUNCTION_BUSY		 equ	 ERROR_BUSY
1  3273					 WN_WINDOWS_ERROR		 equ	 ERROR_UNEXP_NET_ERR
1  3274					 WN_OUT_OF_MEMORY		 equ	 ERROR_NOT_ENOUGH_MEMORY
1  3275					 WN_NO_NETWORK			 equ	 ERROR_NO_NETWORK
1  3276					 WN_EXTENDED_ERROR		 equ	 ERROR_EXTENDED_ERROR
1  3277					 WN_BAD_LEVEL			 equ	 ERROR_INVALID_LEVEL
1  3278					 WN_BAD_HANDLE			 equ	 ERROR_INVALID_HANDLE
1  3279					 WN_NOT_INITIALIZING		 equ	 ERROR_ALREADY_INITIALIZED
1  3280					 WN_NO_MORE_DEVICES		 equ	 ERROR_NO_MORE_DEVICES
1  3281					 ;
1  3282					 WN_NOT_CONNECTED		 equ	 ERROR_NOT_CONNECTED
1  3283					 WN_OPEN_FILES			 equ	 ERROR_OPEN_FILES
1  3284					 WN_DEVICE_IN_USE		 equ	 ERROR_DEVICE_IN_USE
1  3285					 WN_BAD_NETNAME			 equ	 ERROR_BAD_NET_NAME
1  3286					 WN_BAD_LOCALNAME		 equ	 ERROR_BAD_DEVICE
1  3287					 WN_ALREADY_CONNECTED		 equ	 ERROR_ALREADY_ASSIGNED
1  3288					 WN_DEVICE_ERROR		 equ	 ERROR_GEN_FAILURE
1  3289					 WN_CONNECTION_CLOSED		 equ	 ERROR_CONNECTION_UNAVAIL
1  3290					 WN_NO_NET_OR_BAD_PATH		 equ	 ERROR_NO_NET_OR_BAD_PATH
1  3291					 WN_BAD_PROVIDER		 equ	 ERROR_BAD_PROVIDER
1  3292					 WN_CANNOT_OPEN_PROFILE		 equ	 ERROR_CANNOT_OPEN_PROFILE
1  3293					 WN_BAD_PROFILE			 equ	 ERROR_BAD_PROFILE
1  3294					 WN_BAD_DEV_TYPE		 equ	 ERROR_BAD_DEV_TYPE
1  3295					 WN_DEVICE_ALREADY_REMEMBERED	 equ	 ERROR_DEVICE_ALREADY_REMEMBERED
1  3296					 ;
1  3297					 WN_NO_MORE_ENTRIES		 equ	 ERROR_NO_MORE_ITEMS
1  3298					 WN_NOT_CONTAINER		 equ	 ERROR_NOT_CONTAINER
1  3299					 ;
1  3300					 WN_NOT_AUTHENTICATED		 equ	 ERROR_NOT_AUTHENTICATED
1  3301					 WN_NOT_LOGGED_ON		 equ	 ERROR_NOT_LOGGED_ON
1  3302					 WN_NOT_VALIDATED		 equ	 ERROR_NO_LOGON_SERVERS
1  3303					 ;
1  3304					 ;------------------------------------------------------------------------------
1  3305					 ;
1  3306					 ; =============
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 59
pmScript.ASM



1  3307					 ; network types
1  3308					 ; =============
1  3309					 ;
1  3310		  =00010000		 WNNC_NET_MSNET			 equ	 00010000h
1  3311		  =00020000		 WNNC_NET_LANMAN		 equ	 00020000h
1  3312		  =00030000		 WNNC_NET_NETWARE		 equ	 00030000h
1  3313		  =00040000		 WNNC_NET_VINES			 equ	 00040000h
1  3314		  =00050000		 WNNC_NET_10NET			 equ	 00050000h
1  3315		  =00060000		 WNNC_NET_LOCUS			 equ	 00060000h
1  3316		  =00070000		 WNNC_NET_SUN_PC_NFS		 equ	 00070000h
1  3317		  =00080000		 WNNC_NET_LANSTEP		 equ	 00080000h
1  3318		  =00090000		 WNNC_NET_9TILES		 equ	 00090000h
1  3319		  =000A0000		 WNNC_NET_LANTASTIC		 equ	 000A0000h
1  3320		  =000B0000		 WNNC_NET_AS400			 equ	 000B0000h
1  3321		  =000C0000		 WNNC_NET_FTP_NFS		 equ	 000C0000h
1  3322		  =000D0000		 WNNC_NET_PATHWORKS		 equ	 000D0000h
1  3323		  =000E0000		 WNNC_NET_LIFENET		 equ	 000E0000h
1  3324		  =000F0000		 WNNC_NET_POWERLAN		 equ	 000F0000h
1  3325		  =00100000		 WNNC_NET_BWNFS			 equ	 00100000h
1  3326		  =00110000		 WNNC_NET_COGENT		 equ	 00110000h
1  3327		  =00120000		 WNNC_NET_FARALLON		 equ	 00120000h
1  3328		  =00130000		 WNNC_NET_APPLETALK		 equ	 00130000h
1  3329					 ;
1  3330					 ;------------------------------------------------------------------------------
1  3331					 ;
1  3332					 ; =============
1  3333					 ; window styles
1  3334					 ; =============
1  3335					 ;
1  3336		  =0000			 WS_OVERLAPPED			 equ	 00000000h
1  3337		  =00010000		 WS_TABSTOP			 equ	 00010000h
1  3338		  =00020000		 WS_GROUP			 equ	 00020000h
1  3339		  =00010000		 WS_MAXIMIZEBOX			 equ	 00010000h
1  3340		  =00020000		 WS_MINIMIZEBOX			 equ	 00020000h
1  3341		  =00040000		 WS_THICKFRAME			 equ	 00040000h
1  3342		  =00080000		 WS_SYSMENU			 equ	 00080000h
1  3343		  =00100000		 WS_HSCROLL			 equ	 00100000h
1  3344		  =00200000		 WS_VSCROLL			 equ	 00200000h
1  3345		  =00400000		 WS_DLGFRAME			 equ	 00400000h
1  3346		  =00800000		 WS_BORDER			 equ	 00800000h
1  3347		  =01000000		 WS_MAXIMIZE			 equ	 01000000h
1  3348		  =02000000		 WS_CLIPCHILDREN		 equ	 02000000h
1  3349		  =04000000		 WS_CLIPSIBLINGS		 equ	 04000000h
1  3350		  =08000000		 WS_DISABLED			 equ	 08000000h
1  3351		  =10000000		 WS_VISIBLE			 equ	 10000000h
1  3352		  =20000000		 WS_MINIMIZE			 equ	 20000000h
1  3353		  =40000000		 WS_CHILD			 equ	 40000000h
1  3354		  =80000000		 WS_POPUP			 equ	 80000000h
1  3355					 ;
1  3356		  =00C00000		 WS_CAPTION			 equ	 WS_BORDER+WS_DLGFRAME
1  3357		  =80880000		 WS_POPUPWINDOW			 equ	 WS_POPUP+WS_BORDER+WS_SYSMENU
1  3358		  =10C80000		 WS_MODAL			 equ	 WS_CAPTION+WS_SYSMENU+WS_VISIBLE
1  3359		  =10C80000		 WS_MODELESS			 equ	 WS_CAPTION+WS_SYSMENU+WS_VISIBLE
1  3360		  =50000000		 WS_CONTROL			 equ	 WS_CHILD+WS_VISIBLE
1  3361		  =00CF0000		 WS_OVERLAPPEDWINDOW	 equ WS_OVERLAPPED+WS_CAPTION+WS_SYSMENU+WS_THICKFRAME		    +
   3362					 +WS_MINIMIZEBOX+WS_MAXIMIZEBOX
1  3363					 ;
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 60
pmScript.ASM



1  3364					 WS_TILED			 equ	 WS_OVERLAPPED
1  3365					 WS_CHILDWINDOW			 equ	 WS_CHILD
1  3366					 WS_ICONIC			 equ	 WS_MINIMIZE
1  3367					 WS_SIZEBOX			 equ	 WS_THICKFRAME
1  3368					 WS_TILEDWINDOW			 equ	 WS_OVERLAPPEDWINDOW
1  3369					 ;
1  3370					 ;------------------------------------------------------------------------------
1  3371					 ;
1  3372					 ; ======================
1  3373					 ; extended window styles
1  3374					 ; ======================
1  3375					 ;
1  3376		  =0000			 WS_EX_NONE			 equ	 00000000h
1  3377		  =0001			 WS_EX_DLGMODALFRAME		 equ	 00000001h
1  3378		  =0004			 WS_EX_NOPARENTNOTIFY		 equ	 00000004h
1  3379		  =0008			 WS_EX_TOPMOST			 equ	 00000008h
1  3380		  =0010			 WS_EX_ACCEPTFILES		 equ	 00000010h
1  3381		  =0020			 WS_EX_TRANSPARENT		 equ	 00000020h
1  3382		  =0040			 WS_EX_MDICHILD			 equ	 00000040h
1  3383		  =0080			 WS_EX_TOOLWINDOW		 equ	 00000080h
1  3384		  =0100			 WS_EX_WINDOWEDGE		 equ	 00000100h
1  3385		  =0200			 WS_EX_CLIENTEDGE		 equ	 00000200h
1  3386		  =0400			 WS_EX_CONTEXTHELP		 equ	 00000400h
1  3387		  =1000			 WS_EX_RIGHT			 equ	 00001000h
1  3388		  =0000			 WS_EX_LEFT			 equ	 00000000h
1  3389		  =2000			 WS_EX_RTLREADING		 equ	 00002000h
1  3390		  =0000			 WS_EX_LTRREADING		 equ	 00000000h
1  3391		  =4000			 WS_EX_LEFTSCROLLBAR		 equ	 00004000h
1  3392		  =0000			 WS_EX_RIGHTSCROLLBAR		 equ	 00000000h
1  3393		  =00010000		 WS_EX_CONTROLPARENT		 equ	 00010000h
1  3394		  =00020000		 WS_EX_STATICEDGE		 equ	 00020000h
1  3395		  =00040000		 WS_EX_APPWINDOW		 equ	 00040000h
1  3396					 ;
1  3397		  =0300			 WS_EX_OVERLAPPEDWINDOW		 equ	 00000300h
1  3398		  =0188			 WS_EX_PALETTEWINDOW		 equ	 00000188h
1  3399					 ;
1  3400					 ;------------------------------------------------------------------------------
1  3401					 ;
1  3402					 ; ================
1  3403					 ; background modes
1  3404					 ; ================
1  3405					 ;
1  3406		  =0001			 TRANSPARENT			 equ	 1
1  3407		  =0002			 OPAQUE				 equ	 2
1  3408		  =0002			 BKMODE_LAST			 equ	 2
1  3409					 ;
1  3410					 ;------------------------------------------------------------------------------
1  3411					 ;
1  3412					 ; ====================
1  3413					 ; CreateFile()	actions
1  3414					 ; ====================
1  3415					 ;
1  3416		  =0001			 CREATE_NEW			 equ	 1
1  3417		  =0002			 CREATE_ALWAYS			 equ	 2
1  3418		  =0003			 OPEN_EXISTING			 equ	 3
1  3419		  =0004			 OPEN_ALWAYS			 equ	 4
1  3420		  =0005			 TRUNCATE_EXISTING		 equ	 5
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 61
pmScript.ASM



1  3421					 ;
1  3422					 ;------------------------------------------------------------------------------
1  3423					 ;
1  3424					 ; =====================
1  3425					 ; CreateProcess() flags
1  3426					 ; =====================
1  3427					 ;
1  3428		  =0001			 DEBUG_PROCESS			 equ	 00000001h
1  3429		  =0002			 DEBUG_ONLY_THIS_PROCESS	 equ	 00000002h
1  3430		  =0004			 CREATE_SUSPENDED		 equ	 00000004h
1  3431		  =0008			 DETACHED_PROCESS		 equ	 00000008h
1  3432		  =0010			 CREATE_NEW_CONSOLE		 equ	 00000010h
1  3433		  =0020			 NORMAL_PRIORITY_CLASS		 equ	 00000020h
1  3434		  =0040			 IDLE_PRIORITY_CLASS		 equ	 00000040h
1  3435		  =0080			 HIGH_PRIORITY_CLASS		 equ	 00000080h
1  3436		  =0100			 REALTIME_PRIORITY_CLASS	 equ	 00000100h
1  3437					 ;
1  3438		  =0200			 CREATE_NEW_PROCESS_GROUP	 equ	 00000200h
1  3439		  =0400			 CREATE_UNICODE_ENVIRONMENT	 equ	 00000400h
1  3440		  =0800			 CREATE_SEPARATE_WOW_VDM	 equ	 00000800h
1  3441		  =1000			 CREATE_SHARED_WOW_VDM		 equ	 00001000h
1  3442		  =04000000		 CREATE_DEFAULT_ERROR_MODE	 equ	 04000000h
1  3443		  =08000000		 CREATE_NO_WINDOW		 equ	 08000000h
1  3444					 ;
1  3445		  =10000000		 PROFILE_USER			 equ	 10000000h
1  3446		  =20000000		 PROFILE_KERNEL			 equ	 20000000h
1  3447		  =40000000		 PROFILE_SERVER			 equ	 40000000h
1  3448					 ;
1  3449					 ;------------------------------------------------------------------------------
1  3450					 ;
1  3451					 ; ===============
1  3452					 ; gdi error codes
1  3453					 ; ===============
1  3454					 ;
1  3455		  =-0001		 GDI_ERROR			 equ	 -1
1  3456		  =-0001		 HGDI_ERROR			 equ	 -1
1  3457					 ;
1  3458					 ;------------------------------------------------------------------------------
1  3459					 ;
1  3460					 ; =================
1  3461					 ; memory attributes
1  3462					 ; =================
1  3463					 ;
1  3464		  =0001			 PAGE_NOACCESS			 equ	 00000001h
1  3465		  =0002			 PAGE_READONLY			 equ	 00000002h
1  3466		  =0004			 PAGE_READWRITE			 equ	 00000004h
1  3467		  =0008			 PAGE_WRITECOPY			 equ	 00000008h
1  3468		  =0010			 PAGE_EXECUTE			 equ	 00000010h
1  3469		  =0020			 PAGE_EXECUTE_READ		 equ	 00000020h
1  3470		  =0040			 PAGE_EXECUTE_READWRITE		 equ	 00000040h
1  3471		  =0080			 PAGE_EXECUTE_WRITECOPY		 equ	 00000080h
1  3472		  =0100			 PAGE_GUARD			 equ	 00000100h
1  3473		  =0200			 PAGE_NOCACHE			 equ	 00000200h
1  3474					 ;
1  3475		  =1000			 MEM_COMMIT			 equ	 00001000h
1  3476		  =2000			 MEM_RESERVE			 equ	 00002000h
1  3477		  =4000			 MEM_DECOMMIT			 equ	 00004000h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 62
pmScript.ASM



1  3478		  =8000			 MEM_RELEASE			 equ	 00008000h
1  3479		  =00010000		 MEM_FREE			 equ	 00010000h
1  3480		  =00020000		 MEM_PRIVATE			 equ	 00020000h
1  3481		  =00040000		 MEM_MAPPED			 equ	 00040000h
1  3482		  =00100000		 MEM_TOP_DOWN			 equ	 00100000h
1  3483					 ;
1  3484		  =00800000		 SEC_FILE			 equ	 00800000h
1  3485		  =01000000		 SEC_IMAGE			 equ	 01000000h
1  3486		  =04000000		 SEC_RESERVE			 equ	 04000000h
1  3487		  =08000000		 SEC_COMMIT			 equ	 08000000h
1  3488		  =10000000		 SEC_NOCACHE			 equ	 10000000h
1  3489					 ;
1  3490					 MEM_IMAGE			 equ	 SEC_IMAGE
1  3491					 ;
1  3492		  =0001			 SECTION_QUERY			 equ	 00000001h
1  3493		  =0002			 SECTION_MAP_WRITE		 equ	 00000002h
1  3494		  =0004			 SECTION_MAP_READ		 equ	 00000004h
1  3495		  =0008			 SECTION_MAP_EXECUTE		 equ	 00000008h
1  3496		  =0010			 SECTION_EXTEND_SIZE		 equ	 00000010h
1  3497					 ;
1  3498					 ;SECTION_ALL_ACCESS	  equ STANDARD_RIGHTS_REQUIRED+SECTION_QUERY+SECTION_MAP_WRITE	    +
   3499					 +SECTION_MAP_READ+SECTION_MAP_EXECUTE+SECTION_EXTEND_SIZE
1  3500					 ;
1  3501					 FILE_MAP_COPY			 equ	 SECTION_QUERY
1  3502					 FILE_MAP_WRITE			 equ	 SECTION_MAP_WRITE
1  3503					 FILE_MAP_READ			 equ	 SECTION_MAP_READ
1  3504					 FILE_MAP_ALL_ACCESS		 equ	 SECTION_ALL_ACCESS
1  3505					 ;
1  3506					 ;------------------------------------------------------------------------------
1  3507					 ;
1  3508					 ; ================
1  3509					 ; PolyFill() modes
1  3510					 ; ================
1  3511					 ;
1  3512		  =0001			 ALTERNATE			 equ	 1
1  3513		  =0002			 WINDING			 equ	 2
1  3514		  =0002			 POLYFILL_LAST			 equ	 2
1  3515					 ;
1  3516					 ;------------------------------------------------------------------------------
1  3517					 ;
1  3518					 ; ============
1  3519					 ; region flags
1  3520					 ; ============
1  3521					 ;
1  3522		  =0000			 ERROR				 equ	 0
1  3523		  =0001			 NULLREGION			 equ	 1
1  3524		  =0002			 SIMPLEREGION			 equ	 2
1  3525		  =0003			 COMPLEXREGION			 equ	 3
1  3526					 RGN_ERROR			 equ	 ERROR
1  3527					 ;
1  3528					 ;------------------------------------------------------------------------------
1  3529					 ;
1  3530					 ; =====================
1  3531					 ; standard access types
1  3532					 ; =====================
1  3533					 ;
1  3534		  =00010000		 DELETE				 equ	 00010000h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 63
pmScript.ASM



1  3535		  =00020000		 READ_CONTROL			 equ	 00020000h
1  3536		  =00040000		 WRITE_DAC			 equ	 00040000h
1  3537		  =00080000		 WRITE_OWNER			 equ	 00080000h
1  3538		  =00100000		 SYNCHRONIZE			 equ	 00100000h
1  3539					 ;
1  3540		  =FFFF			 SPECIFIC_RIGHTS_ALL		 equ	 0000FFFFh
1  3541		  =000F0000		 STANDARD_RIGHTS_REQUIRED	 equ	 000F0000h
1  3542		  =001F0000		 STANDARD_RIGHTS_ALL		 equ	 001F0000h
1  3543					 ;
1  3544					 STANDARD_RIGHTS_READ		 equ	 READ_CONTROL
1  3545					 STANDARD_RIGHTS_WRITE		 equ	 READ_CONTROL
1  3546					 STANDARD_RIGHTS_EXECUTE	 equ	 READ_CONTROL
1  3547					 ;
1  3548					 ;------------------------------------------------------------------------------
1  3549					 ;
1  3550					 ; =====================
1  3551					 ; stock logical objects
1  3552					 ; =====================
1  3553					 ;
1  3554		  =0000			 WHITE_BRUSH			 equ	  0
1  3555		  =0001			 LTGRAY_BRUSH			 equ	  1
1  3556		  =0002			 GRAY_BRUSH			 equ	  2
1  3557		  =0003			 DKGRAY_BRUSH			 equ	  3
1  3558		  =0004			 BLACK_BRUSH			 equ	  4
1  3559		  =0005			 NULL_BRUSH			 equ	  5
1  3560		  =0006			 WHITE_PEN			 equ	  6
1  3561		  =0007			 BLACK_PEN			 equ	  7
1  3562		  =0008			 NULL_PEN			 equ	  8
1  3563		  =000A			 OEM_FIXED_FONT			 equ	 10
1  3564		  =000B			 ANSI_FIXED_FONT		 equ	 11
1  3565		  =000C			 ANSI_VAR_FONT			 equ	 12
1  3566		  =000D			 SYSTEM_FONT			 equ	 13
1  3567		  =000E			 DEVICE_DEFAULT_FONT		 equ	 14
1  3568		  =000F			 DEFAULT_PALETTE		 equ	 15
1  3569		  =0010			 SYSTEM_FIXED_FONT		 equ	 16
1  3570		  =0011			 DEFAULT_GUI_FONT		 equ	 17
1  3571					 ;
1  3572					 HOLLOW_BRUSH			 equ	 NULL_BRUSH
1  3573					 ;
1  3574					 ;------------------------------------------------------------------------------
1  3575					 ;
1  3576					 ; ==================
1  3577					 ; StretchBlt()	modes
1  3578					 ; ==================
1  3579					 ;
1  3580		  =0001			 BLACKONWHITE			 equ	 1
1  3581		  =0002			 WHITEONBLACK			 equ	 2
1  3582		  =0003			 COLORONCOLOR			 equ	 3
1  3583		  =0004			 HALFTONE			 equ	 4
1  3584		  =0004			 MAXSTRETCHBLTMODE		 equ	 4
1  3585					 ;
1  3586					 STRETCH_ANDSCANS		 equ	 BLACKONWHITE
1  3587					 STRETCH_ORSCANS		 equ	 WHITEONBLACK
1  3588					 STRETCH_DELETESCANS		 equ	 COLORONCOLOR
1  3589					 STRETCH_HALFTONE		 equ	 HALFTONE
1  3590					 ;
1  3591					 ;------------------------------------------------------------------------------
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 64
pmScript.ASM



1  3592					 ;
1  3593					 ; =========================
1  3594					 ; ternary raster operations
1  3595					 ; =========================
1  3596					 ;
1  3597		  =00CC0020		 SRCCOPY			 equ	 00CC0020h	 ;dest = src
1  3598		  =00EE0086		 SRCPAINT			 equ	 00EE0086h	 ;dest = src or	dest
1  3599		  =008800C6		 SRCAND				 equ	 008800C6h	 ;dest = src and dest
1  3600		  =00660046		 SRCINVERT			 equ	 00660046h	 ;dest = src xor dest
1  3601		  =00440328		 SRCERASE			 equ	 00440328h	 ;dest = src and -dest
1  3602		  =00330008		 NOTSRCCOPY			 equ	 00330008h	 ;dest = -src
1  3603		  =001100A6		 NOTSRCERASE			 equ	 001100A6h	 ;dest = -src and -dest
1  3604		  =00C000CA		 MERGECOPY			 equ	 00C000CAh	 ;dest = src and pat
1  3605		  =00BB0226		 MERGEPAINT			 equ	 00BB0226h	 ;dest = -src or dest
1  3606		  =00F00021		 PATCOPY			 equ	 00F00021h	 ;dest = pat
1  3607		  =00FB0A09		 PATPAINT			 equ	 00FB0A09h	 ;dest = DPSnoo
1  3608		  =005A0049		 PATINVERT			 equ	 005A0049h	 ;dest = pat xor dest
1  3609		  =00550009		 DSTINVERT			 equ	 00550009h	 ;dest = -dest
1  3610		  =0042			 BLACKNESS			 equ	 00000042h	 ;dest = black
1  3611		  =00FF0062		 WHITENESS			 equ	 00FF0062h	 ;dest = white
1  3612					 ;
1  3613					 ;;==============================================================================
1  3614					 ;
1  3615					 ;	 STRUCTURES
1  3616					 ;
1  3617					 ;==============================================================================
1  3618					 ;
1  3619	00000000			 STARTUPINFOA		 STRUCT
1  3620	00000000  01*(????????)			 cb		 DWORD		 ?
1  3621	00000004  01*(????????)			 lpReserved	 LPSTR		 ?
1  3622	00000008  01*(????????)			 lpDesktop	 LPSTR		 ?
1  3623	0000000C  01*(????????)			 lpTitle	 LPSTR		 ?
1  3624	00000010  01*(????????)			 dwX		 DWORD		 ?
1  3625	00000014  01*(????????)			 dwY		 DWORD		 ?
1  3626	00000018  01*(????????)			 dwXSize	 DWORD		 ?
1  3627	0000001C  01*(????????)			 dwYSize	 DWORD		 ?
1  3628	00000020  01*(????????)			 dwXCountChars	 DWORD		 ?
1  3629	00000024  01*(????????)			 dwYCountChars	 DWORD		 ?
1  3630	00000028  01*(????????)			 dwFillAttribute DWORD		 ?
1  3631	0000002C  01*(????????)			 dwFlags	 DWORD		 ?
1  3632	00000030  01*(????)			 wShowWindow	 WORD		 ?
1  3633	00000032  01*(????)			 cbReserved2	 WORD		 ?
1  3634	00000034  01*(????????)			 lpReserved2	 LPBYTE		 ?
1  3635	00000038  01*(????????)			 hStdInput	 HANDLE		 ?
1  3636	0000003C  01*(????????)			 hStdOutput	 HANDLE		 ?
1  3637	00000040  01*(????????)			 hStdError	 HANDLE		 ?
1  3638	00000044			 STARTUPINFOA		 ENDS
1  3639
1  3640
1  3641
1  3642
1  3643					 ;
1  3644	00000000			 BITMAPFILEHEADER	 struct
1  3645	00000000  01*(0000)		 bf_bfType		 WORD	   0		 ;file type
1  3646	00000002  01*(00000000)		 bf_bfSize		 DWORD	   0		 ;file size
1  3647	00000006  01*(0000)		 bf_bfReserved1		 WORD	   0		 ;(reserved)
1  3648	00000008  01*(0000)		 bf_bfReserved2		 WORD	   0		 ;(reserved)
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 65
pmScript.ASM



1  3649	0000000A  01*(00000000)		 bf_bfOffBits		 DWORD	   0		 ;data offset
1  3650	0000000E			 BITMAPFILEHEADER	 ends
1  3651		  =000E			 BITMAPFILEHEADER_	 equ	   2+4+2+2+4
1  3652					 ;
1  3653					 ;------------------------------------------------------------------------------
1  3654					 ;
1  3655	00000000			 BITMAPINFOHEADER	 struct
1  3656	00000000  01*(00000000)		 bi_biSize		 DWORD	   0		 ;structure size
1  3657	00000004  01*(00000000)		 bi_biWidth		 LONG	   0		 ;bitmap width
1  3658	00000008  01*(00000000)		 bi_biHeight		 LONG	   0		 ;bitmap height
1  3659	0000000C  01*(0000)		 bi_biPlanes		 WORD	   0		 ;number of color planes
1  3660	0000000E  01*(0000)		 bi_biBitCount		 WORD	   0		 ;number of bits per pixel
1  3661	00000010  01*(00000000)		 bi_biCompression	 DWORD	   0		 ;compression type
1  3662	00000014  01*(00000000)		 bi_biSizeImage		 DWORD	   0		 ;number of data bytes
1  3663	00000018  01*(00000000)		 bi_biXPelsPerMeter	 LONG	   0		 ;horizontal resolution
1  3664	0000001C  01*(00000000)		 bi_biYPelsPerMeter	 LONG	   0		 ;vertical resolution
1  3665	00000020  01*(00000000)		 bi_biClrUsed		 DWORD	   0		 ;number of used colors
1  3666	00000024  01*(00000000)		 bi_biClrImportant	 DWORD	   0		 ;number of important colors
1  3667	00000028			 BITMAPINFOHEADER	 ends
1  3668		  =0028			 BITMAPINFOHEADER_	 equ	   4+4+4+2+2+4+4+4+4+4+4
1  3669					 ;
1  3670					 ;------------------------------------------------------------------------------
1  3671					 ;
1  3672	00000000			 BITMAP			 struct
1  3673	00000000  01*(00000000)		 bm_bmType		 LONG	   0		 ;bitmap type
1  3674	00000004  01*(00000000)		 bm_bmWidth		 LONG	   0		 ;bitmap width
1  3675	00000008  01*(00000000)		 bm_bmHeight		 LONG	   0		 ;bitmap height
1  3676	0000000C  01*(00000000)		 bm_bmWidthBytes	 LONG	   0		 ;bytes	per scan line
1  3677	00000010  01*(0000)		 bm_bmPlanes		 WORD	   0		 ;number of color planes
1  3678	00000012  01*(0000)		 bm_bmBitsPixel		 WORD	   0		 ;number of bits per pixel
1  3679	00000014  01*(00000000)		 bm_bmBits		 LPVOID	   0		 ;data pointer
1  3680	00000018			 BITMAP			 ends
1  3681		  =0018			 BITMAP_		 equ	   4+4+4+4+2+2+4
1  3682					 ;
1  3683					 ;------------------------------------------------------------------------------
1  3684					 ;
1  3685	00000000			 COPYDATASTRUCT		 struct
1  3686	00000000  01*(00000000)		 cd_dwData		 DWORD	   0		 ;32-bit data
1  3687	00000004  01*(00000000)		 cd_cbData		 DWORD	   0		 ;number of data bytes
1  3688	00000008  01*(00000000)		 cd_lpData		 PVOID	   0		 ;data bytes
1  3689	0000000C			 COPYDATASTRUCT		 ends
1  3690		  =000C			 COPYDATASTRUCT_	 equ	   4+4+4
1  3691					 ;
1  3692					 ;------------------------------------------------------------------------------
1  3693					 ;
1  3694	00000000			 CONTEXT		 struct
1  3695					 ;
1  3696	00000000  01*(00000000)		 cx_ContextFlags	 DWORD	   0		 ;context flags
1  3697					 ;
1  3698					 ; CONTEXT_DEBUG_REGISTERS
1  3699					 ;
1  3700	00000004  01*(00000000)		 cx_Dr0			 DWORD	   0		 ;debug	register #0
1  3701	00000008  01*(00000000)		 cx_Dr1			 DWORD	   0		 ;debug	register #1
1  3702	0000000C  01*(00000000)		 cx_Dr2			 DWORD	   0		 ;debug	register #2
1  3703	00000010  01*(00000000)		 cx_Dr3			 DWORD	   0		 ;debug	register #3
1  3704	00000014  01*(00000000)		 cx_Dr6			 DWORD	   0		 ;debug	register #6
1  3705	00000018  01*(00000000)		 cx_Dr7			 DWORD	   0		 ;debug	register #7
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 66
pmScript.ASM



1  3706					 ;
1  3707					 ; CONTEXT_FLOATING_POINT
1  3708					 ;
1  3709	0000001C  01*(00000000)		 cx_ControlWord		 DWORD	   0		 ;fpu context
1  3710	00000020  01*(00000000)		 cx_StatusWord		 DWORD	   0
1  3711	00000024  01*(00000000)		 cx_TagWord		 DWORD	   0
1  3712	00000028  01*(00000000)		 cx_ErrorOffset		 DWORD	   0
1  3713	0000002C  01*(00000000)		 cx_ErrorSelector	 DWORD	   0
1  3714	00000030  01*(00000000)		 cx_DataOffset		 DWORD	   0
1  3715	00000034  01*(00000000)		 cx_DataSelector	 DWORD	   0
1  3716	00000038  01*(50*(00))		 cx_RegisterArea	 BYTE	   SIZE_OF_80387_REGISTERS dup (0)
1  3717	00000088  01*(00000000)		 cx_Cr0NpxState		 DWORD	   0
1  3718					 ;
1  3719					 ; CONTEXT_SEGMENTS
1  3720					 ;
1  3721	0000008C  01*(00000000)		 cx_SegGs		 DWORD	   0		 ;gs register
1  3722	00000090  01*(00000000)		 cx_SegFs		 DWORD	   0		 ;fs register
1  3723	00000094  01*(00000000)		 cx_SegEs		 DWORD	   0		 ;es register
1  3724	00000098  01*(00000000)		 cx_SegDs		 DWORD	   0		 ;ds register
1  3725					 ;
1  3726					 ; CONTEXT_INTEGER
1  3727					 ;
1  3728	0000009C  01*(00000000)		 cx_Edi			 DWORD	   0		 ;edi register
1  3729	000000A0  01*(00000000)		 cx_Esi			 DWORD	   0		 ;esi register
1  3730	000000A4  01*(00000000)		 cx_Ebx			 DWORD	   0		 ;ebx register
1  3731	000000A8  01*(00000000)		 cx_Edx			 DWORD	   0		 ;edx register
1  3732	000000AC  01*(00000000)		 cx_Ecx			 DWORD	   0		 ;ecx register
1  3733	000000B0  01*(00000000)		 cx_Eax			 DWORD	   0		 ;eax register
1  3734					 ;
1  3735					 ; CONTEXT_CONTROL
1  3736					 ;
1  3737	000000B4  01*(00000000)		 cx_Ebp			 DWORD	   0		 ;ebp register
1  3738	000000B8  01*(00000000)		 cx_Eip			 DWORD	   0		 ;eip register
1  3739	000000BC  01*(00000000)		 cx_SegCs		 DWORD	   0		 ;cs register
1  3740	000000C0  01*(00000000)		 cx_EFlags		 DWORD	   0		 ;eflags register
1  3741	000000C4  01*(00000000)		 cx_Esp			 DWORD	   0		 ;esp register
1  3742	000000C8  01*(00000000)		 cx_SegSs		 DWORD	   0		 ;ss register
1  3743					 ;
1  3744	000000CC			 CONTEXT		 ends
1  3745					 ;
1  3746		  =0004			 CONTEXT_FLAGS_			 equ	 4
1  3747		  =0018			 CONTEXT_DEBUG_REGISTERS_	 equ	 4+4+4+4+4+4
1  3748		  =0070			 CONTEXT_FLOATING_POINT_	 equ	 4+4+4+4+4+4+4+SIZE_OF_80387_REGISTERS+4
1  3749		  =0010			 CONTEXT_SEGMENTS_		 equ	 4+4+4+4
1  3750		  =0018			 CONTEXT_INTEGER_		 equ	 4+4+4+4+4+4
1  3751		  =0018			 CONTEXT_CONTROL_		 equ	 4+4+4+4+4+4
1  3752					 ;
1  3753		  =0044			 CONTEXT_FULL_			 equ	 CONTEXT_FLAGS_+\
   3754										 CONTEXT_SEGMENTS_+\
   3755										 CONTEXT_INTEGER_+\
   3756										 CONTEXT_CONTROL_
1  3757					 ;
1  3758					 ;------------------------------------------------------------------------------
1  3759					 ;
1  3760	00000000			 DIALOGATTRIBUTES	 struct
1  3761	00000000  01*(00000000)		 da_Palette		 DWORD	   0		 ;palette pointer
1  3762	00000004  01*(00000000)		 da_TextBox		 DWORD	   0		 ;text box list	pointer
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 67
pmScript.ASM



1  3763	00000008			 DIALOGATTRIBUTES	 ends
1  3764		  =0008			 DIALOGATTRIBUTES_	 equ	   4+4
1  3765					 ;
1  3766					 ;------------------------------------------------------------------------------
1  3767					 ;
1  3768	00000000			 DIALOGPALETTE		 struct
1  3769	00000000  01*(00000000)		 dp_DlgText		 COLORREF  0		 ;dialog text color
1  3770	00000004  01*(00000000)		 dp_DlgBk		 COLORREF  0		 ;dialog background color
1  3771	00000008  01*(00000000)		 dp_StaticText		 COLORREF  0		 ;static text color
1  3772	0000000C  01*(00000000)		 dp_StaticBk		 COLORREF  0		 ;static background color
1  3773	00000010  01*(00000000)		 dp_TextBoxText		 COLORREF  0		 ;text box text	color
1  3774	00000014  01*(00000000)		 dp_TextBoxBk		 COLORREF  0		 ;text box background color
1  3775	00000018  01*(00000000)		 dp_EditText		 COLORREF  0		 ;edit text color
1  3776	0000001C  01*(00000000)		 dp_EditBk		 COLORREF  0		 ;edit background color
1  3777	00000020  01*(00000000)		 dp_ListBoxText		 COLORREF  0		 ;list box text	color
1  3778	00000024  01*(00000000)		 dp_ListBoxBk		 COLORREF  0		 ;list box background color
1  3779	00000028			 DIALOGPALETTE		 ends
1  3780		  =0028			 DIALOGPALETTE_		 equ	   4+4+4+4+4+4+4+4+4+4
1  3781					 ;
1  3782					 ;------------------------------------------------------------------------------
1  3783					 ;
1  3784	00000000			 DIALOGRECORD		 struct
1  3785	00000000  01*(00000000)		 dr_hWnd		 HWND	   0		 ;dialog window	handle
1  3786	00000004  01*(00000000)		 dr_fModeless		 BOOL	   FALSE	 ;mode flag
1  3787	00000008  01*(00000000)		 dr_Attributes		 DWORD	   0		 ;dialog window	attributes list
1  3788	0000000C  01*(00000000)		 dr_Data		 DWORD	   0		 ;dialog data
1  3789	00000010  01*(00000000)		 dr_hDlgBrush		 HBRUSH	   0		 ;dialog brush handle
1  3790	00000014  01*(00000000)		 dr_hStaticBrush	 HBRUSH	   0		 ;static brush handle
1  3791	00000018  01*(00000000)		 dr_hTextBoxBrush	 HBRUSH	   0		 ;text box brush handle
1  3792	0000001C  01*(00000000)		 dr_hEditBrush		 HBRUSH	   0		 ;edit brush handle
1  3793	00000020  01*(00000000)		 dr_hListBoxBrush	 HBRUSH	   0		 ;list box brush handle
1  3794	00000024			 DIALOGRECORD		 ends
1  3795		  =0024			 DIALOGRECORD_		 equ	   4+4+4+4+4+4+4+4+4
1  3796					 ;
1  3797					 ;------------------------------------------------------------------------------
1  3798					 ;
1  3799		  =013E			 WIN32_FIND_DATA_	 equ	   4+8+8+8+4+4+4+4+(MAX_PATH*CHAR_)+(14*CHAR_)
1  3800	00000000			 WIN32_FIND_DATA	 struct
1  3801	00000000  01*(00000000)		 fd_dwFileAttributes	 DWORD	   0		 ;file attributes
1  3802	00000004  01*(00000000	      +	 fd_ftCreationTime	 DWORD	   0, 0		 ;time of file creation
   3803		  00000000)
1  3804	0000000C  01*(00000000	      +	 fd_ftLastAccessTime	 DWORD	   0, 0		 ;time of last file access
   3805		  00000000)
1  3806	00000014  01*(00000000	      +	 fd_ftLastWriteTime	 DWORD	   0, 0		 ;time of last write access
   3807		  00000000)
1  3808	0000001C  01*(00000000)		 fd_nFileSizeHigh	 DWORD	   0		 ;high-order word of file size
1  3809	00000020  01*(00000000)		 fd_nFileSizeLow	 DWORD	   0		 ;low-order word of file size
1  3810	00000024  01*(00000000)		 fd_dwReserved0		 DWORD	   0		 ;(reserved)
1  3811	00000028  01*(00000000)		 fd_dwReserved1		 DWORD	   0		 ;(reserved)
1  3812	0000002C  01*(0104*(00))	 fd_cFileName		 CHAR	   MAX_PATH dup(0) ;matching file name
1  3813	00000130  01*(0E*(00))		 fd_cAlternateFileName	 CHAR	   14 dup(0)	 ;8.3 alias name
1  3814	0000013E			 WIN32_FIND_DATA	 ends
1  3815					 ;
1  3816					 ;------------------------------------------------------------------------------
1  3817					 ;
1  3818	00000000			 BY_HANDLE_FILE_INFORMATION struct
1  3819	00000000  01*(00000000)		 fi_dwFileAttributes	 DWORD	   0		 ;file attributes
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 68
pmScript.ASM



1  3820	00000004  01*(00000000	      +	 fi_ftCreationTime	 DWORD	   0, 0		 ;time of file creation
   3821		  00000000)
1  3822	0000000C  01*(00000000	      +	 fi_ftLastAccessTime	 DWORD	   0, 0		 ;time of last file access
   3823		  00000000)
1  3824	00000014  01*(00000000	      +	 fi_ftLastWriteTime	 DWORD	   0, 0		 ;time of last write access
   3825		  00000000)
1  3826	0000001C  01*(00000000)		 fi_dwVolumeSerialNumber DWORD	   0		 ;volume serial	number
1  3827	00000020  01*(00000000)		 fi_nFileSizeHigh	 DWORD	   0		 ;high-order word of file size
1  3828	00000024  01*(00000000)		 fi_nFileSizeLow	 DWORD	   0		 ;low-order word of file size
1  3829	00000028  01*(00000000)		 fi_nNumberOfLinks	 DWORD	   0		 ;number of links to the file
1  3830	0000002C  01*(00000000)		 fi_nFileIndexHigh	 DWORD	   0		 ;high-order word of identifier
1  3831	00000030  01*(00000000)		 fi_nFileIndexLow	 DWORD	   0		 ;low-order word of identifier
1  3832	00000034			 BY_HANDLE_FILE_INFORMATION  ends
1  3833		  =0034			 BY_HANDLE_FILE_INFORMATION_ equ   4+8+8+8+4+4+4+4+4+4
1  3834					 ;
1  3835					 ;------------------------------------------------------------------------------
1  3836					 ;
1  3837	00000000			 FILETIME		 struct
1  3838	00000000  01*(00000000)		 ft_dwLowDateTime	 DWORD	   0		 ;low-order 32 bits
1  3839	00000004  01*(00000000)		 ft_dwHighDateTime	 DWORD	   0		 ;high-order 32	bits
1  3840	00000008			 FILETIME		 ends
1  3841		  =0008			 FILETIME_		 equ	   4+4
1  3842					 ;
1  3843					 ;------------------------------------------------------------------------------
1  3844					 ;
1  3845	00000000			 MSG			 struct
1  3846	00000000  01*(00000000)		 ms_hwnd		 HWND	   0		 ;window handle
1  3847	00000004  01*(00000000)		 ms_message		 UINT	   0		 ;message id
1  3848	00000008  01*(00000000)		 ms_wParam		 WPARAM	   0		 ;additional parameter
1  3849	0000000C  01*(00000000)		 ms_lParam		 LPARAM	   0		 ;additional parameter
1  3850	00000010  01*(00000000)		 ms_time		 DWORD	   0		 ;time stamp
1  3851	00000014  01*(00000000)		 ms_x			 LONGINT   0		 ;x coordinate
1  3852	00000018  01*(00000000)		 ms_y			 LONGINT   0		 ;y coordinate
1  3853	0000001C			 MSG			 ends
1  3854		  =001C			 MSG_			 equ	   4+4+4+4+4+4+4
1  3855					 ;
1  3856					 ;------------------------------------------------------------------------------
1  3857					 ;
1  3858	00000000			 NETRESOURCE		 struct
1  3859	00000000  01*(00000000)		 nr_dwScope		 DWORD	   0		 ;resource scope
1  3860	00000004  01*(00000000)		 nr_dwType		 DWORD	   0		 ;resource type
1  3861	00000008  01*(00000000)		 nr_dwDisplayType	 DWORD	   0		 ;display type
1  3862	0000000C  01*(00000000)		 nr_dwUsage		 DWORD	   0		 ;resource usage
1  3863	00000010  01*(00000000)		 nr_lpLocalName		 LPSTR	   0		 ;redirected local device
1  3864	00000014  01*(00000000)		 nr_lpRemoteName	 LPSTR	   0		 ;remote name
1  3865	00000018  01*(00000000)		 nr_lpComment		 LPSTR	   0		 ;provider supplied comment
1  3866	0000001C  01*(00000000)		 nr_lpProvider		 LPSTR	   0		 ;name of provider
1  3867	00000020			 NETRESOURCE		 ends
1  3868		  =0020			 NETRESOURCE_		 equ	   4+4+4+4+4+4+4+4
1  3869					 ;
1  3870					 ;------------------------------------------------------------------------------
1  3871					 ;
1  3872		  =0088			 OFSTRUCT_		 equ	   1+1+2+2+2+OFS_MAXPATHNAME
1  3873	00000000			 OFSTRUCT		 struct
1  3874	00000000  01*(00)		 of_cBytes		 BYTE	   0		 ;structure size
1  3875	00000001  01*(00)		 of_fFixedDisk		 BYTE	   0		 ;fixed-disk flag
1  3876	00000002  01*(0000)		 of_nErrCode		 WORD	   0		 ;error	code
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 69
pmScript.ASM



1  3877	00000004  01*(0000)		 of_Reserved1		 WORD	   0		 ;(reserved)
1  3878	00000006  01*(0000)		 of_Reserved2		 WORD	   0		 ;(reserved)
1  3879	00000008  01*(80*(00))		 of_szPathName		 BYTE	   OFS_MAXPATHNAME dup (0) ;path name
1  3880	00000088			 OFSTRUCT		 ends
1  3881					 ;
1  3882					 ;------------------------------------------------------------------------------
1  3883					 ;
1  3884		  =004C			 OPENFILENAME_		 equ	   4+4+4+4+4+4+4+4+4+4+4+4+4+4+2+2+4+4+4+4
1  3885	00000000			 OPENFILENAME		 struct
1  3886	00000000  01*(0000004C)		 on_lStructSize		 DWORD	   OPENFILENAME_ ;number of bytes
1  3887	00000004  01*(00000000)		 on_hwndOwner		 HWND	   0		 ;dialog box owner
1  3888	00000008  01*(00000000)		 on_hInstance		 HINSTANCE 0		 ;dialog box template id
1  3889	0000000C  01*(00000000)		 on_lpstrFilter		 LPCSTR	   0		 ;filter strings
1  3890	00000010  01*(00000000)		 on_lpstrCustomFilter	 LPSTR	   0		 ;user-defined filter stings
1  3891	00000014  01*(00000000)		 on_nMaxCustFilter	 DWORD	   0		 ;size of custom filter	buffer
1  3892	00000018  01*(00000000)		 on_nFilterIndex	 DWORD	   0		 ;index	into the filter	buffer
1  3893	0000001C  01*(00000000)		 on_lpstrFile		 LPSTR	   0		 ;default file name buffer
1  3894	00000020  01*(00000000)		 on_nMaxFile		 DWORD	   0		 ;size of the file name	buffer
1  3895	00000024  01*(00000000)		 on_lpstrFileTitle	 LPSTR	   0		 ;file title buffer
1  3896	00000028  01*(00000000)		 on_nMaxFileTitle	 DWORD	   0		 ;size of the file title buffer
1  3897	0000002C  01*(00000000)		 on_lpstrInitialDir	 LPCSTR	   0		 ;initial directory
1  3898	00000030  01*(00000000)		 on_lpstrTitle		 LPCSTR	   0		 ;dialog box title
1  3899	00000034  01*(00000000)		 on_Flags		 DWORD	   0		 ;dialog box creation flags
1  3900	00000038  01*(0000)		 on_nFileOffset		 WORD	   0		 ;file name offset in lpstrFile
1  3901	0000003A  01*(0000)		 on_nFileExtension	 WORD	   0		 ;file ext offset in lpstrFile
1  3902	0000003C  01*(00000000)		 on_lpstrDefExt		 LPCSTR	   0		 ;default extension
1  3903	00000040  01*(00000000)		 on_lCustData		 LPARAM	   0		 ;application-defined hook data
1  3904	00000044  01*(00000000)		 on_lpfnHook		 LPFN	   0		 ;hook function
1  3905	00000048  01*(00000000)		 on_lpTemplateName	 LPCSTR	   0		 ;dialog box template name
1  3906	0000004C			 OPENFILENAME		 ends
1  3907					 ;
1  3908					 ;------------------------------------------------------------------------------
1  3909					 ;
1  3910		  =0094			 OSVERSIONINFO_		 equ	 4+4+4+4+4+(128*CHAR_)
1  3911	00000000			 OSVERSIONINFO		 struct
1  3912	00000000  01*(00000094)		 ov_dwOSVersionInfoSize	 DWORD	 OSVERSIONINFO_	 ;structure size
1  3913	00000004  01*(00000000)		 ov_dwMajorVersion	 DWORD	 0		 ;major	version	number
1  3914	00000008  01*(00000000)		 ov_dwMinorVersion	 DWORD	 0		 ;minor	version	number
1  3915	0000000C  01*(00000000)		 ov_dwBuildNumber	 DWORD	 0		 ;build	number
1  3916	00000010  01*(00000000)		 ov_dwPlatformId	 DWORD	 0		 ;platform id
1  3917	00000014  01*(80*(00))		 ov_szCSDVersion	 CHAR	 128 dup (0)	 ;info string
1  3918	00000094			 OSVERSIONINFO		 ends
1  3919					 ;
1  3920					 ;------------------------------------------------------------------------------
1  3921					 ;
1  3922	00000000			 PAINTSTRUCT		 struct
1  3923	00000000  01*(00000000)		 ps_hdc			 HDC	   0		 ;device context handle
1  3924	00000004  01*(00000000)		 ps_fErase		 BOOL	   FALSE	 ;background erase flag
1  3925	00000008  01*(00000000)		 ps_leftPaint		 LONGINT   0		 ;left margin of clipping rect
1  3926	0000000C  01*(00000000)		 ps_topPaint		 LONGINT   0		 ;top margin of	clipping rect
1  3927	00000010  01*(00000000)		 ps_rightPaint		 LONGINT   0		 ;right	margin of clipping rect
1  3928	00000014  01*(00000000)		 ps_bottomPaint		 LONGINT   0		 ;bottom margin	of clipping rect
1  3929	00000018  01*(00000000)		 ps_fRestore		 BOOL	   FALSE	 ;(reserved)
1  3930	0000001C  01*(00000000)		 ps_fIncUpdate		 BOOL	   FALSE	 ;(reserved)
1  3931	00000020  01*(20*(00))		 ps_rgbReserved		 BYTE	   32 dup (0)	 ;(reserved)
1  3932	00000040			 PAINTSTRUCT		 ends
1  3933		  =0040			 PAINTSTRUCT_		 equ	   4+4+4+4+4+4+4+4+32
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 70
pmScript.ASM



1  3934					 ;
1  3935					 ;------------------------------------------------------------------------------
1  3936					 ;
1  3937	00000000			 PROCESS_INFORMATION	 struct
1  3938	00000000  01*(00000000)		 pi_hProcess		 HANDLE	   0		 ;process handle
1  3939	00000004  01*(00000000)		 pi_hThread		 HANDLE	   0		 ;thread handle
1  3940	00000008  01*(00000000)		 pi_dwProcessId		 DWORD	   0		 ;process id
1  3941	0000000C  01*(00000000)		 pi_dwThreadId		 DWORD	   0		 ;thread id
1  3942	00000010			 PROCESS_INFORMATION	 ends
1  3943		  =0010			 PROCESS_INFORMATION_	 equ	   4+4+4+4
1  3944					 ;
1  3945					 ;------------------------------------------------------------------------------
1  3946					 ;
1  3947	00000000			 POINT			 struct
1  3948	00000000  01*(00000000)		 pt_x			 LONGINT   0		 ;x coordinate
1  3949	00000004  01*(00000000)		 pt_y			 LONGINT   0		 ;y coordinate
1  3950	00000008			 POINT			 ends
1  3951		  =0008			 POINT_			 equ	   4+4
1  3952					 ;
1  3953					 ;------------------------------------------------------------------------------
1  3954					 ;
1  3955	00000000			 RECT			 struct
1  3956	00000000  01*(00000000)		 rc_left		 LONGINT   0		 ;left margin
1  3957	00000004  01*(00000000)		 rc_top			 LONGINT   0		 ;top margin
1  3958	00000008  01*(00000000)		 rc_right		 LONGINT   0		 ;right	margin
1  3959	0000000C  01*(00000000)		 rc_bottom		 LONGINT   0		 ;bottom margin
1  3960	00000010			 RECT			 ends
1  3961		  =0010			 RECT_			 equ	   4+4+4+4
1  3962					 ;
1  3963					 ;------------------------------------------------------------------------------
1  3964					 ;
1  3965	00000000			 RGBQUAD		 struct
1  3966	00000000  01*(00)		 rq_rgbBlue		 BYTE	   0		 ;intensity of blue component
1  3967	00000001  01*(00)		 rq_rgbGreen		 BYTE	   0		 ;intensity of green component
1  3968	00000002  01*(00)		 rq_rgbRed		 BYTE	   0		 ;intensity of red component
1  3969	00000003  01*(00)		 rq_rgbReserved		 BYTE	   0		 ;(reserved)
1  3970	00000004			 RGBQUAD		 ends
1  3971		  =0004			 RGBQUAD_		 equ	   1+1+1+1
1  3972					 ;
1  3973					 ;------------------------------------------------------------------------------
1  3974					 ;
1  3975		  =000C			 SECURITY_ATTRIBUTES_	 equ	   4+4+4
1  3976	00000000			 SECURITY_ATTRIBUTES	 struct
1  3977	00000000  01*(0000000C)		 sa_nLength		 DWORD	   SECURITY_ATTRIBUTES_	;structure size
1  3978	00000004  01*(00000000)		 sa_lpSecurityDescriptor LPVOID	   0		 ;security descriptor
1  3979	00000008  01*(00000000)		 sa_bInheritHandle	 BOOL	   FALSE	 ;handle inheritance flag
1  3980	0000000C			 SECURITY_ATTRIBUTES	 ends
1  3981					 ;
1  3982					 ;------------------------------------------------------------------------------
1  3983					 ;
1  3984	00000000			 STARTUPINFO		 struct
1  3985	00000000  01*(00000000)		 si_cb			 DWORD	   0		 ;structure size
1  3986	00000004  01*(00000000)		 si_lpReserved		 LPSTR	   0		 ;(reserved)
1  3987	00000008  01*(00000000)		 si_lpDesktop		 LPSTR	   0		 ;desktop name
1  3988	0000000C  01*(00000000)		 sl_lpTitle		 LPSTR	   0		 ;console window title
1  3989	00000010  01*(00000000)		 si_dwX			 DWORD	   0		 ;window origin	(column)
1  3990	00000014  01*(00000000)		 si_dwY			 DWORD	   0		 ;window origin	(row)
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 71
pmScript.ASM



1  3991	00000018  01*(00000000)		 si_dwXSize		 DWORD	   0		 ;window width
1  3992	0000001C  01*(00000000)		 si_dwYSize		 DWORD	   0		 ;window height
1  3993	00000020  01*(00000000)		 si_dwXCountChars	 DWORD	   0		 ;screen buffer	width
1  3994	00000024  01*(00000000)		 si_dwYCountChars	 DWORD	   0		 ;screen buffer	height
1  3995	00000028  01*(00000000)		 si_dwFillAttribute	 DWORD	   0		 ;console window initialization
1  3996	0000002C  01*(00000000)		 si_dwFlags		 DWORD	   0		 ;structure member flags
1  3997	00000030  01*(0000)		 si_wShowWindow		 WORD	   0		 ;ShowWindow() parameter
1  3998	00000032  01*(0000)		 si_cbReserved2		 WORD	   0		 ;(reserved)
1  3999	00000034  01*(00000000)		 si_lpReserved2		 LPBYTE	   0		 ;(reserved)
1  4000	00000038  01*(00000000)		 si_hStdInput		 HANDLE	   0		 ;standard input handle
1  4001	0000003C  01*(00000000)		 si_hStdOutput		 HANDLE	   0		 ;standard output handle
1  4002	00000040  01*(00000000)		 si_hStdError		 HANDLE	   0		 ;standard error handle
1  4003	00000044			 STARTUPINFO		 ends
1  4004		  =0044			 STARTUPINFO_		 equ	   4+4+4+4+4+4+4+4+4+4+4+4+2+2+4+4+4+4
1  4005					 ;
1  4006					 ;------------------------------------------------------------------------------
1  4007					 ;
1  4008	00000000			 SYSTEMTIME		 struct
1  4009	00000000  01*(0000)		 st_wYear		 WORD	   0		 ;current year
1  4010	00000002  01*(0000)		 st_wMonth		 WORD	   0		 ;current month	(1..12)
1  4011	00000004  01*(0000)		 st_wDayOfWeek		 WORD	   0		 ;day of week (0 = sunday)
1  4012	00000006  01*(0000)		 st_wDay		 WORD	   0		 ;current day of the month
1  4013	00000008  01*(0000)		 st_wHour		 WORD	   0		 ;current hour
1  4014	0000000A  01*(0000)		 st_wMinute		 WORD	   0		 ;current minute
1  4015	0000000C  01*(0000)		 st_wSecond		 WORD	   0		 ;current second
1  4016	0000000E  01*(0000)		 st_wMilliseconds	 WORD	   0		 ;current millisecond
1  4017	00000010			 SYSTEMTIME		 ends
1  4018		  =0010			 SYSTEMTIME_		 equ	   2+2+2+2+2+2+2+2
1  4019					 ;
1  4020					 ;------------------------------------------------------------------------------
1  4021					 ;
1  4022	00000000			 TBADDBITMAP		 struct
1  4023	00000000  01*(00000000)		 ta_hInst		 HINSTANCE 0		 ;resource module instance
1  4024	00000004  01*(00000000)		 ta_nID			 UINT	   0		 ;resource id
1  4025	00000008			 TBADDBITMAP		 ends
1  4026		  =0008			 TBADDBITMAP_		 equ	   4+4
1  4027					 ;
1  4028					 ;------------------------------------------------------------------------------
1  4029					 ;
1  4030	00000000			 TBBUTTON		 struct
1  4031	00000000  01*(00000000)		 tb_iBitmap		 INTEGER   0		 ;zero-based button image index
1  4032	00000004  01*(00000000)		 tb_idCommand		 INTEGER   0		 ;button command id
1  4033	00000008  01*(00)		 tb_fsState		 BYTE	   0		 ;button state flags
1  4034	00000009  01*(00)		 tb_fsStyle		 BYTE	   0		 ;button style
1  4035	0000000A  01*(00 00)		 tb_bReserved		 BYTE	   0, 0		 ;(reserved)
1  4036	0000000C  01*(00000000)		 tb_dwData		 DWORD	   0		 ;application defined value
1  4037	00000010  01*(00000000)		 tb_iString		 INTEGER   0		 ;zero-based button string index
1  4038	00000014			 TBBUTTON		 ends
1  4039		  =0014			 TBBUTTON_		 equ	   4+4+1+1+(1+1)+4+4
1  4040					 ;
1  4041					 ;------------------------------------------------------------------------------
1  4042					 ;
1  4043	00000000			 TEXTMETRIC		 struct
1  4044	00000000  01*(00000000)		 tm_tmHeight		 LONGINT   0		 ;char height (ascent+descent)
1  4045	00000004  01*(00000000)		 tm_tmAscent		 LONGINT   0		 ;units	above baseline
1  4046	00000008  01*(00000000)		 tm_tmDescent		 LONGINT   0		 ;units	below baseline
1  4047	0000000C  01*(00000000)		 tm_tmInternalLeading	 LONGINT   0		 ;space	included in tmHeight
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 72
pmScript.ASM



1  4048	00000010  01*(00000000)		 tm_tmExternalLeading	 LONGINT   0		 ;extra	space between rows
1  4049	00000014  01*(00000000)		 tm_tmAveCharWidth	 LONGINT   0		 ;average character width ('x')
1  4050	00000018  01*(00000000)		 tm_tmMaxCharWidth	 LONGINT   0		 ;maximum character width
1  4051	0000001C  01*(00000000)		 tm_tmWeight		 LONGINT   0		 ;font weight
1  4052	00000020  01*(00000000)		 tm_tmOverhang		 LONGINT   0		 ;italic flag
1  4053	00000024  01*(00000000)		 tm_tmDigitizedAspectX	 LONGINT   0		 ;horizontal device aspect
1  4054	00000028  01*(00000000)		 tm_tmDigitizedAspectY	 LONGINT   0		 ;vertical device aspect
1  4055	0000002C  01*(00)		 tm_tmFirstChar		 CHAR	   0		 ;first	font character value
1  4056	0000002D  01*(00)		 tm_tmLastChar		 CHAR	   0		 ;last font character value
1  4057	0000002E  01*(00)		 tm_tmDefaultChar	 CHAR	   0		 ;default substitution character
1  4058	0000002F  01*(00)		 tm_tmBreakChar		 CHAR	   0		 ;word break character
1  4059	00000030  01*(00)		 tm_tmItalic		 BYTE	   0		 ;italic font
1  4060	00000031  01*(00)		 tm_tmUnderlined	 BYTE	   0		 ;underline font
1  4061	00000032  01*(00)		 tm_tmStruckOut		 BYTE	   0		 ;strikeout font
1  4062	00000033  01*(00)		 tm_tmPitchAndFamily	 BYTE	   0		 ;font pitch/family
1  4063	00000034  01*(00)		 tm_tmCharSet		 BYTE	   0		 ;font character set
1  4064	00000035			 TEXTMETRIC		 ends
1  4065		  =0035			 TEXTMETRIC_		 equ	   4+4+4+4+4+4+4+4+4+4+4+\
   4066									   CHAR_+CHAR_+CHAR_+CHAR_+\
   4067									   1+1+1+1+1
1  4068					 ;
1  4069					 ;------------------------------------------------------------------------------
1  4070					 ;
1  4071	00000000			 WNDCLASS		 struct
1  4072	00000000  01*(00000000)		 w_style		 UINT	   0		 ;class	style
1  4073	00000004  01*(00000000)		 w_lpfnWndProc		 WNDPROC   0		 ;window procedure
1  4074	00000008  01*(00000000)		 w_cbClsExtra		 INTEGER   0		 ;class	extra data
1  4075	0000000C  01*(00000000)		 w_cbWndExtra		 INTEGER   0		 ;window extra data
1  4076	00000010  01*(00000000)		 w_hInstance		 HINSTANCE 0		 ;class	owner
1  4077	00000014  01*(00000000)		 w_hIcon		 HICON	   0		 ;icon handle
1  4078	00000018  01*(00000000)		 w_hCursor		 HCURSOR   0		 ;cursor handle
1  4079	0000001C  01*(00000000)		 w_hbrBackground	 HBRUSH	   0		 ;background color
1  4080	00000020  01*(00000000)		 w_lpszMenuName		 LPCSTR	   0		 ;menu name
1  4081	00000024  01*(00000000)		 w_lpszClassName	 LPCSTR	   0		 ;class	name
1  4082	00000028			 WNDCLASS		 ends
1  4083		  =0028			 WNDCLASS_		 equ	   4+4+4+4+4+4+4+4+4+4
1  4084					 ;
1  4085					 ;------------------------------------------------------------------------------
1  4086					 ;
1  4087	00000000			 WNDPARAMETERS		 struct
1  4088	00000000  01*(00000000)		 wp_hWnd		 HWND	   0		 ;window handle
1  4089	00000004  01*(00000000)		 wp_FontId		 DWORD	   0		 ;font id
1  4090	00000008  01*(00000000)		 wp_TextColor		 COLORREF  0		 ;text color
1  4091	0000000C  01*(00000000)		 wp_BkColor		 COLORREF  0		 ;background color
1  4092	00000010  01*(00000000)		 wp_BkMode		 DWORD	   0		 ;background mode
1  4093	00000014			 WNDPARAMETERS		 ends
1  4094		  =0014			 WNDPARAMETERS_		 equ	   4+4+4+4+4
1  4095					 ;
1  4096					 ;==============================================================================
1  4097					 ;
1  4098					 ;	 DDE STRUCTURES
1  4099					 ;
1  4100					 ;==============================================================================
1  4101					 ;
1  4102	00000000			 DDEACK			 struct
1  4103	00000000  01*(0000)		 ddeack_Status		 WORD	   0		 ;status
1  4104	00000002			 DDEACK			 ends
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 73
pmScript.ASM



1  4105		  =0002			 DDEACK_		 equ	   2
1  4106					 ;
1  4107					 ;------------------------------------------------------------------------------
1  4108					 ;
1  4109	00000000			 DDEADVISE		 struct
1  4110	00000000  01*(0000)		 ddeadvise_Status	 WORD	   0		 ;status
1  4111	00000002  01*(0000)		 ddeadvise_cfFormat	 WORD	   0		 ;clipboard data format
1  4112	00000004			 DDEADVISE		 ends
1  4113		  =0004			 DDEADVISE_		 equ	   2+2
1  4114					 ;
1  4115					 ;------------------------------------------------------------------------------
1  4116					 ;
1  4117	00000000			 DDEDATA		 struct
1  4118	00000000  01*(0000)		 ddedata_Status		 WORD	   0		 ;status
1  4119	00000002  01*(0000)		 ddedata_cfFormat	 WORD	   0		 ;clipboard data format
1  4120	00000004  01*(00)		 ddedata_Value		 BYTE	   0		 ;data item
1  4121	00000005			 DDEDATA		 ends
1  4122		  =0005			 DDEDATA_		 equ	   2+2+1
1  4123					 ;
1  4124					 ;------------------------------------------------------------------------------
1  4125					 ;
1  4126	00000000			 DDEPOKE		 struct
1  4127	00000000  01*(0000)		 ddepoke_Status		 WORD	   0		 ;status
1  4128	00000002  01*(0000)		 ddepoke_cfFormat	 WORD	   0		 ;clipboard data format
1  4129	00000004  01*(00)		 ddepoke_Value		 BYTE	   0		 ;data item
1  4130	00000005			 DDEPOKE		 ends
1  4131		  =0005			 DDEPOKE_		 equ	   2+2+1
1  4132					 ;
1  4133					 ;==============================================================================
1  4134
1  4135					 ;*bk*
1  4136					 ;be careful from here on. This	stuff assumes ansi, not	unicode.
1  4137					 ;for example, StartDoc	is equated to StartDocA, the ansi API
1  4138					 ;function. The	unicode	equivalent is StartDocB.
1  4139
1  4140
1  4141
1  4142					 LPSECURITY_ATTRIBUTES	 TYPEDEF PTR SECURITY_ATTRIBUTES
1  4143					 LPRECT		 TYPEDEF PTR RECT
1  4144					 LPPOINT	 TYPEDEF PTR POINT
1  4145					 LPPAINTSTRUCT		 TYPEDEF PTR PAINTSTRUCT
1  4146					 HGDIOBJ	 TYPEDEF DWORD
1  4147					 LPPROCESS_INFORMATION	 TYPEDEF PTR PROCESS_INFORMATION
1  4148					 LPSTARTUPINFO		 TYPEDEF PTR STARTUPINFOA
1  4149					 LPCTBBUTTON		 TYPEDEF PTR TBBUTTON
1  4150
1  4151					 ;*******************************************************************************
1  4152					 ;*			 WINDEF.H	 ****************************************
1  4153					 ;*******************************************************************************
1  4154
1  4155		  =0104			 MAX_PATH	 EQU	 0104h
1  4156
1  4157		  =0000			 NULL		 EQU	 0h
1  4158		  =0000			 FALSE		 EQU	 0h
1  4159		  =0001			 TRUE		 EQU	 1h
1  4160
1  4161					 ;CALLBACK	 TYPEDEF PROTO STDCALL
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 74
pmScript.ASM



1  4162		  = STDCALL		 CALLBACK TEXTEQU	 <STDCALL>
1  4163					 ;WINAPI	 TYPEDEF PROTO STDCALL
1  4164		  = STDCALL		 WINAPI	TEXTEQU	 <STDCALL>
1  4165
1  4166
1  4167
1  4168
1  4169					 ;*******************************************************************************
1  4170					 ;*			 WINNT.H	 ****************************************
1  4171					 ;*******************************************************************************
1  4172
1  4173					 LPSTR		 TYPEDEF DWORD
1  4174					 LPCSTR		 TYPEDEF DWORD
1  4175
1  4176		  =0001			 FILE_ATTRIBUTE_READONLY EQU	 0001h
1  4177		  =0002			 FILE_ATTRIBUTE_HIDDEN	 EQU	 0002h
1  4178		  =0004			 FILE_ATTRIBUTE_SYSTEM	 EQU	 0004h
1  4179		  =0010			 FILE_ATTRIBUTE_DIRECTORY EQU	 0010h
1  4180		  =0020			 FILE_ATTRIBUTE_ARCHIVE	 EQU	 0020h
1  4181		  =0080			 FILE_ATTRIBUTE_NORMAL	 EQU	 0080h
1  4182		  =0100			 FILE_ATTRIBUTE_TEMPORARY EQU	 0100h
1  4183		  =0800			 FILE_ATTRIBUTE_COMPRESSED EQU	 0800h
1  4184
1  4185		  =80000000		 GENERIC_READ		 EQU	 080000000h
1  4186		  =40000000		 GENERIC_WRITE		 EQU	 040000000h
1  4187		  =20000000		 GENERIC_EXECUTE	 EQU	 020000000h
1  4188		  =10000000		 GENERIC_ALL		 EQU	 010000000h
1  4189
1  4190		  =0001			 DLL_PROCESS_ATTACH	 EQU	 01h
1  4191		  =0002			 DLL_THREAD_ATTACH	 EQU	 02h
1  4192		  =0003			 DLL_THREAD_DETACH	 EQU	 03h
1  4193		  =0000			 DLL_PROCESS_DETACH	 EQU	 00h
1  4194
1  4195					 RtlMoveMemory		 PROCDESC	 STDCALL :DWORD, :DWORD, :DWORD
1  4196		  = RtlMoveMemory	 MoveMemory		 TEXTEQU <RtlMoveMemory>
1  4197					 RtlFillMemory		 PROCDESC	 STDCALL :DWORD, :DWORD, :BYTE
1  4198		  = RtlFillMemory	 FillMemory		 TEXTEQU <RtlFillMemory>
1  4199
1  4200					 ;*******************************************************************************
1  4201					 ;*			 WINERROR.H	 ****************************************
1  4202					 ;*******************************************************************************
1  4203
1  4204		  =0000			 ERROR_SUCCESS		 EQU	 000h
1  4205		  =0006			 ERROR_INVALID_HANDLE	 EQU	 006h
1  4206		  =00B7			 ERROR_ALREADY_EXISTS	 EQU	 0B7h
1  4207
1  4208
1  4209					 ;*******************************************************************************
1  4210					 ;*	 KERNEL32.LIB	 WINBASE.H	 ****************************************
1  4211					 ;*******************************************************************************
1  4212
1  4213					 ;INVALID_HANDLE_VALUE	 EQU	 -1
1  4214
1  4215		  =0001			 CREATE_NEW		 EQU	 01h
1  4216		  =0002			 CREATE_ALWAYS		 EQU	 02h
1  4217		  =0003			 OPEN_EXISTING		 EQU	 03h
1  4218		  =0004			 OPEN_ALWAYS		 EQU	 04h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 75
pmScript.ASM



1  4219		  =0005			 TRUNCATE_EXISTING	 EQU	 05h
1  4220
1  4221	00000000			 OVERLAPPED		 STRUCT
1  4222	00000000  01*(????????)			 Internal	 DWORD	 ?
1  4223	00000004  01*(????????)			 InternalHigh	 DWORD	 ?
1  4224	00000008  01*(????????)			 _Offset	 DWORD	 ?
1  4225	0000000C  01*(????????)			 OffsetHigh	 DWORD	 ?
1  4226	00000010  01*(????????)			 hEvent		 HANDLE	 ?
1  4227	00000014			 OVERLAPPED		 ENDS
1  4228					 LPOVERLAPPED		 TYPEDEF PTR OVERLAPPED
1  4229
1  4230
1  4231		  =0000			 GMEM_FIXED		 EQU	 00000h
1  4232		  =0002			 GMEM_MOVEABLE		 EQU	 00002h
1  4233		  =0040			 GMEM_ZEROINIT		 EQU	 00040h
1  4234		  =2000			 GMEM_SHARE		 EQU	 02000h
1  4235
1  4236		  =0001			 DEBUG_PROCESS		 EQU	 001h
1  4237		  =0002			 DEBUG_ONLY_THIS_PROCESS EQU	 002h
1  4238		  =0004			 CREATE_SUSPENDED	 EQU	 004h
1  4239		  =0008			 DETACHED_PROCESS	 EQU	 008h
1  4240		  =0010			 CREATE_NEWE_CONSOLE	 EQU	 010h
1  4241		  =0020			 NORMAL_PRIORITY_CLASS	 EQU	 020h
1  4242
1  4243					 WinMain		 PROCDESC	 WINAPI	 :HINSTANCE, :HINSTANCE, :LPSTR, :SDWORD
1  4244					 GlobalAlloc		 PROCDESC	 WINAPI	 :UINT,	:DWORD
1  4245					 GlobalLock		 PROCDESC	 WINAPI	 :HGLOBAL
1  4246					 GlobalUnlock		 PROCDESC	 WINAPI	 :HGLOBAL
1  4247					 GlobalFree		 PROCDESC	 WINAPI	 :HGLOBAL
1  4248					 ExitProcess		 PROCDESC	 WINAPI	 :DWORD
1  4249					 GetLastError		 PROCDESC	 WINAPI
1  4250					 DebugBreak		 PROCDESC	 WINAPI
1  4251					 Sleep			 PROCDESC	 WINAPI	 :DWORD
1  4252					 LoadResource		 PROCDESC	 WINAPI	 :HINSTANCE, :HRSRC
1  4253					 GetFileSize		 PROCDESC	 WINAPI	 :HANDLE, :LPDWORD
1  4254					 WriteFile		 PROCDESC	 WINAPI	 :HANDLE, :LPCVOID, :DWORD, :LPDWORD,	    +
   4255					 :LPOVERLAPPED
1  4256					 ReadFile		 PROCDESC	 WINAPI	 :HANDLE, :LPVOID, :DWORD, :LPDWORD,	    +
   4257					 :LPOVERLAPPED
1  4258					 CloseHandle		 PROCDESC	 WINAPI	 :HANDLE
1  4259					 Beep			 PROCDESC	 WINAPI	 :DWORD, :DWORD
1  4260					 lstrlenA		 PROCDESC	 WINAPI	 :LPCSTR
1  4261		  = lstrlenA		 lstrlen		 TEXTEQU <lstrlenA>
1  4262
1  4263					 lstrcatA	 PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  4264		  = lstrcatA		 lstrcat	 TEXTEQU <lstrcatA>
1  4265
1  4266					 lstrcpyA	 PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  4267		  = lstrcpyA		 lstrcpy	 TEXTEQU <lstrcpyA>
1  4268
1  4269		  =0001			 STARTF_USESHOWWINDOW	 EQU	 0001h
1  4270		  =0002			 STARTF_USESIZE		 EQU	 0002h
1  4271		  =0004			 STARTF_USEPOSITION	 EQU	 0004h
1  4272		  =0008			 STARTF_USECOUNTCHARS	 EQU	 0008h
1  4273		  =0010			 STARTF_USEFILLATTRIBUTE EQU	 0010h
1  4274		  =0020			 STARTF_RUNFULLSCREEN	 EQU	 0020h
1  4275		  =0040			 STARTF_FORCEONFEEDBACK	 EQU	 0040h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 76
pmScript.ASM



1  4276		  =0080			 STARTF_FORCEOFFFEEDBACK EQU	 0080h
1  4277		  =0100			 STARTF_USESTDHANDLES	 EQU	 0100h
1  4278		  =0200			 STARTF_USEHOTKEY	 EQU	 0200h
1  4279
1  4280
1  4281					 CreateSemaphoreA	 PROCDESC	 WINAPI	 :LPSECURITY_ATTRIBUTES, :LONG,	:LONG,	    +
   4282					 :LPCSTR
1  4283		  = CreateSemaphoreA	 CreateSemaphore	 TEXTEQU <CreateSemaphoreA>
1  4284
1  4285					 GetModuleHandleA	 PROCDESC	 WINAPI	 :DWORD
1  4286		  = GetModuleHandleA	 GetModuleHandle	 TEXTEQU <GetModuleHandleA>
1  4287					 CreateProcessA		 PROCDESC	 STDCALL :LPCSTR, :LPSTR,\
   4288										 :LPSECURITY_ATTRIBUTES,\
   4289										 :LPSECURITY_ATTRIBUTES,\
   4290										 :BOOL,	:DWORD,	:LPVOID, :LPCSTR,\
   4291										 :LPSTARTUPINFO,\
   4292										 :LPPROCESS_INFORMATION
1  4293		  = CreateProcessA	 CreateProcess		 TEXTEQU <CreateProcessA>
1  4294					 GetStartupInfoA	 PROCDESC	 WINAPI	 :LPSTARTUPINFO
1  4295		  = GetStartupInfoA	 GetStartupInfo		 TEXTEQU <GetStartupInfoA>
1  4296					 GetCommandLineA	 PROCDESC	 WINAPI
1  4297		  = GetCommandLineA	 GetCommandLine		 TEXTEQU <GetCommandLineA>
1  4298					 OutputDebugStringA	 PROCDESC	 WINAPI	 :LPCSTR
1  4299		  = OutputDebugStringA	 OutputDebugString	 TEXTEQU <OutputDebugStringA>
1  4300					 FindResourceA		 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR, :LPCSTR
1  4301		  = FindResourceA	 FindResource		 TEXTEQU <FindResourceA>
1  4302					 CreateFileA		 PROCDESC	 WINAPI	 :LPCSTR, :DWORD, :DWORD,\
   4303										 :LPSECURITY_ATTRIBUTES,\
   4304										 :DWORD, :DWORD, :HANDLE
1  4305		  = CreateFileA		 CreateFile		 TEXTEQU <CreateFileA>
1  4306					 QueryPerformanceCounter PROCDESC	 WINAPI	 :DWORD
1  4307					 QueryPerformanceFrequency PROCDESC	 WINAPI	 :DWORD
1  4308
1  4309
1  4310					 ;*******************************************************************************
1  4311					 ;*	 GDI32.LIB	 WINGDI.H	 ****************************************
1  4312					 ;*******************************************************************************
1  4313
1  4314		  =00CC0020		 SRCCOPY		 EQU	 00CC0020h	 ;dest = source
1  4315		  =00EE0086		 SRCPAINT		 EQU	 00EE0086h	 ;dest = source	OR dest
1  4316		  =008800C6		 SRCAND			 EQU	 008800C6h	 ;dest = source	AND dest
1  4317		  =00660046		 SRCINVERT		 EQU	 00660046h	 ;dest = source	XOR dest
1  4318		  =00440328		 SRCERASE		 EQU	 00440328h	 ;dest = source	AND (NOT dest)
1  4319
1  4320		  =0000			 TA_LEFT		 EQU	 000h
1  4321		  =0002			 TA_RIGHT		 EQU	 002h
1  4322		  =0006			 TA_CENTER		 EQU	 006h
1  4323		  =0000			 TA_TOP			 EQU	 000h
1  4324		  =0008			 TA_BOTTOM		 EQU	 008h
1  4325		  =0018			 TA_BASELINE		 EQU	 018h
1  4326
1  4327		  =-0001		 SP_ERROR		 EQU	 -1
1  4328
1  4329
1  4330		  =0000			 DEFAULT_QUALITY	 EQU	 000h
1  4331		  =0001			 DRAFT_QUALITY		 EQU	 001h
1  4332		  =0002			 PROOF_QUALITY		 EQU	 002h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 77
pmScript.ASM



1  4333		  =0000			 DEFAULT_PITCH		 EQU	 000h
1  4334		  =0001			 FIXED_PITCH		 EQU	 001h
1  4335		  =0002			 VARIABLE_PITCH		 EQU	 002h
1  4336		  =0190			 FW_NORMAL		 EQU	 400
1  4337		  =02BC			 FW_BOLD		 EQU	 700
1  4338		  =0010			 FF_ROMAN		 EQU	 010h
1  4339		  =0030			 FF_MODERN		 EQU	 030h
1  4340
1  4341		  =0000			 CLIP_DEFAULT_PRECIS	 EQU	 000h
1  4342		  =0080			 CLIP_EMBEDDED_PRECIS	 EQU	 128
1  4343		  =0000			 OUT_DEFAULT_PRECIS	 EQU	 000h
1  4344		  =0001			 DEFAULT_CHARSET	 EQU	 001h
1  4345
1  4346		  =0001			 TRANSPARENT		 EQU	 01h
1  4347		  =0002			 OPAQUE			 EQU	 02h
1  4348
1  4349		  =0000			 WHITE_BRUSH		 EQU	 00h
1  4350		  =0001			 LTGRAY_BRUSH		 EQU	 01h
1  4351		  =0002			 GRAY_BRUSH		 EQU	 02h
1  4352		  =0003			 DKGRAY_BRUSH		 EQU	 03h
1  4353		  =0004			 BLACK_BRUSH		 EQU	 04h
1  4354
1  4355					 BitBlt			 PROCDESC	 WINAPI	 :HDC, :DWORD, :DWORD, :DWORD, :DWORD,\
   4356										 :HDC, :DWORD, :DWORD, :DWORD
1  4357					 CreateCompatibleDC	 PROCDESC	 WINAPI	 :HDC
1  4358					 CreateCompatibleBitmap	 PROCDESC	 WINAPI	 :HDC, :DWORD, :DWORD
1  4359					 CreateFontA		 PROCDESC	 WINAPI	 :SDWORD, :SDWORD, :SDWORD, :SDWORD,	    +
   4360					 :SDWORD, :DWORD, :DWORD,\
   4361										 :DWORD, :DWORD, :DWORD, :DWORD, :DWORD, :DWORD,    +
   4362					 :LPCSTR
1  4363		  = CreateFontA		 CreateFont		 TEXTEQU <CreateFontA>
1  4364					 CreateSolidBrush	 PROCDESC	 WINAPI	 :COLORREF
1  4365					 DeleteDC		 PROCDESC	 WINAPI	 :HDC
1  4366					 DeleteObject		 PROCDESC	 WINAPI	 :HGDIOBJ
1  4367					 GetStockObject		 PROCDESC	 WINAPI	 :SDWORD
1  4368					 LineTo			 PROCDESC	 WINAPI	 :HDC, :UINT, :UINT
1  4369					 RectVisible		 PROCDESC	 WINAPI	 :HDC, :LPRECT
1  4370					 SelectObject		 PROCDESC	 WINAPI	 :HDC, :HGDIOBJ
1  4371					 SetBkColor		 PROCDESC	 WINAPI	 :HDC, :COLORREF
1  4372					 SetBkMode		 PROCDESC	 WINAPI	 :HDC, :SDWORD
1  4373					 StretchBlt		 PROCDESC	 WINAPI	 :HDC, :SDWORD,	:SDWORD, :SDWORD, :SDWORD,\
   4374										 :HDC, :SDWORD,	:SDWORD, :SDWORD, :SDWORD, :DWORD
1  4375					 SetTextColor		 PROCDESC	 WINAPI	 :HDC, :COLORREF
1  4376					 SetTextAlign		 PROCDESC	 WINAPI	 :HDC, :UINT
1  4377
1  4378					 ;ABORTPROC		 TYPEDEF PROCDESC STDCALL
1  4379		  = STDCALL		 ABORTPROC TEXTEQU <STDCALL>
1  4380
1  4381	00000000			 DOCINFOA		 STRUCT
1  4382	00000000  01*(????????)			 cbSize		 SDWORD	 ?
1  4383	00000004  01*(????????)			 lpszDocName	 LPCSTR	 ?
1  4384	00000008  01*(????????)			 lpszOutput	 LPCSTR	 ?
1  4385	0000000C  01*(????????)			 lpszDataType	 LPCSTR	 ?
1  4386	00000010  01*(????????)			 fwType		 DWORD	 ?
1  4387	00000014			 DOCINFOA		 ENDS
1  4388					 LPDOCINFO		 TYPEDEF PTR DOCINFOA
1  4389		  = DOCINFOA		 DOCINFO		 TEXTEQU <DOCINFOA>
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 78
pmScript.ASM



1  4390
1  4391					 StartDocA		 PROCDESC	 WINAPI	 :HDC, :LPDOCINFO
1  4392		  = StartDocA		 StartDoc		 TEXTEQU <StartDocA>
1  4393					 EndDoc			 PROCDESC	 WINAPI	 :HDC
1  4394					 StartPage		 PROCDESC	 WINAPI	 :HDC
1  4395					 EndPage		 PROCDESC	 WINAPI	 :HDC
1  4396					 AbortDoc		 PROCDESC	 WINAPI	 :HDC
1  4397					 ;SetAbortProc		 PROCDESC	 WINAPI	 :HDC, :ABORTPROC
1  4398					 SetAbortProc		 PROCDESC	 WINAPI	 :HDC, :DWORD
1  4399
1  4400					 MoveToEx		 PROCDESC	 WINAPI	 :HDC, :UINT, :UINT, :LPPOINT
1  4401					 TextOutA		 PROCDESC	 WINAPI	 :HDC, :DWORD, :DWORD, :LPCSTR,	:DWORD
1  4402		  = TextOutA		 TextOut		 TEXTEQU <TextOutA>
1  4403
1  4404
1  4405					 ;*******************************************************************************
1  4406					 ;*	 USER32.LIB	 WINUSER.H	 ****************************************
1  4407					 ;*******************************************************************************
1  4408
1  4409					 ;DLGPROC		 TYPEDEF PROCDESC STDCALL
1  4410		  = STDCALL		 DLGPROC TEXTEQU <STDCALL>
1  4411
1  4412		  =0000			 SB_HORZ		 EQU	 0
1  4413		  =0001			 SB_VERT		 EQU	 1
1  4414		  =0002			 SB_CTL			 EQU	 2
1  4415		  =0003			 SB_BOTH		 EQU	 3
1  4416		  =0004			 SB_THUMBPOSITION	 EQU	 4
1  4417		  =0008			 SB_ENDSCROLL		 EQU	 8
1  4418
1  4419		  =0000			 SW_HIDE		 EQU	 00h
1  4420		  =0001			 SW_SHOWNORMAL		 EQU	 01h
1  4421		  =0002			 SW_SHOWMINIMIZED	 EQU	 02h
1  4422		  =0003			 SW_SHOWMAXIMIZED	 EQU	 03h
1  4423		  =0005			 SW_SHOW		 EQU	 05h
1  4424		  =0009			 SW_RESTORE		 EQU	 09h
1  4425		  =000A			 SW_SHOWDEFAULT		 EQU	 0Ah
1  4426
1  4427		  =0030			 WNDCLASSEX_ EQU 4*12
1  4428	00000000			 WNDCLASSEXA		 STRUCT
1  4429	00000000  01*(????????)			 wc_cbSize		 UINT		 ?
1  4430	00000004  01*(????????)			 wc_style		 UINT		 ?
1  4431	00000008  01*(????????)			 wc_lpfnWndProc		 DWORD		 ?
1  4432	0000000C  01*(????????)			 wc_cbClsExtra		 SDWORD		 ?
1  4433	00000010  01*(????????)			 wc_cbWndExtra		 SDWORD		 ?
1  4434	00000014  01*(????????)			 wc_hInstance		 HINSTANCE	 ?
1  4435	00000018  01*(????????)			 wc_hIcon		 HICON		 ?
1  4436	0000001C  01*(????????)			 wc_hCursor		 HCURSOR	 ?
1  4437	00000020  01*(????????)			 wc_hbrBackground	 HBRUSH		 ?
1  4438	00000024  01*(????????)			 wc_lpszMenuName	 LPCSTR		 ?
1  4439	00000028  01*(????????)			 wc_lpszClassName	 LPCSTR		 ?
1  4440	0000002C  01*(????????)			 wc_hIconSm		 HICON		 ?
1  4441	00000030			 WNDCLASSEXA		 ENDS
1  4442		  = WNDCLASSEXA		 WNDCLASSEX		 TEXTEQU <WNDCLASSEXA>
1  4443
1  4444					 LPMSG			 TYPEDEF DWORD
1  4445
1  4446					 ;GWL_ID		 EQU	 0FFFFFFF4h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 79
pmScript.ASM



1  4447
1  4448		  =0001			 WM_CREATE		 EQU	 0001h
1  4449		  =0002			 WM_DESTROY		 EQU	 0002h
1  4450		  =0005			 WM_SIZE		 EQU	 0005h
1  4451		  =000C			 WM_SETTEXT		 EQU	 000Ch
1  4452		  =000F			 WM_PAINT		 EQU	 000Fh
1  4453		  =0010			 WM_CLOSE		 EQU	 0010h
1  4454		  =0014			 WM_ERASEBKGND		 EQU	 0014h
1  4455		  =004E			 WM_NOTIFY		 EQU	 004Eh
1  4456		  =0053			 WM_HELP		 EQU	 0053h
1  4457		  =0102			 WM_CHAR		 EQU	 0102h
1  4458		  =0110			 WM_INITDIALOG		 EQU	 0110h
1  4459		  =0111			 WM_COMMAND		 EQU	 0111h
1  4460		  =0113			 WM_TIMER		 EQU	 0113h
1  4461		  =0114			 WM_HSCROLL		 EQU	 0114h
1  4462		  =0115			 WM_VSCROLL		 EQU	 0115h
1  4463		  =011F			 WM_MENUSELECT		 EQU	 011Fh
1  4464		  =0136			 WM_CTLCOLORDLG		 EQU	 0136h
1  4465		  =0200			 WM_MOUSEMOVE		 EQU	 0200h
1  4466		  =0201			 WM_LBUTTONDOWN		 EQU	 0201h
1  4467		  =0202			 WM_LBUTTONUP		 EQU	 0202h
1  4468		  =0203			 WM_LBUTTONDBLCLK	 EQU	 0203h
1  4469		  =0204			 WM_RBUTTONDOWN		 EQU	 0204h
1  4470		  =0205			 WM_RBUTTONUP		 EQU	 0205h
1  4471		  =0206			 WM_RBUTTONDBLCLK	 EQU	 0206h
1  4472		  =0300			 WM_CUT			 EQU	 0300h
1  4473		  =0301			 WM_COPY		 EQU	 0301h
1  4474		  =0302			 WM_PASTE		 EQU	 0302h
1  4475		  =0303			 WM_CLEAR		 EQU	 0303h
1  4476		  =0304			 WM_UNDO		 EQU	 0304h
1  4477		  =0400			 WM_USER		 EQU	 0400h
1  4478
1  4479		  =80000000		 WS_POPUP		 EQU	 080000000h
1  4480		  =40000000		 WS_CHILD		 EQU	 040000000h
1  4481		  =20000000		 WS_MINIMIZE		 EQU	 020000000h
1  4482		  =10000000		 WS_VISIBLE		 EQU	 010000000h
1  4483		  =01000000		 WS_MAXIMIZE		 EQU	 001000000h
1  4484		  =00C00000		 WS_CAPTION		 EQU	 000C00000h
1  4485		  =00800000		 WS_BORDER		 EQU	 000800000h
1  4486		  =00400000		 WS_DLGFRAME		 EQU	 000400000h
1  4487		  =00200000		 WS_VSCROLL		 EQU	 000200000h
1  4488		  =00100000		 WS_HSCROLL		 EQU	 000100000h
1  4489		  =00080000		 WS_SYSMENU		 EQU	 000080000h
1  4490					 ;WS_SIZEBOX		 EQU	 000040000h
1  4491		  =00020000		 WS_MINIMIZEBOX		 EQU	 000020000h
1  4492		  =00010000		 WS_MAXIMIZEBOX		 EQU	 000010000h
1  4493		  =00CF0000		 WS_OVERLAPPEDWINDOW	 EQU	 000CF0000h
1  4494		  =0004			 WS_EX_NOPARENTNOTIFY	 EQU	 000000004h
1  4495		  =0100			 WS_EX_WINDOWEDGE	 EQU	 000000100h
1  4496		  =0200			 WS_EX_CLIENTEDGE	 EQU	 000000200h
1  4497		  =0300			 WS_EX_OVERLAPPEDWINDOW	 EQU	 WS_EX_WINDOWEDGE + WS_EX_CLIENTEDGE
1  4498
1  4499		  =0001			 CS_VREDRAW		 EQU	 00001h
1  4500		  =0002			 CS_HREDRAW		 EQU	 00002h
1  4501		  =0080			 CS_PARENTDC		 EQU	 00080h
1  4502		  =2000			 CS_BYTEALIGNWINDOW	 EQU	 02000h
1  4503
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 80
pmScript.ASM



1  4504		  =0001			 BDR_RAISEDOUTER	 EQU	 01h
1  4505		  =0002			 BDR_SUNKENOUTER	 EQU	 02h
1  4506		  =0004			 BDR_RAISEDINNER	 EQU	 04h
1  4507		  =0008			 BDR_SUNKENINNER	 EQU	 08h
1  4508		  =0005			 EDGE_RAISED		 EQU	 BDR_RAISEDOUTER + BDR_RAISEDINNER
1  4509		  =000A			 EDGE_SUNKEN		 EQU	 BDR_SUNKENOUTER + BDR_SUNKENINNER
1  4510		  =0006			 EDGE_ETCHED		 EQU	 BDR_SUNKENOUTER + BDR_RAISEDINNER
1  4511		  =0009			 EDGE_BUMP		 EQU	 BDR_RAISEDOUTER + BDR_SUNKENINNER
1  4512		  =0001			 BF_LEFT		 EQU	 01h
1  4513		  =0002			 BF_TOP			 EQU	 02h
1  4514		  =0004			 BF_RIGHT		 EQU	 04h
1  4515		  =0008			 BF_BOTTOM		 EQU	 08h
1  4516		  =000F			 BF_RECT		 EQU	 BF_LEFT + BF_TOP + BF_RIGHT + BF_BOTTOM
1  4517					 DrawEdge		 PROCDESC	 WINAPI	 :HDC, :LPRECT,	:UINT, :UINT
1  4518
1  4519
1  4520	00000000			 NMHDR			 STRUCT
1  4521	00000000  01*(????????)			 hwndFrom	 HWND	 ?
1  4522	00000004  01*(????????)			 idFrom		 UINT	 ?
1  4523	00000008  01*(????????)			 code		 UINT	 ?
1  4524	0000000C			 NMHDR			 ENDS
1  4525
1  4526					 GetMessageA		 PROCDESC	 WINAPI	 :LPMSG, :HWND,	:UINT, :UINT
1  4527		  = GetMessageA		 GetMessage		 TEXTEQU <GetMessageA>
1  4528					 TranslateMessage	 PROCDESC	 WINAPI	 :LPMSG
1  4529					 DispatchMessageA	 PROCDESC	 WINAPI	 :LPMSG
1  4530		  = DispatchMessageA	 DispatchMessage	 TEXTEQU <DispatchMessageA>
1  4531
1  4532					 PeekMessageA		 PROCDESC	 WINAPI	 :LPMSG, :HWND,	:UINT, :UINT, :UINT
1  4533		  = PeekMessageA	 PeekMessage		 TEXTEQU <PeekMessageA>
1  4534		  =0000			 PM_NOREMOVE		 EQU	 00h
1  4535		  =0001			 PM_REMOVE		 EQU	 01h
1  4536		  =0002			 PM_NOYIELD		 EQU	 02h
1  4537
1  4538					 SendMessageA		 PROCDESC	 WINAPI	 :HWND,	:UINT, :WPARAM,	:LPARAM
1  4539		  = SendMessageA	 SendMessage		 TEXTEQU <SendMessageA>
1  4540					 PostMessageA		 PROCDESC	 WINAPI	 :HWND,	:UINT, :WPARAM,	:LPARAM
1  4541		  = PostMessageA	 PostMessage		 TEXTEQU <PostMessageA>
1  4542					 DefWindowProcA		 PROCDESC	 WINAPI	 :HWND,	:UINT, :WPARAM,	:LPARAM
1  4543		  = DefWindowProcA	 DefWindowProc		 TEXTEQU <DefWindowProcA>
1  4544					 PostQuitMessage     PROCDESC	 WINAPI	 :DWORD
1  4545					 RegisterClassA	     PROCDESC WINAPI :DWORD
1  4546		  = RegisterClassA	 RegisterClass	     TEXTEQU <RegisterClassA>
1  4547					 RegisterClassExA	 PROCDESC	 WINAPI	 :DWORD
1  4548		  = RegisterClassExA	 RegisterClassEx	 TEXTEQU <RegisterClassExA>
1  4549					 CreateWindowA	 PROCDESC WINAPI :LPCTSTR, :LPCTSTR, :DWORD, :DWORD, :DWORD, :DWORD, :DWORD,+
   4550					 :HWND,	:HMENU,	:HANDLE, :DWORD
1  4551		  = CreateWindowA	 CreateWindow	 TEXTEQU <CreateWindowA>
1  4552					 CreateWindowExA	 PROCDESC	 WINAPI	 :DWORD, :LPCSTR, :LPCSTR, :DWORD, :SDWORD, +
   4553					 :SDWORD,\
   4554										 :SDWORD, :SDWORD, :HWND, :HMENU, :HINSTANCE, :DWORD
1  4555		  = CreateWindowExA	 CreateWindowEx		 TEXTEQU <CreateWindowExA>
1  4556					 DestroyWindow		 PROCDESC	 WINAPI	 :HWND
1  4557					 ShowWindow		 PROCDESC	 WINAPI	 :HWND,	:SDWORD
1  4558					 MoveWindow		 PROCDESC	 WINAPI	 :HWND,	:UINT, :UINT, :UINT, :UINT, :BOOL
1  4559					 SetWindowPos		 PROCDESC	 WINAPI	 :HWND,	:HWND, :UINT, :UINT, :UINT, :UINT,  +
   4560					 :UINT
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 81
pmScript.ASM



1  4561					 IsIconic		 PROCDESC	 WINAPI	 :HWND
1  4562
1  4563		  =0001			 SWP_NOSIZE		 EQU	 001h
1  4564		  =0002			 SWP_NOMOVE		 EQU	 002h
1  4565		  =0004			 SWP_NOZORDER		 EQU	 004h
1  4566		  =0020			 SWP_FRAMECHANGED	 EQU	 020h
1  4567					 SWP_DRAWFRAME		 EQU	 SWP_FRAMECHANGED
1  4568		  =0000			 HWND_TOP		 EQU	 000h
1  4569
1  4570	00000000			 DLGTEMPLATE		 STRUCT
1  4571	00000000  01*(????????)			 style		 DWORD	 ?
1  4572	00000004  01*(????????)			 dwExtendedStyle DWORD	 ?
1  4573	00000008  01*(????)			 cdit		 WORD	 ?
1  4574	0000000A  01*(????)			 x		 SWORD	 ?
1  4575	0000000C  01*(????)			 y		 SWORD	 ?
1  4576	0000000E  01*(????)			 nx		 SWORD	 ?
1  4577	00000010  01*(????)			 ny		 SWORD	 ?
1  4578	00000012			 DLGTEMPLATE		 ENDS
1  4579					 ;LPCDLGTEMPLATE	 TYPEDEF PTR LPDLGTEMPLATE
1  4580
1  4581					 ;CreateDialogParamA	 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR, :HWND, :DLGPROC,	    +
   4582					 :LPARAM
1  4583					 CreateDialogParamA	 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR, :HWND, :DWORD, :LPARAM
1  4584		  = CreateDialogParamA	 CreateDialogParam	 TEXTEQU <CreateDialogParamA>
1  4585					 ;DialogBoxParamA		 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR, :HWND,	    +
   4586					 :DLGPROC, :LPARAM
1  4587					 DialogBoxParamA	 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR, :HWND, :DWORD, :LPARAM
1  4588		  = DialogBoxParamA	 DialogBoxParam		 TEXTEQU <DialogBoxParamA>
1  4589					 EndDialog		 PROCDESC	 WINAPI	 :HWND,	:UINT
1  4590					 GetDlgItem		 PROCDESC	 WINAPI	 :HWND,	:UINT
1  4591					 SetDlgItemTextA	 PROCDESC	 WINAPI	 :HWND,	:SDWORD, :LPCSTR
1  4592		  = SetDlgItemTextA	 SetDlgItemText		 TEXTEQU <SetDlgItemTextA>
1  4593					 GetDlgItemTextA     PROCDESC	 WINAPI	 :HWND,	:SDWORD, :LPCSTR, :DWORD
1  4594		  = GetDlgItemTextA	 GetDlgItemText	     TEXTEQU <GetDlgItemTextA>
1  4595					 SendDlgItemMessageA	 PROCDESC	 WINAPI	 :HWND,	:UINT, :UINT, :WPARAM, :LPARAM
1  4596		  = SendDlgItemMessageA	 SendDlgItemMessage	 TEXTEQU <SendDlgItemMessageA>
1  4597					 DefDlgProcA		 PROCDESC	 WINAPI	 :HWND,	:UINT, :WPARAM,	:LPARAM
1  4598		  = DefDlgProcA		 DefDlgProc		 TEXTEQU <DefDlgProcA>
1  4599		  =001E			 DLGWINDOWEXTRA		 EQU	 00000001Eh
1  4600
1  4601					 SetFocus		 PROCDESC	 WINAPI	 :HWND
1  4602					 SetTimer		 PROCDESC	 WINAPI	 :HWND,	:UINT, :UINT, :PTR DWORD
1  4603					 KillTimer		 PROCDESC	 WINAPI	 :HWND,	:UINT
1  4604					 EnableWindow		 PROCDESC	 WINAPI	 :HWND,	:BOOL
1  4605					 LoadAcceleratorsA	 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR
1  4606		  = LoadAcceleratorsA	 LoadAccelerators	 TEXTEQU <LoadAcceleratorsA>
1  4607					 TranslateAcceleratorA	 PROCDESC	 WINAPI	 :HWND,	:HACCEL, :LPMSG
1  4608		  =		      +	 TranslateAccelerator	 TEXTEQU <TranslateAcceleratorA>
   4609		  TranslateAcceleratorA
1  4610
1  4611		  =0000			 SM_CXSCREEN		 EQU	 000h
1  4612		  =0001			 SM_CYSCREEN		 EQU	 001h
1  4613		  =0010			 SM_CXFULLSCREEN	 EQU	 010h
1  4614		  =0011			 SM_CYFULLSCREEN	 EQU	 011h
1  4615					 GetSystemMetrics	 PROCDESC	 WINAPI	 :UINT
1  4616					 DrawTextA		 PROCDESC	 WINAPI	 :HDC, :LPCSTR,	:UINT, :LPRECT,	:UINT
1  4617		  = DrawTextA		 DrawText		 TEXTEQU <DrawTextA>
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 82
pmScript.ASM



1  4618					 UpdateWindow		 PROCDESC	 WINAPI	 :HWND
1  4619					 SetForegroundWindow	 PROCDESC	 WINAPI	 :HWND
1  4620					 GetDC			 PROCDESC	 WINAPI	 :HWND
1  4621					 GetWindowDC		 PROCDESC	 WINAPI	 :HWND
1  4622					 ReleaseDC		 PROCDESC	 WINAPI	 :HWND,	:HDC
1  4623					 BeginPaint		 PROCDESC	 WINAPI	 :HWND,	:LPPAINTSTRUCT
1  4624					 EndPaint		 PROCDESC	 WINAPI	 :HWND,	:LPPAINTSTRUCT
1  4625					 InvalidateRect		 PROCDESC	 WINAPI	 :HWND,	:LPRECT, :UINT
1  4626					 InvalidateRgn		 PROCDESC	 WINAPI	 :HWND,	:HRGN, :BOOL
1  4627					 GetScrollPos		 PROCDESC	 WINAPI	 :HWND,	:UINT
1  4628					 GetWindowTextA	     PROCDESC	 WINAPI	 :HWND,	:LPCSTR, :DWORD
1  4629		  = GetWindowTextA	 GetWindowText	     TEXTEQU <GetWindowTextA>
1  4630					 SetWindowTextA		 PROCDESC	 WINAPI	 :HWND,	:LPCSTR
1  4631		  = SetWindowTextA	 SetWindowText		 TEXTEQU <SetWindowTextA>
1  4632					 GetClientRect		 PROCDESC	 WINAPI	 :HWND,	:LPRECT
1  4633					 GetWindowRect		 PROCDESC	 WINAPI	 :HWND,	:LPRECT
1  4634
1  4635		  =0000			 MB_OK			 EQU	 000h
1  4636		  =0001			 MB_OKCANCEL		 EQU	 001h
1  4637		  =0002			 MB_ABORTRETRYIGNORE	 EQU	 002h
1  4638		  =0003			 MB_YESNOCANCEL		 EQU	 003h
1  4639		  =0004			 MB_YESNO		 EQU	 004h
1  4640		  =0005			 MB_RETRYCANCEL		 EQU	 005h
1  4641					 ;MB_ICONERROR		 EQU	 010h
1  4642					 ;MB_ICONWARNING	 EQU	 030h
1  4643					 MessageBoxA		 PROCDESC	 WINAPI	 :HWND,	:LPCSTR, :LPCSTR, :UINT
1  4644		  = MessageBoxA		 MessageBox		 TEXTEQU <MessageBoxA>
1  4645
1  4646		  =0001			 COLOR_BACKGROUND	 EQU	 001h
1  4647		  =0005			 COLOR_WINDOW		 EQU	 005h
1  4648					 ;COLOR_3DFACE		 EQU	 00Fh
1  4649					 ;COLOR_3DSHADOW	 EQU	 010h
1  4650		  =000C			 COLOR_APPWORKSPACE	 EQU	 00Ch
1  4651		  =0016			 COLOR_3DLIGHT		 EQU	 016h
1  4652					 GetSysColor		 PROCDESC	 WINAPI	 :UINT
1  4653					 SetSysColors		 PROCDESC	 WINAPI	 :UINT
1  4654					 FillRect		 PROCDESC	 WINAPI	 :HDC, :LPRECT,	:HBRUSH
1  4655					 GetWindowLongA		 PROCDESC	 WINAPI	 :HWND,	:DWORD
1  4656		  = GetWindowLongA	 GetWindowLong		 TEXTEQU <GetWindowLongA>
1  4657					 GetDesktopWindow	 PROCDESC	 WINAPI
1  4658					 FindWindowA		 PROCDESC	 WINAPI	 :LPCSTR, :LPCSTR
1  4659		  = FindWindowA		 FindWindow		 TEXTEQU <FindWindowA>
1  4660					 FindWindowExA		 PROCDESC	 WINAPI	 :LPCSTR, :LPCSTR
1  4661		  = FindWindowExA	 FindWindowEx		 TEXTEQU <FindWindowExA>
1  4662					 GetLastActivePopup	 PROCDESC	 WINAPI	 :HWND
1  4663
1  4664		  =0010			 MF_POPUP		 EQU	 00010h
1  4665		  =2000			 MF_SYSMENU		 EQU	 02000h
1  4666					 ;MFT_SEPARATOR		 EQU	 00800h
1  4667
1  4668		  =F000			 SC_SIZE		 EQU	 0F000h
1  4669		  =F010			 SC_MOVE		 EQU	 0F010h
1  4670		  =F020			 SC_MINIMIZE		 EQU	 0F020h
1  4671		  =F030			 SC_MAXIMIZE		 EQU	 0F030h
1  4672		  =F060			 SC_CLOSE		 EQU	 0F060h
1  4673		  =F120			 SC_RESTORE		 EQU	 0F120h
1  4674
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 83
pmScript.ASM



1  4675					 LoadBitmapA		 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR
1  4676		  = LoadBitmapA		 LoadBitmap		 TEXTEQU <LoadBitmapA>
1  4677					 LoadCursorA		 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR
1  4678		  = LoadCursorA		 LoadCursor		 TEXTEQU <LoadCursorA>
1  4679					 LoadCursorFromFileA	 PROCDESC	 WINAPI	 :LPCSTR
1  4680		  = LoadCursorFromFileA	 LoadCursorFromFile	 TEXTEQU <LoadCursorFromFileA>
1  4681					 SetCursor		 PROCDESC	 WINAPI	 :HCURSOR
1  4682					 LoadIconA		 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR
1  4683		  = LoadIconA		 LoadIcon		 TEXTEQU <LoadIconA>
1  4684					 LoadMenuA		 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR
1  4685		  = LoadMenuA		 LoadMenu		 TEXTEQU <LoadMenuA>
1  4686					 LoadStringA		 PROCDESC	 WINAPI	 :HINSTANCE, :INTEGER, :LPTSTR,	:INTEGER
1  4687		  = LoadStringA		 LoadString		 TEXTEQU <LoadStringA>
1  4688					 LoadLibraryA		 PROCDESC	 WINAPI	 :LPCSTR
1  4689		  = LoadLibraryA	 LoadLibrary		 TEXTEQU <LoadLibraryA>
1  4690
1  4691
1  4692		  =0000			 IMAGE_BITMAP		 EQU	 00000h
1  4693		  =0001			 IMAGE_ICON		 EQU	 00001h
1  4694		  =0002			 IMAGE_CURSOR		 EQU	 00002h
1  4695		  =0020			 LR_LOADTRANSPARENT	 EQU	 00020h
1  4696		  =1000			 LR_LOADMAP3DCOLORS	 EQU	 01000h
1  4697					 LoadImageA		 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR, :UINT, :UINT, :UINT,  +
   4698					 :UINT
1  4699		  = LoadImageA		 LoadImage		 TEXTEQU <LoadImageA>
1  4700
1  4701		  =7F00			 IDC_ARROW		 EQU	 07f00h
1  4702
1  4703					 LoadStringA		 PROCDESC	 WINAPI	 :HINSTANCE, :UINT, :LPCSTR, :UINT
1  4704		  = LoadStringA		 LoadString		 TEXTEQU <LoadStringA>
1  4705
1  4706		  =0001			 IDOK			 EQU	 01h
1  4707		  =0002			 IDCANCEL		 EQU	 02h
1  4708		  =0003			 IDABORT		 EQU	 03h
1  4709		  =0004			 IDRETRY		 EQU	 04h
1  4710		  =0005			 IDIGNORE		 EQU	 05h
1  4711		  =0006			 IDYES			 EQU	 06h
1  4712		  =0007			 IDNO			 EQU	 07h
1  4713		  =0008			 IDCLOSE		 EQU	 08h
1  4714		  =0009			 IDHELP			 EQU	 09h
1  4715
1  4716		  =0000			 ES_LEFT		 EQU	 000h
1  4717		  =0004			 ES_MULTILINE		 EQU	 004h
1  4718		  =0040			 ES_AUTOVSCROLL		 EQU	 040h
1  4719
1  4720		  =00F0			 BM_GETCHECK		 EQU	 0F0h
1  4721		  =00F1			 BM_SETCHECK		 EQU	 0F1h
1  4722		  =00F5			 BM_CLICK		 EQU	 0F5h
1  4723		  =00F7			 BM_SETIMAGE		 EQU	 0F7h
1  4724
1  4725		  =0000			 BST_UNCHECKED		 EQU	 00h
1  4726		  =0001			 BST_CHECKED		 EQU	 01h
1  4727		  =0002			 BST_INDETERMINATE	 EQU	 02h
1  4728
1  4729		  =0000			 SS_LEFT		 EQU	 00h
1  4730		  =0001			 SS_CENTER		 EQU	 01h
1  4731		  =0002			 SS_RIGHT		 EQU	 02h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 84
pmScript.ASM



1  4732		  =0003			 SS_ICON		 EQU	 03h
1  4733		  =0007			 SS_BLACKFRAME		 EQU	 07h
1  4734
1  4735					 IsDialogMessageA	 PROCDESC	 WINAPI	 :HWND,	:LPMSG
1  4736		  = IsDialogMessageA	 IsDialogMessage	 TEXTEQU <IsDialogMessageA>
1  4737
1  4738		  =0080			 DS_MODALFRAME		 EQU	 0080h
1  4739		  =0100			 DS_NOIDLEMSG		 EQU	 0100h
1  4740		  =0004			 DS_3DLOOK		 EQU	 0004h
1  4741
1  4742		  =0001			 HELP_CONTEXT		 EQU	 01h
1  4743		  =0002			 HELP_QUIT		 EQU	 02h
1  4744		  =0003			 HELP_INDEX		 EQU	 03h
1  4745		  =0003			 HELP_CONTENTS		 EQU	 03h
1  4746		  =0004			 HELP_HELPONHELP	 EQU	 04h
1  4747		  =000A			 HELP_CONTEXTMENU	 EQU	 0Ah
1  4748		  =000B			 HELP_FINDER		 EQU	 0Bh
1  4749		  =000C			 HELP_WM_HELP		 EQU	 0Ch
1  4750
1  4751					 WinHelpA		 PROCDESC	 WINAPI	 :HWND,	:LPCSTR, :UINT,	:DWORD
1  4752		  = WinHelpA		 WinHelp		 TEXTEQU <WinHelpA>
1  4753
1  4754
1  4755					 ;*******************************************************************************
1  4756					 ;*	 COMDLG32.LIB	 COMMDLG.H	 ****************************************
1  4757					 ;*******************************************************************************
1  4758
1  4759	00000000			 OPENFILENAMEA		 STRUCT
1  4760	00000000  01*(????????)			 op_lStructSize	 DWORD		 ?
1  4761	00000004  01*(????????)			 op_hwndOwner	 HWND		 ?
1  4762	00000008  01*(????????)			 op_hInstance	 HINSTANCE	 ?
1  4763	0000000C  01*(????????)			 op_lpstrFilter	 LPCSTR		 ?
1  4764	00000010  01*(????????)			 op_lpstrCustomFilter LPSTR		 ?
1  4765	00000014  01*(????????)			 op_nMaxCustFilter	 DWORD		 ?
1  4766	00000018  01*(????????)			 op_nFilterIndex DWORD		 ?
1  4767	0000001C  01*(????????)			 op_lpstrFile	 LPSTR		 ?
1  4768	00000020  01*(????????)			 op_nMaxFile	 DWORD		 ?
1  4769	00000024  01*(????????)			 op_lpstrFileTitle	 LPSTR		 ?
1  4770	00000028  01*(????????)			 op_nMaxFileTitle	 DWORD		 ?
1  4771	0000002C  01*(????????)			 op_lpstrInitialDir	 LPCSTR		 ?
1  4772	00000030  01*(????????)			 op_lpstrTitle	 LPCSTR		 ?
1  4773	00000034  01*(????????)			 op_Flags		 DWORD		 ?
1  4774	00000038  01*(????)			 op_nFileOffset	 WORD		 ?
1  4775	0000003A  01*(????)			 op_nFileExtension	 WORD		 ?
1  4776	0000003C  01*(????????)			 op_lpstrDefExt	 LPCSTR		 ?
1  4777	00000040  01*(????????)			 op_lCustData	 LPARAM		 ?
1  4778	00000044  01*(????????)			 op_lpfnHook	 DWORD		 ?
1  4779	00000048  01*(????????)			 op_lpTemplateName	 LPCSTR		 ?
1  4780	0000004C			 OPENFILENAMEA		 ENDS
1  4781					 LPOPENFILENAME		 TYPEDEF PTR OPENFILENAMEA
1  4782
1  4783					 GetOpenFileNameA	 PROCDESC	 WINAPI	 :LPOPENFILENAME
1  4784		  = GetOpenFileNameA	 GetOpenFileName TEXTEQU <GetOpenFileNameA>
1  4785					 GetSaveFileNameA	 PROCDESC	 WINAPI	 :LPOPENFILENAME
1  4786		  = GetSaveFileNameA	 GetSaveFileName TEXTEQU <GetSaveFileNameA>
1  4787
1  4788		  =0001			 OFN_READONLY		 EQU	 00000001h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 85
pmScript.ASM



1  4789		  =0002			 OFN_OVERWRITEPROMPT	 EQU	 00000002h
1  4790		  =0004			 OFN_HIDEREADONLY	 EQU	 00000004h
1  4791		  =0008			 OFN_NOCHANGEDIR	 EQU	 00000008h
1  4792		  =0010			 OFN_SHOWHELP		 EQU	 00000010h
1  4793		  =0020			 OFN_ENABLEHOOK		 EQU	 00000020h
1  4794		  =0040			 OFN_ENABLETEMPLATE	 EQU	 00000040h
1  4795		  =0080			 OFN_ENABLETEMPLATEHANDLE EQU	 00000080h
1  4796		  =0100			 OFN_NOVALIDATE		 EQU	 00000100h
1  4797		  =0200			 OFN_ALLOWMULTISELECT	 EQU	 00000200h
1  4798		  =0400			 OFN_EXTENSIONDIFFERENT	 EQU	 00000400h
1  4799		  =0800			 OFN_PATHMUSTEXIST	 EQU	 00000800h
1  4800		  =1000			 OFN_FILEMUSTEXIST	 EQU	 00001000h
1  4801		  =2000			 OFN_CREATEPROMPT	 EQU	 00002000h
1  4802		  =4000			 OFN_SHAREAWARE		 EQU	 00004000h
1  4803		  =8000			 OFN_NOREADONLYRETURN	 EQU	 00008000h
1  4804		  =00010000		 OFN_NOTESTFILECREATE	 EQU	 00010000h
1  4805		  =00020000		 OFN_NONETWORKBUTTON	 EQU	 00020000h
1  4806		  =00040000		 OFN_NOLONGNAMES	 EQU	 00040000h
1  4807		  =00080000		 OFN_EXPLORER		 EQU	 00080000h
1  4808		  =00100000		 OFN_NODEREFERENCELINKS	 EQU	 00100000h
1  4809		  =00200000		 OFN_LONGNAMES		 EQU	 00200000h
1  4810
1  4811	00000000			 PRINTDLGA		 STRUCT
1  4812	00000000  01*(????????)			 pr_lStructSize	 DWORD	 ?
1  4813	00000004  01*(????????)			 pr_hwndOwner	 HWND	 ?
1  4814	00000008  01*(????????)			 pr_hDevMode	 HGLOBAL ?
1  4815	0000000C  01*(????????)			 pr_hDevNames	 HGLOBAL ?
1  4816	00000010  01*(????????)			 pr_hDC		 HDC	 ?
1  4817	00000014  01*(????????)			 pr_Flags		 DWORD	 ?
1  4818	00000018  01*(????)			 pr_nFromPage	 WORD	 ?
1  4819	0000001A  01*(????)			 pr_nToPage		 WORD	 ?
1  4820	0000001C  01*(????)			 pr_nMinPage	 WORD	 ?
1  4821	0000001E  01*(????)			 pr_nMaxPage	 WORD	 ?
1  4822	00000020  01*(????)			 pr_nCopies		 WORD	 ?
1  4823	00000022  01*(????????)			 pr_hInstance	 HINSTANCE ?
1  4824	00000026  01*(????????)			 pr_lCustData	 DWORD	 ?
1  4825	0000002A  01*(????????)			 pr_lpfnPrintHook	 DWORD	 ?
1  4826	0000002E  01*(????????)			 pr_lpfnSetupHook	 DWORD	 ?
1  4827	00000032  01*(????????)			 pr_lpPrintTemplateName	LPCSTR ?
1  4828	00000036  01*(????????)			 pr_lpSetupTemplateName	LPCSTR ?
1  4829	0000003A  01*(????????)			 pr_hPrintTemplate	 HGLOBAL ?
1  4830	0000003E  01*(????????)			 pr_hSetupTemplate	 HGLOBAL ?
1  4831	00000042			 PRINTDLGA		 ENDS
1  4832					 LPPRINTDLG		 TYPEDEF PTR PRINTDLGA
1  4833
1  4834					 PrintDlg		 PROCDESC	 WINAPI	 :LPPRINTDLG
1  4835
1  4836		  =0000			 PD_ALLPAGES		 EQU	 00000h
1  4837		  =0001			 PD_SELECTION		 EQU	 00001h
1  4838		  =0002			 PD_PAGENUMS		 EQU	 00002h
1  4839		  =0004			 PD_NOSELECTION		 EQU	 00004h
1  4840		  =0008			 PD_NOPAGENUMS		 EQU	 00008h
1  4841		  =0010			 PD_COLLATE		 EQU	 00010h
1  4842		  =0020			 PD_PRINTTOFILE		 EQU	 00020h
1  4843		  =0040			 PD_PRINTSETUP		 EQU	 00040h
1  4844		  =0080			 PD_NOWARNING		 EQU	 00080h
1  4845		  =0100			 PD_RETURNDC		 EQU	 00100h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 86
pmScript.ASM



1  4846		  =0200			 PD_RETURNIC		 EQU	 00200h
1  4847		  =0400			 PD_RETURNDEFAULT	 EQU	 00400h
1  4848		  =0800			 PD_SHOWHELP		 EQU	 00800h
1  4849		  =1000			 PD_ENABLEPRINTHOOK	 EQU	 01000h
1  4850		  =2000			 PD_ENABLESETUPHOOK	 EQU	 02000h
1  4851		  =4000			 PD_ENABLEPRINTTEMPLATE	 EQU	 04000h
1  4852		  =8000			 PD_ENABLESETUPTEMPLATE	 EQU	 08000h
1  4853		  =00010000		 PD_ENABLEPRINTTEMPLATEHANDLE	 EQU	 0010000h
1  4854		  =00020000		 PD_ENABLESETUPTEMPLATEHANDLE	 EQU	 0020000h
1  4855		  =00040000		 PD_USEDEVMODECOPIES		 EQU	 0040000h
1  4856		  =00040000		 PD_USEDEVMODECOPIESANDCOLLATE	 EQU	 0040000h
1  4857		  =00080000		 PD_DISABLEPRINTTOFILE		 EQU	 0080000h
1  4858		  =00100000		 PD_HIDEPRINTTOFILE		 EQU	 0100000h
1  4859		  =00200000		 PD_NONETWORKBUTTON		 EQU	 0200000h
1  4860
1  4861					 CommDlgExtendedError	 PROCDESC	 WINAPI
1  4862
1  4863	00000000			 PAGESETUPDLGA		 STRUCT
1  4864	00000000  01*(????????)			 pa_lStructSize	 DWORD	 ?
1  4865	00000004  01*(????????)			 pa_hwndOwner	 HWND	 ?
1  4866	00000008  01*(????????)			 pa_hDevMode	 HGLOBAL ?
1  4867	0000000C  01*(????????)			 pa_hDevNames	 HGLOBAL ?
1  4868	00000010  01*(????????)			 pa_Flags		 DWORD	 ?
1  4869	00000014  01*(00000000	      +		 pa_ptPaperSize	 POINT	 <>
   4870		  00000000)
1  4871	0000001C  01*(00000000	      +		 pa_rtMinMargin	 RECT	 <>
   4872		  00000000 00000000   +
   4873		  00000000)
1  4874	0000002C  01*(00000000	      +		 pa_rtMargin	 RECT	 <>
   4875		  00000000 00000000   +
   4876		  00000000)
1  4877	0000003C  01*(????????)			 pa_hInstance	 HINSTANCE ?
1  4878	00000040  01*(????????)			 pa_lCustData	 LPARAM	 ?
1  4879	00000044  01*(????????)			 pa_lpfnPageSetupHook	 DWORD	 ?
1  4880	00000048  01*(????????)			 pa_lpfnPagePaintHook	 DWORD	 ?
1  4881	0000004C  01*(????????)			 pa_lpPageSetupTemplateName LPCSTR	 ?
1  4882	00000050  01*(????????)			 pa_hPageSetupTemplate	 HGLOBAL ?
1  4883	00000054			 PAGESETUPDLGA		 ENDS
1  4884					 LPPAGESETUPDLG		 TYPEDEF PTR PAGESETUPDLGA
1  4885
1  4886					 PageSetupDlg		 PROCDESC	 WINAPI	 :LPPAGESETUPDLG
1  4887
1  4888		  =0000			 PSD_DEFAULTMINMARGINS		 EQU	 0000000h
1  4889		  =0001			 PSD_MINMARGINS			 EQU	 0000001h
1  4890		  =0002			 PSD_MARGINS			 EQU	 0000002h
1  4891		  =0004			 PSD_INTHOUSANDTHSOFINCHES	 EQU	 0000004h
1  4892		  =0008			 PSD_INHUNDREDTHSOFMILLIMETERS	 EQU	 0000008h
1  4893		  =0010			 PSD_DISABLEMARGINS		 EQU	 0000010h
1  4894		  =0020			 PSD_DISABLEPRINTER		 EQU	 0000020h
1  4895		  =0080			 PSD_NOWARNING			 EQU	 0000080h
1  4896		  =0100			 PSD_DISABLEORIENTATION		 EQU	 0000100h
1  4897		  =0200			 PSD_DISABLEPAPER		 EQU	 0000200h
1  4898		  =0400			 PSD_RETURNDEFAULT		 EQU	 0000400h
1  4899		  =0800			 PSD_SHOWHELP			 EQU	 0000800h
1  4900		  =2000			 PSD_ENABLEPAGESETUPHOOK	 EQU	 0002000h
1  4901		  =8000			 PSD_ENABLEPAGESETUPTEMPLATE	 EQU	 0008000h
1  4902		  =00020000		 PSD_ENABLEPAGESETUPTEMPLATEHANDLE EQU	 0020000h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 87
pmScript.ASM



1  4903		  =00040000		 PSD_ENABLEPAGEPAINTHOOK	 EQU	 0040000h
1  4904		  =00080000		 PSD_DISABLEPAGEPAINTING	 EQU	 0080000h
1  4905		  =00200000		 PSD_NONETWORKBUTTON		 EQU	 0200000h
1  4906
1  4907
1  4908					 ;*******************************************************************************
1  4909					 ;*	 COMCTL32.LIB	 COMMCTRL.H	 ****************************************
1  4910					 ;*******************************************************************************
1  4911
1  4912					 InitCommonControls	 PROCDESC	 WINAPI
1  4913
1  4914
1  4915					 CreateToolbarEx	 PROCDESC	 WINAPI	 :HWND,	:DWORD,	:UINT, :SDWORD,\
   4916										 :HINSTANCE, :UINT, :LPCTBBUTTON,\
   4917										 :SDWORD, :SDWORD, :SDWORD,\
   4918										 :SDWORD, :SDWORD, :UINT
1  4919		  =0004			 TBSTATE_ENABLED	 EQU	 4h
1  4920		  =0000			 TBSTYLE_BUTTON		 EQU	 0h
1  4921		  =0001			 TBSTYLE_SEP		 EQU	 1h
1  4922		  =0100			 TBSTYLE_TOOLTIPS	 EQU	 0100h
1  4923
1  4924		  =0413			 TB_ADDBITMAP		 EQU	 WM_USER + 13h
1  4925
1  4926
1  4927		  =-0001		 HINST_COMMCTRL		 EQU	 -1h
1  4928		  =0000			 IDB_STD_SMALL_COLOR	 EQU	 00h
1  4929
1  4930		  =0000			 STD_CUT		 EQU	 00h
1  4931		  =0001			 STD_COPY		 EQU	 01h
1  4932		  =0002			 STD_PASTE		 EQU	 02h
1  4933		  =0003			 STD_UNDO		 EQU	 03h
1  4934		  =0004			 STD_REDOW		 EQU	 04h
1  4935		  =0005			 STD_DELETE		 EQU	 05h
1  4936		  =0006			 STD_FILENEW		 EQU	 06h
1  4937		  =0007			 STD_FILEOPEN		 EQU	 07h
1  4938		  =0008			 STD_FILESAVE		 EQU	 08h
1  4939		  =0009			 STD_PRINTPRE		 EQU	 09h
1  4940		  =000A			 STD_PROPERTIES		 EQU	 0Ah
1  4941		  =000B			 STD_HELP		 EQU	 0Bh
1  4942		  =000C			 STD_FIND		 EQU	 0Ch
1  4943		  =000D			 STD_REPLACE		 EQU	 0Dh
1  4944		  =000E			 STD_PRINT		 EQU	 0Eh
1  4945
1  4946		  =-0208		 TTN_FIRST		 EQU	 -520
1  4947		  =-0208		 TTN_NEEDTEXT		 EQU	 TTN_FIRST - 0
1  4948
1  4949	00000000			 TOOLTIPTEXTA		 STRUCT
1  4950	00000000  01*(0C*(??))			 hdr		 NMHDR	 <>
1  4951	0000000C  01*(????????)			 lpszText	 LPSTR	 ?
1  4952	00000010  01*(50*(??))			 szText		 SBYTE	 80 DUP	(?)
1  4953	00000060  01*(????????)			 hinst		 HINSTANCE ?
1  4954	00000064  01*(????????)			 uFlags		 UINT	 ?
1  4955	00000068			 TOOLTIPTEXTA		 ENDS
1  4956					 LPTOOLTIPTEXT		 TYPEDEF PTR TOOLTIPTEXTA
1  4957		  = TOOLTIPTEXTA	 TOOLTIPTEXT		 TEXTEQU <TOOLTIPTEXTA>
1  4958
1  4959					 CreateStatusWindow	 PROCDESC	 WINAPI	 :LONG,	:LPCSTR, :HWND,	:UINT
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 88
pmScript.ASM



1  4960
1  4961		  =0401			 SB_SETTEXTA		 EQU	 (WM_USER+1)
1  4962					 SB_SETTEXT		 EQU	 SB_SETTEXTA
1  4963		  =0409			 SB_SIMPLE		 EQU	 (WM_USER+9)
1  4964		  =0100			 SBT_NOBORDERS		 EQU	 0100h
1  4965		  =0200			 SBT_POPOUT		 EQU	 0200h
1  4966
1  4967		  =0400			 TBM_GETPOS		 EQU	 (WM_USER)
1  4968		  =0405			 TBM_SETPOS		 EQU	 (WM_USER+5)
1  4969		  =0406			 TBM_SETRANGE		 EQU	 (WM_USER+6)
1  4970		  =0414			 TBM_SETTICFREQ		 EQU	 (WM_USER+20)
1  4971		  =0415			 TBM_SETPAGESIZE	 EQU	 (WM_USER+21)
1  4972		  =0000			 TB_LINEUP		 EQU	 00h
1  4973		  =0001			 TB_LINEDOWN		 EQU	 01h
1  4974		  =0002			 TB_PAGEUP		 EQU	 02h
1  4975		  =0003			 TB_PAGEDOWN		 EQU	 03h
1  4976		  =0004			 TB_THUMBPOSITION	 EQU	 04h
1  4977		  =0005			 TB_THUMBTRACK		 EQU	 05h
1  4978		  =0006			 TB_TOP			 EQU	 06h
1  4979		  =0007			 TB_BOTTOM		 EQU	 07h
1  4980		  =0008			 TB_ENDTRACK		 EQU	 08h
1  4981
1  4982		  =0465			 UDM_SETRANGE		 EQU	 (WM_USER+101)
1  4983		  =0467			 UDM_SETPOS		 EQU	 (WM_USER+103)
1  4984		  =0468			 UDM_GETPOS		 EQU	 (WM_USER+104)
1  4985
1  4986
1  4987
1  4988					 ;............................
1  4989					 ;Added	21 Feb 97
1  4990
1  4991		  =7F00			 IDI_APPLICATION EQU	 32512
1  4992		  =7F01			 IDI_HAND EQU	    32513
1  4993		  =7F02			 IDI_QUESTION EQU	    32514
1  4994		  =7F03			 IDI_EXCLAMATION EQU   32515
1  4995		  =7F04			 IDI_ASTERISK EQU	    32516
1  4996
1  4997		  =0010			 MB_ICONHAND EQU	     00000010h
1  4998		  =0020			 MB_ICONQUESTION EQU	    00000020h
1  4999		  =0030			 MB_ICONEXCLAMATION EQU	    00000030h
1  5000		  =0040			 MB_ICONASTERISK EQU	    00000040h
1  5001
1  5002					 ;taken	from WINGDI.H:
1  5003		  =000A			 OEM_FIXED_FONT	    EQU	10
1  5004		  =000B			 ANSI_FIXED_FONT   EQU 11
1  5005		  =000C			 ANSI_VAR_FONT	   EQU 12
1  5006		  =000D			 SYSTEM_FONT	   EQU 13
1  5007		  =000E			 DEVICE_DEFAULT_FONT EQU 14
1  5008		  =000F			 DEFAULT_PALETTE   EQU 15
1  5009		  =0010			 SYSTEM_FIXED_FONT   EQU  16
1  5010
1  5011
1  5012					 MessageBeep PROCDESC WINAPI :DWORD
1  5013
1  5014	00000000			 MINMAXINFO struc
1  5015	00000000  01*(????????)		   res_x	       dd ?
1  5016	00000004  01*(????????)		   res_y	       dd ?
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 89
pmScript.ASM



1  5017	00000008  01*(????????)		   maxsize_x	       dd ?
1  5018	0000000C  01*(????????)		   maxsize_y	       dd ?
1  5019	00000010  01*(????????)		   maxposition_x       dd ?
1  5020	00000014  01*(????????)		   maxposition_y       dd ?
1  5021	00000018  01*(????????)		   mintrackposition_x  dd ?
1  5022	0000001C  01*(????????)		   mintrackposition_y  dd ?
1  5023	00000020  01*(????????)		   maxtrackposition_x  dd ?
1  5024	00000024  01*(????????)		   maxtrackposition_y  dd ?
1  5025	00000028			 MINMAXINFO ends
1  5026
1  5027
1  5028		  =0006			 RT_STRING		 EQU	 6
1  5029		  =0443			 EM_SETBKGNDCOLOR	 EQU	 WM_USER + 67
1  5030		  =044D			 EM_SETOPTIONS		 EQU	 WM_USER + 77
1  5031		  =044E			 EM_GETOPTIONS		 EQU	 WM_USER + 78
1  5032
1  5033		  =0459			 EM_SETTEXTMODE		 EQU	 WM_USER + 89
1  5034		  =045A			 EM_GETTEXTMODE		 EQU	 WM_USER + 90
1  5035		  =0001			 TM_PLAINTEXT		 EQU	 1
1  5036		  =0002			 TM_RICHTEXT		 EQU	 2
1  5037
1  5038		  =045D			 EM_SETPALETTE		 EQU	 WM_USER + 93
1  5039		  =2000			 ES_DISABLENOSCROLL	 EQU	 2000h
1  5040
1  5041					 GetTickCount		 PROCDESC	 WINAPI
1  5042
1  5043		  =0002			 RT_BITMAP		 EQU	 2
1  5044		  =0172			 STM_SETIMAGE		 EQU	 0172h
1  5045		  =0000			 STN_CLICKED		 EQU	 0
1  5046		  =0001			 STN_DBLCLK		 EQU	 1
1  5047		  =0002			 STN_ENABLE		 EQU	 2
1  5048		  =0003			 STN_DISABLE		 EQU	 3
1  5049
1  5050
1  5051					 GetProcAddress		 PROCDESC	 WINAPI
1  5052
1  5053					 FindFirstFileA	PROCDESC WINAPI	:DWORD
1  5054		  = FindFirstFileA	 FindFirstFile textequ <FindFirstFileA>
1  5055					 FindNextFileA PROCDESC	WINAPI :DWORD
1  5056		  = FindNextFileA	 FindNextFile textequ <FindNextFileA>
1  5057
1  5058					 GetCurrentDirectoryA PROCDESC WINAPI :DWORD
1  5059		  =		      +	 GetCurrentDirectory textequ <GetCurrentDirectoryA>
   5060		  GetCurrentDirectoryA
1  5061					 SetCurrentDirectoryA PROCDESC WINAPI :DWORD
1  5062		  =		      +	 SetCurrentDirectory textequ <SetCurrentDirectoryA>
   5063		  SetCurrentDirectoryA
1  5064
1  5065	00000000			 COMBOBOXINFO		 STRUCT
1  5066	00000000  01*(????????)		  cxSize	 DWORD	 ?
1  5067	00000004  01*(10*(??))		  rcItem	 RECT	 ?
1  5068	00000014  01*(10*(??))		  rcButton	 RECT	 ?
1  5069	00000024  01*(????????)		  stateButton	 DWORD	 ?
1  5070	00000028  01*(????????)		  wndCombo	 HWND	 ?
1  5071	0000002C  01*(????????)		  wndItem	 HWND	 ?
1  5072	00000030  01*(????????)		  wndList	 HWND	 ?
1  5073	00000034			 COMBOBOXINFO		 ENDS
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 90
pmScript.ASM



1  5074					 GetComboBoxInfo PROCDESC WINAPI :DWORD
1  5075
1  5076					 FILE_MAP_COPY		 EQU	 SECTION_QUERY
1  5077					 FILE_MAP_WRITE		 EQU	 SECTION_MAP_WRITE
1  5078					 FILE_MAP_READ		 EQU	 SECTION_MAP_READ
1  5079					 FILE_MAP_ALL_ACCESS	 EQU	 SECTION_ALL_ACCESS
1  5080					 UnmapViewOfFile PROCDESC WINAPI :DWORD
1  5081					 MapViewOfFile PROCDESC	WINAPI :DWORD
1  5082					 CreateFileMappingA PROCDESC WINAPI :DWORD
1  5083		  = CreateFileMappingA	 CreateFileMapping textequ <CreateFileMappingA>
1  5084
1  5085		  =0460			 EM_SHOWSCROLLBAR	 EQU	 (WM_USER + 96)
1  5086		  =0461			 EM_SETTEXTEX		 EQU	 (WM_USER + 97)
1  5087		  =0464			 EM_SETPUNCTUATION	 EQU	 (WM_USER + 100)
1  5088		  =0465			 EM_GETPUNCTUATION	 EQU	 (WM_USER + 101)
1  5089		  =0466			 EM_SETWORDWRAPMODE	 EQU	 (WM_USER + 102)
1  5090		  =0467			 EM_GETWORDWRAPMODE	 EQU	 (WM_USER + 103)
1  5091
1  5092					 TrackPopupMenuEx PROCDESC WINAPI :DWORD
1  5093					 GetSubMenu PROCDESC WINAPI :DWORD
1  5094					 SetActiveWindow PROCDESC WINAPI :DWORD
1  5095
1  5096		  =0000			 TPM_LEFTALIGN		 equ	 000h
1  5097		  =0004			 TPM_CENTERALIGN	 equ	 004h
1  5098		  =0008			 TPM_RIGHTALIGN		 equ	 008h
1  5099		  =0000			 TPM_TOPALIGN		 equ	 000h
1  5100		  =0010			 TPM_VCENTERALIGN	 equ	 010h
1  5101		  =0020			 TPM_BOTTOMALIGN	 equ	 020h
1  5102		  =0100			 TPM_RETURNCMD		 equ	 100h
1  5103
1  5104		  =0800			 TBSTYLE_FLAT		 equ	 800h
1  5105
1  5106					 WritePrivateProfileStringA PROCDESC WINAPI :DWORD
1  5107		  =		      +	 WritePrivateProfileString textequ <WritePrivateProfileStringA>
   5108		  WritePrivateProfileSt
   5109		  ringA
1  5110					 GetPrivateProfileStringA PROCDESC WINAPI :DWORD
1  5111		  =		      +	 GetPrivateProfileString textequ <GetPrivateProfileStringA>
   5112		  GetPrivateProfileStri
   5113		  ngA
1  5114
1  5115					 CreateCompatibleDC PROCDESC WINAPI :DWORD
1  5116
1  5117		  =0000			 LR_DEFAULTCOLOR     = 0000h
1  5118		  =0001			 LR_MONOCHROME	     = 0001h
1  5119		  =0002			 LR_COLOR	     = 0002h
1  5120		  =0004			 LR_COPYRETURNORG    = 0004h
1  5121		  =0008			 LR_COPYDELETEORG    = 0008h
1  5122		  =0010			 LR_LOADFROMFILE     = 0010h
1  5123		  =0020			 LR_LOADTRANSPARENT  = 0020h
1  5124		  =0040			 LR_DEFAULTSIZE	     = 0040h
1  5125		  =0080			 LR_VGACOLOR	     = 0080h
1  5126		  =1000			 LR_LOADMAP3DCOLORS  = 1000h
1  5127		  =2000			 LR_CREATEDIBSECTION = 2000h
1  5128		  =4000			 LR_COPYFROMRESOURCE = 4000h
1  5129		  =8000			 LR_SHARED	     = 8000h
1  5130
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 91
pmScript.ASM



1  5131					 GetMenu PROCDESC WINAPI :DWORD
1  5132					 SetMenuItemBitmaps PROCDESC WINAPI :DWORD
1  5133		  =0000			 ICON_SMALL	 =	 0
1  5134		  =0001			 ICON_BIG	 =	 1
1  5135					 GetFileInformationByHandle PROCDESC WINAPI :DWORD
1  5136
1  5137					 extrn	 ExitWindowsEx:PROC
1  5138
1  5139		  =0000			 EWX_LOGOFF	 =	 0
1  5140		  =0001			 EWX_SHUTDOWN	 =	 1
1  5141		  =0002			 EWX_REBOOT	 =	 2
1  5142		  =0004			 EWX_FORCE	 =	 4
1  5143		  =0008			 EWX_POWEROFF	 =	 8
1  5144
1  5145		  =0001			 WA_ACTIVE	 =	 1
1  5146
1  5147					 BringWindowToTop PROCDESC WINAPI :DWORD
1  5148					 GetActiveWindow PROCDESC WINAPI :DWORD
1  5149
1  5150		  =0004			 HORZSIZE			      equ 4
1  5151		  =0006			 VERTSIZE			      equ 6
1  5152		  =0008			 HORZRES			      equ 8
1  5153		  =000A			 VERTRES			      equ 10
1  5154		  =000C			 BITSPIXEL			      equ 12
1  5155		  =000E			 PLANES				      equ 14
1  5156		  =0001			 DCX_WINDOW	 equ	 1
1  5157					 GetDCEx PROCDESC WINAPI :DWORD
1  5158					 GetLocalTime PROCDESC WINAPI :DWORD
1  5159
1  5160					 lstrcmpA	 PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  5161		  = lstrcmpA		 lstrcmp	 TEXTEQU <lstrcmpA>
1  5162					 lstrcmpiA	 PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  5163		  = lstrcmpiA		 lstrcmpi	 TEXTEQU <lstrcmpiA>
1  5164					 SetFilePointer	 PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  5165
1  5166					 CopyFileA	 PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  5167		  = CopyFileA		 CopyFile	 TEXTEQU <CopyFileA>
1  5168
1  5169					 DeleteFileA	   PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  5170		  = DeleteFileA		 DeleteFile	   TEXTEQU <DeleteFileA>
1  5171					 MoveFileA	   PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  5172		  = MoveFileA		 MoveFile	   TEXTEQU <MoveFileA>
1  5173
1  5174					 GetShortPathNameA	 PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  5175		  = GetShortPathNameA	 GetShortPathName	 TEXTEQU <GetShortPathNameA>
1  5176
1  5177					 GetUserNameA	    PROCDESC	WINAPI	:LPCSTR	,:LPCSTR
1  5178		  = GetUserNameA	 GetUserName	    TEXTEQU <GetUserNameA>
1  5179
1  5180					 WaitForSingleObject	   PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  5181					 Sleep	     PROCDESC	 WINAPI	 :DWORD
1  5182					 WindowFromPoint       PROCDESC	   WINAPI  :DWORD
1  5183					 GetWindow	 PROCDESC    WINAPI  :DWORD
1  5184
1  5185					 ValidateRect	       PROCDESC	       WINAPI  :HWND, :LPRECT, :UINT
1  5186
1  5187					 GetBitmapDimensionEx	 PROCDESC	 WINAPI
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 92
pmScript.ASM



1  5188					 TransparentBlt	 PROCDESC	 WINAPI
1  5189					 GetObjectA		 PROCDESC	 WINAPI
1  5190		  = GetObjectA		 GetObject		 TEXTEQU <GetObjectA>
1  5191					 SetPixel		 PROCDESC	 WINAPI	:DWORD
1  5192					 GetPixel		 PROCDESC	 WINAPI	:DWORD
1  5193					 CreateThread		 PROCDESC	 WINAPI	:DWORD
1  5194
1  5195					 GetDIBColorTable	 PROCDESC	 WINAPI	:DWORD
1  5196					 SetDIBColorTable	 PROCDESC	 WINAPI	:DWORD
1  5197					 GetCurrentObject	 PROCDESC	 WINAPI	:DWORD
1  5198
1  5199		  =0001			 OBJ_PEN	     EQU	 1
1  5200		  =0002			 OBJ_BRUSH	     EQU	 2
1  5201		  =0003			 OBJ_DC		     EQU	 3
1  5202		  =0004			 OBJ_METADC	     EQU	 4
1  5203		  =0005			 OBJ_PAL	     EQU	 5
1  5204		  =0006			 OBJ_FONT	     EQU	 6
1  5205		  =0007			 OBJ_BITMAP	     EQU	 7
1  5206		  =0008			 OBJ_REGION	     EQU	 8
1  5207		  =0009			 OBJ_METAFILE	     EQU	 9
1  5208		  =000A			 OBJ_MEMDC	     EQU	 10
1  5209		  =000B			 OBJ_EXTPEN	     EQU	 11
1  5210		  =000C			 OBJ_ENHMETADC	     EQU	 12
1  5211		  =000D			 OBJ_ENHMETAFILE     EQU	 13
1  5212		  =000E			 OBJ_COLORSPACE	     EQU	 14
1  5213
1  5214					 TransparentBlt	 PROCDESC	 WINAPI	:DWORD
1  5215					 TerminateProcess	 PROCDESC	 WINAPI
1  5216
1  5217
1  5218	00000000			 BLENDFUNCTION		 struct
1  5219	00000000  01*(??)			 bf_blendOp	 BYTE	 ?
1  5220	00000001  01*(??)			 bf_blenFlags	 BYTE	 ?
1  5221	00000002  01*(??)			 bf_srcAlpha	 BYTE	 ?
1  5222	00000003  01*(??)			 bf_Format	 BYTE	 ?
1  5223	00000004			 BLENDFUNCTION		 ends
1  5224		  =0004			 BLENDFUNCTION_	 equ	 4
1  5225
1  5226
1  5227		  =0000			 AC_SRC_OVER		 equ	 0
1  5228		  =0001			 AC_SRC_ALPHA		 equ	 1
1  5229
1  5230					 AlphaBlend		 PROCDESC	 WINAPI	:DWORD
1  5231
1  5232	00000000			 BITMAPINFO		 struct
1  5233	00000000  01*(28*(??))			 bmiHeader	 BITMAPINFOHEADER	 ?
1  5234	00000028  01*(04*(??))			 bmiColors	 RGBQUAD	 ?
1  5235	0000002C			 BITMAPINFO		 ends
1  5236		  =002C			 BITMAPINFO_		 equ	 BITMAPINFOHEADER_ + RGBQUAD_
1  5237
1  5238					 CreateDIBSection	 PROCDESC	 WINAPI
1  5239					 SetDIBits		 PROCDESC	 WINAPI
1  5240					 GetDIBits		 PROCDESC	 WINAPI
1  5241
1  5242		  =0078			 SHADEBLENDCAPS	 equ	 120
1  5243					 GetDeviceCaps		 PROCDESC	 WINAPI
1  5244
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 93
pmScript.ASM



1  5245		  =00080000		 WS_EX_LAYERED		 equ	 00080000h
1  5246					 SetLayeredWindowAttributes	 PROCDESC	 WINAPI
1  5247					 CreateBitmap		 PROCDESC	 WINAPI
1  5248
1  5249					 SizeofResource	 PROCDESC	 WINAPI	:DWORD
1  5250					 LoadResource		 PROCDESC	 WINAPI	:DWORD
1  5251					 LockResource		 PROCDESC	 WINAPI	:DWORD
1  5252
1  5253		  =0001			 RT_CURSOR		 equ	 1
1  5254		  =0002			 RT_BITMAP		 equ	 2
1  5255		  =0003			 RT_ICON	 equ	 3
1  5256		  =0004			 RT_MENU	 equ	 4
1  5257		  =0005			 RT_DIALOG		 equ	 5
1  5258		  =0006			 RT_STRING		 equ	 6
1  5259		  =0007			 RT_FONTDIR		 equ	 7
1  5260		  =0008			 RT_FONT	 equ	 8
1  5261		  =0009			 RT_ACCELERATOR	 equ	 9
1  5262		  =000A			 RT_RCDATA		 equ	 10
1  5263
1  5264					 ShowCursor		 PROCDESC	 WINAPI	:DWORD
   5265					 INCLUDELIB	 ..\Win32.LIB
   5266
   5267					 public	 LoadScript
   5268					 public	 LoadScriptFromFile
   5269					 public	 CreateVirtualMachine
   5270					 public	 RunScript
   5271					 public	 TakeStep
   5272					 public	ResetVirtualMachine
   5273					 public	PushVMStack
   5274					 public	PopVMStack
   5275
   5276	00000000				 .data?
   5277
   5278	00000000  ????????		 randomSeed	 dd	 ?
   5279
   5280	00000004  ????????		 fileHnd dd	 ?
   5281	00000008  ????????		 mappingHnd	 dd	 ?
   5282	0000000C  ????????		 viewHnd dd	 ?
   5283	00000010  ????????		 lastHnd dd	 ?
   5284	00000014  ????????		 machineHnd	 dd	 ?
   5285
   5286	00000018				 .code
   5287
   5288	00000000			 DLLMain	 proc	 STDCALL, hInst:DWORD, hReason:DWORD, hReserved:DWORD
1  5289	00000000  C8 0000 00			 ENTERD	 00000h,0
1  5290	00000004  E8 00000000e			 call	 GetTickCount
   5291	00000009  C1 C0	10			 rol	 eax, 10h
   5292	0000000C  A3 00000000r			 mov	 randomSeed, eax
   5293
   5294	00000011  B8 00000001			 mov	 eax, 1			 ;Return True
1  5295	00000016  C9				 LEAVED
1  5296	00000017  C2 000C			 RET	 0000Ch
   5297	0000001A			 DLLMain	 endp
   5298
   5299	0000001A			 LoadScript			 proc	 STDCALL, ptrPortableBinary:DWORD,		    +
   5300					 lenPortableBinary:DWORD, ptrAPICallback:DWORD
1  5301	0000001A  C8 0000 00			 ENTERD	 00000h,0
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 94
pmScript.ASM



1  5302	0000001E  8B 75	08			 mov	 esi, ptrPortableBinary
   5303	00000021  8B 06				 mov	 eax, dword ptr	[esi]
   5304						 .IF eax == 00014D50h		 ; 'PM'	and file version 1.0
1  5305	00000023  3D 00014D50			 cmp	 eax,00014D50H
1  5306	00000028  75 17				 jnz	 @C0001
   5307
   5308	0000002A  FF 75	10				 push	 ptrAPICallback
   5309	0000002D  FF 76	0C				 push	 dword ptr [esi	+ 0Ch]	 ; Start IP
   5310	00000030  FF 76	10				 push	 dword ptr [esi	+ 10h]	 ; Stack Length
   5311	00000033  FF 76	08				 push	 dword ptr [esi	+ 08h]	 ; Code	Length
   5312	00000036  03 76	04				 add	 esi, [esi + 04h]		 ; ESI == Code Start
   5313	00000039  56					 push	 esi
   5314	0000003A  E8 000000D6				 call	 CreateVirtualMachine		 ; EAX will return a machine handle
   5315
   5316						 .ELSE
1  5317	0000003F  EB 02				 jmp	 @C0000
1  5318	00000041			 @C0001:
   5319	00000041  33 C0					 xor	 eax, eax
   5320						 .ENDIF
1  5321	00000043			 @C0000:
1  5322	00000043  C9				 LEAVED
1  5323	00000044  C2 000C			 RET	 0000Ch
   5324	00000047			 LoadScript			 endp
   5325
   5326	00000047			 LoadScriptFromFile		 proc	 STDCALL, ptrFilename:DWORD, ptrAPICallback:DWORD
1  5327	00000047  C8 0000 00			 ENTERD	 00000h,0
1  5328	0000004B  C7 05	00000010r     +		 mov	 lastHnd, 0
   5329		  00000000
   5330
   5331	00000055  6A 00				 push	 0
   5332	00000057  68 00000080			 push	 FILE_ATTRIBUTE_NORMAL
   5333	0000005C  6A 03				 push	 OPEN_EXISTING
   5334	0000005E  6A 00				 push	 0
   5335	00000060  6A 03				 push	 FILE_SHARE_READWRITE
   5336	00000062  68 C0000000			 push	 GENERIC_READWRITE
   5337	00000067  FF 75	08			 push	 ptrFilename
   5338	0000006A  E8 00000000e			 call	 CreateFile
   5339	0000006F  A3 00000004r			 mov	 fileHnd, eax
   5340	00000074  40				 inc	 eax
   5341	00000075  0F 84	00000094		 jz	 loadscriptfile_failed
   5342
   5343	0000007B  6A 00				 push	 0
   5344	0000007D  6A 00				 push	 0
   5345	0000007F  6A 00				 push	 0
   5346	00000081  6A 02				 push	 PAGE_READONLY
   5347	00000083  6A 00				 push	 0
   5348	00000085  FF 35	00000004r		 push	 fileHnd
   5349	0000008B  E8 00000000e			 call	 CreateFileMapping
   5350	00000090  A3 00000008r			 mov	 mappingHnd, eax
   5351	00000095  0B C0				 or	 eax, eax
   5352	00000097  74 6B				 jz	 loadscriptfile_failedclosefile
   5353
   5354	00000099  6A 00				 push	 0
   5355	0000009B  6A 00				 push	 0
   5356	0000009D  6A 00				 push	 0
   5357	0000009F  6A 04				 push	 FILE_MAP_READ
   5358	000000A1  50				 push	 eax
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 95
pmScript.ASM



   5359	000000A2  E8 00000000e			 call	 MapViewOfFile
   5360	000000A7  A3 0000000Cr			 mov	 viewHnd, eax
   5361	000000AC  0B C0				 or	 eax, eax
   5362	000000AE  74 49				 jz	 loadscriptfile_failedclosemap
   5363
   5364	000000B0  6A 00				 push	 0
   5365	000000B2  FF 35	00000004r		 push	 fileHnd
   5366	000000B8  E8 00000000e			 call	 GetFileSize
   5367
   5368	000000BD  FF 75	0C			 push	 ptrAPICallback
   5369	000000C0  50				 push	 eax
   5370	000000C1  FF 35	0000000Cr		 push	 viewHnd
   5371	000000C7  E8 FFFFFF4E			 call	 LoadScript
   5372	000000CC  A3 00000010r			 mov	 lastHnd, eax
   5373
   5374	000000D1  FF 35	0000000Cr		 push	 viewHnd
   5375	000000D7  E8 00000000e			 call	 UnmapViewOfFile
   5376	000000DC  FF 35	00000008r		 push	 mappingHnd
   5377	000000E2  E8 00000000e			 call	 CloseHandle
   5378	000000E7  FF 35	00000004r		 push	 fileHnd
   5379	000000ED  E8 00000000e			 call	 CloseHandle
   5380
   5381	000000F2  A1 00000010r			 mov	 eax, lastHnd
   5382	000000F7  EB 18				 jmp	 loadscriptfile_leave
   5383
   5384	000000F9			 loadscriptfile_failedclosemap:
   5385	000000F9  FF 35	00000008r		 push	 mappingHnd
   5386	000000FF  E8 00000000e			 call	 CloseHandle
   5387	00000104			 loadscriptfile_failedclosefile:
   5388	00000104  FF 35	00000004r		 push	 fileHnd
   5389	0000010A  E8 00000000e			 call	 CloseHandle
   5390	0000010F			 loadscriptfile_failed:
   5391	0000010F  33 C0				 xor	 eax, eax
   5392	00000111			 loadscriptfile_leave:
1  5393	00000111  C9				 LEAVED
1  5394	00000112  C2 0008			 RET	 00008h
   5395	00000115			 LoadScriptFromFile		 endp
   5396
   5397	00000115			 CreateVirtualMachine		 proc	 STDCALL, ptrCodeBlock:DWORD, lenCodeBlock:DWORD,   +
   5398					 lenStack:DWORD, intStartIP:DWORD, ptrAPICallback:DWORD
   5399
1  5400	00000115  C8 0000 00			 ENTERD	 00000h,0
1  5401	00000119  68 0000023D			 push	 size virtualmachine
   5402	0000011E  E8 00000115			 call	 AllocFunc
   5403	00000123  A3 00000014r			 mov	 machineHnd, eax
   5404	00000128  8B F0				 mov	 esi, eax
   5405
   5406	0000012A  8B 45	0C			 mov	 eax, lenCodeBlock
   5407	0000012D  89 46	29			 mov	 [esi].code_len, eax
   5408	00000130  50				 push	 eax
   5409	00000131  FF 75	08			 push	 ptrCodeBlock
   5410	00000134  E8 00000149			 call	 CloneMemory
   5411	00000139  89 46	25			 mov	 [esi].code_ptr, eax
   5412
   5413	0000013C  8B 45	10			 mov	 eax, lenStack
   5414	0000013F  C1 E0	02			 shl	 eax, 2
   5415	00000142  89 46	31			 mov	 [esi].stack_len, eax
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 96
pmScript.ASM



   5416	00000145  50				 push	 eax
   5417	00000146  E8 000000ED			 call	 AllocFunc
   5418	0000014B  89 46	2D			 mov	 [esi].stack_ptr, eax
   5419
   5420	0000014E  8B 45	14			 mov	 eax, intStartIP
   5421	00000151  89 46	35			 mov	 [esi].init_ip,	eax
   5422	00000154  8B 45	18			 mov	 eax, ptrAPICallback
   5423	00000157  89 46	39			 mov	 [esi].ptr_api,	eax
   5424
   5425	0000015A  56				 push	 esi
   5426	0000015B  E8 00000050			 call	 ResetVirtualMachine
   5427
   5428	00000160  A1 00000014r			 mov	 eax, machineHnd
1  5429	00000165  C9				 LEAVED
1  5430	00000166  C2 0014			 RET	 00014h
   5431	00000169			 CreateVirtualMachine		 endp
   5432
   5433	00000169			 RunScript			 proc	 STDCALL, hndMachine:DWORD
1  5434	00000169  C8 0000 00			 ENTERD	 00000h,0
1  5435	0000016D  8B 75	08			 mov	 esi, hndMachine
   5436	00000170			 runscript_untilend:
   5437	00000170  56				 push	 esi
   5438	00000171  E8 0000000E			 call	 TakeStep
   5439	00000176  83 F8	01			 cmp	 eax, VMSTATE_RUNNING
   5440	00000179  74 F5				 je	 runscript_untilend
   5441	0000017B  83 F8	00			 cmp	 eax, VMSTATE_READY
   5442	0000017E  74 F0				 je	 runscript_untilend
1  5443	00000180  C9				 LEAVED
1  5444	00000181  C2 0004			 RET	 00004h
   5445	00000184			 RunScript			 endp
   5446
   5447	00000184			 TakeStep			 proc	 STDCALL, hndMachine:DWORD
1  5448	00000184  C8 0000 00			 ENTERD	 00000h,0
1  5449	00000188  56				 push	 esi
   5450	00000189  57				 push	 edi
   5451	0000018A  8B 75	08			 mov	 esi, hndMachine
   5452	0000018D  8B 7E	1C			 mov	 edi, [esi].reg_ip
   5453	00000190  57				 push	 edi
   5454	00000191  56				 push	 esi
   5455	00000192  E8 000001DA			 call	 internals_ReadByte
   5456	00000197  C1 E7	02			 shl	 edi, 2			 ; *4
   5457	0000019A  81 C7	00000055r		 add	 edi, offset OpCodeTable
   5458	000001A0  87 F7				 xchg	 esi, edi
   5459	000001A2  AD				 lodsd
   5460	000001A3  57				 push	 edi
   5461	000001A4  57				 push	 edi
   5462	000001A5  FF D0				 call	 eax
   5463	000001A7  5F				 pop	 edi
   5464	000001A8  8B 07				 mov	 eax, [edi].state
   5465	000001AA  5F				 pop	 edi
   5466	000001AB  5E				 pop	 esi
1  5467	000001AC  C9				 LEAVED
1  5468	000001AD  C2 0004			 RET	 00004h
   5469	000001B0			 TakeStep			 endp
   5470
   5471	000001B0			 ResetVirtualMachine		 proc	 STDCALL, hndMachine:DWORD
1  5472	000001B0  C8 0000 00			 ENTERD	 00000h,0
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 97
pmScript.ASM



1  5473	000001B4  56				 push	 esi
   5474	000001B5  8B 75	08			 mov	 esi, hndMachine
   5475
   5476	000001B8  8B 46	35			 mov	 eax, [esi].init_ip
   5477	000001BB  89 46	1C			 mov	 [esi].reg_ip, eax
   5478
   5479	000001BE  E8 00000000e			 call	 GetTickCount
   5480	000001C3  50				 push	 eax
   5481	000001C4  E8 00000048			 call	 RandomNumber
   5482	000001C9  89 46	10			 mov	 [esi].reg_rnd,	eax
   5483
   5484	000001CC  33 C0				 xor	 eax, eax
   5485	000001CE  89 46	04			 mov	 [esi].reg_acc,	eax
   5486	000001D1  89 46	08			 mov	 [esi].reg_cnt,	eax
   5487	000001D4  89 46	0C			 mov	 [esi].reg_dat,	eax
   5488	000001D7  89 46	14			 mov	 [esi].reg_cps,	eax
   5489	000001DA  89 46	18			 mov	 [esi].reg_cpd,	eax
   5490	000001DD  89 46	20			 mov	 [esi].reg_sp, eax
   5491	000001E0  88 46	24			 mov	 [esi].reg_flags, al
   5492	000001E3  C7 06	00000000		 mov	 [esi].state, VMSTATE_READY
   5493
   5494	000001E9  5E				 pop	 esi
1  5495	000001EA  C9				 LEAVED
1  5496	000001EB  C2 0004			 RET	 00004h
   5497	000001EE			 ResetVirtualMachine		 endp
   5498
   5499	000001EE			 PushVMStack			 proc	 STDCALL, hndMachine:DWORD, pushValue:DWORD
1  5500	000001EE  C8 0000 00			 ENTERD	 00000h,0
1  5501	000001F2  FF 75	0C			 push	 pushValue
   5502	000001F5  FF 75	08			 push	 hndMachine
   5503	000001F8  E8 000000A1			 call	 internals_PushValue
1  5504	000001FD  C9				 LEAVED
1  5505	000001FE  C2 0008			 RET	 00008h
   5506	00000201			 PushVMStack			 endp
   5507
   5508	00000201			 PopVMStack			 proc	 STDCALL, hndMachine:DWORD
1  5509	00000201  C8 0000 00			 ENTERD	 00000h,0
1  5510	00000205  FF 75	08			 push	 hndMachine
   5511	00000208  E8 000000C5			 call	 internals_PopValue
1  5512	0000020D  C9				 LEAVED
1  5513	0000020E  C2 0004			 RET	 00004h
   5514	00000211			 PopVMStack			 endp
   5515
   5516	00000211			 RandomNumber			 proc STDCALL, SeedExtra:DWORD
1  5517	00000211  C8 0000 00			 ENTERD	 00000h,0
1  5518	00000215  53				 push	 ebx
   5519	00000216  E8 00000000e			 call	 GetTickCount
   5520	0000021B  8B 5D	08			 mov	 ebx, SeedExtra
   5521	0000021E  C1 C8	0A			 ror	 eax, 0Ah
   5522	00000221  33 C3				 xor	 eax, ebx
   5523	00000223  8B 1D	00000000r		 mov	 ebx, randomSeed
   5524	00000229  33 C3				 xor	 eax, ebx
   5525	0000022B  C1 C0	03			 rol	 eax, 3h
   5526	0000022E  A3 00000000r			 mov	 randomSeed, eax
   5527	00000233  5B				 pop	 ebx
1  5528	00000234  C9				 LEAVED
1  5529	00000235  C2 0004			 RET	 00004h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 98
pmScript.ASM



   5530	00000238			 RandomNumber			 endp
   5531
   5532					 INCLUDE memory.inc
1  5533	00000238				 .code
1  5534
1  5535	00000238			 AllocFunc	 proc	 STDCALL, nMemSize:DWORD
2  5536	00000238  C8 0000 00			 ENTERD	 00000h,0
2  5537	0000023C  8B 45	08			 mov	 eax,nMemSize
1  5538	0000023F  50				 push	 eax
1  5539	00000240  6A 00				 push	 GMEM_FIXED
1  5540	00000242  E8 00000000e			 call	 GlobalAlloc
2  5541	00000247  C9				 LEAVED
2  5542	00000248  C2 0004			 RET	 00004h
1  5543	0000024B			 AllocFunc	 endp
1  5544
1  5545	0000024B			 DeallocFunc	 proc	 STDCALL, pBuffer:DWORD
2  5546	0000024B  C8 0000 00			 ENTERD	 00000h,0
2  5547	0000024F  8B 45	08			 mov	 eax,pBuffer
1  5548	00000252  50				 push	 eax
1  5549	00000253  E8 00000000e			 call	 GlobalFree
1  5550	00000258  33 C0				 xor	 eax,eax
1  5551	0000025A  48				 dec	 eax
2  5552	0000025B  C9				 LEAVED
2  5553	0000025C  C2 0004			 RET	 00004h
1  5554	0000025F			 DeallocFunc	 endp
1  5555
1  5556	0000025F			 MemCopy proc	 STDCALL, ptrSrc:DWORD,	ptrDest:DWORD, dataLength:DWORD
2  5557	0000025F  C8 0000 00			 ENTERD	 00000h,0
2  5558	00000263  56				 push	 esi
1  5559	00000264  57				 push	 edi
1  5560	00000265  51				 push	 ecx
1  5561
1  5562	00000266  8B 4D	10			 mov	 ecx, dataLength
1  5563	00000269  51				 push	 ecx
1  5564	0000026A  8B 75	08			 mov	 esi, ptrSrc
1  5565	0000026D  8B 7D	0C			 mov	 edi, ptrDest
1  5566	00000270  C1 E9	02			 shr	 ecx, 2
1  5567	00000273  F3> A5			 rep	 movsd
1  5568	00000275  59				 pop	 ecx
1  5569	00000276  83 E1	03			 and	 ecx, 00000003h
1  5570	00000279  F3> A4			 rep	 movsb
1  5571
1  5572	0000027B  59				 pop	 ecx
1  5573	0000027C  5F				 pop	 edi
1  5574	0000027D  5E				 pop	 esi
2  5575	0000027E  C9				 LEAVED
2  5576	0000027F  C2 000C			 RET	 0000Ch
1  5577	00000282			 MemCopy endp
1  5578
1  5579	00000282			 CloneMemory	 proc	 STDCALL, ptrSrc:DWORD,	lenSrc:DWORD
2  5580	00000282  C8 0000 00			 ENTERD	 00000h,0
2  5581	00000286  FF 75	0C			 push	 lenSrc
1  5582	00000289  E8 FFFFFFAA			 call	 AllocFunc
1  5583	0000028E  FF 75	0C			 push	 lenSrc
1  5584	00000291  50				 push	 eax
1  5585	00000292  FF 75	08			 push	 ptrSrc
1  5586	00000295  E8 FFFFFFC5			 call	 MemCopy
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 99
pmScript.ASM



2  5587	0000029A  C9				 LEAVED
2  5588	0000029B  C2 0008			 RET	 00008h
1  5589	0000029E			 CloneMemory	 endp
   5590					 INCLUDE vmstruct.inc
1  5591
1  5592
1  5593	0000029E			 virtualmachine	 struct
1  5594	00000000  01*(????????)			 state		 dd	 ?		 ; Machine State
1  5595	00000004  01*(????????)			 reg_acc dd	 ?		 ; Accumulator
1  5596	00000008  01*(????????)			 reg_cnt dd	 ?		 ; Counter
1  5597	0000000C  01*(????????)			 reg_dat dd	 ?		 ; Data
1  5598	00000010  01*(????????)			 reg_rnd dd	 ?		 ; Random Number
1  5599	00000014  01*(????????)			 reg_cps dd	 ?		 ; Copier Source
1  5600	00000018  01*(????????)			 reg_cpd dd	 ?		 ; Copier Destination
1  5601	0000001C  01*(????????)			 reg_ip		 dd	 ?		 ; Instruction Pointer
1  5602	00000020  01*(????????)			 reg_sp		 dd	 ?		 ; Stack Pointer (inside stack area)
1  5603	00000024  01*(??)			 reg_flags	 db	 ?		 ; Flags ( 0000cdbz - d	= direction, b =    +
   5604					 below,	z = zero, c = carry )
1  5605	00000025  01*(????????)			 code_ptr	 dd	 ?		 ; Points to the memory	holding	the script
1  5606	00000029  01*(????????)			 code_len	 dd	 ?		 ; Length of the compiled script
1  5607	0000002D  01*(????????)			 stack_ptr	 dd	 ?		 ; Pointer to the stack	buffer
1  5608	00000031  01*(????????)			 stack_len	 dd	 ?		 ; Length of stack buffer
1  5609	00000035  01*(????????)			 init_ip dd	 ?		 ; Initial starting IP (for restarting the machine)
1  5610	00000039  01*(????????)			 ptr_api dd	 ?		 ; Address of client callback for script API ::	    +
   5611					 Callback(ptrMachine:DWORD, intAPINumber:DWORD)
1  5612	0000003D  01*(0200*(??))		 txt_crash	 db	 200h dup (?)	 ; Crash details for script
1  5613	0000023D			 virtualmachine	 ends
1  5614
1  5615
1  5616		  =0000			 VMSTATE_READY		 equ	 0
1  5617		  =0001			 VMSTATE_RUNNING equ	 1
1  5618		  =0002			 VMSTATE_PAUSED	 equ	 2
1  5619		  =0003			 VMSTATE_ENDED		 equ	 3
1  5620		  =0004			 VMSTATE_CRASH		 equ	 4
1  5621
1  5622		  =0008			 VMFLAG_CARRY		 equ	 00001000b
1  5623		  =0004			 VMFLAG_DIRECTION	 equ	 00000100b
1  5624		  =0002			 VMFLAG_BELOW		 equ	 00000010b
1  5625		  =0001			 VMFLAG_ZERO		 equ	 00000001b
1  5626
1  5627	0000029E				 .data
1  5628	00000000  4F 75	74 20 6F 66 20+	 crash_outofstack	 db	 'Out of stack space', 0
   5629		  73 74	61 63 6B 20 73+
   5630		  70 61	63 65 00
1  5631		  =OFFSET 0013		 crash_outofstack_len	 equ	 offset	$ - offset crash_outofstack
1  5632
1  5633	00000013  53 74	61 63 6B 20 61+	 crash_emptystack	 db	 'Stack	already	empty',	0
   5634		  6C 72	65 61 64 79 20+
   5635		  65 6D	70 74 79 00
1  5636		  =OFFSET 0014		 crash_emptystack_len	 equ	 offset	$ - offset crash_emptystack
1  5637
1  5638	00000027  41 64	64 72 65 73 73+	 crash_invalidaddr	 db	 'Address out of range', 0
   5639		  20 6F	75 74 20 6F 66+
   5640		  20 72	61 6E 67 65 00
1  5641		  =OFFSET 0015		 crash_invalidaddr_len	 equ	 offset	$ - offset crash_invalidaddr
1  5642
1  5643	0000003C  4D 65	6D 6F 72 79 20+	 crash_allocfail db	 'Memory allocation failed', 0
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 100
pmScript.ASM



   5644		  61 6C	6C 6F 63 61 74+
   5645		  69 6F	6E 20 66 61 69+
   5646		  6C 65	64 00
1  5647		  =OFFSET 0019		 crash_allocfail_len	 equ	 offset	$ - offset crash_allocfail
1  5648
1  5649	00000055				 .code
1  5650
1  5651					 ;-------------------------------------------------------------------------------------------
   5652					 [ Memory access functions (Internal Use)
1  5653
1  5654	0000029E			 internals_PushValue		 proc	 STDCALL, ptrMachine:DWORD, valNew:DWORD
2  5655	0000029E  C8 0000 00			 ENTERD	 00000h,0
2  5656	000002A2  56				 push	 esi
1  5657	000002A3  50				 push	 eax
1  5658
1  5659	000002A4  8B 75	08			 mov	 esi, ptrMachine		 ; Gets	Machine
1  5660	000002A7  8B 46	20			 mov	 eax, [esi].reg_sp			 ; Reads stack pointer
1  5661	000002AA  3B 46	31			 cmp	 eax, [esi].stack_len			 ; Compares point to stack length
1  5662	000002AD  7C 0E				 jl	 intPush_okay				 ; If we have space, jump to	    +
   5663					 intPush_okay
1  5664
1  5665	000002AF  6A 13				 push	 crash_outofstack_len
1  5666	000002B1  68 00000000r			 push	 offset	crash_outofstack
1  5667	000002B6  E8 0000016D			 call	 internals_SetCrashMsg		 ; Report out of stack space
1  5668	000002BB  EB 0F				 jmp	 intPush_leave
1  5669
1  5670	000002BD			 intPush_okay:
1  5671	000002BD  57				 push	 edi
1  5672	000002BE  8B 7E	2D			 mov	 edi, [esi].stack_ptr			 ; Gets	the memory address of stack
1  5673	000002C1  03 F8				 add	 edi, eax				 ; Move	to our current position
1  5674	000002C3  8B 45	0C			 mov	 eax, valNew
1  5675	000002C6  A5				 movsd						 ; Store the value
1  5676	000002C7  83 46	20 04			 add	 [esi].reg_sp, 4		 ; Move	the stack up
1  5677	000002CB  5F				 pop	 edi
1  5678
1  5679	000002CC			 intPush_leave:
1  5680	000002CC  58				 pop	 eax
1  5681	000002CD  5E				 pop	 esi
2  5682	000002CE  C9				 LEAVED
2  5683	000002CF  C2 0008			 RET	 00008h
1  5684	000002D2			 internals_PushValue		 endp
1  5685
1  5686	000002D2			 internals_PopValue		 proc	 STDCALL, ptrMachine:DWORD
2  5687	000002D2  C8 0000 00			 ENTERD	 00000h,0
2  5688	000002D6  56				 push	 esi
1  5689	000002D7  8B 75	08			 mov	 esi, ptrMachine		 ; Gets	machine
1  5690	000002DA  8B 46	20			 mov	 eax, [esi].reg_sp			 ; Reads stack pointer
1  5691	000002DD  0B C0				 or	 eax, eax				 ; Checks not at the floor
1  5692	000002DF  7F 0E				 jg	 intPop_okay				 ; Got poppable	value, jump to	    +
   5693					 intPop_okay
1  5694
1  5695	000002E1  6A 14				 push	 crash_emptystack_len
1  5696	000002E3  68 00000013r			 push	 offset	crash_emptystack
1  5697	000002E8  E8 0000013B			 call	 internals_SetCrashMsg		 ; Report empty	stack
1  5698	000002ED  EB 0E				 jmp	 intPop_leave
1  5699
1  5700	000002EF			 intPop_okay:
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 101
pmScript.ASM



1  5701	000002EF  57				 push	 edi
1  5702	000002F0  83 E8	04			 sub	 eax, 4					 ; Move	stack down
1  5703	000002F3  89 46	20			 mov	 [esi].reg_sp, eax			 ; Store new stack position
1  5704	000002F6  8B 7E	2D			 mov	 edi, [esi].stack_ptr
1  5705	000002F9  03 F8				 add	 edi, eax				 ; EDI -> Stack	item
1  5706	000002FB  AD				 lodsd						 ; Load	stack value
1  5707	000002FC  5F				 pop	 edi
1  5708
1  5709	000002FD			 intPop_leave:
1  5710	000002FD  5E				 pop	 esi
2  5711	000002FE  C9				 LEAVED
2  5712	000002FF  C2 0004			 RET	 00004h
1  5713	00000302			 internals_PopValue		 endp
1  5714
1  5715	00000302			 internals_ReadValue		 proc	 STDCALL, ptrMachine:DWORD, ptrOffset:DWORD
2  5716	00000302  C8 0000 00			 ENTERD	 00000h,0
2  5717	00000306  56				 push	 esi
1  5718	00000307  53				 push	 ebx
1  5719	00000308  8B 75	08			 mov	 esi, ptrMachine		 ; Gets	machine
1  5720	0000030B  8B 45	0C			 mov	 eax, ptrOffset			 ; Gets	script address
1  5721	0000030E  83 F8	00			 cmp	 eax, 0					 ; Checks the address is >= 0
1  5722	00000311  7C 12				 jl	 intReadV_error
1  5723	00000313  8B 5E	29			 mov	 ebx, [esi].code_len			 ; Checks the address is <= script  +
   5724					 length	- 4
1  5725	00000316  83 EB	04			 sub	 ebx, 4					 ; (ReadValue does 32bits, so make  +
   5726					 sure don't try	and read past end of script)
1  5727	00000319  3B C3				 cmp	 eax, ebx
1  5728	0000031B  7F 08				 jg	 intReadV_error
1  5729
1  5730	0000031D  8B 76	25			 mov	 esi, [esi].code_ptr
1  5731	00000320  03 F0				 add	 esi, eax				 ; ESI -> Address in code
1  5732	00000322  AD				 lodsd
1  5733
1  5734	00000323  EB 0C				 jmp	 intReadV_leave
1  5735
1  5736	00000325			 intReadV_error:
1  5737	00000325  6A 15				 push	 crash_invalidaddr_len
1  5738	00000327  68 00000027r			 push	 offset	crash_invalidaddr
1  5739	0000032C  E8 000000F7			 call	 internals_SetCrashMsg		 ; Address out of range	error
1  5740
1  5741	00000331			 intReadV_leave:
1  5742	00000331  5B				 pop	 ebx
1  5743	00000332  5E				 pop	 esi
2  5744	00000333  C9				 LEAVED
2  5745	00000334  C2 0008			 RET	 00008h
1  5746	00000337			 internals_ReadValue		 endp
1  5747
1  5748	00000337			 internals_WriteValue		 proc	 STDCALL, ptrMachine:DWORD, ptrOffset:DWORD,	    +
   5749					 valNew:DWORD
2  5750	00000337  C8 0000 00			 ENTERD	 00000h,0
2  5751	0000033B  56				 push	 esi
1  5752	0000033C  53				 push	 ebx
1  5753	0000033D  8B 75	08			 mov	 esi, ptrMachine		 ; Gets	machine
1  5754	00000340  8B 45	0C			 mov	 eax, ptrOffset			 ; Gets	script address
1  5755	00000343  83 F8	00			 cmp	 eax, 0					 ; Checks the address is >= 0
1  5756	00000346  7C 17				 jl	 intWriteV_error
1  5757	00000348  8B 5E	29			 mov	 ebx, [esi].code_len			 ; Checks the address is <= script  +
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 102
pmScript.ASM



   5758					 length	- 4
1  5759	0000034B  83 EB	04			 sub	 ebx, 4					 ; (WriteValue does 32bits, so make +
   5760					 sure don't try	and read past end of script)
1  5761	0000034E  3B C3				 cmp	 eax, ebx
1  5762	00000350  7F 0D				 jg	 intWriteV_error
1  5763
1  5764	00000352  57				 push	 edi
1  5765	00000353  8B 7E	25			 mov	 edi, [esi].code_ptr
1  5766	00000356  03 F8				 add	 edi, eax				 ; EDI -> Address in code
1  5767	00000358  8B 45	10			 mov	 eax, valNew				 ; EAX == New Value
1  5768	0000035B  AB				 stosd
1  5769	0000035C  5F				 pop	 edi
1  5770
1  5771	0000035D  EB 0C				 jmp	 intWriteV_leave
1  5772
1  5773	0000035F			 intWriteV_error:
1  5774	0000035F  6A 15				 push	 crash_invalidaddr_len
1  5775	00000361  68 00000027r			 push	 offset	crash_invalidaddr
1  5776	00000366  E8 000000BD			 call	 internals_SetCrashMsg		 ; Address out of range	error
1  5777
1  5778	0000036B			 intWriteV_leave:
1  5779	0000036B  5B				 pop	 ebx
1  5780	0000036C  5E				 pop	 esi
2  5781	0000036D  C9				 LEAVED
2  5782	0000036E  C2 000C			 RET	 0000Ch
1  5783	00000371			 internals_WriteValue		 endp
1  5784
1  5785	00000371			 internals_ReadByte		 proc	 STDCALL, ptrMachine:DWORD, ptrOffset:DWORD
2  5786	00000371  C8 0000 00			 ENTERD	 00000h,0
2  5787	00000375  56				 push	 esi
1  5788	00000376  53				 push	 ebx
1  5789	00000377  8B 75	08			 mov	 esi, ptrMachine		 ; Gets	machine
1  5790	0000037A  8B 45	0C			 mov	 eax, ptrOffset			 ; Gets	script address
1  5791	0000037D  83 F8	00			 cmp	 eax, 0					 ; Checks the address is >= 0
1  5792	00000380  7C 12				 jl	 intReadB_error
1  5793	00000382  8B 5E	29			 mov	 ebx, [esi].code_len			 ; Checks the address is <= script  +
   5794					 length	- 1
1  5795	00000385  4B				 dec	 ebx					 ; (ReadByte does 8bits, so make    +
   5796					 sure don't try	and read past end of script)
1  5797	00000386  3B C3				 cmp	 eax, ebx
1  5798	00000388  7F 0A				 jg	 intReadB_error
1  5799
1  5800	0000038A  8B 76	25			 mov	 esi, [esi].code_ptr
1  5801	0000038D  03 F0				 add	 esi, eax				 ; ESI -> Address in code
1  5802	0000038F  33 C0				 xor	 eax, eax
1  5803	00000391  AC				 lodsb						 ; EAX/AL == Read byte
1  5804
1  5805	00000392  EB 0C				 jmp	 intReadB_leave
1  5806
1  5807	00000394			 intReadB_error:
1  5808	00000394  6A 15				 push	 crash_invalidaddr_len
1  5809	00000396  68 00000027r			 push	 offset	crash_invalidaddr
1  5810	0000039B  E8 00000088			 call	 internals_SetCrashMsg		 ; Address out of range	error
1  5811
1  5812	000003A0			 intReadB_leave:
1  5813	000003A0  5B				 pop	 ebx
1  5814	000003A1  5E				 pop	 esi
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 103
pmScript.ASM



2  5815	000003A2  C9				 LEAVED
2  5816	000003A3  C2 0008			 RET	 00008h
1  5817	000003A6			 internals_ReadByte		 endp
1  5818
1  5819	000003A6			 internals_WriteByte		 proc	 STDCALL, ptrMachine:DWORD, ptrOffset:DWORD,	    +
   5820					 valNew:DWORD
2  5821	000003A6  C8 0000 00			 ENTERD	 00000h,0
2  5822	000003AA  56				 push	 esi
1  5823	000003AB  53				 push	 ebx
1  5824	000003AC  8B 75	08			 mov	 esi, ptrMachine		 ; Gets	machine
1  5825	000003AF  8B 45	0C			 mov	 eax, ptrOffset			 ; Gets	script address
1  5826	000003B2  83 F8	00			 cmp	 eax, 0					 ; Checks the address is >= 0
1  5827	000003B5  7C 15				 jl	 intWriteB_error
1  5828	000003B7  8B 5E	29			 mov	 ebx, [esi].code_len			 ; Checks the address is <= script  +
   5829					 length	- 1
1  5830	000003BA  4B				 dec	 ebx					 ; (WriteByte does 8bits, so make   +
   5831					 sure don't try	and read past end of script)
1  5832	000003BB  3B C3				 cmp	 eax, ebx
1  5833	000003BD  7F 0D				 jg	 intWriteB_error
1  5834
1  5835	000003BF  57				 push	 edi
1  5836	000003C0  8B 7E	25			 mov	 edi, [esi].code_ptr
1  5837	000003C3  03 F8				 add	 edi, eax				 ; EDI -> Address in code
1  5838	000003C5  8B 45	10			 mov	 eax, valNew				 ; EAX == New Value
1  5839	000003C8  AA				 stosb
1  5840	000003C9  5F				 pop	 edi
1  5841
1  5842	000003CA  EB 0C				 jmp	 intWriteB_leave
1  5843
1  5844	000003CC			 intWriteB_error:
1  5845	000003CC  6A 15				 push	 crash_invalidaddr_len
1  5846	000003CE  68 00000027r			 push	 offset	crash_invalidaddr
1  5847	000003D3  E8 00000050			 call	 internals_SetCrashMsg		 ; Address out of range	error
1  5848
1  5849	000003D8			 intWriteB_leave:
1  5850	000003D8  5B				 pop	 ebx
1  5851	000003D9  5E				 pop	 esi
2  5852	000003DA  C9				 LEAVED
2  5853	000003DB  C2 000C			 RET	 0000Ch
1  5854	000003DE			 internals_WriteByte		 endp
1  5855
1  5856	000003DE			 internals_Allocate		 proc	 STDCALL, ptrMachine:DWORD, lenAllocSize:DWORD
2  5857	000003DE  C8 0000 00			 ENTERD	 00000h,0
2  5858	000003E2  56				 push	 esi
1  5859	000003E3  51				 push	 ecx
1  5860	000003E4  8B 75	08			 mov	 esi, ptrMachine		 ; Gets	machine
1  5861	000003E7  8B 4E	29			 mov	 ecx, [esi].code_len
1  5862	000003EA  03 4D	0C			 add	 ecx, lenAllocSize			 ; ECX == Script Length	+ new size
1  5863
1  5864	000003ED  3B 4E	29			 cmp	 ecx, [esi].code_len			 ; Check allocating a negative	    +
   5865					 amount	(or too	large)
1  5866	000003F0  7E 21				 jle	 intAlloc_error
1  5867
1  5868	000003F2  51				 push	 ecx
1  5869	000003F3  E8 FFFFFE40			 call	 AllocFunc				 ; EAX -> Newly	allocated space
1  5870
1  5871	000003F8  50				 push	 eax					 ; Temp	save new script	address
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 104
pmScript.ASM



1  5872
1  5873	000003F9  FF 76	29			 push	 [esi].code_len
1  5874	000003FC  50				 push	 eax
1  5875	000003FD  FF 76	25			 push	 [esi].code_ptr
1  5876	00000400  E8 FFFFFE5A			 call	 MemCopy			 ; Copy	script across
1  5877
1  5878	00000405  FF 76	25			 push	 [esi].code_ptr
1  5879	00000408  E8 FFFFFE3E			 call	 DeallocFunc				 ; Deallocate old script address
1  5880
1  5881	0000040D  58				 pop	 eax					 ; EAX == New script address
1  5882	0000040E  89 46	25			 mov	 [esi].code_ptr, eax
1  5883
1  5884	00000411  EB 0F				 jmp	 intAlloc_leave
1  5885
1  5886	00000413			 intAlloc_error:
1  5887	00000413  8B 75	08			 mov	 esi, ptrMachine		 ; Make	sure machine is	set
1  5888	00000416  6A 19				 push	 crash_allocfail_len
1  5889	00000418  68 0000003Cr			 push	 offset	crash_allocfail
1  5890	0000041D  E8 00000006			 call	 internals_SetCrashMsg		 ; Address out of range	error
1  5891
1  5892	00000422			 intAlloc_leave:
1  5893	00000422  59				 pop	 ecx
1  5894	00000423  5E				 pop	 esi
2  5895	00000424  C9				 LEAVED
2  5896	00000425  C2 0008			 RET	 00008h
1  5897	00000428			 internals_Allocate		 endp
1  5898
1  5899	00000428			 internals_SetCrashMsg	 proc	 STDCALL, ptrCrashMessage:DWORD, lenCrashMessage:DWORD
1  5900						 ; ESI *MUST* point to machine
2  5901	00000428  C8 0000 00			 ENTERD	 00000h,0
2  5902	0000042C  57				 push	 edi
1  5903	0000042D  51				 push	 ecx
1  5904	0000042E  C7 06	00000004		 mov	 [esi].state, VMSTATE_CRASH
1  5905	00000434  8D 7E	3D			 lea	 edi, [esi].txt_crash
1  5906	00000437  8B 75	08			 mov	 esi, ptrCrashMessage
1  5907	0000043A  8B 4D	0C			 mov	 ecx, lenCrashMessage
1  5908	0000043D  F3> A4			 rep	 movsb
1  5909	0000043F  59				 pop	 ecx
1  5910	00000440  5F				 pop	 edi
2  5911	00000441  C9				 LEAVED
2  5912	00000442  C2 0008			 RET	 00008h
1  5913	00000445			 internals_SetCrashMsg	 endp
1  5914
1  5915	00000445			 internals_CompareValues proc	 STDCALL, ptrMachine:DWORD, intLeftSide:DWORD,		    +
   5916					 intRightSide:DWORD
1  5917					 ;	 push	 esi
1  5918					 ;	 push	 eax
1  5919					 ;	 push	 ebx
1  5920					 ;	 mov	 esi, ptrMachine
1  5921					 ;	 mov	 bl, [esi].reg_flags
1  5922					 ;
1  5923					 ;	 mov	 eax, intLeftSide
1  5924					 ;	 cmp	 eax, intRightSide
1  5925					 ;	 jz	 cmpval_setz
1  5926					 ;	 and	 bl, NOT VMFLAG_ZERO
1  5927					 ;	 jmp	 cmpval_chkedz
1  5928					 ;cmpval_setz:
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 105
pmScript.ASM



1  5929					 ;	 or	 bl, VMFLAG_ZERO
1  5930					 ;cmpval_chkedz:
1  5931					 ;	 jz	 cmpval_setc
1  5932					 ;	 and	 bl, NOT VMFLAG_BELOW
1  5933					 ;	 jmp	 cmpval_chkedb
1  5934					 ;cmpval_setc:
1  5935					 ;	 or	 bl, VMFLAG_BELOW
1  5936					 ;cmpval_chkedb:
1  5937					 ;
1  5938					 ;	 mov	 [esi].reg_flags, bl
1  5939					 ;	 pop	 ebx
1  5940					 ;	 pop	 eax
1  5941					 ;	 pop	 esi
1  5942
2  5943	00000445  C8 0000 00			 ENTERD	 00000h,0
2  5944	00000449  50				 push	 eax
1  5945	0000044A  8B 45	0C			 mov	 eax, intLeftSide
1  5946	0000044D  2B 45	10			 sub	 eax, intRightSide
1  5947	00000450  50				 push	 eax
1  5948	00000451  FF 75	08			 push	 ptrMachine
1  5949	00000454  E8 00000005			 call	 internals_SetFlags
1  5950	00000459  58				 pop	 eax
1  5951
2  5952	0000045A  C9				 LEAVED
2  5953	0000045B  C2 000C			 RET	 0000Ch
1  5954	0000045E			 internals_CompareValues endp
1  5955
1  5956	0000045E			 internals_SetFlags		 proc	 STDCALL, ptrMachine:DWORD, intToFlag:DWORD
2  5957	0000045E  C8 0000 00			 ENTERD	 00000h,0
2  5958	00000462  56				 push	 esi
1  5959	00000463  53				 push	 ebx
1  5960	00000464  50				 push	 eax
1  5961	00000465  8B 75	08			 mov	 esi, ptrMachine
1  5962	00000468  8A 5E	24			 mov	 bl, [esi].reg_flags
1  5963	0000046B  8B 45	0C			 mov	 eax, intToFlag
1  5964
1  5965	0000046E  0B C0				 or	 eax, eax				 ; Check zero
1  5966	00000470  74 05				 jz	 setflags_setz
1  5967	00000472  80 E3	FE			 and	 bl, NOT VMFLAG_ZERO
1  5968	00000475  EB 03				 jmp	 setflags_finishedzero
1  5969	00000477			 setflags_setz:
1  5970	00000477  80 CB	01			 or	 bl, VMFLAG_ZERO
1  5971	0000047A			 setflags_finishedzero:
1  5972
1  5973	0000047A  83 F8	00			 cmp	 eax, 0					 ; Check below zero
1  5974	0000047D  7C 05				 jl	 setflags_setb
1  5975	0000047F  80 E3	FD			 and	 bl, NOT VMFLAG_BELOW
1  5976	00000482  EB 03				 jmp	 setflags_finishedbelow
1  5977	00000484			 setflags_setb:
1  5978	00000484  80 CB	02			 or	 bl, VMFLAG_BELOW
1  5979	00000487			 setflags_finishedbelow:
1  5980
1  5981	00000487  58				 pop	 eax
1  5982	00000488  5B				 pop	 ebx
1  5983	00000489  5E				 pop	 esi
2  5984	0000048A  C9				 LEAVED
2  5985	0000048B  C2 0008			 RET	 00008h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 106
pmScript.ASM



1  5986	0000048E			 internals_SetFlags		 endp
1  5987
1  5988
   5989					 INCLUDE optable.inc
1  5990
1  5991	0000048E				 .data
1  5992
1  5993	00000055			 OpCodeTable:
1  5994	00000055  0000048Er			 dd	 offset	vm_nop				 ; 00h
1  5995	00000059  00000496r			 dd	 offset	vm_pushimm			 ; 01h
1  5996	0000005D  000004B7r			 dd	 offset	vm_pushvar			 ; 02h
1  5997	00000061  000004DFr			 dd	 offset	vm_pushacc			 ; 03h
1  5998	00000065  000004F7r			 dd	 offset	vm_pushcnt			 ; 04h
1  5999	00000069  0000050Fr			 dd	 offset	vm_pushdat			 ; 05h
1  6000	0000006D  00000527r			 dd	 offset	vm_pushcps			 ; 06h
1  6001	00000071  0000053Fr			 dd	 offset	vm_pushcpd			 ; 07h
1  6002	00000075  00000557r			 dd	 offset	vm_popvar			 ; 08h
1  6003	00000079  0000056Cr			 dd	 offset	vm_popacc			 ; 09h
1  6004	0000007D  00000583r			 dd	 offset	vm_popcnt			 ; 0Ah
1  6005	00000081  0000059Ar			 dd	 offset	vm_popdat			 ; 0Bh
1  6006	00000085  000005B1r			 dd	 offset	vm_popcps			 ; 0Ch
1  6007	00000089  000005C8r			 dd	 offset	vm_popcpd			 ; 0Dh
1  6008	0000008D  000005DFr			 dd	 offset	vm_movaccimm			 ; 0Eh
1  6009	00000091  000005FCr			 dd	 offset	vm_movcntimm			 ; 0Fh
1  6010	00000095  00000619r			 dd	 offset	vm_movdatimm			 ; 10h
1  6011	00000099  00000636r			 dd	 offset	vm_movacccnt			 ; 11h
1  6012	0000009D  0000064Ar			 dd	 offset	vm_movaccdat			 ; 12h
1  6013	000000A1  0000065Er			 dd	 offset	vm_movaccrnd			 ; 13h
1  6014	000000A5  0000067Br			 dd	 offset	vm_movcntacc			 ; 14h
1  6015	000000A9  0000068Fr			 dd	 offset	vm_movcntdat			 ; 15h
1  6016	000000AD  000006A3r			 dd	 offset	vm_movcntrnd			 ; 16h
1  6017	000000B1  000006C0r			 dd	 offset	vm_movdatacc			 ; 17h
1  6018	000000B5  000006D4r			 dd	 offset	vm_movdatcnt			 ; 18h
1  6019	000000B9  000006E8r			 dd	 offset	vm_movdatrnd			 ; 19h
1  6020	000000BD  00000705r			 dd	 offset	vm_movaccvar			 ; 1Ah
1  6021	000000C1  00000729r			 dd	 offset	vm_movcntvar			 ; 1Bh
1  6022	000000C5  0000074Dr			 dd	 offset	vm_movdatvar			 ; 1Ch
1  6023	000000C9  00000771r			 dd	 offset	vm_movcpsvar			 ; 1Dh
1  6024	000000CD  00000795r			 dd	 offset	vm_movcpdvar			 ; 1Eh
1  6025	000000D1  000007B9r			 dd	 offset	vm_movvarimm			 ; 1Fh
1  6026	000000D5  000007E7r			 dd	 offset	vm_movvaracc			 ; 20h
1  6027	000000D9  0000080Br			 dd	 offset	vm_movvarcnt			 ; 21h
1  6028	000000DD  0000082Fr			 dd	 offset	vm_movvardat			 ; 22h
1  6029	000000E1  00000853r			 dd	 offset	vm_movvarrnd			 ; 23h
1  6030	000000E5  0000094Ar			 dd	 offset	vm_lods			 ; 24h
1  6031	000000E9  0000097Er			 dd	 offset	vm_stos			 ; 25h
1  6032	000000ED  000009B2r			 dd	 offset	vm_movs			 ; 26h
1  6033	000000F1  00000B10r			 dd	 offset	vm_cmpacccnt			 ; 27h
1  6034	000000F5  00000B2Ar			 dd	 offset	vm_cmpaccdat			 ; 28h
1  6035	000000F9  00000B44r			 dd	 offset	vm_cmpaccimm			 ; 29h
1  6036	000000FD  00000B68r			 dd	 offset	vm_cmpaccvar			 ; 2Ah
1  6037	00000101  00000B93r			 dd	 offset	vm_cmpcntacc			 ; 2Bh
1  6038	00000105  00000BADr			 dd	 offset	vm_cmpcntdat			 ; 2Ch
1  6039	00000109  00000BC7r			 dd	 offset	vm_cmpcntimm			 ; 2Dh
1  6040	0000010D  00000BEBr			 dd	 offset	vm_cmpcntvar			 ; 2Eh
1  6041	00000111  00000C16r			 dd	 offset	vm_cmpdatacc			 ; 2Fh
1  6042	00000115  00000C30r			 dd	 offset	vm_cmpdatcnt			 ; 30h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 107
pmScript.ASM



1  6043	00000119  00000C4Ar			 dd	 offset	vm_cmpdatimm			 ; 31h
1  6044	0000011D  00000C6Er			 dd	 offset	vm_cmpdatvar			 ; 32h
1  6045	00000121  00000C99r			 dd	 offset	vm_jmp				 ; 33h
1  6046	00000125  00000CB6r			 dd	 offset	vm_je				 ; 34h
1  6047	00000129  00000CDBr			 dd	 offset	vm_jne				 ; 35h
1  6048	0000012D  00000D00r			 dd	 offset	vm_jb				 ; 36h
1  6049	00000131  00000D25r			 dd	 offset	vm_jbe				 ; 37h
1  6050	00000135  00000D4Ar			 dd	 offset	vm_loop			 ; 38h
1  6051	00000139  00000D70r			 dd	 offset	vm_call			 ; 39h
1  6052	0000013D  00000D93r			 dd	 offset	vm_api				 ; 3Ah
1  6053	00000141  00000DB2r			 dd	 offset	vm_ret				 ; 3Bh
1  6054	00000145  00000DC6r			 dd	 offset	vm_end				 ; 3Ch
1  6055	00000149  00000DD7r			 dd	 offset	vm_addaccimm			 ; 3Dh
1  6056	0000014D  00000DFCr			 dd	 offset	vm_addaccdat			 ; 3Eh
1  6057	00000151  00000E18r			 dd	 offset	vm_addaccrnd			 ; 3Fh
1  6058	00000155  00000E3Dr			 dd	 offset	vm_addaccvar			 ; 40h
1  6059	00000159  00000E69r			 dd	 offset	vm_addcntimm			 ; 41h
1  6060	0000015D  00000E8Er			 dd	 offset	vm_addcntacc			 ; 42h
1  6061	00000161  00000EAAr			 dd	 offset	vm_addcntdat			 ; 43h
1  6062	00000165  00000EC6r			 dd	 offset	vm_addcntrnd			 ; 44h
1  6063	00000169  00000EEBr			 dd	 offset	vm_addcntvar			 ; 45h
1  6064	0000016D  00000F17r			 dd	 offset	vm_adddatimm			 ; 46h
1  6065	00000171  00000F3Cr			 dd	 offset	vm_adddatacc			 ; 47h
1  6066	00000175  00000F58r			 dd	 offset	vm_adddatrnd			 ; 48h
1  6067	00000179  00000F7Dr			 dd	 offset	vm_adddatvar			 ; 49h
1  6068	0000017D  00000FA9r			 dd	 offset	vm_subaccimm			 ; 4Ah
1  6069	00000181  00000FCEr			 dd	 offset	vm_subaccdat			 ; 4Bh
1  6070	00000185  00000FEAr			 dd	 offset	vm_subaccrnd			 ; 4Ch
1  6071	00000189  0000100Fr			 dd	 offset	vm_subaccvar			 ; 4Dh
1  6072	0000018D  0000103Br			 dd	 offset	vm_subcntimm			 ; 4Eh
1  6073	00000191  00001060r			 dd	 offset	vm_subcntacc			 ; 4Fh
1  6074	00000195  0000107Cr			 dd	 offset	vm_subcntdat			 ; 50h
1  6075	00000199  00001098r			 dd	 offset	vm_subcntrnd			 ; 51h
1  6076	0000019D  000010BDr			 dd	 offset	vm_subcntvar			 ; 52h
1  6077	000001A1  000010E9r			 dd	 offset	vm_subdatimm			 ; 53h
1  6078	000001A5  0000110Er			 dd	 offset	vm_subdatacc			 ; 54h
1  6079	000001A9  0000112Ar			 dd	 offset	vm_subdatrnd			 ; 55h
1  6080	000001AD  0000114Fr			 dd	 offset	vm_subdatvar			 ; 56h
1  6081	000001B1  0000117Br			 dd	 offset	vm_incacc			 ; 57h
1  6082	000001B5  00001194r			 dd	 offset	vm_inccnt			 ; 58h
1  6083	000001B9  000011ADr			 dd	 offset	vm_incdat			 ; 59h
1  6084	000001BD  000011C6r			 dd	 offset	vm_decacc			 ; 5Ah
1  6085	000001C1  000011DFr			 dd	 offset	vm_deccnt			 ; 5Bh
1  6086	000001C5  000011F8r			 dd	 offset	vm_decdat			 ; 5Ch
1  6087	000001C9  00001211r			 dd	 offset	vm_mulimm			 ; 5Dh
1  6088	000001CD  0000123Dr			 dd	 offset	vm_mulvar			 ; 5Eh
1  6089	000001D1  00001270r			 dd	 offset	vm_mulcnt			 ; 5Fh
1  6090	000001D5  00001295r			 dd	 offset	vm_divimm			 ; 60h
1  6091	000001D9  000012C3r			 dd	 offset	vm_divvar			 ; 61h
1  6092	000001DD  000012F8r			 dd	 offset	vm_divcnt			 ; 62h
1  6093	000001E1  000013A9r			 dd	 offset	vm_andaccimm			 ; 63h
1  6094	000001E5  000013CEr			 dd	 offset	vm_andaccdat			 ; 64h
1  6095	000001E9  000013EAr			 dd	 offset	vm_andaccvar			 ; 65h
1  6096	000001ED  00001416r			 dd	 offset	vm_anddatimm			 ; 66h
1  6097	000001F1  0000143Br			 dd	 offset	vm_anddatacc			 ; 67h
1  6098	000001F5  00001457r			 dd	 offset	vm_anddatvar			 ; 68h
1  6099	000001F9  00001483r			 dd	 offset	vm_oraccimm			 ; 69h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 108
pmScript.ASM



1  6100	000001FD  000014A8r			 dd	 offset	vm_oraccdat			 ; 6Ah
1  6101	00000201  000014C4r			 dd	 offset	vm_oraccvar			 ; 6Bh
1  6102	00000205  000014F0r			 dd	 offset	vm_ordatimm			 ; 6Ch
1  6103	00000209  00001515r			 dd	 offset	vm_ordatacc			 ; 6Dh
1  6104	0000020D  00001531r			 dd	 offset	vm_ordatvar			 ; 6Eh
1  6105	00000211  0000155Dr			 dd	 offset	vm_xoraccimm			 ; 6Fh
1  6106	00000215  00001582r			 dd	 offset	vm_xoraccdat			 ; 70h
1  6107	00000219  0000159Er			 dd	 offset	vm_xoraccvar			 ; 71h
1  6108	0000021D  000015CAr			 dd	 offset	vm_xordatimm			 ; 72h
1  6109	00000221  000015EFr			 dd	 offset	vm_xordatacc			 ; 73h
1  6110	00000225  0000160Br			 dd	 offset	vm_xordatvar			 ; 74h
1  6111	00000229  00001637r			 dd	 offset	vm_notacc			 ; 75h
1  6112	0000022D  00001650r			 dd	 offset	vm_notdat			 ; 76h
1  6113	00000231  00001669r			 dd	 offset	vm_negacc			 ; 77h
1  6114	00000235  00001682r			 dd	 offset	vm_negdat			 ; 78h
1  6115	00000239  00001836r			 dd	 offset	vm_sinimm			 ; 79h
1  6116	0000023D  00001867r			 dd	 offset	vm_sincnt			 ; 7Ah
1  6117	00000241  0000188Fr			 dd	 offset	vm_sinvar			 ; 7Bh
1  6118	00000245  000018C7r			 dd	 offset	vm_cosimm			 ; 7Ch
1  6119	00000249  000018F8r			 dd	 offset	vm_coscnt			 ; 7Dh
1  6120	0000024D  00001920r			 dd	 offset	vm_cosvar			 ; 7Eh
1  6121	00000251  00001958r			 dd	 offset	vm_tanimm			 ; 7Fh
1  6122	00000255  00001989r			 dd	 offset	vm_tancnt			 ; 80h
1  6123	00000259  000019B1r			 dd	 offset	vm_tanvar			 ; 81h
1  6124	0000025D  000019E9r			 dd	 offset	vm_rolimm			 ; 82h
1  6125	00000261  00001A0Ar			 dd	 offset	vm_rolcnt			 ; 83h
1  6126	00000265  00001A20r			 dd	 offset	vm_rorimm			 ; 84h
1  6127	00000269  00001A41r			 dd	 offset	vm_rorcnt			 ; 85h
1  6128	0000026D  00001A57r			 dd	 offset	vm_shlimm			 ; 86h
1  6129	00000271  00001A78r			 dd	 offset	vm_shlcnt			 ; 87h
1  6130	00000275  00001A8Er			 dd	 offset	vm_shrimm			 ; 88h
1  6131	00000279  00001AAFr			 dd	 offset	vm_shrcnt			 ; 89h
1  6132	0000027D  00000AF6r			 dd	 offset	vm_xchgaccdat			 ; 8Ah
1  6133	00000281  0000131Fr			 dd	 offset	vm_modimm			 ; 8Bh
1  6134	00000285  0000134Dr			 dd	 offset	vm_modvar			 ; 8Ch
1  6135	00000289  00001382r			 dd	 offset	vm_modcnt			 ; 8Dh
1  6136	0000028D  00000A04r			 dd	 offset	vm_lodsb		 ; 8Eh
1  6137	00000291  00000A34r			 dd	 offset	vm_stosb		 ; 8Fh
1  6138	00000295  00000A64r			 dd	 offset	vm_movsb		 ; 90h
1  6139	00000299  00000AAEr			 dd	 offset	vm_std				 ; 91h
1  6140	0000029D  00000AC5r			 dd	 offset	vm_cld				 ; 92h
1  6141	000002A1  00000ADCr			 dd	 offset	vm_xchgacccnt			 ; 93h
1  6142	000002A5  0000169Br			 dd	 offset	vm_andcntimm			 ; 94h
1  6143	000002A9  000016C0r			 dd	 offset	vm_andcntacc			 ; 95h
1  6144	000002AD  000016DCr			 dd	 offset	vm_andcntvar			 ; 96h
1  6145	000002B1  00001708r			 dd	 offset	vm_orcntimm			 ; 97h
1  6146	000002B5  0000172Dr			 dd	 offset	vm_orcntacc			 ; 98h
1  6147	000002B9  00001749r			 dd	 offset	vm_orcntvar			 ; 99h
1  6148	000002BD  00001775r			 dd	 offset	vm_xorcntimm			 ; 9Ah
1  6149	000002C1  0000179Ar			 dd	 offset	vm_xorcntacc			 ; 9Bh
1  6150	000002C5  000017B6r			 dd	 offset	vm_xorcntvar			 ; 9Ch
1  6151	000002C9  000017E2r			 dd	 offset	vm_andacccnt			 ; 9Dh
1  6152	000002CD  000017FEr			 dd	 offset	vm_oracccnt			 ; 9Eh
1  6153	000002D1  0000181Ar			 dd	 offset	vm_xoracccnt			 ; 9Fh
1  6154	000002D5  00001AECr			 dd	 offset	vm_alloccnt			 ; A0h
1  6155	000002D9  00001AC5r			 dd	 offset	vm_allocimm			 ; A1h
1  6156	000002DD  00000882r			 dd	 offset	vm_movcpsacc			 ; A2h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 109
pmScript.ASM



1  6157	000002E1  00000896r			 dd	 offset	vm_movcpdacc			 ; A3h
1  6158	000002E5  000008AAr			 dd	 offset	vm_movacccps			 ; A4h
1  6159	000002E9  000008BEr			 dd	 offset	vm_movacccpd			 ; A5h
1  6160	000002ED  000008D2r			 dd	 offset	vm_movcpsdat			 ; A6h
1  6161	000002F1  000008E6r			 dd	 offset	vm_movcpddat			 ; A7h
1  6162	000002F5  000008FAr			 dd	 offset	vm_movdatcps			 ; A8h
1  6163	000002F9  0000090Er			 dd	 offset	vm_movdatcpd			 ; A9h
1  6164	000002FD  00000922r			 dd	 offset	vm_movcpscpd			 ; AAh
1  6165	00000301  00000936r			 dd	 offset	vm_movcpdcps			 ; ABh
1  6166	00000305  00001B09r			 dd	 offset	vm_allocacc			 ; ACh
1  6167
1  6168
1  6169
1  6170	00000309				 .code
1  6171
1  6172	0000048E			 vm_nop		 proc	 STDCALL, ptrMachine:DWORD
2  6173	0000048E  C8 0000 00			 ENTERD	 00000h,0
3  6174	00000492  C9				 LEAVED
3  6175	00000493  C2 0004			 RET	 00004h
1  6176	00000496			 vm_nop		 endp
1  6177
1  6178					 INCLUDE ops_pushpop.inc
2  6179
2  6180	00000496				 .code
2  6181
2  6182	00000496			 vm_pushimm		 proc	 STDCALL, ptrMachine:DWORD
3  6183	00000496  C8 0000 00			 ENTERD	 00000h,0
3  6184	0000049A  8B 75	08			 mov	 esi, ptrMachine
2  6185	0000049D  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6186	000004A0  47				 inc	 edi
2  6187
2  6188	000004A1  57				 push	 edi
2  6189	000004A2  56				 push	 esi
2  6190	000004A3  E8 FFFFFE5A			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  6191
2  6192	000004A8  50				 push	 eax
2  6193	000004A9  56				 push	 esi
2  6194	000004AA  E8 FFFFFDEF			 call	 internals_PushValue
2  6195
2  6196	000004AF  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6197	000004B3  C9				 LEAVED
3  6198	000004B4  C2 0004			 RET	 00004h
2  6199	000004B7			 vm_pushimm		 endp
2  6200
2  6201	000004B7			 vm_pushvar		 proc	 STDCALL, ptrMachine:DWORD
3  6202	000004B7  C8 0000 00			 ENTERD	 00000h,0
3  6203	000004BB  8B 75	08			 mov	 esi, ptrMachine
2  6204	000004BE  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6205	000004C1  47				 inc	 edi
2  6206
2  6207	000004C2  57				 push	 edi
2  6208	000004C3  56				 push	 esi
2  6209	000004C4  E8 FFFFFE39			 call	 internals_ReadValue			 ; Gets	address	of var
2  6210
2  6211	000004C9  50				 push	 eax
2  6212	000004CA  56				 push	 esi
2  6213	000004CB  E8 FFFFFE32			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 110
pmScript.ASM



2  6214
2  6215	000004D0  50				 push	 eax
2  6216	000004D1  56				 push	 esi
2  6217	000004D2  E8 FFFFFDC7			 call	 internals_PushValue
2  6218
2  6219	000004D7  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6220	000004DB  C9				 LEAVED
3  6221	000004DC  C2 0004			 RET	 00004h
2  6222	000004DF			 vm_pushvar		 endp
2  6223
2  6224	000004DF			 vm_pushacc		 proc	 STDCALL, ptrMachine:DWORD
3  6225	000004DF  C8 0000 00			 ENTERD	 00000h,0
3  6226	000004E3  8B 75	08			 mov	 esi, ptrMachine
2  6227	000004E6  8B 46	04			 mov	 eax, [esi].reg_acc
2  6228
2  6229	000004E9  50				 push	 eax
2  6230	000004EA  56				 push	 esi
2  6231	000004EB  E8 FFFFFDAE			 call	 internals_PushValue
2  6232
2  6233	000004F0  FF 46	1C			 inc	 [esi].reg_ip
3  6234	000004F3  C9				 LEAVED
3  6235	000004F4  C2 0004			 RET	 00004h
2  6236	000004F7			 vm_pushacc		 endp
2  6237
2  6238	000004F7			 vm_pushcnt		 proc	 STDCALL, ptrMachine:DWORD
3  6239	000004F7  C8 0000 00			 ENTERD	 00000h,0
3  6240	000004FB  8B 75	08			 mov	 esi, ptrMachine
2  6241	000004FE  8B 46	08			 mov	 eax, [esi].reg_cnt
2  6242
2  6243	00000501  50				 push	 eax
2  6244	00000502  56				 push	 esi
2  6245	00000503  E8 FFFFFD96			 call	 internals_PushValue
2  6246
2  6247	00000508  FF 46	1C			 inc	 [esi].reg_ip
3  6248	0000050B  C9				 LEAVED
3  6249	0000050C  C2 0004			 RET	 00004h
2  6250	0000050F			 vm_pushcnt		 endp
2  6251
2  6252	0000050F			 vm_pushdat		 proc	 STDCALL, ptrMachine:DWORD
3  6253	0000050F  C8 0000 00			 ENTERD	 00000h,0
3  6254	00000513  8B 75	08			 mov	 esi, ptrMachine
2  6255	00000516  8B 46	0C			 mov	 eax, [esi].reg_dat
2  6256
2  6257	00000519  50				 push	 eax
2  6258	0000051A  56				 push	 esi
2  6259	0000051B  E8 FFFFFD7E			 call	 internals_PushValue
2  6260
2  6261	00000520  FF 46	1C			 inc	 [esi].reg_ip
3  6262	00000523  C9				 LEAVED
3  6263	00000524  C2 0004			 RET	 00004h
2  6264	00000527			 vm_pushdat		 endp
2  6265
2  6266	00000527			 vm_pushcps		 proc	 STDCALL, ptrMachine:DWORD
3  6267	00000527  C8 0000 00			 ENTERD	 00000h,0
3  6268	0000052B  8B 75	08			 mov	 esi, ptrMachine
2  6269	0000052E  8B 46	14			 mov	 eax, [esi].reg_cps
2  6270
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 111
pmScript.ASM



2  6271	00000531  50				 push	 eax
2  6272	00000532  56				 push	 esi
2  6273	00000533  E8 FFFFFD66			 call	 internals_PushValue
2  6274
2  6275	00000538  FF 46	1C			 inc	 [esi].reg_ip
3  6276	0000053B  C9				 LEAVED
3  6277	0000053C  C2 0004			 RET	 00004h
2  6278	0000053F			 vm_pushcps		 endp
2  6279
2  6280	0000053F			 vm_pushcpd		 proc	 STDCALL, ptrMachine:DWORD
3  6281	0000053F  C8 0000 00			 ENTERD	 00000h,0
3  6282	00000543  8B 75	08			 mov	 esi, ptrMachine
2  6283	00000546  8B 46	18			 mov	 eax, [esi].reg_cpd
2  6284
2  6285	00000549  50				 push	 eax
2  6286	0000054A  56				 push	 esi
2  6287	0000054B  E8 FFFFFD4E			 call	 internals_PushValue
2  6288
2  6289	00000550  FF 46	1C			 inc	 [esi].reg_ip
3  6290	00000553  C9				 LEAVED
3  6291	00000554  C2 0004			 RET	 00004h
2  6292	00000557			 vm_pushcpd		 endp
2  6293
2  6294	00000557			 vm_popvar		 proc	 STDCALL, ptrMachine:DWORD
3  6295	00000557  C8 0000 00			 ENTERD	 00000h,0
3  6296	0000055B  8B 75	08			 mov	 esi, ptrMachine
2  6297	0000055E  56				 push	 esi
2  6298	0000055F  E8 FFFFFD6E			 call	 internals_PopValue
2  6299
2  6300	00000564  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6301	00000568  C9				 LEAVED
3  6302	00000569  C2 0004			 RET	 00004h
2  6303	0000056C			 vm_popvar		 endp
2  6304
2  6305	0000056C			 vm_popacc		 proc	 STDCALL, ptrMachine:DWORD
3  6306	0000056C  C8 0000 00			 ENTERD	 00000h,0
3  6307	00000570  8B 75	08			 mov	 esi, ptrMachine
2  6308	00000573  56				 push	 esi
2  6309	00000574  E8 FFFFFD59			 call	 internals_PopValue
2  6310	00000579  89 46	04			 mov	 [esi].reg_acc,	eax
2  6311
2  6312	0000057C  FF 46	1C			 inc	 [esi].reg_ip
3  6313	0000057F  C9				 LEAVED
3  6314	00000580  C2 0004			 RET	 00004h
2  6315	00000583			 vm_popacc		 endp
2  6316
2  6317	00000583			 vm_popcnt		 proc	 STDCALL, ptrMachine:DWORD
3  6318	00000583  C8 0000 00			 ENTERD	 00000h,0
3  6319	00000587  8B 75	08			 mov	 esi, ptrMachine
2  6320	0000058A  56				 push	 esi
2  6321	0000058B  E8 FFFFFD42			 call	 internals_PopValue
2  6322	00000590  89 46	08			 mov	 [esi].reg_cnt,	eax
2  6323
2  6324	00000593  FF 46	1C			 inc	 [esi].reg_ip
3  6325	00000596  C9				 LEAVED
3  6326	00000597  C2 0004			 RET	 00004h
2  6327	0000059A			 vm_popcnt		 endp
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 112
pmScript.ASM



2  6328
2  6329	0000059A			 vm_popdat		 proc	 STDCALL, ptrMachine:DWORD
3  6330	0000059A  C8 0000 00			 ENTERD	 00000h,0
3  6331	0000059E  8B 75	08			 mov	 esi, ptrMachine
2  6332	000005A1  56				 push	 esi
2  6333	000005A2  E8 FFFFFD2B			 call	 internals_PopValue
2  6334	000005A7  89 46	0C			 mov	 [esi].reg_dat,	eax
2  6335
2  6336	000005AA  FF 46	1C			 inc	 [esi].reg_ip
3  6337	000005AD  C9				 LEAVED
3  6338	000005AE  C2 0004			 RET	 00004h
2  6339	000005B1			 vm_popdat		 endp
2  6340
2  6341	000005B1			 vm_popcps		 proc	 STDCALL, ptrMachine:DWORD
3  6342	000005B1  C8 0000 00			 ENTERD	 00000h,0
3  6343	000005B5  8B 75	08			 mov	 esi, ptrMachine
2  6344	000005B8  56				 push	 esi
2  6345	000005B9  E8 FFFFFD14			 call	 internals_PopValue
2  6346	000005BE  89 46	14			 mov	 [esi].reg_cps,	eax
2  6347
2  6348	000005C1  FF 46	1C			 inc	 [esi].reg_ip
3  6349	000005C4  C9				 LEAVED
3  6350	000005C5  C2 0004			 RET	 00004h
2  6351	000005C8			 vm_popcps		 endp
2  6352
2  6353	000005C8			 vm_popcpd		 proc	 STDCALL, ptrMachine:DWORD
3  6354	000005C8  C8 0000 00			 ENTERD	 00000h,0
3  6355	000005CC  8B 75	08			 mov	 esi, ptrMachine
2  6356	000005CF  56				 push	 esi
2  6357	000005D0  E8 FFFFFCFD			 call	 internals_PopValue
2  6358	000005D5  89 46	18			 mov	 [esi].reg_cpd,	eax
2  6359
2  6360	000005D8  FF 46	1C			 inc	 [esi].reg_ip
3  6361	000005DB  C9				 LEAVED
3  6362	000005DC  C2 0004			 RET	 00004h
2  6363	000005DF			 vm_popcpd		 endp
2  6364
2  6365
2  6366
1  6367					 INCLUDE ops_mov.inc
2  6368
2  6369
2  6370	000005DF				 .code
2  6371
2  6372					 ;-----------------------------------------------------------------------------------------[+
   6373					 mov acc, immediate
2  6374	000005DF			 vm_movaccimm		 proc	 STDCALL, ptrMachine:DWORD
3  6375	000005DF  C8 0000 00			 ENTERD	 00000h,0
3  6376	000005E3  8B 75	08			 mov	 esi, ptrMachine
2  6377	000005E6  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6378	000005E9  47				 inc	 edi
2  6379
2  6380	000005EA  57				 push	 edi
2  6381	000005EB  56				 push	 esi
2  6382	000005EC  E8 FFFFFD11			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  6383
2  6384	000005F1  89 46	04			 mov	 [esi].reg_acc,	eax
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 113
pmScript.ASM



2  6385
2  6386	000005F4  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6387	000005F8  C9				 LEAVED
3  6388	000005F9  C2 0004			 RET	 00004h
2  6389	000005FC			 vm_movaccimm		 endp
2  6390
2  6391					 ;-----------------------------------------------------------------------------------------[+
   6392					 mov cnt, immediate
2  6393	000005FC			 vm_movcntimm		 proc	 STDCALL, ptrMachine:DWORD
3  6394	000005FC  C8 0000 00			 ENTERD	 00000h,0
3  6395	00000600  8B 75	08			 mov	 esi, ptrMachine
2  6396	00000603  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6397	00000606  47				 inc	 edi
2  6398
2  6399	00000607  57				 push	 edi
2  6400	00000608  56				 push	 esi
2  6401	00000609  E8 FFFFFCF4			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  6402
2  6403	0000060E  89 46	08			 mov	 [esi].reg_cnt,	eax
2  6404
2  6405	00000611  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6406	00000615  C9				 LEAVED
3  6407	00000616  C2 0004			 RET	 00004h
2  6408	00000619			 vm_movcntimm		 endp
2  6409
2  6410					 ;-----------------------------------------------------------------------------------------[+
   6411					 mov dat, immediate
2  6412	00000619			 vm_movdatimm		 proc	 STDCALL, ptrMachine:DWORD
3  6413	00000619  C8 0000 00			 ENTERD	 00000h,0
3  6414	0000061D  8B 75	08			 mov	 esi, ptrMachine
2  6415	00000620  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6416	00000623  47				 inc	 edi
2  6417
2  6418	00000624  57				 push	 edi
2  6419	00000625  56				 push	 esi
2  6420	00000626  E8 FFFFFCD7			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  6421
2  6422	0000062B  89 46	0C			 mov	 [esi].reg_dat,	eax
2  6423
2  6424	0000062E  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6425	00000632  C9				 LEAVED
3  6426	00000633  C2 0004			 RET	 00004h
2  6427	00000636			 vm_movdatimm		 endp
2  6428
2  6429					 ;-----------------------------------------------------------------------------------------[+
   6430					 mov acc, cnt
2  6431	00000636			 vm_movacccnt		 proc	 STDCALL, ptrMachine:DWORD
3  6432	00000636  C8 0000 00			 ENTERD	 00000h,0
3  6433	0000063A  8B 75	08			 mov	 esi, ptrMachine
2  6434	0000063D  8B 46	08			 mov	 eax, [esi].reg_cnt
2  6435	00000640  89 46	04			 mov	 [esi].reg_acc,	eax
2  6436	00000643  FF 46	1C			 inc	 [esi].reg_ip
3  6437	00000646  C9				 LEAVED
3  6438	00000647  C2 0004			 RET	 00004h
2  6439	0000064A			 vm_movacccnt		 endp
2  6440
2  6441					 ;-----------------------------------------------------------------------------------------[+
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 114
pmScript.ASM



   6442					 mov acc, dat
2  6443	0000064A			 vm_movaccdat		 proc	 STDCALL, ptrMachine:DWORD
3  6444	0000064A  C8 0000 00			 ENTERD	 00000h,0
3  6445	0000064E  8B 75	08			 mov	 esi, ptrMachine
2  6446	00000651  8B 46	0C			 mov	 eax, [esi].reg_dat
2  6447	00000654  89 46	04			 mov	 [esi].reg_acc,	eax
2  6448	00000657  FF 46	1C			 inc	 [esi].reg_ip
3  6449	0000065A  C9				 LEAVED
3  6450	0000065B  C2 0004			 RET	 00004h
2  6451	0000065E			 vm_movaccdat		 endp
2  6452
2  6453					 ;-----------------------------------------------------------------------------------------[+
   6454					 mov acc, rnd
2  6455	0000065E			 vm_movaccrnd		 proc	 STDCALL, ptrMachine:DWORD
3  6456	0000065E  C8 0000 00			 ENTERD	 00000h,0
3  6457	00000662  8B 75	08			 mov	 esi, ptrMachine
2  6458	00000665  8B 46	10			 mov	 eax, [esi].reg_rnd
2  6459	00000668  89 46	04			 mov	 [esi].reg_acc,	eax
2  6460	0000066B  50				 push	 eax
2  6461	0000066C  E8 FFFFFBA0			 call	 RandomNumber
2  6462	00000671  89 46	10			 mov	 [esi].reg_rnd,	eax
2  6463	00000674  FF 46	1C			 inc	 [esi].reg_ip
3  6464	00000677  C9				 LEAVED
3  6465	00000678  C2 0004			 RET	 00004h
2  6466	0000067B			 vm_movaccrnd		 endp
2  6467
2  6468					 ;-----------------------------------------------------------------------------------------[+
   6469					 mov cnt, acc
2  6470	0000067B			 vm_movcntacc		 proc	 STDCALL, ptrMachine:DWORD
3  6471	0000067B  C8 0000 00			 ENTERD	 00000h,0
3  6472	0000067F  8B 75	08			 mov	 esi, ptrMachine
2  6473	00000682  8B 46	04			 mov	 eax, [esi].reg_acc
2  6474	00000685  89 46	08			 mov	 [esi].reg_cnt,	eax
2  6475	00000688  FF 46	1C			 inc	 [esi].reg_ip
3  6476	0000068B  C9				 LEAVED
3  6477	0000068C  C2 0004			 RET	 00004h
2  6478	0000068F			 vm_movcntacc		 endp
2  6479
2  6480					 ;-----------------------------------------------------------------------------------------[+
   6481					 mov cnt, dat
2  6482	0000068F			 vm_movcntdat		 proc	 STDCALL, ptrMachine:DWORD
3  6483	0000068F  C8 0000 00			 ENTERD	 00000h,0
3  6484	00000693  8B 75	08			 mov	 esi, ptrMachine
2  6485	00000696  8B 46	0C			 mov	 eax, [esi].reg_dat
2  6486	00000699  89 46	08			 mov	 [esi].reg_cnt,	eax
2  6487	0000069C  FF 46	1C			 inc	 [esi].reg_ip
3  6488	0000069F  C9				 LEAVED
3  6489	000006A0  C2 0004			 RET	 00004h
2  6490	000006A3			 vm_movcntdat		 endp
2  6491
2  6492					 ;-----------------------------------------------------------------------------------------[+
   6493					 mov cnt, rnd
2  6494	000006A3			 vm_movcntrnd		 proc	 STDCALL, ptrMachine:DWORD
3  6495	000006A3  C8 0000 00			 ENTERD	 00000h,0
3  6496	000006A7  8B 75	08			 mov	 esi, ptrMachine
2  6497	000006AA  8B 46	10			 mov	 eax, [esi].reg_rnd
2  6498	000006AD  89 46	08			 mov	 [esi].reg_cnt,	eax
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 115
pmScript.ASM



2  6499	000006B0  50				 push	 eax
2  6500	000006B1  E8 FFFFFB5B			 call	 RandomNumber
2  6501	000006B6  89 46	10			 mov	 [esi].reg_rnd,	eax
2  6502	000006B9  FF 46	1C			 inc	 [esi].reg_ip
3  6503	000006BC  C9				 LEAVED
3  6504	000006BD  C2 0004			 RET	 00004h
2  6505	000006C0			 vm_movcntrnd		 endp
2  6506
2  6507					 ;-----------------------------------------------------------------------------------------[+
   6508					 mov dat, acc
2  6509	000006C0			 vm_movdatacc		 proc	 STDCALL, ptrMachine:DWORD
3  6510	000006C0  C8 0000 00			 ENTERD	 00000h,0
3  6511	000006C4  8B 75	08			 mov	 esi, ptrMachine
2  6512	000006C7  8B 46	04			 mov	 eax, [esi].reg_acc
2  6513	000006CA  89 46	0C			 mov	 [esi].reg_dat,	eax
2  6514	000006CD  FF 46	1C			 inc	 [esi].reg_ip
3  6515	000006D0  C9				 LEAVED
3  6516	000006D1  C2 0004			 RET	 00004h
2  6517	000006D4			 vm_movdatacc		 endp
2  6518
2  6519					 ;-----------------------------------------------------------------------------------------[+
   6520					 mov dat, cnt
2  6521	000006D4			 vm_movdatcnt		 proc	 STDCALL, ptrMachine:DWORD
3  6522	000006D4  C8 0000 00			 ENTERD	 00000h,0
3  6523	000006D8  8B 75	08			 mov	 esi, ptrMachine
2  6524	000006DB  8B 46	08			 mov	 eax, [esi].reg_cnt
2  6525	000006DE  89 46	0C			 mov	 [esi].reg_dat,	eax
2  6526	000006E1  FF 46	1C			 inc	 [esi].reg_ip
3  6527	000006E4  C9				 LEAVED
3  6528	000006E5  C2 0004			 RET	 00004h
2  6529	000006E8			 vm_movdatcnt		 endp
2  6530
2  6531					 ;-----------------------------------------------------------------------------------------[+
   6532					 mov dat, rnd
2  6533	000006E8			 vm_movdatrnd		 proc	 STDCALL, ptrMachine:DWORD
3  6534	000006E8  C8 0000 00			 ENTERD	 00000h,0
3  6535	000006EC  8B 75	08			 mov	 esi, ptrMachine
2  6536	000006EF  8B 46	10			 mov	 eax, [esi].reg_rnd
2  6537	000006F2  89 46	0C			 mov	 [esi].reg_dat,	eax
2  6538	000006F5  50				 push	 eax
2  6539	000006F6  E8 FFFFFB16			 call	 RandomNumber
2  6540	000006FB  89 46	10			 mov	 [esi].reg_rnd,	eax
2  6541	000006FE  FF 46	1C			 inc	 [esi].reg_ip
3  6542	00000701  C9				 LEAVED
3  6543	00000702  C2 0004			 RET	 00004h
2  6544	00000705			 vm_movdatrnd		 endp
2  6545
2  6546					 ;-----------------------------------------------------------------------------------------[+
   6547					 mov acc, variable
2  6548	00000705			 vm_movaccvar		 proc	 STDCALL, ptrMachine:DWORD
3  6549	00000705  C8 0000 00			 ENTERD	 00000h,0
3  6550	00000709  8B 75	08			 mov	 esi, ptrMachine
2  6551	0000070C  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6552	0000070F  47				 inc	 edi
2  6553
2  6554	00000710  57				 push	 edi
2  6555	00000711  56				 push	 esi
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 116
pmScript.ASM



2  6556	00000712  E8 FFFFFBEB			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6557					 (address)
2  6558
2  6559	00000717  50				 push	 eax
2  6560	00000718  56				 push	 esi
2  6561	00000719  E8 FFFFFBE4			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6562					 (value)
2  6563
2  6564	0000071E  89 46	04			 mov	 [esi].reg_acc,	eax
2  6565
2  6566	00000721  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6567	00000725  C9				 LEAVED
3  6568	00000726  C2 0004			 RET	 00004h
2  6569	00000729			 vm_movaccvar		 endp
2  6570
2  6571					 ;-----------------------------------------------------------------------------------------[+
   6572					 mov cnt, variable
2  6573	00000729			 vm_movcntvar		 proc	 STDCALL, ptrMachine:DWORD
3  6574	00000729  C8 0000 00			 ENTERD	 00000h,0
3  6575	0000072D  8B 75	08			 mov	 esi, ptrMachine
2  6576	00000730  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6577	00000733  47				 inc	 edi
2  6578
2  6579	00000734  57				 push	 edi
2  6580	00000735  56				 push	 esi
2  6581	00000736  E8 FFFFFBC7			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6582					 (address)
2  6583
2  6584	0000073B  50				 push	 eax
2  6585	0000073C  56				 push	 esi
2  6586	0000073D  E8 FFFFFBC0			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6587					 (value)
2  6588
2  6589	00000742  89 46	08			 mov	 [esi].reg_cnt,	eax
2  6590
2  6591	00000745  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6592	00000749  C9				 LEAVED
3  6593	0000074A  C2 0004			 RET	 00004h
2  6594	0000074D			 vm_movcntvar		 endp
2  6595
2  6596					 ;-----------------------------------------------------------------------------------------[+
   6597					 mov dat, variable
2  6598	0000074D			 vm_movdatvar		 proc	 STDCALL, ptrMachine:DWORD
3  6599	0000074D  C8 0000 00			 ENTERD	 00000h,0
3  6600	00000751  8B 75	08			 mov	 esi, ptrMachine
2  6601	00000754  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6602	00000757  47				 inc	 edi
2  6603
2  6604	00000758  57				 push	 edi
2  6605	00000759  56				 push	 esi
2  6606	0000075A  E8 FFFFFBA3			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6607					 (address)
2  6608
2  6609	0000075F  50				 push	 eax
2  6610	00000760  56				 push	 esi
2  6611	00000761  E8 FFFFFB9C			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6612					 (value)
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 117
pmScript.ASM



2  6613
2  6614	00000766  89 46	0C			 mov	 [esi].reg_dat,	eax
2  6615
2  6616	00000769  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6617	0000076D  C9				 LEAVED
3  6618	0000076E  C2 0004			 RET	 00004h
2  6619	00000771			 vm_movdatvar		 endp
2  6620
2  6621					 ;-----------------------------------------------------------------------------------------[+
   6622					 mov cps, variable
2  6623	00000771			 vm_movcpsvar		 proc	 STDCALL, ptrMachine:DWORD
3  6624	00000771  C8 0000 00			 ENTERD	 00000h,0
3  6625	00000775  8B 75	08			 mov	 esi, ptrMachine
2  6626	00000778  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6627	0000077B  47				 inc	 edi
2  6628
2  6629	0000077C  57				 push	 edi
2  6630	0000077D  56				 push	 esi
2  6631	0000077E  E8 FFFFFB7F			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6632					 (address)
2  6633
2  6634	00000783  50				 push	 eax
2  6635	00000784  56				 push	 esi
2  6636	00000785  E8 FFFFFB78			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6637					 (value)
2  6638
2  6639	0000078A  89 46	14			 mov	 [esi].reg_cps,	eax
2  6640
2  6641	0000078D  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6642	00000791  C9				 LEAVED
3  6643	00000792  C2 0004			 RET	 00004h
2  6644	00000795			 vm_movcpsvar		 endp
2  6645
2  6646					 ;-----------------------------------------------------------------------------------------[+
   6647					 mov cpd, variable
2  6648	00000795			 vm_movcpdvar		 proc	 STDCALL, ptrMachine:DWORD
3  6649	00000795  C8 0000 00			 ENTERD	 00000h,0
3  6650	00000799  8B 75	08			 mov	 esi, ptrMachine
2  6651	0000079C  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6652	0000079F  47				 inc	 edi
2  6653
2  6654	000007A0  57				 push	 edi
2  6655	000007A1  56				 push	 esi
2  6656	000007A2  E8 FFFFFB5B			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6657					 (address)
2  6658
2  6659	000007A7  50				 push	 eax
2  6660	000007A8  56				 push	 esi
2  6661	000007A9  E8 FFFFFB54			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6662					 (value)
2  6663
2  6664	000007AE  89 46	18			 mov	 [esi].reg_cpd,	eax
2  6665
2  6666	000007B1  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6667	000007B5  C9				 LEAVED
3  6668	000007B6  C2 0004			 RET	 00004h
2  6669	000007B9			 vm_movcpdvar		 endp
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 118
pmScript.ASM



2  6670
2  6671					 ;-----------------------------------------------------------------------------------------[+
   6672					 mov variable, immediate
2  6673	000007B9			 vm_movvarimm		 proc	 STDCALL, ptrMachine:DWORD
3  6674	000007B9  C8 0000 00			 ENTERD	 00000h,0
3  6675	000007BD  8B 75	08			 mov	 esi, ptrMachine
2  6676	000007C0  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6677	000007C3  47				 inc	 edi
2  6678
2  6679	000007C4  57				 push	 edi
2  6680	000007C5  56				 push	 esi
2  6681	000007C6  E8 FFFFFB37			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6682					 (address)
2  6683	000007CB  8B D0				 mov	 edx, eax				 ; EDX -> variable address
2  6684
2  6685	000007CD  83 C7	04			 add	 edi, 4					 ; Gets	next 32	bit value
2  6686	000007D0  57				 push	 edi
2  6687	000007D1  56				 push	 esi
2  6688	000007D2  E8 FFFFFB2B			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6689					 (value)
2  6690
2  6691	000007D7  50				 push	 eax
2  6692	000007D8  52				 push	 edx
2  6693	000007D9  56				 push	 esi
2  6694	000007DA  E8 FFFFFB58			 call	 internals_WriteValue			 ; Store immediate in variable
2  6695
2  6696	000007DF  83 46	1C 09			 add	 [esi].reg_ip, 9
3  6697	000007E3  C9				 LEAVED
3  6698	000007E4  C2 0004			 RET	 00004h
2  6699	000007E7			 vm_movvarimm		 endp
2  6700
2  6701					 ;-----------------------------------------------------------------------------------------[+
   6702					 mov variable, acc
2  6703	000007E7			 vm_movvaracc		 proc	 STDCALL, ptrMachine:DWORD
3  6704	000007E7  C8 0000 00			 ENTERD	 00000h,0
3  6705	000007EB  8B 75	08			 mov	 esi, ptrMachine
2  6706	000007EE  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6707	000007F1  47				 inc	 edi
2  6708
2  6709	000007F2  57				 push	 edi
2  6710	000007F3  56				 push	 esi
2  6711	000007F4  E8 FFFFFB09			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6712					 (address)
2  6713
2  6714	000007F9  FF 76	04			 push	 [esi].reg_acc
2  6715	000007FC  50				 push	 eax
2  6716	000007FD  56				 push	 esi
2  6717	000007FE  E8 FFFFFB34			 call	 internals_WriteValue			 ; Store acc in	variable
2  6718
2  6719	00000803  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6720	00000807  C9				 LEAVED
3  6721	00000808  C2 0004			 RET	 00004h
2  6722	0000080B			 vm_movvaracc		 endp
2  6723
2  6724					 ;-----------------------------------------------------------------------------------------[+
   6725					 mov variable, cnt
2  6726	0000080B			 vm_movvarcnt		 proc	 STDCALL, ptrMachine:DWORD
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 119
pmScript.ASM



3  6727	0000080B  C8 0000 00			 ENTERD	 00000h,0
3  6728	0000080F  8B 75	08			 mov	 esi, ptrMachine
2  6729	00000812  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6730	00000815  47				 inc	 edi
2  6731
2  6732	00000816  57				 push	 edi
2  6733	00000817  56				 push	 esi
2  6734	00000818  E8 FFFFFAE5			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6735					 (address)
2  6736
2  6737	0000081D  FF 76	08			 push	 [esi].reg_cnt
2  6738	00000820  50				 push	 eax
2  6739	00000821  56				 push	 esi
2  6740	00000822  E8 FFFFFB10			 call	 internals_WriteValue			 ; Store acc in	variable
2  6741
2  6742	00000827  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6743	0000082B  C9				 LEAVED
3  6744	0000082C  C2 0004			 RET	 00004h
2  6745	0000082F			 vm_movvarcnt		 endp
2  6746
2  6747					 ;-----------------------------------------------------------------------------------------[+
   6748					 mov variable, dat
2  6749	0000082F			 vm_movvardat		 proc	 STDCALL, ptrMachine:DWORD
3  6750	0000082F  C8 0000 00			 ENTERD	 00000h,0
3  6751	00000833  8B 75	08			 mov	 esi, ptrMachine
2  6752	00000836  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6753	00000839  47				 inc	 edi
2  6754
2  6755	0000083A  57				 push	 edi
2  6756	0000083B  56				 push	 esi
2  6757	0000083C  E8 FFFFFAC1			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6758					 (address)
2  6759
2  6760	00000841  FF 76	0C			 push	 [esi].reg_dat
2  6761	00000844  50				 push	 eax
2  6762	00000845  56				 push	 esi
2  6763	00000846  E8 FFFFFAEC			 call	 internals_WriteValue			 ; Store acc in	variable
2  6764
2  6765	0000084B  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6766	0000084F  C9				 LEAVED
3  6767	00000850  C2 0004			 RET	 00004h
2  6768	00000853			 vm_movvardat		 endp
2  6769
2  6770					 ;-----------------------------------------------------------------------------------------[+
   6771					 mov variable, rnd
2  6772	00000853			 vm_movvarrnd		 proc	 STDCALL, ptrMachine:DWORD
3  6773	00000853  C8 0000 00			 ENTERD	 00000h,0
3  6774	00000857  8B 75	08			 mov	 esi, ptrMachine
2  6775	0000085A  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6776	0000085D  47				 inc	 edi
2  6777
2  6778	0000085E  57				 push	 edi
2  6779	0000085F  56				 push	 esi
2  6780	00000860  E8 FFFFFA9D			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6781					 (address)
2  6782
2  6783	00000865  FF 76	10			 push	 [esi].reg_rnd
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 120
pmScript.ASM



2  6784	00000868  50				 push	 eax
2  6785	00000869  56				 push	 esi
2  6786	0000086A  E8 FFFFFAC8			 call	 internals_WriteValue			 ; Store acc in	variable
2  6787
2  6788	0000086F  FF 76	10			 push	 [esi].reg_rnd
2  6789	00000872  E8 FFFFF99A			 call	 RandomNumber
2  6790	00000877  89 46	10			 mov	 [esi].reg_rnd,	eax
2  6791
2  6792	0000087A  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6793	0000087E  C9				 LEAVED
3  6794	0000087F  C2 0004			 RET	 00004h
2  6795	00000882			 vm_movvarrnd		 endp
2  6796
2  6797					 ;-----------------------------------------------------------------------------------------[+
   6798					 mov cps, acc
2  6799	00000882			 vm_movcpsacc		 proc	 STDCALL, ptrMachine:DWORD
3  6800	00000882  C8 0000 00			 ENTERD	 00000h,0
3  6801	00000886  8B 75	08			 mov	 esi, ptrMachine
2  6802	00000889  8B 46	04			 mov	 eax, [esi].reg_acc
2  6803	0000088C  89 46	14			 mov	 [esi].reg_cps,	eax
2  6804	0000088F  FF 46	1C			 inc	 [esi].reg_ip
3  6805	00000892  C9				 LEAVED
3  6806	00000893  C2 0004			 RET	 00004h
2  6807	00000896			 vm_movcpsacc		 endp
2  6808
2  6809					 ;-----------------------------------------------------------------------------------------[+
   6810					 mov cpd, acc
2  6811	00000896			 vm_movcpdacc		 proc	 STDCALL, ptrMachine:DWORD
3  6812	00000896  C8 0000 00			 ENTERD	 00000h,0
3  6813	0000089A  8B 75	08			 mov	 esi, ptrMachine
2  6814	0000089D  8B 46	04			 mov	 eax, [esi].reg_acc
2  6815	000008A0  89 46	18			 mov	 [esi].reg_cpd,	eax
2  6816	000008A3  FF 46	1C			 inc	 [esi].reg_ip
3  6817	000008A6  C9				 LEAVED
3  6818	000008A7  C2 0004			 RET	 00004h
2  6819	000008AA			 vm_movcpdacc		 endp
2  6820
2  6821					 ;-----------------------------------------------------------------------------------------[+
   6822					 mov acc, cps
2  6823	000008AA			 vm_movacccps		 proc	 STDCALL, ptrMachine:DWORD
3  6824	000008AA  C8 0000 00			 ENTERD	 00000h,0
3  6825	000008AE  8B 75	08			 mov	 esi, ptrMachine
2  6826	000008B1  8B 46	14			 mov	 eax, [esi].reg_cps
2  6827	000008B4  89 46	04			 mov	 [esi].reg_acc,	eax
2  6828	000008B7  FF 46	1C			 inc	 [esi].reg_ip
3  6829	000008BA  C9				 LEAVED
3  6830	000008BB  C2 0004			 RET	 00004h
2  6831	000008BE			 vm_movacccps		 endp
2  6832
2  6833					 ;-----------------------------------------------------------------------------------------[+
   6834					 mov acc, cpd
2  6835	000008BE			 vm_movacccpd		 proc	 STDCALL, ptrMachine:DWORD
3  6836	000008BE  C8 0000 00			 ENTERD	 00000h,0
3  6837	000008C2  8B 75	08			 mov	 esi, ptrMachine
2  6838	000008C5  8B 46	18			 mov	 eax, [esi].reg_cpd
2  6839	000008C8  89 46	04			 mov	 [esi].reg_acc,	eax
2  6840	000008CB  FF 46	1C			 inc	 [esi].reg_ip
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 121
pmScript.ASM



3  6841	000008CE  C9				 LEAVED
3  6842	000008CF  C2 0004			 RET	 00004h
2  6843	000008D2			 vm_movacccpd		 endp
2  6844
2  6845					 ;-----------------------------------------------------------------------------------------[+
   6846					 mov cps, dat
2  6847	000008D2			 vm_movcpsdat		 proc	 STDCALL, ptrMachine:DWORD
3  6848	000008D2  C8 0000 00			 ENTERD	 00000h,0
3  6849	000008D6  8B 75	08			 mov	 esi, ptrMachine
2  6850	000008D9  8B 46	0C			 mov	 eax, [esi].reg_dat
2  6851	000008DC  89 46	14			 mov	 [esi].reg_cps,	eax
2  6852	000008DF  FF 46	1C			 inc	 [esi].reg_ip
3  6853	000008E2  C9				 LEAVED
3  6854	000008E3  C2 0004			 RET	 00004h
2  6855	000008E6			 vm_movcpsdat		 endp
2  6856
2  6857					 ;-----------------------------------------------------------------------------------------[+
   6858					 mov cpd, dat
2  6859	000008E6			 vm_movcpddat		 proc	 STDCALL, ptrMachine:DWORD
3  6860	000008E6  C8 0000 00			 ENTERD	 00000h,0
3  6861	000008EA  8B 75	08			 mov	 esi, ptrMachine
2  6862	000008ED  8B 46	0C			 mov	 eax, [esi].reg_dat
2  6863	000008F0  89 46	18			 mov	 [esi].reg_cpd,	eax
2  6864	000008F3  FF 46	1C			 inc	 [esi].reg_ip
3  6865	000008F6  C9				 LEAVED
3  6866	000008F7  C2 0004			 RET	 00004h
2  6867	000008FA			 vm_movcpddat		 endp
2  6868
2  6869					 ;-----------------------------------------------------------------------------------------[+
   6870					 mov dat, cps
2  6871	000008FA			 vm_movdatcps		 proc	 STDCALL, ptrMachine:DWORD
3  6872	000008FA  C8 0000 00			 ENTERD	 00000h,0
3  6873	000008FE  8B 75	08			 mov	 esi, ptrMachine
2  6874	00000901  8B 46	14			 mov	 eax, [esi].reg_cps
2  6875	00000904  89 46	0C			 mov	 [esi].reg_dat,	eax
2  6876	00000907  FF 46	1C			 inc	 [esi].reg_ip
3  6877	0000090A  C9				 LEAVED
3  6878	0000090B  C2 0004			 RET	 00004h
2  6879	0000090E			 vm_movdatcps		 endp
2  6880
2  6881					 ;-----------------------------------------------------------------------------------------[+
   6882					 mov dat, cpd
2  6883	0000090E			 vm_movdatcpd		 proc	 STDCALL, ptrMachine:DWORD
3  6884	0000090E  C8 0000 00			 ENTERD	 00000h,0
3  6885	00000912  8B 75	08			 mov	 esi, ptrMachine
2  6886	00000915  8B 46	18			 mov	 eax, [esi].reg_cpd
2  6887	00000918  89 46	0C			 mov	 [esi].reg_dat,	eax
2  6888	0000091B  FF 46	1C			 inc	 [esi].reg_ip
3  6889	0000091E  C9				 LEAVED
3  6890	0000091F  C2 0004			 RET	 00004h
2  6891	00000922			 vm_movdatcpd		 endp
2  6892
2  6893					 ;-----------------------------------------------------------------------------------------[+
   6894					 mov cps, cpd
2  6895	00000922			 vm_movcpscpd		 proc	 STDCALL, ptrMachine:DWORD
3  6896	00000922  C8 0000 00			 ENTERD	 00000h,0
3  6897	00000926  8B 75	08			 mov	 esi, ptrMachine
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 122
pmScript.ASM



2  6898	00000929  8B 46	18			 mov	 eax, [esi].reg_cpd
2  6899	0000092C  89 46	14			 mov	 [esi].reg_cps,	eax
2  6900	0000092F  FF 46	1C			 inc	 [esi].reg_ip
3  6901	00000932  C9				 LEAVED
3  6902	00000933  C2 0004			 RET	 00004h
2  6903	00000936			 vm_movcpscpd		 endp
2  6904
2  6905					 ;-----------------------------------------------------------------------------------------[+
   6906					 mov cpd, cps
2  6907	00000936			 vm_movcpdcps		 proc	 STDCALL, ptrMachine:DWORD
3  6908	00000936  C8 0000 00			 ENTERD	 00000h,0
3  6909	0000093A  8B 75	08			 mov	 esi, ptrMachine
2  6910	0000093D  8B 46	14			 mov	 eax, [esi].reg_cps
2  6911	00000940  89 46	18			 mov	 [esi].reg_cpd,	eax
2  6912	00000943  FF 46	1C			 inc	 [esi].reg_ip
3  6913	00000946  C9				 LEAVED
3  6914	00000947  C2 0004			 RET	 00004h
2  6915	0000094A			 vm_movcpdcps		 endp
2  6916
2  6917
1  6918					 INCLUDE ops_copier.inc
2  6919					 MoveDirection		 macro	 regkey
2  6920						 mov	 bl, [esi].reg_flags
2  6921						 and	 bl, VMFLAG_DIRECTION
2  6922						 .IF bl	== 0
2  6923							 inc	 [esi].regkey
2  6924						 .ELSE
2  6925							 dec	 [esi].regkey
2  6926						 .ENDIF
2  6927								 endm
2  6928
2  6929					 MoveDirection4	 macro	 regkey
2  6930						 push	 ebx
2  6931						 mov	 bl, [esi].reg_flags
2  6932						 and	 bl, VMFLAG_DIRECTION
2  6933						 .IF bl	== 0
2  6934							 add	 [esi].regkey, 4
2  6935						 .ELSE
2  6936							 sub	 [esi].regkey, 4
2  6937						 .ENDIF
2  6938						 pop	 ebx
2  6939								 endm
2  6940
2  6941	0000094A				 .code
2  6942
2  6943					 ;-----------------------------------------------------------------------------------------[+
   6944					 lods
2  6945	0000094A			 vm_lods	 proc	 STDCALL, ptrMachine:DWORD
3  6946	0000094A  C8 0000 00			 ENTERD	 00000h,0
3  6947	0000094E  8B 75	08			 mov	 esi, ptrMachine
2  6948	00000951  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6949
2  6950	00000954  FF 76	14			 push	 [esi].reg_cps
2  6951	00000957  56				 push	 esi
2  6952	00000958  E8 FFFFF9A5			 call	 internals_ReadValue
2  6953						 MoveDirection4	 reg_cps
3  6954	0000095D  53				 push	 ebx
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 123
pmScript.ASM



3  6955	0000095E  8A 5E	24			 mov	 bl, [esi].reg_flags
3  6956	00000961  80 E3	04			 and	 bl, VMFLAG_DIRECTION
4  6957	00000964  80 FB	00			 cmp	 bl,0
4  6958	00000967  75 06				 jnz	 @C0003
3  6959	00000969  83 46	14 04				 add	 [esi].reg_cps,	4
4  6960	0000096D  EB 04				 jmp	 @C0002
4  6961	0000096F			 @C0003:
3  6962	0000096F  83 6E	14 04				 sub	 [esi].reg_cps,	4
4  6963	00000973			 @C0002:
3  6964	00000973  5B				 pop	 ebx
2  6965	00000974  89 46	04			 mov	 [esi].reg_acc,	eax
2  6966
2  6967	00000977  FF 46	1C			 inc	 [esi].reg_ip
3  6968	0000097A  C9				 LEAVED
3  6969	0000097B  C2 0004			 RET	 00004h
2  6970	0000097E			 vm_lods	 endp
2  6971
2  6972					 ;-----------------------------------------------------------------------------------------[+
   6973					 stos
2  6974	0000097E			 vm_stos	 proc	 STDCALL, ptrMachine:DWORD
3  6975	0000097E  C8 0000 00			 ENTERD	 00000h,0
3  6976	00000982  8B 75	08			 mov	 esi, ptrMachine
2  6977	00000985  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6978
2  6979	00000988  FF 76	04			 push	 [esi].reg_acc
2  6980	0000098B  FF 76	18			 push	 [esi].reg_cpd
2  6981	0000098E  56				 push	 esi
2  6982	0000098F  E8 FFFFF9A3			 call	 internals_WriteValue
2  6983						 MoveDirection4	 reg_cpd
3  6984	00000994  53				 push	 ebx
3  6985	00000995  8A 5E	24			 mov	 bl, [esi].reg_flags
3  6986	00000998  80 E3	04			 and	 bl, VMFLAG_DIRECTION
4  6987	0000099B  80 FB	00			 cmp	 bl,0
4  6988	0000099E  75 06				 jnz	 @C0005
3  6989	000009A0  83 46	18 04				 add	 [esi].reg_cpd,	4
4  6990	000009A4  EB 04				 jmp	 @C0004
4  6991	000009A6			 @C0005:
3  6992	000009A6  83 6E	18 04				 sub	 [esi].reg_cpd,	4
4  6993	000009AA			 @C0004:
3  6994	000009AA  5B				 pop	 ebx
2  6995
2  6996	000009AB  FF 46	1C			 inc	 [esi].reg_ip
3  6997	000009AE  C9				 LEAVED
3  6998	000009AF  C2 0004			 RET	 00004h
2  6999	000009B2			 vm_stos	 endp
2  7000
2  7001					 ;-----------------------------------------------------------------------------------------[+
   7002					 movs
2  7003	000009B2			 vm_movs	 proc	 STDCALL, ptrMachine:DWORD
3  7004	000009B2  C8 0000 00			 ENTERD	 00000h,0
3  7005	000009B6  8B 75	08			 mov	 esi, ptrMachine
2  7006	000009B9  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7007
2  7008	000009BC  FF 76	14			 push	 [esi].reg_cps
2  7009	000009BF  56				 push	 esi
2  7010	000009C0  E8 FFFFF93D			 call	 internals_ReadValue
2  7011						 MoveDirection4	 reg_cps
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 124
pmScript.ASM



3  7012	000009C5  53				 push	 ebx
3  7013	000009C6  8A 5E	24			 mov	 bl, [esi].reg_flags
3  7014	000009C9  80 E3	04			 and	 bl, VMFLAG_DIRECTION
4  7015	000009CC  80 FB	00			 cmp	 bl,0
4  7016	000009CF  75 06				 jnz	 @C0007
3  7017	000009D1  83 46	14 04				 add	 [esi].reg_cps,	4
4  7018	000009D5  EB 04				 jmp	 @C0006
4  7019	000009D7			 @C0007:
3  7020	000009D7  83 6E	14 04				 sub	 [esi].reg_cps,	4
4  7021	000009DB			 @C0006:
3  7022	000009DB  5B				 pop	 ebx
2  7023	000009DC  50				 push	 eax
2  7024	000009DD  FF 76	18			 push	 [esi].reg_cpd
2  7025	000009E0  56				 push	 esi
2  7026	000009E1  E8 FFFFF951			 call	 internals_WriteValue
2  7027						 MoveDirection4	 reg_cpd
3  7028	000009E6  53				 push	 ebx
3  7029	000009E7  8A 5E	24			 mov	 bl, [esi].reg_flags
3  7030	000009EA  80 E3	04			 and	 bl, VMFLAG_DIRECTION
4  7031	000009ED  80 FB	00			 cmp	 bl,0
4  7032	000009F0  75 06				 jnz	 @C0009
3  7033	000009F2  83 46	18 04				 add	 [esi].reg_cpd,	4
4  7034	000009F6  EB 04				 jmp	 @C0008
4  7035	000009F8			 @C0009:
3  7036	000009F8  83 6E	18 04				 sub	 [esi].reg_cpd,	4
4  7037	000009FC			 @C0008:
3  7038	000009FC  5B				 pop	 ebx
2  7039
2  7040	000009FD  FF 46	1C			 inc	 [esi].reg_ip
3  7041	00000A00  C9				 LEAVED
3  7042	00000A01  C2 0004			 RET	 00004h
2  7043	00000A04			 vm_movs	 endp
2  7044
2  7045					 ;-----------------------------------------------------------------------------------------[+
   7046					 lodsb
2  7047	00000A04			 vm_lodsb		 proc	 STDCALL, ptrMachine:DWORD
3  7048	00000A04  C8 0000 00			 ENTERD	 00000h,0
3  7049	00000A08  8B 75	08			 mov	 esi, ptrMachine
2  7050	00000A0B  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7051
2  7052	00000A0E  FF 76	14			 push	 [esi].reg_cps
2  7053	00000A11  56				 push	 esi
2  7054	00000A12  E8 FFFFF95A			 call	 internals_ReadByte
2  7055						 MoveDirection	 reg_cps
3  7056	00000A17  8A 5E	24			 mov	 bl, [esi].reg_flags
3  7057	00000A1A  80 E3	04			 and	 bl, VMFLAG_DIRECTION
4  7058	00000A1D  80 FB	00			 cmp	 bl,0
4  7059	00000A20  75 05				 jnz	 @C0011
3  7060	00000A22  FF 46	14				 inc	 [esi].reg_cps
4  7061	00000A25  EB 03				 jmp	 @C0010
4  7062	00000A27			 @C0011:
3  7063	00000A27  FF 4E	14				 dec	 [esi].reg_cps
4  7064	00000A2A			 @C0010:
2  7065	00000A2A  89 46	04			 mov	 [esi].reg_acc,	eax
2  7066
2  7067	00000A2D  FF 46	1C			 inc	 [esi].reg_ip
3  7068	00000A30  C9				 LEAVED
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 125
pmScript.ASM



3  7069	00000A31  C2 0004			 RET	 00004h
2  7070	00000A34			 vm_lodsb		 endp
2  7071
2  7072					 ;-----------------------------------------------------------------------------------------[+
   7073					 stosb
2  7074	00000A34			 vm_stosb		 proc	 STDCALL, ptrMachine:DWORD
3  7075	00000A34  C8 0000 00			 ENTERD	 00000h,0
3  7076	00000A38  8B 75	08			 mov	 esi, ptrMachine
2  7077	00000A3B  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7078
2  7079	00000A3E  FF 76	04			 push	 [esi].reg_acc
2  7080	00000A41  FF 76	18			 push	 [esi].reg_cpd
2  7081	00000A44  56				 push	 esi
2  7082	00000A45  E8 FFFFF95C			 call	 internals_WriteByte
2  7083						 MoveDirection	 reg_cpd
3  7084	00000A4A  8A 5E	24			 mov	 bl, [esi].reg_flags
3  7085	00000A4D  80 E3	04			 and	 bl, VMFLAG_DIRECTION
4  7086	00000A50  80 FB	00			 cmp	 bl,0
4  7087	00000A53  75 05				 jnz	 @C0013
3  7088	00000A55  FF 46	18				 inc	 [esi].reg_cpd
4  7089	00000A58  EB 03				 jmp	 @C0012
4  7090	00000A5A			 @C0013:
3  7091	00000A5A  FF 4E	18				 dec	 [esi].reg_cpd
4  7092	00000A5D			 @C0012:
2  7093
2  7094	00000A5D  FF 46	1C			 inc	 [esi].reg_ip
3  7095	00000A60  C9				 LEAVED
3  7096	00000A61  C2 0004			 RET	 00004h
2  7097	00000A64			 vm_stosb		 endp
2  7098
2  7099					 ;-----------------------------------------------------------------------------------------[+
   7100					 movsb
2  7101	00000A64			 vm_movsb		 proc	 STDCALL, ptrMachine:DWORD
3  7102	00000A64  C8 0000 00			 ENTERD	 00000h,0
3  7103	00000A68  8B 75	08			 mov	 esi, ptrMachine
2  7104	00000A6B  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7105
2  7106	00000A6E  FF 76	14			 push	 [esi].reg_cps
2  7107	00000A71  56				 push	 esi
2  7108	00000A72  E8 FFFFF8FA			 call	 internals_ReadByte
2  7109						 MoveDirection	 reg_cps
3  7110	00000A77  8A 5E	24			 mov	 bl, [esi].reg_flags
3  7111	00000A7A  80 E3	04			 and	 bl, VMFLAG_DIRECTION
4  7112	00000A7D  80 FB	00			 cmp	 bl,0
4  7113	00000A80  75 05				 jnz	 @C0015
3  7114	00000A82  FF 46	14				 inc	 [esi].reg_cps
4  7115	00000A85  EB 03				 jmp	 @C0014
4  7116	00000A87			 @C0015:
3  7117	00000A87  FF 4E	14				 dec	 [esi].reg_cps
4  7118	00000A8A			 @C0014:
2  7119	00000A8A  50				 push	 eax
2  7120	00000A8B  FF 76	18			 push	 [esi].reg_cpd
2  7121	00000A8E  56				 push	 esi
2  7122	00000A8F  E8 FFFFF912			 call	 internals_WriteByte
2  7123						 MoveDirection	 reg_cpd
3  7124	00000A94  8A 5E	24			 mov	 bl, [esi].reg_flags
3  7125	00000A97  80 E3	04			 and	 bl, VMFLAG_DIRECTION
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 126
pmScript.ASM



4  7126	00000A9A  80 FB	00			 cmp	 bl,0
4  7127	00000A9D  75 05				 jnz	 @C0017
3  7128	00000A9F  FF 46	18				 inc	 [esi].reg_cpd
4  7129	00000AA2  EB 03				 jmp	 @C0016
4  7130	00000AA4			 @C0017:
3  7131	00000AA4  FF 4E	18				 dec	 [esi].reg_cpd
4  7132	00000AA7			 @C0016:
2  7133
2  7134	00000AA7  FF 46	1C			 inc	 [esi].reg_ip
3  7135	00000AAA  C9				 LEAVED
3  7136	00000AAB  C2 0004			 RET	 00004h
2  7137	00000AAE			 vm_movsb		 endp
2  7138
2  7139					 ;-----------------------------------------------------------------------------------------[+
   7140					 std
2  7141	00000AAE			 vm_std			 proc	 STDCALL, ptrMachine:DWORD
3  7142	00000AAE  C8 0000 00			 ENTERD	 00000h,0
3  7143	00000AB2  8B 75	08			 mov	 esi, ptrMachine
2  7144
2  7145	00000AB5  8A 5E	24			 mov	 bl, [esi].reg_flags
2  7146	00000AB8  80 CB	04			 or	 bl, VMFLAG_DIRECTION
2  7147	00000ABB  88 5E	24			 mov	 [esi].reg_flags, bl
2  7148
2  7149	00000ABE  FF 46	1C			 inc	 [esi].reg_ip
3  7150	00000AC1  C9				 LEAVED
3  7151	00000AC2  C2 0004			 RET	 00004h
2  7152	00000AC5			 vm_std			 endp
2  7153
2  7154					 ;-----------------------------------------------------------------------------------------[+
   7155					 cld
2  7156	00000AC5			 vm_cld			 proc	 STDCALL, ptrMachine:DWORD
3  7157	00000AC5  C8 0000 00			 ENTERD	 00000h,0
3  7158	00000AC9  8B 75	08			 mov	 esi, ptrMachine
2  7159
2  7160	00000ACC  8A 5E	24			 mov	 bl, [esi].reg_flags
2  7161	00000ACF  80 E3	FB			 and	 bl, NOT VMFLAG_DIRECTION
2  7162	00000AD2  88 5E	24			 mov	 [esi].reg_flags, bl
2  7163
2  7164
2  7165	00000AD5  FF 46	1C			 inc	 [esi].reg_ip
3  7166	00000AD8  C9				 LEAVED
3  7167	00000AD9  C2 0004			 RET	 00004h
2  7168	00000ADC			 vm_cld			 endp
2  7169
2  7170					 ;-----------------------------------------------------------------------------------------[+
   7171					 xchg acc, cnt
2  7172	00000ADC			 vm_xchgacccnt		 proc	 STDCALL, ptrMachine:DWORD
3  7173	00000ADC  C8 0000 00			 ENTERD	 00000h,0
3  7174	00000AE0  8B 75	08			 mov	 esi, ptrMachine
2  7175	00000AE3  8B 46	08			 mov	 eax, [esi].reg_cnt
2  7176	00000AE6  8B 5E	04			 mov	 ebx, [esi].reg_acc
2  7177	00000AE9  89 46	04			 mov	 [esi].reg_acc,	eax
2  7178	00000AEC  89 5E	08			 mov	 [esi].reg_cnt,	ebx
2  7179	00000AEF  FF 46	1C			 inc	 [esi].reg_ip
3  7180	00000AF2  C9				 LEAVED
3  7181	00000AF3  C2 0004			 RET	 00004h
2  7182	00000AF6			 vm_xchgacccnt		 endp
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 127
pmScript.ASM



2  7183
2  7184					 ;-----------------------------------------------------------------------------------------[+
   7185					 xchg acc, dat
2  7186	00000AF6			 vm_xchgaccdat		 proc	 STDCALL, ptrMachine:DWORD
3  7187	00000AF6  C8 0000 00			 ENTERD	 00000h,0
3  7188	00000AFA  8B 75	08			 mov	 esi, ptrMachine
2  7189	00000AFD  8B 46	0C			 mov	 eax, [esi].reg_dat
2  7190	00000B00  8B 5E	04			 mov	 ebx, [esi].reg_acc
2  7191	00000B03  89 46	04			 mov	 [esi].reg_acc,	eax
2  7192	00000B06  89 5E	0C			 mov	 [esi].reg_dat,	ebx
2  7193	00000B09  FF 46	1C			 inc	 [esi].reg_ip
3  7194	00000B0C  C9				 LEAVED
3  7195	00000B0D  C2 0004			 RET	 00004h
2  7196	00000B10			 vm_xchgaccdat		 endp
2  7197
2  7198
2  7199
1  7200					 INCLUDE ops_cmp.inc
2  7201
2  7202
2  7203	00000B10				 .code
2  7204
2  7205					 ;-----------------------------------------------------------------------------------------[+
   7206					 cmp acc, cnt
2  7207	00000B10			 vm_cmpacccnt		 proc	 STDCALL, ptrMachine:DWORD
3  7208	00000B10  C8 0000 00			 ENTERD	 00000h,0
3  7209	00000B14  8B 75	08			 mov	 esi, ptrMachine
2  7210
2  7211	00000B17  FF 76	08			 push	 [esi].reg_cnt
2  7212	00000B1A  FF 76	04			 push	 [esi].reg_acc
2  7213	00000B1D  56				 push	 esi
2  7214	00000B1E  E8 FFFFF922			 call	 internals_CompareValues
2  7215
2  7216	00000B23  FF 46	1C			 inc	 [esi].reg_ip
3  7217	00000B26  C9				 LEAVED
3  7218	00000B27  C2 0004			 RET	 00004h
2  7219	00000B2A			 vm_cmpacccnt		 endp
2  7220
2  7221					 ;-----------------------------------------------------------------------------------------[+
   7222					 cmp acc, dat
2  7223	00000B2A			 vm_cmpaccdat		 proc	 STDCALL, ptrMachine:DWORD
3  7224	00000B2A  C8 0000 00			 ENTERD	 00000h,0
3  7225	00000B2E  8B 75	08			 mov	 esi, ptrMachine
2  7226
2  7227	00000B31  FF 76	0C			 push	 [esi].reg_dat
2  7228	00000B34  FF 76	04			 push	 [esi].reg_acc
2  7229	00000B37  56				 push	 esi
2  7230	00000B38  E8 FFFFF908			 call	 internals_CompareValues
2  7231
2  7232	00000B3D  FF 46	1C			 inc	 [esi].reg_ip
3  7233	00000B40  C9				 LEAVED
3  7234	00000B41  C2 0004			 RET	 00004h
2  7235	00000B44			 vm_cmpaccdat		 endp
2  7236
2  7237					 ;-----------------------------------------------------------------------------------------[+
   7238					 cmp acc, immediate
2  7239	00000B44			 vm_cmpaccimm		 proc	 STDCALL, ptrMachine:DWORD
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 128
pmScript.ASM



3  7240	00000B44  C8 0000 00			 ENTERD	 00000h,0
3  7241	00000B48  8B 75	08			 mov	 esi, ptrMachine
2  7242	00000B4B  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7243	00000B4E  47				 inc	 edi
2  7244
2  7245	00000B4F  57				 push	 edi
2  7246	00000B50  56				 push	 esi
2  7247	00000B51  E8 FFFFF7AC			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7248	00000B56  50				 push	 eax
2  7249	00000B57  FF 76	04			 push	 [esi].reg_acc
2  7250	00000B5A  56				 push	 esi
2  7251	00000B5B  E8 FFFFF8E5			 call	 internals_CompareValues
2  7252
2  7253	00000B60  83 46	1C 05			 add	 [esi].reg_ip, 5
3  7254	00000B64  C9				 LEAVED
3  7255	00000B65  C2 0004			 RET	 00004h
2  7256	00000B68			 vm_cmpaccimm		 endp
2  7257
2  7258					 ;-----------------------------------------------------------------------------------------[+
   7259					 cmp acc, variable
2  7260	00000B68			 vm_cmpaccvar		 proc	 STDCALL, ptrMachine:DWORD
3  7261	00000B68  C8 0000 00			 ENTERD	 00000h,0
3  7262	00000B6C  8B 75	08			 mov	 esi, ptrMachine
2  7263	00000B6F  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7264	00000B72  47				 inc	 edi
2  7265
2  7266	00000B73  57				 push	 edi
2  7267	00000B74  56				 push	 esi
2  7268	00000B75  E8 FFFFF788			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   7269					 (address)
2  7270	00000B7A  50				 push	 eax
2  7271	00000B7B  56				 push	 esi
2  7272	00000B7C  E8 FFFFF781			 call	 internals_ReadValue			 ; Gets	32 bit value from address
2  7273	00000B81  50				 push	 eax
2  7274	00000B82  FF 76	04			 push	 [esi].reg_acc
2  7275	00000B85  56				 push	 esi
2  7276	00000B86  E8 FFFFF8BA			 call	 internals_CompareValues
2  7277
2  7278	00000B8B  83 46	1C 05			 add	 [esi].reg_ip, 5
3  7279	00000B8F  C9				 LEAVED
3  7280	00000B90  C2 0004			 RET	 00004h
2  7281	00000B93			 vm_cmpaccvar		 endp
2  7282
2  7283					 ;-----------------------------------------------------------------------------------------[+
   7284					 cmp cnt, acc
2  7285	00000B93			 vm_cmpcntacc		 proc	 STDCALL, ptrMachine:DWORD
3  7286	00000B93  C8 0000 00			 ENTERD	 00000h,0
3  7287	00000B97  8B 75	08			 mov	 esi, ptrMachine
2  7288
2  7289	00000B9A  FF 76	04			 push	 [esi].reg_acc
2  7290	00000B9D  FF 76	08			 push	 [esi].reg_cnt
2  7291	00000BA0  56				 push	 esi
2  7292	00000BA1  E8 FFFFF89F			 call	 internals_CompareValues
2  7293
2  7294	00000BA6  FF 46	1C			 inc	 [esi].reg_ip
3  7295	00000BA9  C9				 LEAVED
3  7296	00000BAA  C2 0004			 RET	 00004h
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 129
pmScript.ASM



2  7297	00000BAD			 vm_cmpcntacc		 endp
2  7298
2  7299					 ;-----------------------------------------------------------------------------------------[+
   7300					 cmp cnt, dat
2  7301	00000BAD			 vm_cmpcntdat		 proc	 STDCALL, ptrMachine:DWORD
3  7302	00000BAD  C8 0000 00			 ENTERD	 00000h,0
3  7303	00000BB1  8B 75	08			 mov	 esi, ptrMachine
2  7304
2  7305	00000BB4  FF 76	0C			 push	 [esi].reg_dat
2  7306	00000BB7  FF 76	08			 push	 [esi].reg_cnt
2  7307	00000BBA  56				 push	 esi
2  7308	00000BBB  E8 FFFFF885			 call	 internals_CompareValues
2  7309
2  7310	00000BC0  FF 46	1C			 inc	 [esi].reg_ip
3  7311	00000BC3  C9				 LEAVED
3  7312	00000BC4  C2 0004			 RET	 00004h
2  7313	00000BC7			 vm_cmpcntdat		 endp
2  7314
2  7315					 ;-----------------------------------------------------------------------------------------[+
   7316					 cmp cnt, immediate
2  7317	00000BC7			 vm_cmpcntimm		 proc	 STDCALL, ptrMachine:DWORD
3  7318	00000BC7  C8 0000 00			 ENTERD	 00000h,0
3  7319	00000BCB  8B 75	08			 mov	 esi, ptrMachine
2  7320	00000BCE  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7321	00000BD1  47				 inc	 edi
2  7322
2  7323	00000BD2  57				 push	 edi
2  7324	00000BD3  56				 push	 esi
2  7325	00000BD4  E8 FFFFF729			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7326	00000BD9  50				 push	 eax
2  7327	00000BDA  FF 76	08			 push	 [esi].reg_cnt
2  7328	00000BDD  56				 push	 esi
2  7329	00000BDE  E8 FFFFF862			 call	 internals_CompareValues
2  7330
2  7331	00000BE3  83 46	1C 05			 add	 [esi].reg_ip, 5
3  7332	00000BE7  C9				 LEAVED
3  7333	00000BE8  C2 0004			 RET	 00004h
2  7334	00000BEB			 vm_cmpcntimm		 endp
2  7335
2  7336					 ;-----------------------------------------------------------------------------------------[+
   7337					 cmp cnt, variable
2  7338	00000BEB			 vm_cmpcntvar		 proc	 STDCALL, ptrMachine:DWORD
3  7339	00000BEB  C8 0000 00			 ENTERD	 00000h,0
3  7340	00000BEF  8B 75	08			 mov	 esi, ptrMachine
2  7341	00000BF2  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7342	00000BF5  47				 inc	 edi
2  7343
2  7344	00000BF6  57				 push	 edi
2  7345	00000BF7  56				 push	 esi
2  7346	00000BF8  E8 FFFFF705			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   7347					 (address)
2  7348	00000BFD  50				 push	 eax
2  7349	00000BFE  56				 push	 esi
2  7350	00000BFF  E8 FFFFF6FE			 call	 internals_ReadValue			 ; Gets	32 bit value from address
2  7351	00000C04  50				 push	 eax
2  7352	00000C05  FF 76	08			 push	 [esi].reg_cnt
2  7353	00000C08  56				 push	 esi
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 130
pmScript.ASM



2  7354	00000C09  E8 FFFFF837			 call	 internals_CompareValues
2  7355
2  7356	00000C0E  83 46	1C 05			 add	 [esi].reg_ip, 5
3  7357	00000C12  C9				 LEAVED
3  7358	00000C13  C2 0004			 RET	 00004h
2  7359	00000C16			 vm_cmpcntvar		 endp
2  7360
2  7361					 ;-----------------------------------------------------------------------------------------[+
   7362					 cmp dat, acc
2  7363	00000C16			 vm_cmpdatacc		 proc	 STDCALL, ptrMachine:DWORD
3  7364	00000C16  C8 0000 00			 ENTERD	 00000h,0
3  7365	00000C1A  8B 75	08			 mov	 esi, ptrMachine
2  7366
2  7367	00000C1D  FF 76	04			 push	 [esi].reg_acc
2  7368	00000C20  FF 76	0C			 push	 [esi].reg_dat
2  7369	00000C23  56				 push	 esi
2  7370	00000C24  E8 FFFFF81C			 call	 internals_CompareValues
2  7371
2  7372	00000C29  FF 46	1C			 inc	 [esi].reg_ip
3  7373	00000C2C  C9				 LEAVED
3  7374	00000C2D  C2 0004			 RET	 00004h
2  7375	00000C30			 vm_cmpdatacc		 endp
2  7376
2  7377					 ;-----------------------------------------------------------------------------------------[+
   7378					 cmp dat, cnt
2  7379	00000C30			 vm_cmpdatcnt		 proc	 STDCALL, ptrMachine:DWORD
3  7380	00000C30  C8 0000 00			 ENTERD	 00000h,0
3  7381	00000C34  8B 75	08			 mov	 esi, ptrMachine
2  7382
2  7383	00000C37  FF 76	08			 push	 [esi].reg_cnt
2  7384	00000C3A  FF 76	0C			 push	 [esi].reg_dat
2  7385	00000C3D  56				 push	 esi
2  7386	00000C3E  E8 FFFFF802			 call	 internals_CompareValues
2  7387
2  7388	00000C43  FF 46	1C			 inc	 [esi].reg_ip
3  7389	00000C46  C9				 LEAVED
3  7390	00000C47  C2 0004			 RET	 00004h
2  7391	00000C4A			 vm_cmpdatcnt		 endp
2  7392
2  7393					 ;-----------------------------------------------------------------------------------------[+
   7394					 cmp dat, immediate
2  7395	00000C4A			 vm_cmpdatimm		 proc	 STDCALL, ptrMachine:DWORD
3  7396	00000C4A  C8 0000 00			 ENTERD	 00000h,0
3  7397	00000C4E  8B 75	08			 mov	 esi, ptrMachine
2  7398	00000C51  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7399	00000C54  47				 inc	 edi
2  7400
2  7401	00000C55  57				 push	 edi
2  7402	00000C56  56				 push	 esi
2  7403	00000C57  E8 FFFFF6A6			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7404	00000C5C  50				 push	 eax
2  7405	00000C5D  FF 76	0C			 push	 [esi].reg_dat
2  7406	00000C60  56				 push	 esi
2  7407	00000C61  E8 FFFFF7DF			 call	 internals_CompareValues
2  7408
2  7409	00000C66  83 46	1C 05			 add	 [esi].reg_ip, 5
3  7410	00000C6A  C9				 LEAVED
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 131
pmScript.ASM



3  7411	00000C6B  C2 0004			 RET	 00004h
2  7412	00000C6E			 vm_cmpdatimm		 endp
2  7413
2  7414					 ;-----------------------------------------------------------------------------------------[+
   7415					 cmp dat, variable
2  7416	00000C6E			 vm_cmpdatvar		 proc	 STDCALL, ptrMachine:DWORD
3  7417	00000C6E  C8 0000 00			 ENTERD	 00000h,0
3  7418	00000C72  8B 75	08			 mov	 esi, ptrMachine
2  7419	00000C75  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7420	00000C78  47				 inc	 edi
2  7421
2  7422	00000C79  57				 push	 edi
2  7423	00000C7A  56				 push	 esi
2  7424	00000C7B  E8 FFFFF682			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   7425					 (address)
2  7426	00000C80  50				 push	 eax
2  7427	00000C81  56				 push	 esi
2  7428	00000C82  E8 FFFFF67B			 call	 internals_ReadValue			 ; Gets	32 bit value from address
2  7429	00000C87  50				 push	 eax
2  7430	00000C88  FF 76	0C			 push	 [esi].reg_dat
2  7431	00000C8B  56				 push	 esi
2  7432	00000C8C  E8 FFFFF7B4			 call	 internals_CompareValues
2  7433
2  7434	00000C91  83 46	1C 05			 add	 [esi].reg_ip, 5
3  7435	00000C95  C9				 LEAVED
3  7436	00000C96  C2 0004			 RET	 00004h
2  7437	00000C99			 vm_cmpdatvar		 endp
2  7438
2  7439
2  7440
2  7441
2  7442
1  7443					 INCLUDE ops_flow.inc
2  7444
2  7445	00000C99				 .code
2  7446
2  7447					 ;-----------------------------------------------------------------------------------------[+
   7448					 jmp label
2  7449	00000C99			 vm_jmp			 proc	 STDCALL, ptrMachine:DWORD
3  7450	00000C99  C8 0000 00			 ENTERD	 00000h,0
3  7451	00000C9D  8B 75	08			 mov	 esi, ptrMachine
2  7452	00000CA0  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7453	00000CA3  47				 inc	 edi
2  7454	00000CA4  83 46	1C 05			 add	 [esi].reg_ip, 5		 ; Premake the IP move incase check fails
2  7455
2  7456	00000CA8  57				 push	 edi
2  7457	00000CA9  56				 push	 esi
2  7458	00000CAA  E8 FFFFF653			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7459
2  7460	00000CAF  89 46	1C			 mov	 [esi].reg_ip, eax
2  7461
3  7462	00000CB2  C9				 LEAVED
3  7463	00000CB3  C2 0004			 RET	 00004h
2  7464	00000CB6			 vm_jmp			 endp
2  7465
2  7466					 ;-----------------------------------------------------------------------------------------[+
   7467					 je label
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 132
pmScript.ASM



2  7468	00000CB6			 vm_je			 proc	 STDCALL, ptrMachine:DWORD
3  7469	00000CB6  C8 0000 00			 ENTERD	 00000h,0
3  7470	00000CBA  8B 75	08			 mov	 esi, ptrMachine
2  7471	00000CBD  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7472	00000CC0  47				 inc	 edi
2  7473	00000CC1  83 46	1C 05			 add	 [esi].reg_ip, 5		 ; Premake the IP move incase check fails
2  7474
2  7475	00000CC5  57				 push	 edi
2  7476	00000CC6  56				 push	 esi
2  7477	00000CC7  E8 FFFFF636			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7478
2  7479	00000CCC  8A 5E	24			 mov	 bl, [esi].reg_flags
2  7480	00000CCF  80 E3	01			 and	 bl, VMFLAG_ZERO
2  7481	00000CD2  74 03				 jz	 vm_je_nojump
2  7482
2  7483	00000CD4  89 46	1C			 mov	 [esi].reg_ip, eax
2  7484
2  7485	00000CD7			 vm_je_nojump:
3  7486	00000CD7  C9				 LEAVED
3  7487	00000CD8  C2 0004			 RET	 00004h
2  7488	00000CDB			 vm_je			 endp
2  7489
2  7490					 ;-----------------------------------------------------------------------------------------[+
   7491					 jne label
2  7492	00000CDB			 vm_jne			 proc	 STDCALL, ptrMachine:DWORD
3  7493	00000CDB  C8 0000 00			 ENTERD	 00000h,0
3  7494	00000CDF  8B 75	08			 mov	 esi, ptrMachine
2  7495	00000CE2  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7496	00000CE5  47				 inc	 edi
2  7497	00000CE6  83 46	1C 05			 add	 [esi].reg_ip, 5		 ; Premake the IP move incase check fails
2  7498
2  7499	00000CEA  57				 push	 edi
2  7500	00000CEB  56				 push	 esi
2  7501	00000CEC  E8 FFFFF611			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7502
2  7503	00000CF1  8A 5E	24			 mov	 bl, [esi].reg_flags
2  7504	00000CF4  80 E3	01			 and	 bl, VMFLAG_ZERO
2  7505	00000CF7  75 03				 jnz	 vm_jne_nojump
2  7506
2  7507	00000CF9  89 46	1C			 mov	 [esi].reg_ip, eax
2  7508
2  7509	00000CFC			 vm_jne_nojump:
3  7510	00000CFC  C9				 LEAVED
3  7511	00000CFD  C2 0004			 RET	 00004h
2  7512	00000D00			 vm_jne			 endp
2  7513
2  7514					 ;-----------------------------------------------------------------------------------------[+
   7515					 jb label
2  7516	00000D00			 vm_jb			 proc	 STDCALL, ptrMachine:DWORD
3  7517	00000D00  C8 0000 00			 ENTERD	 00000h,0
3  7518	00000D04  8B 75	08			 mov	 esi, ptrMachine
2  7519	00000D07  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7520	00000D0A  47				 inc	 edi
2  7521	00000D0B  83 46	1C 05			 add	 [esi].reg_ip, 5		 ; Premake the IP move incase check fails
2  7522
2  7523	00000D0F  57				 push	 edi
2  7524	00000D10  56				 push	 esi
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 133
pmScript.ASM



2  7525	00000D11  E8 FFFFF5EC			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7526
2  7527	00000D16  8A 5E	24			 mov	 bl, [esi].reg_flags
2  7528	00000D19  80 E3	02			 and	 bl, VMFLAG_BELOW
2  7529	00000D1C  74 03				 jz	 vm_jb_nojump
2  7530
2  7531	00000D1E  89 46	1C			 mov	 [esi].reg_ip, eax
2  7532
2  7533	00000D21			 vm_jb_nojump:
3  7534	00000D21  C9				 LEAVED
3  7535	00000D22  C2 0004			 RET	 00004h
2  7536	00000D25			 vm_jb			 endp
2  7537
2  7538					 ;-----------------------------------------------------------------------------------------[+
   7539					 jbe label
2  7540	00000D25			 vm_jbe			 proc	 STDCALL, ptrMachine:DWORD
3  7541	00000D25  C8 0000 00			 ENTERD	 00000h,0
3  7542	00000D29  8B 75	08			 mov	 esi, ptrMachine
2  7543	00000D2C  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7544	00000D2F  47				 inc	 edi
2  7545	00000D30  83 46	1C 05			 add	 [esi].reg_ip, 5		 ; Premake the IP move incase check fails
2  7546
2  7547	00000D34  57				 push	 edi
2  7548	00000D35  56				 push	 esi
2  7549	00000D36  E8 FFFFF5C7			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7550
2  7551	00000D3B  8A 5E	24			 mov	 bl, [esi].reg_flags
2  7552	00000D3E  80 E3	03			 and	 bl, VMFLAG_ZERO + VMFLAG_BELOW
2  7553	00000D41  74 03				 jz	 vm_jbe_nojump
2  7554
2  7555	00000D43  89 46	1C			 mov	 [esi].reg_ip, eax
2  7556
2  7557	00000D46			 vm_jbe_nojump:
3  7558	00000D46  C9				 LEAVED
3  7559	00000D47  C2 0004			 RET	 00004h
2  7560	00000D4A			 vm_jbe		 endp
2  7561
2  7562					 ;-----------------------------------------------------------------------------------------[+
   7563					 loop label
2  7564	00000D4A			 vm_loop	 proc	 STDCALL, ptrMachine:DWORD
3  7565	00000D4A  C8 0000 00			 ENTERD	 00000h,0
3  7566	00000D4E  8B 75	08			 mov	 esi, ptrMachine
2  7567	00000D51  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7568	00000D54  47				 inc	 edi
2  7569	00000D55  83 46	1C 05			 add	 [esi].reg_ip, 5		 ; Premake the IP move incase check fails
2  7570
2  7571						 .IF [esi].reg_cnt > 0
3  7572	00000D59  83 7E	08 00			 cmp	 [esi].	reg_cnt,0
3  7573	00000D5D  76 0D				 jbe	 @C0019
2  7574	00000D5F  FF 4E	08				 dec	 [esi].reg_cnt
2  7575
2  7576	00000D62  57					 push	 edi
2  7577	00000D63  56					 push	 esi
2  7578	00000D64  E8 FFFFF599				 call	 internals_ReadValue			 ; Gets	32 bit value after  +
   7579					 opcode
2  7580
2  7581	00000D69  89 46	1C				 mov	 [esi].reg_ip, eax
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 134
pmScript.ASM



2  7582						 .ENDIF
3  7583	00000D6C			 @C0019:
3  7584	00000D6C			 @C0018:
2  7585
3  7586	00000D6C  C9				 LEAVED
3  7587	00000D6D  C2 0004			 RET	 00004h
2  7588	00000D70			 vm_loop	 endp
2  7589
2  7590
2  7591					 ;-----------------------------------------------------------------------------------------[+
   7592					 call label
2  7593	00000D70			 vm_call	 proc	 STDCALL, ptrMachine:DWORD
3  7594	00000D70  C8 0000 00			 ENTERD	 00000h,0
3  7595	00000D74  8B 75	08			 mov	 esi, ptrMachine
2  7596	00000D77  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7597	00000D7A  47				 inc	 edi
2  7598
2  7599	00000D7B  57				 push	 edi
2  7600	00000D7C  56				 push	 esi
2  7601	00000D7D  E8 FFFFF580			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7602
2  7603	00000D82  89 46	1C			 mov	 [esi].reg_ip, eax
2  7604
2  7605	00000D85  83 C7	04			 add	 edi, 4
2  7606	00000D88  57				 push	 edi
2  7607	00000D89  56				 push	 esi
2  7608	00000D8A  E8 FFFFF50F			 call	 internals_PushValue			 ; Push	return location
2  7609
3  7610	00000D8F  C9				 LEAVED
3  7611	00000D90  C2 0004			 RET	 00004h
2  7612	00000D93			 vm_call	 endp
2  7613
2  7614					 ;-----------------------------------------------------------------------------------------[+
   7615					 api immediate
2  7616	00000D93			 vm_api			 proc	 STDCALL, ptrMachine:DWORD
3  7617	00000D93  C8 0000 00			 ENTERD	 00000h,0
3  7618	00000D97  8B 75	08			 mov	 esi, ptrMachine
2  7619	00000D9A  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7620	00000D9D  47				 inc	 edi
2  7621	00000D9E  83 46	1C 05			 add	 [esi].reg_ip, 5
2  7622
2  7623	00000DA2  57				 push	 edi
2  7624	00000DA3  56				 push	 esi
2  7625	00000DA4  E8 FFFFF559			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7626
2  7627	00000DA9  50				 push	 eax
2  7628	00000DAA  56				 push	 esi
2  7629	00000DAB  FF 56	39			 call	 [esi].ptr_api
2  7630
3  7631	00000DAE  C9				 LEAVED
3  7632	00000DAF  C2 0004			 RET	 00004h
2  7633	00000DB2			 vm_api			 endp
2  7634
2  7635					 ;-----------------------------------------------------------------------------------------[+
   7636					 ret
2  7637	00000DB2			 vm_ret			 proc	 STDCALL, ptrMachine:DWORD
3  7638	00000DB2  C8 0000 00			 ENTERD	 00000h,0
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 135
pmScript.ASM



3  7639	00000DB6  8B 75	08			 mov	 esi, ptrMachine
2  7640	00000DB9  56				 push	 esi
2  7641	00000DBA  E8 FFFFF513			 call	 internals_PopValue
2  7642	00000DBF  89 46	1C			 mov	 [esi].reg_ip, eax
2  7643
3  7644	00000DC2  C9				 LEAVED
3  7645	00000DC3  C2 0004			 RET	 00004h
2  7646	00000DC6			 vm_ret			 endp
2  7647
2  7648					 ;-----------------------------------------------------------------------------------------[+
   7649					 end
2  7650	00000DC6			 vm_end			 proc	 STDCALL, ptrMachine:DWORD
3  7651	00000DC6  C8 0000 00			 ENTERD	 00000h,0
3  7652	00000DCA  8B 75	08			 mov	 esi, ptrMachine
2  7653	00000DCD  C7 06	00000003		 mov	 [esi].state, VMSTATE_ENDED
3  7654	00000DD3  C9				 LEAVED
3  7655	00000DD4  C2 0004			 RET	 00004h
2  7656	00000DD7			 vm_end			 endp
2  7657
2  7658
1  7659					 INCLUDE ops_add.inc
2  7660
2  7661
2  7662	00000DD7				 .code
2  7663
2  7664					 ;-----------------------------------------------------------------------------------------[+
   7665					 add acc, immediate
2  7666	00000DD7			 vm_addaccimm		 proc	 STDCALL, ptrMachine:DWORD
3  7667	00000DD7  C8 0000 00			 ENTERD	 00000h,0
3  7668	00000DDB  8B 75	08			 mov	 esi, ptrMachine
2  7669	00000DDE  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7670	00000DE1  47				 inc	 edi
2  7671
2  7672	00000DE2  57				 push	 edi
2  7673	00000DE3  56				 push	 esi
2  7674	00000DE4  E8 FFFFF519			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7675
2  7676	00000DE9  01 46	04			 add	 [esi].reg_acc,	eax
2  7677
2  7678	00000DEC  FF 76	04			 push	 [esi].reg_acc
2  7679	00000DEF  E8 FFFFF66A			 call	 internals_SetFlags
2  7680
2  7681	00000DF4  83 46	1C 05			 add	 [esi].reg_ip, 5
3  7682	00000DF8  C9				 LEAVED
3  7683	00000DF9  C2 0004			 RET	 00004h
2  7684	00000DFC			 vm_addaccimm		 endp
2  7685
2  7686					 ;-----------------------------------------------------------------------------------------[+
   7687					 add acc, dat
2  7688	00000DFC			 vm_addaccdat		 proc	 STDCALL, ptrMachine:DWORD
3  7689	00000DFC  C8 0000 00			 ENTERD	 00000h,0
3  7690	00000E00  8B 75	08			 mov	 esi, ptrMachine
2  7691
2  7692	00000E03  8B 46	0C			 mov	 eax, [esi].reg_dat
2  7693	00000E06  01 46	04			 add	 [esi].reg_acc,	eax
2  7694
2  7695	00000E09  FF 76	04			 push	 [esi].reg_acc
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 136
pmScript.ASM



2  7696	00000E0C  E8 FFFFF64D			 call	 internals_SetFlags
2  7697
2  7698	00000E11  FF 46	1C			 inc	 [esi].reg_ip
3  7699	00000E14  C9				 LEAVED
3  7700	00000E15  C2 0004			 RET	 00004h
2  7701	00000E18			 vm_addaccdat		 endp
2  7702
2  7703					 ;-----------------------------------------------------------------------------------------[+
   7704					 add acc, rnd
2  7705	00000E18			 vm_addaccrnd		 proc	 STDCALL, ptrMachine:DWORD
3  7706	00000E18  C8 0000 00			 ENTERD	 00000h,0
3  7707	00000E1C  8B 75	08			 mov	 esi, ptrMachine
2  7708
2  7709	00000E1F  8B 46	10			 mov	 eax, [esi].reg_rnd
2  7710	00000E22  01 46	04			 add	 [esi].reg_acc,	eax
2  7711	00000E25  50				 push	 eax
2  7712	00000E26  E8 FFFFF3E6			 call	 RandomNumber
2  7713	00000E2B  89 46	10			 mov	 [esi].reg_rnd,	eax
2  7714
2  7715	00000E2E  FF 76	04			 push	 [esi].reg_acc
2  7716	00000E31  E8 FFFFF628			 call	 internals_SetFlags
2  7717
2  7718	00000E36  FF 46	1C			 inc	 [esi].reg_ip
3  7719	00000E39  C9				 LEAVED
3  7720	00000E3A  C2 0004			 RET	 00004h
2  7721	00000E3D			 vm_addaccrnd		 endp
2  7722
2  7723					 ;-----------------------------------------------------------------------------------------[+
   7724					 add acc, variable
2  7725	00000E3D			 vm_addaccvar		 proc	 STDCALL, ptrMachine:DWORD
3  7726	00000E3D  C8 0000 00			 ENTERD	 00000h,0
3  7727	00000E41  8B 75	08			 mov	 esi, ptrMachine
2  7728	00000E44  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7729	00000E47  47				 inc	 edi
2  7730
2  7731	00000E48  57				 push	 edi
2  7732	00000E49  56				 push	 esi
2  7733	00000E4A  E8 FFFFF4B3			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7734
2  7735	00000E4F  50				 push	 eax
2  7736	00000E50  56				 push	 esi
2  7737	00000E51  E8 FFFFF4AC			 call	 internals_ReadValue			 ; Get variable
2  7738
2  7739	00000E56  01 46	04			 add	 [esi].reg_acc,	eax
2  7740
2  7741	00000E59  FF 76	04			 push	 [esi].reg_acc
2  7742	00000E5C  E8 FFFFF5FD			 call	 internals_SetFlags
2  7743
2  7744	00000E61  83 46	1C 05			 add	 [esi].reg_ip, 5
3  7745	00000E65  C9				 LEAVED
3  7746	00000E66  C2 0004			 RET	 00004h
2  7747	00000E69			 vm_addaccvar		 endp
2  7748
2  7749					 ;-----------------------------------------------------------------------------------------[+
   7750					 add cnt, immediate
2  7751	00000E69			 vm_addcntimm		 proc	 STDCALL, ptrMachine:DWORD
3  7752	00000E69  C8 0000 00			 ENTERD	 00000h,0
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 137
pmScript.ASM



3  7753	00000E6D  8B 75	08			 mov	 esi, ptrMachine
2  7754	00000E70  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7755	00000E73  47				 inc	 edi
2  7756
2  7757	00000E74  57				 push	 edi
2  7758	00000E75  56				 push	 esi
2  7759	00000E76  E8 FFFFF487			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7760
2  7761	00000E7B  01 46	08			 add	 [esi].reg_cnt,	eax
2  7762
2  7763	00000E7E  FF 76	08			 push	 [esi].reg_cnt
2  7764	00000E81  E8 FFFFF5D8			 call	 internals_SetFlags
2  7765
2  7766	00000E86  83 46	1C 05			 add	 [esi].reg_ip, 5
3  7767	00000E8A  C9				 LEAVED
3  7768	00000E8B  C2 0004			 RET	 00004h
2  7769	00000E8E			 vm_addcntimm		 endp
2  7770
2  7771					 ;-----------------------------------------------------------------------------------------[+
   7772					 add cnt, acc
2  7773	00000E8E			 vm_addcntacc		 proc	 STDCALL, ptrMachine:DWORD
3  7774	00000E8E  C8 0000 00			 ENTERD	 00000h,0
3  7775	00000E92  8B 75	08			 mov	 esi, ptrMachine
2  7776
2  7777	00000E95  8B 46	04			 mov	 eax, [esi].reg_acc
2  7778	00000E98  01 46	08			 add	 [esi].reg_cnt,	eax
2  7779
2  7780	00000E9B  FF 76	08			 push	 [esi].reg_cnt
2  7781	00000E9E  E8 FFFFF5BB			 call	 internals_SetFlags
2  7782
2  7783	00000EA3  FF 46	1C			 inc	 [esi].reg_ip
3  7784	00000EA6  C9				 LEAVED
3  7785	00000EA7  C2 0004			 RET	 00004h
2  7786	00000EAA			 vm_addcntacc		 endp
2  7787
2  7788					 ;-----------------------------------------------------------------------------------------[+
   7789					 add cnt, dat
2  7790	00000EAA			 vm_addcntdat		 proc	 STDCALL, ptrMachine:DWORD
3  7791	00000EAA  C8 0000 00			 ENTERD	 00000h,0
3  7792	00000EAE  8B 75	08			 mov	 esi, ptrMachine
2  7793
2  7794	00000EB1  8B 46	0C			 mov	 eax, [esi].reg_dat
2  7795	00000EB4  01 46	08			 add	 [esi].reg_cnt,	eax
2  7796
2  7797	00000EB7  FF 76	08			 push	 [esi].reg_cnt
2  7798	00000EBA  E8 FFFFF59F			 call	 internals_SetFlags
2  7799
2  7800	00000EBF  FF 46	1C			 inc	 [esi].reg_ip
3  7801	00000EC2  C9				 LEAVED
3  7802	00000EC3  C2 0004			 RET	 00004h
2  7803	00000EC6			 vm_addcntdat		 endp
2  7804
2  7805					 ;-----------------------------------------------------------------------------------------[+
   7806					 add cnt, rnd
2  7807	00000EC6			 vm_addcntrnd		 proc	 STDCALL, ptrMachine:DWORD
3  7808	00000EC6  C8 0000 00			 ENTERD	 00000h,0
3  7809	00000ECA  8B 75	08			 mov	 esi, ptrMachine
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 138
pmScript.ASM



2  7810
2  7811	00000ECD  8B 46	10			 mov	 eax, [esi].reg_rnd
2  7812	00000ED0  01 46	08			 add	 [esi].reg_cnt,	eax
2  7813	00000ED3  50				 push	 eax
2  7814	00000ED4  E8 FFFFF338			 call	 RandomNumber
2  7815	00000ED9  89 46	10			 mov	 [esi].reg_rnd,	eax
2  7816
2  7817	00000EDC  FF 76	08			 push	 [esi].reg_cnt
2  7818	00000EDF  E8 FFFFF57A			 call	 internals_SetFlags
2  7819
2  7820	00000EE4  FF 46	1C			 inc	 [esi].reg_ip
3  7821	00000EE7  C9				 LEAVED
3  7822	00000EE8  C2 0004			 RET	 00004h
2  7823	00000EEB			 vm_addcntrnd		 endp
2  7824
2  7825					 ;-----------------------------------------------------------------------------------------[+
   7826					 add cnt, variable
2  7827	00000EEB			 vm_addcntvar		 proc	 STDCALL, ptrMachine:DWORD
3  7828	00000EEB  C8 0000 00			 ENTERD	 00000h,0
3  7829	00000EEF  8B 75	08			 mov	 esi, ptrMachine
2  7830	00000EF2  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7831	00000EF5  47				 inc	 edi
2  7832
2  7833	00000EF6  57				 push	 edi
2  7834	00000EF7  56				 push	 esi
2  7835	00000EF8  E8 FFFFF405			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7836
2  7837	00000EFD  50				 push	 eax
2  7838	00000EFE  56				 push	 esi
2  7839	00000EFF  E8 FFFFF3FE			 call	 internals_ReadValue			 ; Get variable
2  7840
2  7841	00000F04  01 46	08			 add	 [esi].reg_cnt,	eax
2  7842
2  7843	00000F07  FF 76	08			 push	 [esi].reg_cnt
2  7844	00000F0A  E8 FFFFF54F			 call	 internals_SetFlags
2  7845
2  7846	00000F0F  83 46	1C 05			 add	 [esi].reg_ip, 5
3  7847	00000F13  C9				 LEAVED
3  7848	00000F14  C2 0004			 RET	 00004h
2  7849	00000F17			 vm_addcntvar		 endp
2  7850
2  7851					 ;-----------------------------------------------------------------------------------------[+
   7852					 add dat, immediate
2  7853	00000F17			 vm_adddatimm		 proc	 STDCALL, ptrMachine:DWORD
3  7854	00000F17  C8 0000 00			 ENTERD	 00000h,0
3  7855	00000F1B  8B 75	08			 mov	 esi, ptrMachine
2  7856	00000F1E  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7857	00000F21  47				 inc	 edi
2  7858
2  7859	00000F22  57				 push	 edi
2  7860	00000F23  56				 push	 esi
2  7861	00000F24  E8 FFFFF3D9			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7862
2  7863	00000F29  01 46	0C			 add	 [esi].reg_dat,	eax
2  7864
2  7865	00000F2C  FF 76	0C			 push	 [esi].reg_dat
2  7866	00000F2F  E8 FFFFF52A			 call	 internals_SetFlags
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 139
pmScript.ASM



2  7867
2  7868	00000F34  83 46	1C 05			 add	 [esi].reg_ip, 5
3  7869	00000F38  C9				 LEAVED
3  7870	00000F39  C2 0004			 RET	 00004h
2  7871	00000F3C			 vm_adddatimm		 endp
2  7872
2  7873					 ;-----------------------------------------------------------------------------------------[+
   7874					 add dat, acc
2  7875	00000F3C			 vm_adddatacc		 proc	 STDCALL, ptrMachine:DWORD
3  7876	00000F3C  C8 0000 00			 ENTERD	 00000h,0
3  7877	00000F40  8B 75	08			 mov	 esi, ptrMachine
2  7878
2  7879	00000F43  8B 46	04			 mov	 eax, [esi].reg_acc
2  7880	00000F46  01 46	0C			 add	 [esi].reg_dat,	eax
2  7881
2  7882	00000F49  FF 76	0C			 push	 [esi].reg_dat
2  7883	00000F4C  E8 FFFFF50D			 call	 internals_SetFlags
2  7884
2  7885	00000F51  FF 46	1C			 inc	 [esi].reg_ip
3  7886	00000F54  C9				 LEAVED
3  7887	00000F55  C2 0004			 RET	 00004h
2  7888	00000F58			 vm_adddatacc		 endp
2  7889
2  7890					 ;-----------------------------------------------------------------------------------------[+
   7891					 add dat, rnd
2  7892	00000F58			 vm_adddatrnd		 proc	 STDCALL, ptrMachine:DWORD
3  7893	00000F58  C8 0000 00			 ENTERD	 00000h,0
3  7894	00000F5C  8B 75	08			 mov	 esi, ptrMachine
2  7895
2  7896	00000F5F  8B 46	10			 mov	 eax, [esi].reg_rnd
2  7897	00000F62  01 46	0C			 add	 [esi].reg_dat,	eax
2  7898	00000F65  50				 push	 eax
2  7899	00000F66  E8 FFFFF2A6			 call	 RandomNumber
2  7900	00000F6B  89 46	10			 mov	 [esi].reg_rnd,	eax
2  7901
2  7902	00000F6E  FF 76	0C			 push	 [esi].reg_dat
2  7903	00000F71  E8 FFFFF4E8			 call	 internals_SetFlags
2  7904
2  7905	00000F76  FF 46	1C			 inc	 [esi].reg_ip
3  7906	00000F79  C9				 LEAVED
3  7907	00000F7A  C2 0004			 RET	 00004h
2  7908	00000F7D			 vm_adddatrnd		 endp
2  7909
2  7910					 ;-----------------------------------------------------------------------------------------[+
   7911					 add dat, variable
2  7912	00000F7D			 vm_adddatvar		 proc	 STDCALL, ptrMachine:DWORD
3  7913	00000F7D  C8 0000 00			 ENTERD	 00000h,0
3  7914	00000F81  8B 75	08			 mov	 esi, ptrMachine
2  7915	00000F84  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7916	00000F87  47				 inc	 edi
2  7917
2  7918	00000F88  57				 push	 edi
2  7919	00000F89  56				 push	 esi
2  7920	00000F8A  E8 FFFFF373			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7921
2  7922	00000F8F  50				 push	 eax
2  7923	00000F90  56				 push	 esi
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 140
pmScript.ASM



2  7924	00000F91  E8 FFFFF36C			 call	 internals_ReadValue			 ; Get variable
2  7925
2  7926	00000F96  01 46	0C			 add	 [esi].reg_dat,	eax
2  7927
2  7928	00000F99  FF 76	0C			 push	 [esi].reg_dat
2  7929	00000F9C  E8 FFFFF4BD			 call	 internals_SetFlags
2  7930
2  7931	00000FA1  83 46	1C 05			 add	 [esi].reg_ip, 5
3  7932	00000FA5  C9				 LEAVED
3  7933	00000FA6  C2 0004			 RET	 00004h
2  7934	00000FA9			 vm_adddatvar		 endp
2  7935
2  7936
1  7937					 INCLUDE ops_sub.inc
2  7938
2  7939
2  7940	00000FA9				 .code
2  7941
2  7942					 ;-----------------------------------------------------------------------------------------[+
   7943					 sub acc, immediate
2  7944	00000FA9			 vm_subaccimm		 proc	 STDCALL, ptrMachine:DWORD
3  7945	00000FA9  C8 0000 00			 ENTERD	 00000h,0
3  7946	00000FAD  8B 75	08			 mov	 esi, ptrMachine
2  7947	00000FB0  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7948	00000FB3  47				 inc	 edi
2  7949
2  7950	00000FB4  57				 push	 edi
2  7951	00000FB5  56				 push	 esi
2  7952	00000FB6  E8 FFFFF347			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7953
2  7954	00000FBB  29 46	04			 sub	 [esi].reg_acc,	eax
2  7955
2  7956	00000FBE  FF 76	04			 push	 [esi].reg_acc
2  7957	00000FC1  E8 FFFFF498			 call	 internals_SetFlags
2  7958
2  7959	00000FC6  83 46	1C 05			 add	 [esi].reg_ip, 5
3  7960	00000FCA  C9				 LEAVED
3  7961	00000FCB  C2 0004			 RET	 00004h
2  7962	00000FCE			 vm_subaccimm		 endp
2  7963
2  7964					 ;-----------------------------------------------------------------------------------------[+
   7965					 sub acc, dat
2  7966	00000FCE			 vm_subaccdat		 proc	 STDCALL, ptrMachine:DWORD
3  7967	00000FCE  C8 0000 00			 ENTERD	 00000h,0
3  7968	00000FD2  8B 75	08			 mov	 esi, ptrMachine
2  7969
2  7970	00000FD5  8B 46	0C			 mov	 eax, [esi].reg_dat
2  7971	00000FD8  29 46	04			 sub	 [esi].reg_acc,	eax
2  7972
2  7973	00000FDB  FF 76	04			 push	 [esi].reg_acc
2  7974	00000FDE  E8 FFFFF47B			 call	 internals_SetFlags
2  7975
2  7976	00000FE3  FF 46	1C			 inc	 [esi].reg_ip
3  7977	00000FE6  C9				 LEAVED
3  7978	00000FE7  C2 0004			 RET	 00004h
2  7979	00000FEA			 vm_subaccdat		 endp
2  7980
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 141
pmScript.ASM



2  7981					 ;-----------------------------------------------------------------------------------------[+
   7982					 sub acc, rnd
2  7983	00000FEA			 vm_subaccrnd		 proc	 STDCALL, ptrMachine:DWORD
3  7984	00000FEA  C8 0000 00			 ENTERD	 00000h,0
3  7985	00000FEE  8B 75	08			 mov	 esi, ptrMachine
2  7986
2  7987	00000FF1  8B 46	10			 mov	 eax, [esi].reg_rnd
2  7988	00000FF4  29 46	04			 sub	 [esi].reg_acc,	eax
2  7989	00000FF7  50				 push	 eax
2  7990	00000FF8  E8 FFFFF214			 call	 RandomNumber
2  7991	00000FFD  89 46	10			 mov	 [esi].reg_rnd,	eax
2  7992
2  7993	00001000  FF 76	04			 push	 [esi].reg_acc
2  7994	00001003  E8 FFFFF456			 call	 internals_SetFlags
2  7995
2  7996	00001008  FF 46	1C			 inc	 [esi].reg_ip
3  7997	0000100B  C9				 LEAVED
3  7998	0000100C  C2 0004			 RET	 00004h
2  7999	0000100F			 vm_subaccrnd		 endp
2  8000
2  8001					 ;-----------------------------------------------------------------------------------------[+
   8002					 sub acc, variable
2  8003	0000100F			 vm_subaccvar		 proc	 STDCALL, ptrMachine:DWORD
3  8004	0000100F  C8 0000 00			 ENTERD	 00000h,0
3  8005	00001013  8B 75	08			 mov	 esi, ptrMachine
2  8006	00001016  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8007	00001019  47				 inc	 edi
2  8008
2  8009	0000101A  57				 push	 edi
2  8010	0000101B  56				 push	 esi
2  8011	0000101C  E8 FFFFF2E1			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8012
2  8013	00001021  50				 push	 eax
2  8014	00001022  56				 push	 esi
2  8015	00001023  E8 FFFFF2DA			 call	 internals_ReadValue			 ; Get variable
2  8016
2  8017	00001028  29 46	04			 sub	 [esi].reg_acc,	eax
2  8018
2  8019	0000102B  FF 76	04			 push	 [esi].reg_acc
2  8020	0000102E  E8 FFFFF42B			 call	 internals_SetFlags
2  8021
2  8022	00001033  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8023	00001037  C9				 LEAVED
3  8024	00001038  C2 0004			 RET	 00004h
2  8025	0000103B			 vm_subaccvar		 endp
2  8026
2  8027					 ;-----------------------------------------------------------------------------------------[+
   8028					 sub cnt, immediate
2  8029	0000103B			 vm_subcntimm		 proc	 STDCALL, ptrMachine:DWORD
3  8030	0000103B  C8 0000 00			 ENTERD	 00000h,0
3  8031	0000103F  8B 75	08			 mov	 esi, ptrMachine
2  8032	00001042  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8033	00001045  47				 inc	 edi
2  8034
2  8035	00001046  57				 push	 edi
2  8036	00001047  56				 push	 esi
2  8037	00001048  E8 FFFFF2B5			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 142
pmScript.ASM



2  8038
2  8039	0000104D  29 46	08			 sub	 [esi].reg_cnt,	eax
2  8040
2  8041	00001050  FF 76	08			 push	 [esi].reg_cnt
2  8042	00001053  E8 FFFFF406			 call	 internals_SetFlags
2  8043
2  8044	00001058  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8045	0000105C  C9				 LEAVED
3  8046	0000105D  C2 0004			 RET	 00004h
2  8047	00001060			 vm_subcntimm		 endp
2  8048
2  8049					 ;-----------------------------------------------------------------------------------------[+
   8050					 sub cnt, acc
2  8051	00001060			 vm_subcntacc		 proc	 STDCALL, ptrMachine:DWORD
3  8052	00001060  C8 0000 00			 ENTERD	 00000h,0
3  8053	00001064  8B 75	08			 mov	 esi, ptrMachine
2  8054
2  8055	00001067  8B 46	04			 mov	 eax, [esi].reg_acc
2  8056	0000106A  29 46	08			 sub	 [esi].reg_cnt,	eax
2  8057
2  8058	0000106D  FF 76	08			 push	 [esi].reg_cnt
2  8059	00001070  E8 FFFFF3E9			 call	 internals_SetFlags
2  8060
2  8061	00001075  FF 46	1C			 inc	 [esi].reg_ip
3  8062	00001078  C9				 LEAVED
3  8063	00001079  C2 0004			 RET	 00004h
2  8064	0000107C			 vm_subcntacc		 endp
2  8065
2  8066					 ;-----------------------------------------------------------------------------------------[+
   8067					 sub cnt, dat
2  8068	0000107C			 vm_subcntdat		 proc	 STDCALL, ptrMachine:DWORD
3  8069	0000107C  C8 0000 00			 ENTERD	 00000h,0
3  8070	00001080  8B 75	08			 mov	 esi, ptrMachine
2  8071
2  8072	00001083  8B 46	0C			 mov	 eax, [esi].reg_dat
2  8073	00001086  29 46	08			 sub	 [esi].reg_cnt,	eax
2  8074
2  8075	00001089  FF 76	08			 push	 [esi].reg_cnt
2  8076	0000108C  E8 FFFFF3CD			 call	 internals_SetFlags
2  8077
2  8078	00001091  FF 46	1C			 inc	 [esi].reg_ip
3  8079	00001094  C9				 LEAVED
3  8080	00001095  C2 0004			 RET	 00004h
2  8081	00001098			 vm_subcntdat		 endp
2  8082
2  8083					 ;-----------------------------------------------------------------------------------------[+
   8084					 sub cnt, rnd
2  8085	00001098			 vm_subcntrnd		 proc	 STDCALL, ptrMachine:DWORD
3  8086	00001098  C8 0000 00			 ENTERD	 00000h,0
3  8087	0000109C  8B 75	08			 mov	 esi, ptrMachine
2  8088
2  8089	0000109F  8B 46	10			 mov	 eax, [esi].reg_rnd
2  8090	000010A2  29 46	08			 sub	 [esi].reg_cnt,	eax
2  8091	000010A5  50				 push	 eax
2  8092	000010A6  E8 FFFFF166			 call	 RandomNumber
2  8093	000010AB  89 46	10			 mov	 [esi].reg_rnd,	eax
2  8094
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 143
pmScript.ASM



2  8095	000010AE  FF 76	08			 push	 [esi].reg_cnt
2  8096	000010B1  E8 FFFFF3A8			 call	 internals_SetFlags
2  8097
2  8098	000010B6  FF 46	1C			 inc	 [esi].reg_ip
3  8099	000010B9  C9				 LEAVED
3  8100	000010BA  C2 0004			 RET	 00004h
2  8101	000010BD			 vm_subcntrnd		 endp
2  8102
2  8103					 ;-----------------------------------------------------------------------------------------[+
   8104					 sub cnt, variable
2  8105	000010BD			 vm_subcntvar		 proc	 STDCALL, ptrMachine:DWORD
3  8106	000010BD  C8 0000 00			 ENTERD	 00000h,0
3  8107	000010C1  8B 75	08			 mov	 esi, ptrMachine
2  8108	000010C4  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8109	000010C7  47				 inc	 edi
2  8110
2  8111	000010C8  57				 push	 edi
2  8112	000010C9  56				 push	 esi
2  8113	000010CA  E8 FFFFF233			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8114
2  8115	000010CF  50				 push	 eax
2  8116	000010D0  56				 push	 esi
2  8117	000010D1  E8 FFFFF22C			 call	 internals_ReadValue			 ; Get variable
2  8118
2  8119	000010D6  29 46	08			 sub	 [esi].reg_cnt,	eax
2  8120
2  8121	000010D9  FF 76	08			 push	 [esi].reg_cnt
2  8122	000010DC  E8 FFFFF37D			 call	 internals_SetFlags
2  8123
2  8124	000010E1  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8125	000010E5  C9				 LEAVED
3  8126	000010E6  C2 0004			 RET	 00004h
2  8127	000010E9			 vm_subcntvar		 endp
2  8128
2  8129					 ;-----------------------------------------------------------------------------------------[+
   8130					 sub dat, immediate
2  8131	000010E9			 vm_subdatimm		 proc	 STDCALL, ptrMachine:DWORD
3  8132	000010E9  C8 0000 00			 ENTERD	 00000h,0
3  8133	000010ED  8B 75	08			 mov	 esi, ptrMachine
2  8134	000010F0  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8135	000010F3  47				 inc	 edi
2  8136
2  8137	000010F4  57				 push	 edi
2  8138	000010F5  56				 push	 esi
2  8139	000010F6  E8 FFFFF207			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8140
2  8141	000010FB  29 46	0C			 sub	 [esi].reg_dat,	eax
2  8142
2  8143	000010FE  FF 76	0C			 push	 [esi].reg_dat
2  8144	00001101  E8 FFFFF358			 call	 internals_SetFlags
2  8145
2  8146	00001106  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8147	0000110A  C9				 LEAVED
3  8148	0000110B  C2 0004			 RET	 00004h
2  8149	0000110E			 vm_subdatimm		 endp
2  8150
2  8151					 ;-----------------------------------------------------------------------------------------[+
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 144
pmScript.ASM



   8152					 sub dat, acc
2  8153	0000110E			 vm_subdatacc		 proc	 STDCALL, ptrMachine:DWORD
3  8154	0000110E  C8 0000 00			 ENTERD	 00000h,0
3  8155	00001112  8B 75	08			 mov	 esi, ptrMachine
2  8156
2  8157	00001115  8B 46	04			 mov	 eax, [esi].reg_acc
2  8158	00001118  29 46	0C			 sub	 [esi].reg_dat,	eax
2  8159
2  8160	0000111B  FF 76	0C			 push	 [esi].reg_dat
2  8161	0000111E  E8 FFFFF33B			 call	 internals_SetFlags
2  8162
2  8163	00001123  FF 46	1C			 inc	 [esi].reg_ip
3  8164	00001126  C9				 LEAVED
3  8165	00001127  C2 0004			 RET	 00004h
2  8166	0000112A			 vm_subdatacc		 endp
2  8167
2  8168					 ;-----------------------------------------------------------------------------------------[+
   8169					 sub dat, rnd
2  8170	0000112A			 vm_subdatrnd		 proc	 STDCALL, ptrMachine:DWORD
3  8171	0000112A  C8 0000 00			 ENTERD	 00000h,0
3  8172	0000112E  8B 75	08			 mov	 esi, ptrMachine
2  8173
2  8174	00001131  8B 46	10			 mov	 eax, [esi].reg_rnd
2  8175	00001134  29 46	0C			 sub	 [esi].reg_dat,	eax
2  8176	00001137  50				 push	 eax
2  8177	00001138  E8 FFFFF0D4			 call	 RandomNumber
2  8178	0000113D  89 46	10			 mov	 [esi].reg_rnd,	eax
2  8179
2  8180	00001140  FF 76	0C			 push	 [esi].reg_dat
2  8181	00001143  E8 FFFFF316			 call	 internals_SetFlags
2  8182
2  8183	00001148  FF 46	1C			 inc	 [esi].reg_ip
3  8184	0000114B  C9				 LEAVED
3  8185	0000114C  C2 0004			 RET	 00004h
2  8186	0000114F			 vm_subdatrnd		 endp
2  8187
2  8188					 ;-----------------------------------------------------------------------------------------[+
   8189					 sub dat, variable
2  8190	0000114F			 vm_subdatvar		 proc	 STDCALL, ptrMachine:DWORD
3  8191	0000114F  C8 0000 00			 ENTERD	 00000h,0
3  8192	00001153  8B 75	08			 mov	 esi, ptrMachine
2  8193	00001156  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8194	00001159  47				 inc	 edi
2  8195
2  8196	0000115A  57				 push	 edi
2  8197	0000115B  56				 push	 esi
2  8198	0000115C  E8 FFFFF1A1			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8199
2  8200	00001161  50				 push	 eax
2  8201	00001162  56				 push	 esi
2  8202	00001163  E8 FFFFF19A			 call	 internals_ReadValue			 ; Get variable
2  8203
2  8204	00001168  29 46	0C			 sub	 [esi].reg_dat,	eax
2  8205
2  8206	0000116B  FF 76	0C			 push	 [esi].reg_dat
2  8207	0000116E  E8 FFFFF2EB			 call	 internals_SetFlags
2  8208
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 145
pmScript.ASM



2  8209	00001173  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8210	00001177  C9				 LEAVED
3  8211	00001178  C2 0004			 RET	 00004h
2  8212	0000117B			 vm_subdatvar		 endp
2  8213
2  8214
1  8215					 INCLUDE ops_incdec.inc
2  8216
2  8217
2  8218	0000117B				 .code
2  8219
2  8220					 ;-----------------------------------------------------------------------------------------[+
   8221					 inc acc
2  8222	0000117B			 vm_incacc		 proc	 STDCALL, ptrMachine:DWORD
3  8223	0000117B  C8 0000 00			 ENTERD	 00000h,0
3  8224	0000117F  8B 75	08			 mov	 esi, ptrMachine
2  8225	00001182  FF 46	04			 inc	 [esi].reg_acc
2  8226	00001185  FF 46	1C			 inc	 [esi].reg_ip
2  8227	00001188  FF 76	04			 push	 [esi].reg_acc
2  8228	0000118B  E8 FFFFF2CE			 call	 internals_SetFlags
3  8229	00001190  C9				 LEAVED
3  8230	00001191  C2 0004			 RET	 00004h
2  8231	00001194			 vm_incacc		 endp
2  8232
2  8233					 ;-----------------------------------------------------------------------------------------[+
   8234					 inc cnt
2  8235	00001194			 vm_inccnt		 proc	 STDCALL, ptrMachine:DWORD
3  8236	00001194  C8 0000 00			 ENTERD	 00000h,0
3  8237	00001198  8B 75	08			 mov	 esi, ptrMachine
2  8238	0000119B  FF 46	08			 inc	 [esi].reg_cnt
2  8239	0000119E  FF 46	1C			 inc	 [esi].reg_ip
2  8240	000011A1  FF 76	08			 push	 [esi].reg_cnt
2  8241	000011A4  E8 FFFFF2B5			 call	 internals_SetFlags
3  8242	000011A9  C9				 LEAVED
3  8243	000011AA  C2 0004			 RET	 00004h
2  8244	000011AD			 vm_inccnt		 endp
2  8245
2  8246					 ;-----------------------------------------------------------------------------------------[+
   8247					 inc dat
2  8248	000011AD			 vm_incdat		 proc	 STDCALL, ptrMachine:DWORD
3  8249	000011AD  C8 0000 00			 ENTERD	 00000h,0
3  8250	000011B1  8B 75	08			 mov	 esi, ptrMachine
2  8251	000011B4  FF 46	0C			 inc	 [esi].reg_dat
2  8252	000011B7  FF 46	1C			 inc	 [esi].reg_ip
2  8253	000011BA  FF 76	0C			 push	 [esi].reg_dat
2  8254	000011BD  E8 FFFFF29C			 call	 internals_SetFlags
3  8255	000011C2  C9				 LEAVED
3  8256	000011C3  C2 0004			 RET	 00004h
2  8257	000011C6			 vm_incdat		 endp
2  8258
2  8259					 ;-----------------------------------------------------------------------------------------[+
   8260					 dec acc
2  8261	000011C6			 vm_decacc		 proc	 STDCALL, ptrMachine:DWORD
3  8262	000011C6  C8 0000 00			 ENTERD	 00000h,0
3  8263	000011CA  8B 75	08			 mov	 esi, ptrMachine
2  8264	000011CD  FF 4E	04			 dec	 [esi].reg_acc
2  8265	000011D0  FF 46	1C			 inc	 [esi].reg_ip
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 146
pmScript.ASM



2  8266	000011D3  FF 76	04			 push	 [esi].reg_acc
2  8267	000011D6  E8 FFFFF283			 call	 internals_SetFlags
3  8268	000011DB  C9				 LEAVED
3  8269	000011DC  C2 0004			 RET	 00004h
2  8270	000011DF			 vm_decacc		 endp
2  8271
2  8272					 ;-----------------------------------------------------------------------------------------[+
   8273					 dec cnt
2  8274	000011DF			 vm_deccnt		 proc	 STDCALL, ptrMachine:DWORD
3  8275	000011DF  C8 0000 00			 ENTERD	 00000h,0
3  8276	000011E3  8B 75	08			 mov	 esi, ptrMachine
2  8277	000011E6  FF 4E	08			 dec	 [esi].reg_cnt
2  8278	000011E9  FF 46	1C			 inc	 [esi].reg_ip
2  8279	000011EC  FF 76	08			 push	 [esi].reg_cnt
2  8280	000011EF  E8 FFFFF26A			 call	 internals_SetFlags
3  8281	000011F4  C9				 LEAVED
3  8282	000011F5  C2 0004			 RET	 00004h
2  8283	000011F8			 vm_deccnt		 endp
2  8284
2  8285					 ;-----------------------------------------------------------------------------------------[+
   8286					 dec dat
2  8287	000011F8			 vm_decdat		 proc	 STDCALL, ptrMachine:DWORD
3  8288	000011F8  C8 0000 00			 ENTERD	 00000h,0
3  8289	000011FC  8B 75	08			 mov	 esi, ptrMachine
2  8290	000011FF  FF 4E	0C			 dec	 [esi].reg_dat
2  8291	00001202  FF 46	1C			 inc	 [esi].reg_ip
2  8292	00001205  FF 76	0C			 push	 [esi].reg_dat
2  8293	00001208  E8 FFFFF251			 call	 internals_SetFlags
3  8294	0000120D  C9				 LEAVED
3  8295	0000120E  C2 0004			 RET	 00004h
2  8296	00001211			 vm_decdat		 endp
2  8297
2  8298
1  8299					 INCLUDE ops_muldiv.inc
2  8300
2  8301
2  8302	00001211				 .code
2  8303
2  8304					 ;-----------------------------------------------------------------------------------------[+
   8305					 mul immediate
2  8306	00001211			 vm_mulimm		 proc	 STDCALL, ptrMachine:DWORD
3  8307	00001211  C8 0000 00			 ENTERD	 00000h,0
3  8308	00001215  8B 75	08			 mov	 esi, ptrMachine
2  8309	00001218  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8310	0000121B  47				 inc	 edi
2  8311
2  8312	0000121C  57				 push	 edi
2  8313	0000121D  56				 push	 esi
2  8314	0000121E  E8 FFFFF0DF			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8315	00001223  8B C8				 mov	 ecx, eax
2  8316	00001225  8B 46	04			 mov	 eax, [esi].reg_acc
2  8317	00001228  F7 E1				 mul	 ecx
2  8318
2  8319	0000122A  89 46	04			 mov	 [esi].reg_acc,	eax
2  8320
2  8321	0000122D  FF 76	04			 push	 [esi].reg_acc
2  8322	00001230  E8 FFFFF229			 call	 internals_SetFlags
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 147
pmScript.ASM



2  8323	00001235  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8324	00001239  C9				 LEAVED
3  8325	0000123A  C2 0004			 RET	 00004h
2  8326	0000123D			 vm_mulimm		 endp
2  8327
2  8328					 ;-----------------------------------------------------------------------------------------[+
   8329					 mul variable
2  8330	0000123D			 vm_mulvar		 proc	 STDCALL, ptrMachine:DWORD
3  8331	0000123D  C8 0000 00			 ENTERD	 00000h,0
3  8332	00001241  8B 75	08			 mov	 esi, ptrMachine
2  8333	00001244  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8334	00001247  47				 inc	 edi
2  8335
2  8336	00001248  57				 push	 edi
2  8337	00001249  56				 push	 esi
2  8338	0000124A  E8 FFFFF0B3			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8339	0000124F  50				 push	 eax
2  8340	00001250  56				 push	 esi
2  8341	00001251  E8 FFFFF0AC			 call	 internals_ReadValue			 ; Gets	variable
2  8342	00001256  8B C8				 mov	 ecx, eax
2  8343	00001258  8B 46	04			 mov	 eax, [esi].reg_acc
2  8344	0000125B  F7 E1				 mul	 ecx
2  8345
2  8346	0000125D  89 46	04			 mov	 [esi].reg_acc,	eax
2  8347
2  8348	00001260  FF 76	04			 push	 [esi].reg_acc
2  8349	00001263  E8 FFFFF1F6			 call	 internals_SetFlags
2  8350	00001268  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8351	0000126C  C9				 LEAVED
3  8352	0000126D  C2 0004			 RET	 00004h
2  8353	00001270			 vm_mulvar		 endp
2  8354
2  8355					 ;-----------------------------------------------------------------------------------------[+
   8356					 mul cnt
2  8357	00001270			 vm_mulcnt		 proc	 STDCALL, ptrMachine:DWORD
3  8358	00001270  C8 0000 00			 ENTERD	 00000h,0
3  8359	00001274  8B 75	08			 mov	 esi, ptrMachine
2  8360	00001277  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8361	0000127A  47				 inc	 edi
2  8362
2  8363	0000127B  8B 4E	08			 mov	 ecx, [esi].reg_cnt
2  8364	0000127E  8B 46	04			 mov	 eax, [esi].reg_acc
2  8365	00001281  F7 E1				 mul	 ecx
2  8366
2  8367	00001283  89 46	04			 mov	 [esi].reg_acc,	eax
2  8368
2  8369	00001286  FF 76	04			 push	 [esi].reg_acc
2  8370	00001289  E8 FFFFF1D0			 call	 internals_SetFlags
2  8371	0000128E  FF 46	1C			 inc	 [esi].reg_ip
3  8372	00001291  C9				 LEAVED
3  8373	00001292  C2 0004			 RET	 00004h
2  8374	00001295			 vm_mulcnt		 endp
2  8375
2  8376					 ;-----------------------------------------------------------------------------------------[+
   8377					 div immediate
2  8378	00001295			 vm_divimm		 proc	 STDCALL, ptrMachine:DWORD
3  8379	00001295  C8 0000 00			 ENTERD	 00000h,0
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 148
pmScript.ASM



3  8380	00001299  8B 75	08			 mov	 esi, ptrMachine
2  8381	0000129C  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8382	0000129F  47				 inc	 edi
2  8383
2  8384	000012A0  57				 push	 edi
2  8385	000012A1  56				 push	 esi
2  8386	000012A2  E8 FFFFF05B			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8387	000012A7  8B C8				 mov	 ecx, eax
2  8388	000012A9  8B 46	04			 mov	 eax, [esi].reg_acc
2  8389	000012AC  33 D2				 xor	 edx, edx
2  8390	000012AE  F7 F1				 div	 ecx
2  8391
2  8392	000012B0  89 46	04			 mov	 [esi].reg_acc,	eax
2  8393
2  8394	000012B3  FF 76	04			 push	 [esi].reg_acc
2  8395	000012B6  E8 FFFFF1A3			 call	 internals_SetFlags
2  8396	000012BB  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8397	000012BF  C9				 LEAVED
3  8398	000012C0  C2 0004			 RET	 00004h
2  8399	000012C3			 vm_divimm		 endp
2  8400
2  8401					 ;-----------------------------------------------------------------------------------------[+
   8402					 div variable
2  8403	000012C3			 vm_divvar		 proc	 STDCALL, ptrMachine:DWORD
3  8404	000012C3  C8 0000 00			 ENTERD	 00000h,0
3  8405	000012C7  8B 75	08			 mov	 esi, ptrMachine
2  8406	000012CA  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8407	000012CD  47				 inc	 edi
2  8408
2  8409	000012CE  57				 push	 edi
2  8410	000012CF  56				 push	 esi
2  8411	000012D0  E8 FFFFF02D			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8412	000012D5  50				 push	 eax
2  8413	000012D6  56				 push	 esi
2  8414	000012D7  E8 FFFFF026			 call	 internals_ReadValue			 ; Gets	variable
2  8415	000012DC  8B C8				 mov	 ecx, eax
2  8416	000012DE  8B 46	04			 mov	 eax, [esi].reg_acc
2  8417	000012E1  33 D2				 xor	 edx, edx
2  8418	000012E3  F7 F1				 div	 ecx
2  8419
2  8420	000012E5  89 46	04			 mov	 [esi].reg_acc,	eax
2  8421
2  8422	000012E8  FF 76	04			 push	 [esi].reg_acc
2  8423	000012EB  E8 FFFFF16E			 call	 internals_SetFlags
2  8424	000012F0  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8425	000012F4  C9				 LEAVED
3  8426	000012F5  C2 0004			 RET	 00004h
2  8427	000012F8			 vm_divvar		 endp
2  8428
2  8429					 ;-----------------------------------------------------------------------------------------[+
   8430					 div cnt
2  8431	000012F8			 vm_divcnt		 proc	 STDCALL, ptrMachine:DWORD
3  8432	000012F8  C8 0000 00			 ENTERD	 00000h,0
3  8433	000012FC  8B 75	08			 mov	 esi, ptrMachine
2  8434	000012FF  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8435	00001302  47				 inc	 edi
2  8436
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 149
pmScript.ASM



2  8437	00001303  8B 4E	08			 mov	 ecx, [esi].reg_cnt
2  8438	00001306  8B 46	04			 mov	 eax, [esi].reg_acc
2  8439	00001309  33 D2				 xor	 edx, edx
2  8440	0000130B  F7 F1				 div	 ecx
2  8441
2  8442	0000130D  89 46	04			 mov	 [esi].reg_acc,	eax
2  8443
2  8444	00001310  FF 76	04			 push	 [esi].reg_acc
2  8445	00001313  E8 FFFFF146			 call	 internals_SetFlags
2  8446	00001318  FF 46	1C			 inc	 [esi].reg_ip
3  8447	0000131B  C9				 LEAVED
3  8448	0000131C  C2 0004			 RET	 00004h
2  8449	0000131F			 vm_divcnt		 endp
2  8450
2  8451					 ;-----------------------------------------------------------------------------------------[+
   8452					 mod immediate
2  8453	0000131F			 vm_modimm		 proc	 STDCALL, ptrMachine:DWORD
3  8454	0000131F  C8 0000 00			 ENTERD	 00000h,0
3  8455	00001323  8B 75	08			 mov	 esi, ptrMachine
2  8456	00001326  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8457	00001329  47				 inc	 edi
2  8458
2  8459	0000132A  57				 push	 edi
2  8460	0000132B  56				 push	 esi
2  8461	0000132C  E8 FFFFEFD1			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8462	00001331  8B C8				 mov	 ecx, eax
2  8463	00001333  8B 46	04			 mov	 eax, [esi].reg_acc
2  8464	00001336  33 D2				 xor	 edx, edx
2  8465	00001338  F7 F1				 div	 ecx
2  8466
2  8467	0000133A  89 56	04			 mov	 [esi].reg_acc,	edx
2  8468
2  8469	0000133D  FF 76	04			 push	 [esi].reg_acc
2  8470	00001340  E8 FFFFF119			 call	 internals_SetFlags
2  8471	00001345  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8472	00001349  C9				 LEAVED
3  8473	0000134A  C2 0004			 RET	 00004h
2  8474	0000134D			 vm_modimm		 endp
2  8475
2  8476					 ;-----------------------------------------------------------------------------------------[+
   8477					 mod variable
2  8478	0000134D			 vm_modvar		 proc	 STDCALL, ptrMachine:DWORD
3  8479	0000134D  C8 0000 00			 ENTERD	 00000h,0
3  8480	00001351  8B 75	08			 mov	 esi, ptrMachine
2  8481	00001354  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8482	00001357  47				 inc	 edi
2  8483
2  8484	00001358  57				 push	 edi
2  8485	00001359  56				 push	 esi
2  8486	0000135A  E8 FFFFEFA3			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8487	0000135F  50				 push	 eax
2  8488	00001360  56				 push	 esi
2  8489	00001361  E8 FFFFEF9C			 call	 internals_ReadValue			 ; Gets	variable
2  8490	00001366  8B C8				 mov	 ecx, eax
2  8491	00001368  8B 46	04			 mov	 eax, [esi].reg_acc
2  8492	0000136B  33 D2				 xor	 edx, edx
2  8493	0000136D  F7 F1				 div	 ecx
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 150
pmScript.ASM



2  8494
2  8495	0000136F  89 56	04			 mov	 [esi].reg_acc,	edx
2  8496
2  8497	00001372  FF 76	04			 push	 [esi].reg_acc
2  8498	00001375  E8 FFFFF0E4			 call	 internals_SetFlags
2  8499	0000137A  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8500	0000137E  C9				 LEAVED
3  8501	0000137F  C2 0004			 RET	 00004h
2  8502	00001382			 vm_modvar		 endp
2  8503
2  8504					 ;-----------------------------------------------------------------------------------------[+
   8505					 mod cnt
2  8506	00001382			 vm_modcnt		 proc	 STDCALL, ptrMachine:DWORD
3  8507	00001382  C8 0000 00			 ENTERD	 00000h,0
3  8508	00001386  8B 75	08			 mov	 esi, ptrMachine
2  8509	00001389  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8510	0000138C  47				 inc	 edi
2  8511
2  8512	0000138D  8B 4E	08			 mov	 ecx, [esi].reg_cnt
2  8513	00001390  8B 46	04			 mov	 eax, [esi].reg_acc
2  8514	00001393  33 D2				 xor	 edx, edx
2  8515	00001395  F7 F1				 div	 ecx
2  8516
2  8517	00001397  89 56	04			 mov	 [esi].reg_acc,	edx
2  8518
2  8519	0000139A  FF 76	04			 push	 [esi].reg_acc
2  8520	0000139D  E8 FFFFF0BC			 call	 internals_SetFlags
2  8521	000013A2  FF 46	1C			 inc	 [esi].reg_ip
3  8522	000013A5  C9				 LEAVED
3  8523	000013A6  C2 0004			 RET	 00004h
2  8524	000013A9			 vm_modcnt		 endp
2  8525
2  8526
2  8527
1  8528					 INCLUDE ops_andor.inc
2  8529
2  8530
2  8531	000013A9				 .code
2  8532
2  8533					 ;-----------------------------------------------------------------------------------------[+
   8534					 and acc, immediate
2  8535	000013A9			 vm_andaccimm		 proc	 STDCALL, ptrMachine:DWORD
3  8536	000013A9  C8 0000 00			 ENTERD	 00000h,0
3  8537	000013AD  8B 75	08			 mov	 esi, ptrMachine
2  8538	000013B0  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8539	000013B3  47				 inc	 edi
2  8540
2  8541	000013B4  57				 push	 edi
2  8542	000013B5  56				 push	 esi
2  8543	000013B6  E8 FFFFEF47			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8544
2  8545	000013BB  21 46	04			 and	 [esi].reg_acc,	eax
2  8546
2  8547	000013BE  FF 76	04			 push	 [esi].reg_acc
2  8548	000013C1  E8 FFFFF098			 call	 internals_SetFlags
2  8549
2  8550	000013C6  83 46	1C 05			 add	 [esi].reg_ip, 5
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 151
pmScript.ASM



3  8551	000013CA  C9				 LEAVED
3  8552	000013CB  C2 0004			 RET	 00004h
2  8553	000013CE			 vm_andaccimm		 endp
2  8554
2  8555					 ;-----------------------------------------------------------------------------------------[+
   8556					 and acc, dat
2  8557	000013CE			 vm_andaccdat		 proc	 STDCALL, ptrMachine:DWORD
3  8558	000013CE  C8 0000 00			 ENTERD	 00000h,0
3  8559	000013D2  8B 75	08			 mov	 esi, ptrMachine
2  8560
2  8561	000013D5  8B 46	0C			 mov	 eax, [esi].reg_dat
2  8562	000013D8  21 46	04			 and	 [esi].reg_acc,	eax
2  8563
2  8564	000013DB  FF 76	04			 push	 [esi].reg_acc
2  8565	000013DE  E8 FFFFF07B			 call	 internals_SetFlags
2  8566
2  8567	000013E3  FF 46	1C			 inc	 [esi].reg_ip
3  8568	000013E6  C9				 LEAVED
3  8569	000013E7  C2 0004			 RET	 00004h
2  8570	000013EA			 vm_andaccdat		 endp
2  8571
2  8572					 ;-----------------------------------------------------------------------------------------[+
   8573					 and acc, variable
2  8574	000013EA			 vm_andaccvar		 proc	 STDCALL, ptrMachine:DWORD
3  8575	000013EA  C8 0000 00			 ENTERD	 00000h,0
3  8576	000013EE  8B 75	08			 mov	 esi, ptrMachine
2  8577	000013F1  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8578	000013F4  47				 inc	 edi
2  8579
2  8580	000013F5  57				 push	 edi
2  8581	000013F6  56				 push	 esi
2  8582	000013F7  E8 FFFFEF06			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8583	000013FC  50				 push	 eax
2  8584	000013FD  56				 push	 esi
2  8585	000013FE  E8 FFFFEEFF			 call	 internals_ReadValue			 ; Gets	variable
2  8586
2  8587	00001403  21 46	04			 and	 [esi].reg_acc,	eax
2  8588
2  8589	00001406  FF 76	04			 push	 [esi].reg_acc
2  8590	00001409  E8 FFFFF050			 call	 internals_SetFlags
2  8591
2  8592	0000140E  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8593	00001412  C9				 LEAVED
3  8594	00001413  C2 0004			 RET	 00004h
2  8595	00001416			 vm_andaccvar		 endp
2  8596
2  8597					 ;-----------------------------------------------------------------------------------------[+
   8598					 and dat, immediate
2  8599	00001416			 vm_anddatimm		 proc	 STDCALL, ptrMachine:DWORD
3  8600	00001416  C8 0000 00			 ENTERD	 00000h,0
3  8601	0000141A  8B 75	08			 mov	 esi, ptrMachine
2  8602	0000141D  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8603	00001420  47				 inc	 edi
2  8604
2  8605	00001421  57				 push	 edi
2  8606	00001422  56				 push	 esi
2  8607	00001423  E8 FFFFEEDA			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 152
pmScript.ASM



2  8608
2  8609	00001428  21 46	0C			 and	 [esi].reg_dat,	eax
2  8610
2  8611	0000142B  FF 76	0C			 push	 [esi].reg_dat
2  8612	0000142E  E8 FFFFF02B			 call	 internals_SetFlags
2  8613
2  8614	00001433  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8615	00001437  C9				 LEAVED
3  8616	00001438  C2 0004			 RET	 00004h
2  8617	0000143B			 vm_anddatimm		 endp
2  8618
2  8619					 ;-----------------------------------------------------------------------------------------[+
   8620					 and dat, acc
2  8621	0000143B			 vm_anddatacc		 proc	 STDCALL, ptrMachine:DWORD
3  8622	0000143B  C8 0000 00			 ENTERD	 00000h,0
3  8623	0000143F  8B 75	08			 mov	 esi, ptrMachine
2  8624
2  8625	00001442  8B 46	04			 mov	 eax, [esi].reg_acc
2  8626	00001445  21 46	0C			 and	 [esi].reg_dat,	eax
2  8627
2  8628	00001448  FF 76	0C			 push	 [esi].reg_dat
2  8629	0000144B  E8 FFFFF00E			 call	 internals_SetFlags
2  8630
2  8631	00001450  FF 46	1C			 inc	 [esi].reg_ip
3  8632	00001453  C9				 LEAVED
3  8633	00001454  C2 0004			 RET	 00004h
2  8634	00001457			 vm_anddatacc		 endp
2  8635
2  8636					 ;-----------------------------------------------------------------------------------------[+
   8637					 and dat, variable
2  8638	00001457			 vm_anddatvar		 proc	 STDCALL, ptrMachine:DWORD
3  8639	00001457  C8 0000 00			 ENTERD	 00000h,0
3  8640	0000145B  8B 75	08			 mov	 esi, ptrMachine
2  8641	0000145E  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8642	00001461  47				 inc	 edi
2  8643
2  8644	00001462  57				 push	 edi
2  8645	00001463  56				 push	 esi
2  8646	00001464  E8 FFFFEE99			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8647	00001469  50				 push	 eax
2  8648	0000146A  56				 push	 esi
2  8649	0000146B  E8 FFFFEE92			 call	 internals_ReadValue			 ; Gets	variable
2  8650
2  8651	00001470  21 46	0C			 and	 [esi].reg_dat,	eax
2  8652
2  8653	00001473  FF 76	0C			 push	 [esi].reg_dat
2  8654	00001476  E8 FFFFEFE3			 call	 internals_SetFlags
2  8655
2  8656	0000147B  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8657	0000147F  C9				 LEAVED
3  8658	00001480  C2 0004			 RET	 00004h
2  8659	00001483			 vm_anddatvar		 endp
2  8660
2  8661					 ;-----------------------------------------------------------------------------------------[+
   8662					 or acc, immediate
2  8663	00001483			 vm_oraccimm		 proc	 STDCALL, ptrMachine:DWORD
3  8664	00001483  C8 0000 00			 ENTERD	 00000h,0
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 153
pmScript.ASM



3  8665	00001487  8B 75	08			 mov	 esi, ptrMachine
2  8666	0000148A  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8667	0000148D  47				 inc	 edi
2  8668
2  8669	0000148E  57				 push	 edi
2  8670	0000148F  56				 push	 esi
2  8671	00001490  E8 FFFFEE6D			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8672
2  8673	00001495  09 46	04			 or	 [esi].reg_acc,	eax
2  8674
2  8675	00001498  FF 76	04			 push	 [esi].reg_acc
2  8676	0000149B  E8 FFFFEFBE			 call	 internals_SetFlags
2  8677
2  8678	000014A0  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8679	000014A4  C9				 LEAVED
3  8680	000014A5  C2 0004			 RET	 00004h
2  8681	000014A8			 vm_oraccimm		 endp
2  8682
2  8683					 ;-----------------------------------------------------------------------------------------[+
   8684					 or acc, dat
2  8685	000014A8			 vm_oraccdat		 proc	 STDCALL, ptrMachine:DWORD
3  8686	000014A8  C8 0000 00			 ENTERD	 00000h,0
3  8687	000014AC  8B 75	08			 mov	 esi, ptrMachine
2  8688
2  8689	000014AF  8B 46	0C			 mov	 eax, [esi].reg_dat
2  8690	000014B2  09 46	04			 or	 [esi].reg_acc,	eax
2  8691
2  8692	000014B5  FF 76	04			 push	 [esi].reg_acc
2  8693	000014B8  E8 FFFFEFA1			 call	 internals_SetFlags
2  8694
2  8695	000014BD  FF 46	1C			 inc	 [esi].reg_ip
3  8696	000014C0  C9				 LEAVED
3  8697	000014C1  C2 0004			 RET	 00004h
2  8698	000014C4			 vm_oraccdat		 endp
2  8699
2  8700					 ;-----------------------------------------------------------------------------------------[+
   8701					 or acc, variable
2  8702	000014C4			 vm_oraccvar		 proc	 STDCALL, ptrMachine:DWORD
3  8703	000014C4  C8 0000 00			 ENTERD	 00000h,0
3  8704	000014C8  8B 75	08			 mov	 esi, ptrMachine
2  8705	000014CB  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8706	000014CE  47				 inc	 edi
2  8707
2  8708	000014CF  57				 push	 edi
2  8709	000014D0  56				 push	 esi
2  8710	000014D1  E8 FFFFEE2C			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8711	000014D6  50				 push	 eax
2  8712	000014D7  56				 push	 esi
2  8713	000014D8  E8 FFFFEE25			 call	 internals_ReadValue			 ; Gets	variable
2  8714
2  8715	000014DD  09 46	04			 or	 [esi].reg_acc,	eax
2  8716
2  8717	000014E0  FF 76	04			 push	 [esi].reg_acc
2  8718	000014E3  E8 FFFFEF76			 call	 internals_SetFlags
2  8719
2  8720	000014E8  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8721	000014EC  C9				 LEAVED
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 154
pmScript.ASM



3  8722	000014ED  C2 0004			 RET	 00004h
2  8723	000014F0			 vm_oraccvar		 endp
2  8724
2  8725					 ;-----------------------------------------------------------------------------------------[+
   8726					 or dat, immediate
2  8727	000014F0			 vm_ordatimm		 proc	 STDCALL, ptrMachine:DWORD
3  8728	000014F0  C8 0000 00			 ENTERD	 00000h,0
3  8729	000014F4  8B 75	08			 mov	 esi, ptrMachine
2  8730	000014F7  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8731	000014FA  47				 inc	 edi
2  8732
2  8733	000014FB  57				 push	 edi
2  8734	000014FC  56				 push	 esi
2  8735	000014FD  E8 FFFFEE00			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8736
2  8737	00001502  09 46	0C			 or	 [esi].reg_dat,	eax
2  8738
2  8739	00001505  FF 76	0C			 push	 [esi].reg_dat
2  8740	00001508  E8 FFFFEF51			 call	 internals_SetFlags
2  8741
2  8742	0000150D  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8743	00001511  C9				 LEAVED
3  8744	00001512  C2 0004			 RET	 00004h
2  8745	00001515			 vm_ordatimm		 endp
2  8746
2  8747					 ;-----------------------------------------------------------------------------------------[+
   8748					 or dat, acc
2  8749	00001515			 vm_ordatacc		 proc	 STDCALL, ptrMachine:DWORD
3  8750	00001515  C8 0000 00			 ENTERD	 00000h,0
3  8751	00001519  8B 75	08			 mov	 esi, ptrMachine
2  8752
2  8753	0000151C  8B 46	04			 mov	 eax, [esi].reg_acc
2  8754	0000151F  09 46	0C			 or	 [esi].reg_dat,	eax
2  8755
2  8756	00001522  FF 76	0C			 push	 [esi].reg_dat
2  8757	00001525  E8 FFFFEF34			 call	 internals_SetFlags
2  8758
2  8759	0000152A  FF 46	1C			 inc	 [esi].reg_ip
3  8760	0000152D  C9				 LEAVED
3  8761	0000152E  C2 0004			 RET	 00004h
2  8762	00001531			 vm_ordatacc		 endp
2  8763
2  8764					 ;-----------------------------------------------------------------------------------------[+
   8765					 or dat, variable
2  8766	00001531			 vm_ordatvar		 proc	 STDCALL, ptrMachine:DWORD
3  8767	00001531  C8 0000 00			 ENTERD	 00000h,0
3  8768	00001535  8B 75	08			 mov	 esi, ptrMachine
2  8769	00001538  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8770	0000153B  47				 inc	 edi
2  8771
2  8772	0000153C  57				 push	 edi
2  8773	0000153D  56				 push	 esi
2  8774	0000153E  E8 FFFFEDBF			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8775	00001543  50				 push	 eax
2  8776	00001544  56				 push	 esi
2  8777	00001545  E8 FFFFEDB8			 call	 internals_ReadValue			 ; Gets	variable
2  8778
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 155
pmScript.ASM



2  8779	0000154A  09 46	0C			 or	 [esi].reg_dat,	eax
2  8780
2  8781	0000154D  FF 76	0C			 push	 [esi].reg_dat
2  8782	00001550  E8 FFFFEF09			 call	 internals_SetFlags
2  8783
2  8784	00001555  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8785	00001559  C9				 LEAVED
3  8786	0000155A  C2 0004			 RET	 00004h
2  8787	0000155D			 vm_ordatvar		 endp
2  8788
2  8789
2  8790					 ;-----------------------------------------------------------------------------------------[+
   8791					 xor acc, immediate
2  8792	0000155D			 vm_xoraccimm		 proc	 STDCALL, ptrMachine:DWORD
3  8793	0000155D  C8 0000 00			 ENTERD	 00000h,0
3  8794	00001561  8B 75	08			 mov	 esi, ptrMachine
2  8795	00001564  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8796	00001567  47				 inc	 edi
2  8797
2  8798	00001568  57				 push	 edi
2  8799	00001569  56				 push	 esi
2  8800	0000156A  E8 FFFFED93			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8801
2  8802	0000156F  31 46	04			 xor	 [esi].reg_acc,	eax
2  8803
2  8804	00001572  FF 76	04			 push	 [esi].reg_acc
2  8805	00001575  E8 FFFFEEE4			 call	 internals_SetFlags
2  8806
2  8807	0000157A  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8808	0000157E  C9				 LEAVED
3  8809	0000157F  C2 0004			 RET	 00004h
2  8810	00001582			 vm_xoraccimm		 endp
2  8811
2  8812					 ;-----------------------------------------------------------------------------------------[+
   8813					 xor acc, dat
2  8814	00001582			 vm_xoraccdat		 proc	 STDCALL, ptrMachine:DWORD
3  8815	00001582  C8 0000 00			 ENTERD	 00000h,0
3  8816	00001586  8B 75	08			 mov	 esi, ptrMachine
2  8817
2  8818	00001589  8B 46	0C			 mov	 eax, [esi].reg_dat
2  8819	0000158C  31 46	04			 xor	 [esi].reg_acc,	eax
2  8820
2  8821	0000158F  FF 76	04			 push	 [esi].reg_acc
2  8822	00001592  E8 FFFFEEC7			 call	 internals_SetFlags
2  8823
2  8824	00001597  FF 46	1C			 inc	 [esi].reg_ip
3  8825	0000159A  C9				 LEAVED
3  8826	0000159B  C2 0004			 RET	 00004h
2  8827	0000159E			 vm_xoraccdat		 endp
2  8828
2  8829					 ;-----------------------------------------------------------------------------------------[+
   8830					 xor acc, variable
2  8831	0000159E			 vm_xoraccvar		 proc	 STDCALL, ptrMachine:DWORD
3  8832	0000159E  C8 0000 00			 ENTERD	 00000h,0
3  8833	000015A2  8B 75	08			 mov	 esi, ptrMachine
2  8834	000015A5  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8835	000015A8  47				 inc	 edi
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 156
pmScript.ASM



2  8836
2  8837	000015A9  57				 push	 edi
2  8838	000015AA  56				 push	 esi
2  8839	000015AB  E8 FFFFED52			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8840	000015B0  50				 push	 eax
2  8841	000015B1  56				 push	 esi
2  8842	000015B2  E8 FFFFED4B			 call	 internals_ReadValue			 ; Gets	variable
2  8843
2  8844	000015B7  31 46	04			 xor	 [esi].reg_acc,	eax
2  8845
2  8846	000015BA  FF 76	04			 push	 [esi].reg_acc
2  8847	000015BD  E8 FFFFEE9C			 call	 internals_SetFlags
2  8848
2  8849	000015C2  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8850	000015C6  C9				 LEAVED
3  8851	000015C7  C2 0004			 RET	 00004h
2  8852	000015CA			 vm_xoraccvar		 endp
2  8853
2  8854					 ;-----------------------------------------------------------------------------------------[+
   8855					 xor dat, immediate
2  8856	000015CA			 vm_xordatimm		 proc	 STDCALL, ptrMachine:DWORD
3  8857	000015CA  C8 0000 00			 ENTERD	 00000h,0
3  8858	000015CE  8B 75	08			 mov	 esi, ptrMachine
2  8859	000015D1  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8860	000015D4  47				 inc	 edi
2  8861
2  8862	000015D5  57				 push	 edi
2  8863	000015D6  56				 push	 esi
2  8864	000015D7  E8 FFFFED26			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8865
2  8866	000015DC  31 46	0C			 xor	 [esi].reg_dat,	eax
2  8867
2  8868	000015DF  FF 76	0C			 push	 [esi].reg_dat
2  8869	000015E2  E8 FFFFEE77			 call	 internals_SetFlags
2  8870
2  8871	000015E7  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8872	000015EB  C9				 LEAVED
3  8873	000015EC  C2 0004			 RET	 00004h
2  8874	000015EF			 vm_xordatimm		 endp
2  8875
2  8876					 ;-----------------------------------------------------------------------------------------[+
   8877					 xor dat, acc
2  8878	000015EF			 vm_xordatacc		 proc	 STDCALL, ptrMachine:DWORD
3  8879	000015EF  C8 0000 00			 ENTERD	 00000h,0
3  8880	000015F3  8B 75	08			 mov	 esi, ptrMachine
2  8881
2  8882	000015F6  8B 46	04			 mov	 eax, [esi].reg_acc
2  8883	000015F9  31 46	0C			 xor	 [esi].reg_dat,	eax
2  8884
2  8885	000015FC  FF 76	0C			 push	 [esi].reg_dat
2  8886	000015FF  E8 FFFFEE5A			 call	 internals_SetFlags
2  8887
2  8888	00001604  FF 46	1C			 inc	 [esi].reg_ip
3  8889	00001607  C9				 LEAVED
3  8890	00001608  C2 0004			 RET	 00004h
2  8891	0000160B			 vm_xordatacc		 endp
2  8892
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 157
pmScript.ASM



2  8893					 ;-----------------------------------------------------------------------------------------[+
   8894					 xor dat, variable
2  8895	0000160B			 vm_xordatvar		 proc	 STDCALL, ptrMachine:DWORD
3  8896	0000160B  C8 0000 00			 ENTERD	 00000h,0
3  8897	0000160F  8B 75	08			 mov	 esi, ptrMachine
2  8898	00001612  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8899	00001615  47				 inc	 edi
2  8900
2  8901	00001616  57				 push	 edi
2  8902	00001617  56				 push	 esi
2  8903	00001618  E8 FFFFECE5			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8904	0000161D  50				 push	 eax
2  8905	0000161E  56				 push	 esi
2  8906	0000161F  E8 FFFFECDE			 call	 internals_ReadValue			 ; Gets	variable
2  8907
2  8908	00001624  31 46	0C			 xor	 [esi].reg_dat,	eax
2  8909
2  8910	00001627  FF 76	0C			 push	 [esi].reg_dat
2  8911	0000162A  E8 FFFFEE2F			 call	 internals_SetFlags
2  8912
2  8913	0000162F  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8914	00001633  C9				 LEAVED
3  8915	00001634  C2 0004			 RET	 00004h
2  8916	00001637			 vm_xordatvar		 endp
2  8917
2  8918					 ;-----------------------------------------------------------------------------------------[+
   8919					 not acc
2  8920	00001637			 vm_notacc		 proc	 STDCALL, ptrMachine:DWORD
3  8921	00001637  C8 0000 00			 ENTERD	 00000h,0
3  8922	0000163B  8B 75	08			 mov	 esi, ptrMachine
2  8923
2  8924	0000163E  F7 56	04			 not	 [esi].reg_acc
2  8925
2  8926	00001641  FF 76	04			 push	 [esi].reg_acc
2  8927	00001644  E8 FFFFEE15			 call	 internals_SetFlags
2  8928
2  8929	00001649  FF 46	1C			 inc	 [esi].reg_ip
3  8930	0000164C  C9				 LEAVED
3  8931	0000164D  C2 0004			 RET	 00004h
2  8932	00001650			 vm_notacc		 endp
2  8933
2  8934					 ;-----------------------------------------------------------------------------------------[+
   8935					 not dat
2  8936	00001650			 vm_notdat		 proc	 STDCALL, ptrMachine:DWORD
3  8937	00001650  C8 0000 00			 ENTERD	 00000h,0
3  8938	00001654  8B 75	08			 mov	 esi, ptrMachine
2  8939
2  8940	00001657  F7 56	0C			 not	 [esi].reg_dat
2  8941
2  8942	0000165A  FF 76	0C			 push	 [esi].reg_dat
2  8943	0000165D  E8 FFFFEDFC			 call	 internals_SetFlags
2  8944
2  8945	00001662  FF 46	1C			 inc	 [esi].reg_ip
3  8946	00001665  C9				 LEAVED
3  8947	00001666  C2 0004			 RET	 00004h
2  8948	00001669			 vm_notdat		 endp
2  8949
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 158
pmScript.ASM



2  8950					 ;-----------------------------------------------------------------------------------------[+
   8951					 neg acc
2  8952	00001669			 vm_negacc		 proc	 STDCALL, ptrMachine:DWORD
3  8953	00001669  C8 0000 00			 ENTERD	 00000h,0
3  8954	0000166D  8B 75	08			 mov	 esi, ptrMachine
2  8955
2  8956	00001670  F7 5E	04			 neg	 [esi].reg_acc
2  8957
2  8958	00001673  FF 76	04			 push	 [esi].reg_acc
2  8959	00001676  E8 FFFFEDE3			 call	 internals_SetFlags
2  8960
2  8961	0000167B  FF 46	1C			 inc	 [esi].reg_ip
3  8962	0000167E  C9				 LEAVED
3  8963	0000167F  C2 0004			 RET	 00004h
2  8964	00001682			 vm_negacc		 endp
2  8965
2  8966					 ;-----------------------------------------------------------------------------------------[+
   8967					 neg dat
2  8968	00001682			 vm_negdat		 proc	 STDCALL, ptrMachine:DWORD
3  8969	00001682  C8 0000 00			 ENTERD	 00000h,0
3  8970	00001686  8B 75	08			 mov	 esi, ptrMachine
2  8971
2  8972	00001689  F7 5E	0C			 neg	 [esi].reg_dat
2  8973
2  8974	0000168C  FF 76	0C			 push	 [esi].reg_dat
2  8975	0000168F  E8 FFFFEDCA			 call	 internals_SetFlags
2  8976
2  8977	00001694  FF 46	1C			 inc	 [esi].reg_ip
3  8978	00001697  C9				 LEAVED
3  8979	00001698  C2 0004			 RET	 00004h
2  8980	0000169B			 vm_negdat		 endp
2  8981
2  8982					 ;-----------------------------------------------------------------------------------------[+
   8983					 and cnt, immediate
2  8984	0000169B			 vm_andcntimm		 proc	 STDCALL, ptrMachine:DWORD
3  8985	0000169B  C8 0000 00			 ENTERD	 00000h,0
3  8986	0000169F  8B 75	08			 mov	 esi, ptrMachine
2  8987	000016A2  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8988	000016A5  47				 inc	 edi
2  8989
2  8990	000016A6  57				 push	 edi
2  8991	000016A7  56				 push	 esi
2  8992	000016A8  E8 FFFFEC55			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8993
2  8994	000016AD  21 46	08			 and	 [esi].reg_cnt,	eax
2  8995
2  8996	000016B0  FF 76	08			 push	 [esi].reg_cnt
2  8997	000016B3  E8 FFFFEDA6			 call	 internals_SetFlags
2  8998
2  8999	000016B8  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9000	000016BC  C9				 LEAVED
3  9001	000016BD  C2 0004			 RET	 00004h
2  9002	000016C0			 vm_andcntimm		 endp
2  9003
2  9004					 ;-----------------------------------------------------------------------------------------[+
   9005					 and cnt, acc
2  9006	000016C0			 vm_andcntacc		 proc	 STDCALL, ptrMachine:DWORD
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 159
pmScript.ASM



3  9007	000016C0  C8 0000 00			 ENTERD	 00000h,0
3  9008	000016C4  8B 75	08			 mov	 esi, ptrMachine
2  9009
2  9010	000016C7  8B 46	04			 mov	 eax, [esi].reg_acc
2  9011	000016CA  21 46	08			 and	 [esi].reg_cnt,	eax
2  9012
2  9013	000016CD  FF 76	08			 push	 [esi].reg_cnt
2  9014	000016D0  E8 FFFFED89			 call	 internals_SetFlags
2  9015
2  9016	000016D5  FF 46	1C			 inc	 [esi].reg_ip
3  9017	000016D8  C9				 LEAVED
3  9018	000016D9  C2 0004			 RET	 00004h
2  9019	000016DC			 vm_andcntacc		 endp
2  9020
2  9021					 ;-----------------------------------------------------------------------------------------[+
   9022					 and cnt, variable
2  9023	000016DC			 vm_andcntvar		 proc	 STDCALL, ptrMachine:DWORD
3  9024	000016DC  C8 0000 00			 ENTERD	 00000h,0
3  9025	000016E0  8B 75	08			 mov	 esi, ptrMachine
2  9026	000016E3  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9027	000016E6  47				 inc	 edi
2  9028
2  9029	000016E7  57				 push	 edi
2  9030	000016E8  56				 push	 esi
2  9031	000016E9  E8 FFFFEC14			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9032	000016EE  50				 push	 eax
2  9033	000016EF  56				 push	 esi
2  9034	000016F0  E8 FFFFEC0D			 call	 internals_ReadValue			 ; Gets	variable
2  9035
2  9036	000016F5  21 46	08			 and	 [esi].reg_cnt,	eax
2  9037
2  9038	000016F8  FF 76	08			 push	 [esi].reg_cnt
2  9039	000016FB  E8 FFFFED5E			 call	 internals_SetFlags
2  9040
2  9041	00001700  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9042	00001704  C9				 LEAVED
3  9043	00001705  C2 0004			 RET	 00004h
2  9044	00001708			 vm_andcntvar		 endp
2  9045
2  9046					 ;-----------------------------------------------------------------------------------------[+
   9047					 or cnt, immediate
2  9048	00001708			 vm_orcntimm		 proc	 STDCALL, ptrMachine:DWORD
3  9049	00001708  C8 0000 00			 ENTERD	 00000h,0
3  9050	0000170C  8B 75	08			 mov	 esi, ptrMachine
2  9051	0000170F  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9052	00001712  47				 inc	 edi
2  9053
2  9054	00001713  57				 push	 edi
2  9055	00001714  56				 push	 esi
2  9056	00001715  E8 FFFFEBE8			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9057
2  9058	0000171A  09 46	08			 or	 [esi].reg_cnt,	eax
2  9059
2  9060	0000171D  FF 76	08			 push	 [esi].reg_cnt
2  9061	00001720  E8 FFFFED39			 call	 internals_SetFlags
2  9062
2  9063	00001725  83 46	1C 05			 add	 [esi].reg_ip, 5
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 160
pmScript.ASM



3  9064	00001729  C9				 LEAVED
3  9065	0000172A  C2 0004			 RET	 00004h
2  9066	0000172D			 vm_orcntimm		 endp
2  9067
2  9068					 ;-----------------------------------------------------------------------------------------[+
   9069					 or cnt, acc
2  9070	0000172D			 vm_orcntacc		 proc	 STDCALL, ptrMachine:DWORD
3  9071	0000172D  C8 0000 00			 ENTERD	 00000h,0
3  9072	00001731  8B 75	08			 mov	 esi, ptrMachine
2  9073
2  9074	00001734  8B 46	04			 mov	 eax, [esi].reg_acc
2  9075	00001737  09 46	08			 or	 [esi].reg_cnt,	eax
2  9076
2  9077	0000173A  FF 76	08			 push	 [esi].reg_cnt
2  9078	0000173D  E8 FFFFED1C			 call	 internals_SetFlags
2  9079
2  9080	00001742  FF 46	1C			 inc	 [esi].reg_ip
3  9081	00001745  C9				 LEAVED
3  9082	00001746  C2 0004			 RET	 00004h
2  9083	00001749			 vm_orcntacc		 endp
2  9084
2  9085					 ;-----------------------------------------------------------------------------------------[+
   9086					 or cnt, variable
2  9087	00001749			 vm_orcntvar		 proc	 STDCALL, ptrMachine:DWORD
3  9088	00001749  C8 0000 00			 ENTERD	 00000h,0
3  9089	0000174D  8B 75	08			 mov	 esi, ptrMachine
2  9090	00001750  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9091	00001753  47				 inc	 edi
2  9092
2  9093	00001754  57				 push	 edi
2  9094	00001755  56				 push	 esi
2  9095	00001756  E8 FFFFEBA7			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9096	0000175B  50				 push	 eax
2  9097	0000175C  56				 push	 esi
2  9098	0000175D  E8 FFFFEBA0			 call	 internals_ReadValue			 ; Gets	variable
2  9099
2  9100	00001762  09 46	08			 or	 [esi].reg_cnt,	eax
2  9101
2  9102	00001765  FF 76	08			 push	 [esi].reg_cnt
2  9103	00001768  E8 FFFFECF1			 call	 internals_SetFlags
2  9104
2  9105	0000176D  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9106	00001771  C9				 LEAVED
3  9107	00001772  C2 0004			 RET	 00004h
2  9108	00001775			 vm_orcntvar		 endp
2  9109
2  9110					 ;-----------------------------------------------------------------------------------------[+
   9111					 xor cnt, immediate
2  9112	00001775			 vm_xorcntimm		 proc	 STDCALL, ptrMachine:DWORD
3  9113	00001775  C8 0000 00			 ENTERD	 00000h,0
3  9114	00001779  8B 75	08			 mov	 esi, ptrMachine
2  9115	0000177C  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9116	0000177F  47				 inc	 edi
2  9117
2  9118	00001780  57				 push	 edi
2  9119	00001781  56				 push	 esi
2  9120	00001782  E8 FFFFEB7B			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 161
pmScript.ASM



2  9121
2  9122	00001787  31 46	08			 xor	 [esi].reg_cnt,	eax
2  9123
2  9124	0000178A  FF 76	08			 push	 [esi].reg_cnt
2  9125	0000178D  E8 FFFFECCC			 call	 internals_SetFlags
2  9126
2  9127	00001792  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9128	00001796  C9				 LEAVED
3  9129	00001797  C2 0004			 RET	 00004h
2  9130	0000179A			 vm_xorcntimm		 endp
2  9131
2  9132					 ;-----------------------------------------------------------------------------------------[+
   9133					 xor cnt, acc
2  9134	0000179A			 vm_xorcntacc		 proc	 STDCALL, ptrMachine:DWORD
3  9135	0000179A  C8 0000 00			 ENTERD	 00000h,0
3  9136	0000179E  8B 75	08			 mov	 esi, ptrMachine
2  9137
2  9138	000017A1  8B 46	04			 mov	 eax, [esi].reg_acc
2  9139	000017A4  31 46	08			 xor	 [esi].reg_cnt,	eax
2  9140
2  9141	000017A7  FF 76	08			 push	 [esi].reg_cnt
2  9142	000017AA  E8 FFFFECAF			 call	 internals_SetFlags
2  9143
2  9144	000017AF  FF 46	1C			 inc	 [esi].reg_ip
3  9145	000017B2  C9				 LEAVED
3  9146	000017B3  C2 0004			 RET	 00004h
2  9147	000017B6			 vm_xorcntacc		 endp
2  9148
2  9149					 ;-----------------------------------------------------------------------------------------[+
   9150					 xor cnt, variable
2  9151	000017B6			 vm_xorcntvar		 proc	 STDCALL, ptrMachine:DWORD
3  9152	000017B6  C8 0000 00			 ENTERD	 00000h,0
3  9153	000017BA  8B 75	08			 mov	 esi, ptrMachine
2  9154	000017BD  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9155	000017C0  47				 inc	 edi
2  9156
2  9157	000017C1  57				 push	 edi
2  9158	000017C2  56				 push	 esi
2  9159	000017C3  E8 FFFFEB3A			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9160	000017C8  50				 push	 eax
2  9161	000017C9  56				 push	 esi
2  9162	000017CA  E8 FFFFEB33			 call	 internals_ReadValue			 ; Gets	variable
2  9163
2  9164	000017CF  31 46	08			 xor	 [esi].reg_cnt,	eax
2  9165
2  9166	000017D2  FF 76	08			 push	 [esi].reg_cnt
2  9167	000017D5  E8 FFFFEC84			 call	 internals_SetFlags
2  9168
2  9169	000017DA  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9170	000017DE  C9				 LEAVED
3  9171	000017DF  C2 0004			 RET	 00004h
2  9172	000017E2			 vm_xorcntvar		 endp
2  9173
2  9174					 ;-----------------------------------------------------------------------------------------[+
   9175					 and acc, cnt
2  9176	000017E2			 vm_andacccnt		 proc	 STDCALL, ptrMachine:DWORD
3  9177	000017E2  C8 0000 00			 ENTERD	 00000h,0
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 162
pmScript.ASM



3  9178	000017E6  8B 75	08			 mov	 esi, ptrMachine
2  9179
2  9180	000017E9  8B 46	08			 mov	 eax, [esi].reg_cnt
2  9181	000017EC  21 46	04			 and	 [esi].reg_acc,	eax
2  9182
2  9183	000017EF  FF 76	04			 push	 [esi].reg_acc
2  9184	000017F2  E8 FFFFEC67			 call	 internals_SetFlags
2  9185
2  9186	000017F7  FF 46	1C			 inc	 [esi].reg_ip
3  9187	000017FA  C9				 LEAVED
3  9188	000017FB  C2 0004			 RET	 00004h
2  9189	000017FE			 vm_andacccnt		 endp
2  9190
2  9191					 ;-----------------------------------------------------------------------------------------[+
   9192					 or acc, cnt
2  9193	000017FE			 vm_oracccnt		 proc	 STDCALL, ptrMachine:DWORD
3  9194	000017FE  C8 0000 00			 ENTERD	 00000h,0
3  9195	00001802  8B 75	08			 mov	 esi, ptrMachine
2  9196
2  9197	00001805  8B 46	08			 mov	 eax, [esi].reg_cnt
2  9198	00001808  09 46	04			 or	 [esi].reg_acc,	eax
2  9199
2  9200	0000180B  FF 76	04			 push	 [esi].reg_acc
2  9201	0000180E  E8 FFFFEC4B			 call	 internals_SetFlags
2  9202
2  9203	00001813  FF 46	1C			 inc	 [esi].reg_ip
3  9204	00001816  C9				 LEAVED
3  9205	00001817  C2 0004			 RET	 00004h
2  9206	0000181A			 vm_oracccnt		 endp
2  9207
2  9208					 ;-----------------------------------------------------------------------------------------[+
   9209					 xor acc, cnt
2  9210	0000181A			 vm_xoracccnt		 proc	 STDCALL, ptrMachine:DWORD
3  9211	0000181A  C8 0000 00			 ENTERD	 00000h,0
3  9212	0000181E  8B 75	08			 mov	 esi, ptrMachine
2  9213
2  9214	00001821  8B 46	08			 mov	 eax, [esi].reg_cnt
2  9215	00001824  31 46	04			 xor	 [esi].reg_acc,	eax
2  9216
2  9217	00001827  FF 76	04			 push	 [esi].reg_acc
2  9218	0000182A  E8 FFFFEC2F			 call	 internals_SetFlags
2  9219
2  9220	0000182F  FF 46	1C			 inc	 [esi].reg_ip
3  9221	00001832  C9				 LEAVED
3  9222	00001833  C2 0004			 RET	 00004h
2  9223	00001836			 vm_xoracccnt		 endp
2  9224
2  9225
1  9226					 INCLUDE ops_trig.inc
2  9227
2  9228	00001836				 .data
2  9229
2  9230					 ; Figures multiplied by 32767
2  9231
2  9232	00000309			 trig_SineTable:
2  9233	00000309  0000 023B 0477 06B2 +		 dw	 0, 571, 1143, 1714, 2285, 2855, 3425, 3993, 4560, 5125, 5689, 6252, 6812,  +
   9234		  08ED 0B27 0D61 0F99 +	 7370, 7927, 8480, 9031, 9580, 10125, 10667, 11206, 11742, 12274, 12803, 13327,	13847,	    +
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 163
pmScript.ASM



   9235		  11D0 1405 1639 186C +	 14364,	14875, 15383, 15885, 16383, 16876, 17363, 17846, 18323,	18794
   9236		  1A9C 1CCA 1EF7 2120 +
   9237		  2347 256C 278D 29AB +
   9238		  2BC6 2DDE 2FF2 3203 +
   9239		  340F 3617 381C 3A1B +
   9240		  3C17 3E0D 3FFF 41EC +
   9241		  43D3 45B6 4793 496A
2  9242	00000351  4B3B 4D07 4ECD 508C +		 dw	 19259,	19719, 20173, 20620, 21062, 21497, 21925, 22347, 22761,	23169,	    +
   9243		  5246 53F9 55A5 574B +	 23570,	23964, 24350, 24729, 25100, 25464, 25820, 26168, 26509,	26841, 27165, 27480, 27787, +
   9244		  58E9 5A81 5C12 5D9C +	 28086,	28377, 28658, 28931, 29195, 29450, 29696, 29934, 30162,	30381, 30590, 30790, 30981
   9245		  5F1E 6099 620C 6378 +
   9246		  64DC 6638 678D 68D9 +
   9247		  6A1D 6B58 6C8B 6DB6 +
   9248		  6ED9 6FF2 7103 720B +
   9249		  730A 7400 74EE 75D2 +
   9250		  76AD 777E 7846 7905
2  9251	00000399  79BB 7A67 7B09 7BA2 +		 dw	 31163,	31335, 31497, 31650, 31793, 31927, 32050, 32164, 32269,	32363,	    +
   9252		  7C31 7CB7 7D32 7DA4 +	 32448,	32522, 32587, 32642, 32687, 32722, 32747, 32762, 32767,	32762, 32747, 32722, 32687, +
   9253		  7E0D 7E6B 7EC0 7F0A +	 32642,	32587, 32522, 32448, 32363, 32269, 32164, 32050, 31927,	31793, 31650, 31497, 31335
   9254		  7F4B 7F82 7FAF 7FD2 +
   9255		  7FEB 7FFA 7FFF 7FFA +
   9256		  7FEB 7FD2 7FAF 7F82 +
   9257		  7F4B 7F0A 7EC0 7E6B +
   9258		  7E0D 7DA4 7D32 7CB7 +
   9259		  7C31 7BA2 7B09 7A67
2  9260	000003E1  79BB 7905 7846 777E +		 dw	 31163,	30981, 30790, 30590, 30381, 30162, 29934, 29696, 29450,	29195,	    +
   9261		  76AD 75D2 74EE 7400 +	 28931,	28658, 28377, 28086, 27787, 27480, 27165, 26841, 26509,	26168, 25820, 25464, 25100, +
   9262		  730A 720B 7103 6FF2 +	 24729,	24350, 23964, 23570, 23169, 22761, 22347, 21925, 21497,	21062, 20620, 20173, 19719
   9263		  6ED9 6DB6 6C8B 6B58 +
   9264		  6A1D 68D9 678D 6638 +
   9265		  64DC 6378 620C 6099 +
   9266		  5F1E 5D9C 5C12 5A81 +
   9267		  58E9 574B 55A5 53F9 +
   9268		  5246 508C 4ECD 4D07
2  9269	00000429  4B3B 496A 4793 45B6 +		 dw	 19259,	18794, 18323, 17846, 17363, 16876, 16383, 15885, 15383,	14875,	    +
   9270		  43D3 41EC 3FFF 3E0D +	 14364,	13847, 13327, 12803, 12274, 11742, 11206, 10667, 10125,	9580, 9031, 8480, 7927,	    +
   9271		  3C17 3A1B 381C 3617 +	 7370, 6812, 6252, 5689, 5125, 4560, 3993, 3425, 2855, 2285, 1714, 1143, 571
   9272		  340F 3203 2FF2 2DDE +
   9273		  2BC6 29AB 278D 256C +
   9274		  2347 2120 1EF7 1CCA +
   9275		  1A9C 186C 1639 1405 +
   9276		  11D0 0F99 0D61 0B27 +
   9277		  08ED 06B2 0477 023B
2  9278	00000471  0000 FDC4 FB88 F94D +		 dw	 0, -572, -1144, -1715,	-2286, -2856, -3426, -3994, -4561, -5126, -5690,    +
   9279		  F712 F4D8 F29E F066 +	 -6253,	-6813, -7371, -7928, -8481, -9032, -9581, -10126, -10668, -11207, -11743, -12275,   +
   9280		  EE2F EBFA E9C6 E793 +	 -12804, -13328, -13848, -14365, -14876, -15384, -15886, -16384, -16877, -17364, -17847,    +
   9281		  E563 E335 E108 DEDF +	 -18324, -18795
   9282		  DCB8 DA93 D872 D654 +
   9283		  D439 D221 D00D CDFC +
   9284		  CBF0 C9E8 C7E3 C5E4 +
   9285		  C3E8 C1F2 C000 BE13 +
   9286		  BC2C BA49 B86C B695
2  9287	000004B9  B4C4 B2F8 B132 AF73 +		 dw	 -19260, -19720, -20174, -20621, -21063, -21498, -21926, -22348, -22762,    +
   9288		  ADB9 AC06 AA5A A8B4 +	 -23170, -23571, -23965, -24351, -24730, -25101, -25465, -25821, -26169, -26510, -26842,    +
   9289		  A716 A57E A3ED A263 +	 -27166, -27481, -27788, -28087, -28378, -28659, -28932, -29196, -29451, -29697, -29935,    +
   9290		  A0E1 9F66 9DF3 9C87 +	 -30163, -30382, -30591, -30791, -30982
   9291		  9B23 99C7 9872 9726 +
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 164
pmScript.ASM



   9292		  95E2 94A7 9374 9249 +
   9293		  9126 900D 8EFC 8DF4 +
   9294		  8CF5 8BFF 8B11 8A2D +
   9295		  8952 8881 87B9 86FA
2  9296	00000501  8644 8598 84F6 845D +		 dw	 -31164, -31336, -31498, -31651, -31794, -31928, -32051, -32165, -32270,    +
   9297		  83CE 8348 82CD 825B +	 -32364, -32449, -32523, -32588, -32643, -32688, -32723, -32748, -32763, -32767, -32763,    +
   9298		  81F2 8194 813F 80F5 +	 -32748, -32723, -32688, -32643, -32588, -32523, -32449, -32364, -32270, -32165, -32051,    +
   9299		  80B4 807D 8050 802D +	 -31928, -31794, -31651, -31498, -31336
   9300		  8014 8005 8001 8005 +
   9301		  8014 802D 8050 807D +
   9302		  80B4 80F5 813F 8194 +
   9303		  81F2 825B 82CD 8348 +
   9304		  83CE 845D 84F6 8598
2  9305	00000549  8644 86FA 87B9 8881 +		 dw	 -31164, -30982, -30791, -30591, -30382, -30163, -29935, -29697, -29451,    +
   9306		  8952 8A2D 8B11 8BFF +	 -29196, -28932, -28659, -28378, -28087, -27788, -27481, -27166, -26842, -26510, -26169,    +
   9307		  8CF5 8DF4 8EFC 900D +	 -25821, -25465, -25101, -24730, -24351, -23965, -23571, -23170, -22762, -22348, -21926,    +
   9308		  9126 9249 9374 94A7 +	 -21498, -21063, -20621, -20174, -19720
   9309		  95E2 9726 9872 99C7 +
   9310		  9B23 9C87 9DF3 9F66 +
   9311		  A0E1 A263 A3ED A57E +
   9312		  A716 A8B4 AA5A AC06 +
   9313		  ADB9 AF73 B132 B2F8
2  9314	00000591  B4C4 B695 B86C BA49 +		 dw	 -19260, -18795, -18324, -17847, -17364, -16877, -16384, -15886, -15384,    +
   9315		  BC2C BE13 C000 C1F2 +	 -14876, -14365, -13848, -13328, -12804, -12275, -11743, -11207, -10668, -10126, -9581,	    +
   9316		  C3E8 C5E4 C7E3 C9E8 +	 -9032,	-8481, -7928, -7371, -6813, -6253, -5690, -5126, -4561,	-3994, -3426, -2856, -2286, +
   9317		  CBF0 CDFC D00D D221 +	 -1715,	-1144, -572
   9318		  D439 D654 D872 DA93 +
   9319		  DCB8 DEDF E108 E335 +
   9320		  E563 E793 E9C6 EBFA +
   9321		  EE2F F066 F29E F4D8 +
   9322		  F712 F94D FB88 FDC4
2  9323
2  9324	000005D9			 trig_CosineTable:
2  9325	000005D9  7FFF 7FFA 7FEB 7FD2 +		 dw	 32767,	32762, 32747, 32722, 32687, 32642, 32587, 32522, 32448,	32363,	    +
   9326		  7FAF 7F82 7F4B 7F0A +	 32269,	32164, 32050, 31927, 31793, 31650, 31497, 31335, 31163,	30981, 30790, 30590, 30381, +
   9327		  7EC0 7E6B 7E0D 7DA4 +	 30162,	29934, 29696, 29450, 29195, 28931, 28658, 28377, 28086,	27787, 27480, 27165, 26841
   9328		  7D32 7CB7 7C31 7BA2 +
   9329		  7B09 7A67 79BB 7905 +
   9330		  7846 777E 76AD 75D2 +
   9331		  74EE 7400 730A 720B +
   9332		  7103 6FF2 6ED9 6DB6 +
   9333		  6C8B 6B58 6A1D 68D9
2  9334	00000621  678D 6638 64DC 6378 +		 dw	 26509,	26168, 25820, 25464, 25100, 24729, 24350, 23964, 23570,	23169,	    +
   9335		  620C 6099 5F1E 5D9C +	 22761,	22347, 21925, 21497, 21062, 20620, 20173, 19719, 19259,	18794, 18323, 17846, 17363, +
   9336		  5C12 5A81 58E9 574B +	 16876,	16383, 15885, 15383, 14875, 14364, 13847, 13327, 12803,	12274, 11742, 11206, 10667
   9337		  55A5 53F9 5246 508C +
   9338		  4ECD 4D07 4B3B 496A +
   9339		  4793 45B6 43D3 41EC +
   9340		  3FFF 3E0D 3C17 3A1B +
   9341		  381C 3617 340F 3203 +
   9342		  2FF2 2DDE 2BC6 29AB
2  9343	00000669  278D 256C 2347 2120 +		 dw	 10125,	9580, 9031, 8480, 7927,	7370, 6812, 6252, 5689,	5125, 4560, 3993,   +
   9344		  1EF7 1CCA 1A9C 186C +	 3425, 2855, 2285, 1714, 1143, 571, 0, -572, -1144, -1715, -2286, -2856, -3426,	-3994,	    +
   9345		  1639 1405 11D0 0F99 +	 -4561,	-5126, -5690, -6253, -6813, -7371, -7928, -8481, -9032,	-9581
   9346		  0D61 0B27 08ED 06B2 +
   9347		  0477 023B 0000 FDC4 +
   9348		  FB88 F94D F712 F4D8 +
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 165
pmScript.ASM



   9349		  F29E F066 EE2F EBFA +
   9350		  E9C6 E793 E563 E335 +
   9351		  E108 DEDF DCB8 DA93
2  9352	000006B1  D872 D654 D439 D221 +		 dw	 -10126, -10668, -11207, -11743, -12275, -12804, -13328, -13848, -14365,    +
   9353		  D00D CDFC CBF0 C9E8 +	 -14876, -15384, -15886, -16384, -16877, -17364, -17847, -18324, -18795, -19260, -19720,    +
   9354		  C7E3 C5E4 C3E8 C1F2 +	 -20174, -20621, -21063, -21498, -21926, -22348, -22762, -23170, -23571, -23965, -24351,    +
   9355		  C000 BE13 BC2C BA49 +	 -24730, -25101, -25465, -25821, -26169
   9356		  B86C B695 B4C4 B2F8 +
   9357		  B132 AF73 ADB9 AC06 +
   9358		  AA5A A8B4 A716 A57E +
   9359		  A3ED A263 A0E1 9F66 +
   9360		  9DF3 9C87 9B23 99C7
2  9361	000006F9  9872 9726 95E2 94A7 +		 dw	 -26510, -26842, -27166, -27481, -27788, -28087, -28378, -28659, -28932,    +
   9362		  9374 9249 9126 900D +	 -29196, -29451, -29697, -29935, -30163, -30382, -30591, -30791, -30982, -31164, -31336,    +
   9363		  8EFC 8DF4 8CF5 8BFF +	 -31498, -31651, -31794, -31928, -32051, -32165, -32270, -32364, -32449, -32523, -32588,    +
   9364		  8B11 8A2D 8952 8881 +	 -32643, -32688, -32723, -32748, -32763
   9365		  87B9 86FA 8644 8598 +
   9366		  84F6 845D 83CE 8348 +
   9367		  82CD 825B 81F2 8194 +
   9368		  813F 80F5 80B4 807D +
   9369		  8050 802D 8014 8005
2  9370	00000741  8001 8005 8014 802D +		 dw	 -32767, -32763, -32748, -32723, -32688, -32643, -32588, -32523, -32449,    +
   9371		  8050 807D 80B4 80F5 +	 -32364, -32270, -32165, -32051, -31928, -31794, -31651, -31498, -31336, -31164, -30982,    +
   9372		  813F 8194 81F2 825B +	 -30791, -30591, -30382, -30163, -29935, -29697, -29451, -29196, -28932, -28659, -28378,    +
   9373		  82CD 8348 83CE 845D +	 -28087, -27788, -27481, -27166, -26842
   9374		  84F6 8598 8644 86FA +
   9375		  87B9 8881 8952 8A2D +
   9376		  8B11 8BFF 8CF5 8DF4 +
   9377		  8EFC 900D 9126 9249 +
   9378		  9374 94A7 95E2 9726
2  9379	00000789  9872 99C7 9B23 9C87 +		 dw	 -26510, -26169, -25821, -25465, -25101, -24730, -24351, -23965, -23571,    +
   9380		  9DF3 9F66 A0E1 A263 +	 -23170, -22762, -22348, -21926, -21498, -21063, -20621, -20174, -19720, -19260, -18795,    +
   9381		  A3ED A57E A716 A8B4 +	 -18324, -17847, -17364, -16877, -16384, -15886, -15384, -14876, -14365, -13848, -13328,    +
   9382		  AA5A AC06 ADB9 AF73 +	 -12804, -12275, -11743, -11207, -10668
   9383		  B132 B2F8 B4C4 B695 +
   9384		  B86C BA49 BC2C BE13 +
   9385		  C000 C1F2 C3E8 C5E4 +
   9386		  C7E3 C9E8 CBF0 CDFC +
   9387		  D00D D221 D439 D654
2  9388	000007D1  D872 DA93 DCB8 DEDF +		 dw	 -10126, -9581,	-9032, -8481, -7928, -7371, -6813, -6253, -5690, -5126,	    +
   9389		  E108 E335 E563 E793 +	 -4561,	-3994, -3426, -2856, -2286, -1715, -1144, -572,	-1, 571, 1143, 1714, 2285, 2855,    +
   9390		  E9C6 EBFA EE2F F066 +	 3425, 3993, 4560, 5125, 5689, 6252, 6812, 7370, 7927, 8480, 9031, 9580
   9391		  F29E F4D8 F712 F94D +
   9392		  FB88 FDC4 FFFF 023B +
   9393		  0477 06B2 08ED 0B27 +
   9394		  0D61 0F99 11D0 1405 +
   9395		  1639 186C 1A9C 1CCA +
   9396		  1EF7 2120 2347 256C
2  9397	00000819  278D 29AB 2BC6 2DDE +		 dw	 10125,	10667, 11206, 11742, 12274, 12803, 13327, 13847, 14364,	14875,	    +
   9398		  2FF2 3203 340F 3617 +	 15383,	15885, 16383, 16876, 17363, 17846, 18323, 18794, 19259,	19719, 20173, 20620, 21062, +
   9399		  381C 3A1B 3C17 3E0D +	 21497,	21925, 22347, 22761, 23169, 23570, 23964, 24350, 24729,	25100, 25464, 25820, 26168
   9400		  3FFF 41EC 43D3 45B6 +
   9401		  4793 496A 4B3B 4D07 +
   9402		  4ECD 508C 5246 53F9 +
   9403		  55A5 574B 58E9 5A81 +
   9404		  5C12 5D9C 5F1E 6099 +
   9405		  620C 6378 64DC 6638
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 166
pmScript.ASM



2  9406	00000861  678D 68D9 6A1D 6B58 +		 dw	 26509,	26841, 27165, 27480, 27787, 28086, 28377, 28658, 28931,	29195,	    +
   9407		  6C8B 6DB6 6ED9 6FF2 +	 29450,	29696, 29934, 30162, 30381, 30590, 30790, 30981, 31163,	31335, 31497, 31650, 31793, +
   9408		  7103 720B 730A 7400 +	 31927,	32050, 32164, 32269, 32363, 32448, 32522, 32587, 32642,	32687, 32722, 32747, 32762
   9409		  74EE 75D2 76AD 777E +
   9410		  7846 7905 79BB 7A67 +
   9411		  7B09 7BA2 7C31 7CB7 +
   9412		  7D32 7DA4 7E0D 7E6B +
   9413		  7EC0 7F0A 7F4B 7F82 +
   9414		  7FAF 7FD2 7FEB 7FFA
2  9415
2  9416	000008A9			 trig_TangentTable:		 ; Trig	* 512, and not 32767...	and maxed out
2  9417	000008A9  0000 0008 0011 001A +		 dw	 0, 8, 17, 26, 35, 44, 53, 62, 71, 81, 90, 99, 108, 118, 127, 137, 146,	156,+
   9418		  0023 002C 0035 003E +	 166, 176, 186,	196, 206, 217, 227, 238, 249, 260, 272,	283, 295, 307, 319, 332, 345, 358
   9419		  0047 0051 005A 0063 +
   9420		  006C 0076 007F 0089 +
   9421		  0092 009C 00A6 00B0 +
   9422		  00BA 00C4 00CE 00D9 +
   9423		  00E3 00EE 00F9 0104 +
   9424		  0110 011B 0127 0133 +
   9425		  013F 014C 0159 0166
2  9426	000008F1  0173 0181 0190 019E +		 dw	 371, 385, 400,	414, 429, 445, 461, 477, 494, 511, 530,	549, 568, 588, 610, +
   9427		  01AD 01BD 01CD 01DD +	 632, 655, 679,	704, 731, 759, 788, 819, 852, 886, 923,	962, 1004, 1049, 1097, 1149, 1206,  +
   9428		  01EE 01FF 0212 0225 +	 1267, 1333, 1406, 1486
   9429		  0238 024C 0262 0278 +
   9430		  028F 02A7 02C0 02DB +
   9431		  02F7 0314 0333 0354 +
   9432		  0376 039B 03C2 03EC +
   9433		  0419 0449 047D 04B6 +
   9434		  04F3 0535 057E 05CE
2  9435	00000939  0627 068A 06F9 0776 +		 dw	 1575, 1674, 1785, 1910, 2053, 2217, 2408, 2634, 2903, 3232, 3643, 4169,    +
   9436		  0805 08A9 0968 0A4A +	 4871, 5852, 7321, 9769, 14661,	29332, 32767, -29333, -14662, -9770, -7322, -5853, -4872,   +
   9437		  0B57 0CA0 0E3B 1049 +	 -4170,	-3644, -3233, -2904, -2635, -2409, -2218, -2054, -1911,	-1786, -1675
   9438		  1307 16DC 1C99 2629 +
   9439		  3945 7294 7FFF 8D6B +
   9440		  C6BA D9D6 E366 E923 +
   9441		  ECF8 EFB6 F1C4 F35F +
   9442		  F4A8 F5B5 F697 F756 +
   9443		  F7FA F889 F906 F975
2  9444	00000981  F9D8 FA31 FA81 FACA +		 dw	 -1576,	-1487, -1407, -1334, -1268, -1207, -1150, -1098, -1050,	-1005, -963,+
   9445		  FB0C FB49 FB82 FBB6 +	 -924, -887, -853, -820, -789, -760, -732, -705, -680, -656, -633, -611, -589, -569, -550,  +
   9446		  FBE6 FC13 FC3D FC64 +	 -531, -513, -495, -478, -462, -446, -430, -415, -401, -386
   9447		  FC89 FCAB FCCC FCEB +
   9448		  FD08 FD24 FD3F FD58 +
   9449		  FD70 FD87 FD9D FDB3 +
   9450		  FDC7 FDDA FDED FDFF +
   9451		  FE11 FE22 FE32 FE42 +
   9452		  FE52 FE61 FE6F FE7E
2  9453	000009C9  FE8C FE99 FEA6 FEB3 +		 dw	 -372, -359, -346, -333, -320, -308, -296, -284, -273, -261, -250, -239,    +
   9454		  FEC0 FECC FED8 FEE4 +	 -228, -218, -207, -197, -187, -177, -167, -157, -147, -138, -128, -119, -109, -100, -91,   +
   9455		  FEEF FEFB FF06 FF11 +	 -82, -72, -63,	-54, -45, -36, -27, -18, -9
   9456		  FF1C FF26 FF31 FF3B +
   9457		  FF45 FF4F FF59 FF63 +
   9458		  FF6D FF76 FF80 FF89 +
   9459		  FF93 FF9C FFA5 FFAE +
   9460		  FFB8 FFC1 FFCA FFD3 +
   9461		  FFDC FFE5 FFEE FFF7
2  9462	00000A11  FFFF 0008 0011 001A +		 dw	 -1, 8,	17, 26,	35, 44,	53, 62,	71, 81,	90, 99,	108, 118, 127, 137, 146,    +
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 167
pmScript.ASM



   9463		  0023 002C 0035 003E +	 156, 166, 176,	186, 196, 206, 217, 227, 238, 249, 260,	272, 283, 295, 307, 319, 332, 345,  +
   9464		  0047 0051 005A 0063 +	 358
   9465		  006C 0076 007F 0089 +
   9466		  0092 009C 00A6 00B0 +
   9467		  00BA 00C4 00CE 00D9 +
   9468		  00E3 00EE 00F9 0104 +
   9469		  0110 011B 0127 0133 +
   9470		  013F 014C 0159 0166
2  9471	00000A59  0173 0181 0190 019E +		 dw	 371, 385, 400,	414, 429, 445, 461, 477, 494, 511, 530,	549, 568, 588, 610, +
   9472		  01AD 01BD 01CD 01DD +	 632, 655, 679,	704, 731, 759, 788, 819, 852, 886, 923,	962, 1004, 1049, 1097, 1149, 1206,  +
   9473		  01EE 01FF 0212 0225 +	 1267, 1333, 1406, 1486
   9474		  0238 024C 0262 0278 +
   9475		  028F 02A7 02C0 02DB +
   9476		  02F7 0314 0333 0354 +
   9477		  0376 039B 03C2 03EC +
   9478		  0419 0449 047D 04B6 +
   9479		  04F3 0535 057E 05CE
2  9480	00000AA1  0627 068A 06F9 0776 +		 dw	 1575, 1674, 1785, 1910, 2053, 2217, 2408, 2634, 2903, 3232, 3643, 4169,    +
   9481		  0805 08A9 0968 0A4A +	 4871, 5852, 7321, 9769, 14661,	29332, 32767, -29333, -14662, -9770, -7322, -5853, -4872,   +
   9482		  0B57 0CA0 0E3B 1049 +	 -4170,	-3644, -3233, -2904, -2635, -2409, -2218, -2054, -1911,	-1786, -1675
   9483		  1307 16DC 1C99 2629 +
   9484		  3945 7294 7FFF 8D6B +
   9485		  C6BA D9D6 E366 E923 +
   9486		  ECF8 EFB6 F1C4 F35F +
   9487		  F4A8 F5B5 F697 F756 +
   9488		  F7FA F889 F906 F975
2  9489	00000AE9  F9D8 FA31 FA81 FACA +		 dw	 -1576,	-1487, -1407, -1334, -1268, -1207, -1150, -1098, -1050,	-1005, -963,+
   9490		  FB0C FB49 FB82 FBB6 +	 -924, -887, -853, -820, -789, -760, -732, -705, -680, -656, -633, -611, -589, -569, -550,  +
   9491		  FBE6 FC13 FC3D FC64 +	 -531, -513, -495, -478, -462, -446, -430, -415, -401, -386
   9492		  FC89 FCAB FCCC FCEB +
   9493		  FD08 FD24 FD3F FD58 +
   9494		  FD70 FD87 FD9D FDB3 +
   9495		  FDC7 FDDA FDED FDFF +
   9496		  FE11 FE22 FE32 FE42 +
   9497		  FE52 FE61 FE6F FE7E
2  9498	00000B31  FE8C FE99 FEA6 FEB3 +		 dw	 -372, -359, -346, -333, -320, -308, -296, -284, -273, -261, -250, -239,    +
   9499		  FEC0 FECC FED8 FEE4 +	 -228, -218, -207, -197, -187, -177, -167, -157, -147, -138, -128, -119, -109, -100, -91,   +
   9500		  FEEF FEFB FF06 FF11 +	 -82, -72, -63,	-54, -45, -36, -27, -18, -9
   9501		  FF1C FF26 FF31 FF3B +
   9502		  FF45 FF4F FF59 FF63 +
   9503		  FF6D FF76 FF80 FF89 +
   9504		  FF93 FF9C FFA5 FFAE +
   9505		  FFB8 FFC1 FFCA FFD3 +
   9506		  FFDC FFE5 FFEE FFF7
2  9507
2  9508
2  9509	00000B79				 .code
2  9510
2  9511					 ;-----------------------------------------------------------------------------------------[+
   9512					 sin imm
2  9513	00001836			 vm_sinimm		 proc	 STDCALL, ptrMachine:DWORD
3  9514	00001836  C8 0000 00			 ENTERD	 00000h,0
3  9515	0000183A  8B 75	08			 mov	 esi, ptrMachine
2  9516	0000183D  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9517	00001840  47				 inc	 edi
2  9518
2  9519	00001841  57				 push	 edi
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 168
pmScript.ASM



2  9520	00001842  56				 push	 esi
2  9521	00001843  E8 FFFFEABA			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9522
2  9523	00001848  33 D2				 xor	 edx, edx
2  9524	0000184A  B9 00000168			 mov	 ecx, 360
2  9525	0000184F  F7 F1				 div	 ecx
2  9526	00001851  D1 E2				 shl	 edx, 1					 ; EDX == Pointer in sine table
2  9527	00001853  81 C2	00000309r		 add	 edx, offset trig_SineTable
2  9528	00001859  0F B7	02			 movzx	 eax, word ptr [edx]
2  9529
2  9530	0000185C  89 46	04			 mov	 [esi].reg_acc,	eax
2  9531
2  9532	0000185F  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9533	00001863  C9				 LEAVED
3  9534	00001864  C2 0004			 RET	 00004h
2  9535	00001867			 vm_sinimm		 endp
2  9536
2  9537					 ;-----------------------------------------------------------------------------------------[+
   9538					 sin cnt
2  9539	00001867			 vm_sincnt		 proc	 STDCALL, ptrMachine:DWORD
3  9540	00001867  C8 0000 00			 ENTERD	 00000h,0
3  9541	0000186B  8B 75	08			 mov	 esi, ptrMachine
2  9542	0000186E  8B 46	08			 mov	 eax, [esi].reg_cnt
2  9543	00001871  33 D2				 xor	 edx, edx
2  9544	00001873  B9 00000168			 mov	 ecx, 360
2  9545	00001878  F7 F1				 div	 ecx
2  9546	0000187A  D1 E2				 shl	 edx, 1					 ; EDX == Pointer in sine table
2  9547	0000187C  81 C2	00000309r		 add	 edx, offset trig_SineTable
2  9548	00001882  0F B7	02			 movzx	 eax, word ptr [edx]
2  9549
2  9550	00001885  89 46	04			 mov	 [esi].reg_acc,	eax
2  9551
2  9552	00001888  FF 46	1C			 inc	 [esi].reg_ip
3  9553	0000188B  C9				 LEAVED
3  9554	0000188C  C2 0004			 RET	 00004h
2  9555	0000188F			 vm_sincnt		 endp
2  9556
2  9557					 ;-----------------------------------------------------------------------------------------[+
   9558					 sin var
2  9559	0000188F			 vm_sinvar		 proc	 STDCALL, ptrMachine:DWORD
3  9560	0000188F  C8 0000 00			 ENTERD	 00000h,0
3  9561	00001893  8B 75	08			 mov	 esi, ptrMachine
2  9562	00001896  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9563	00001899  47				 inc	 edi
2  9564
2  9565	0000189A  57				 push	 edi
2  9566	0000189B  56				 push	 esi
2  9567	0000189C  E8 FFFFEA61			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9568	000018A1  50				 push	 eax
2  9569	000018A2  56				 push	 esi
2  9570	000018A3  E8 FFFFEA5A			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9571
2  9572	000018A8  33 D2				 xor	 edx, edx
2  9573	000018AA  B9 00000168			 mov	 ecx, 360
2  9574	000018AF  F7 F1				 div	 ecx
2  9575	000018B1  D1 E2				 shl	 edx, 1					 ; EDX == Pointer in sine table
2  9576	000018B3  81 C2	00000309r		 add	 edx, offset trig_SineTable
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 169
pmScript.ASM



2  9577	000018B9  0F B7	02			 movzx	 eax, word ptr [edx]
2  9578
2  9579	000018BC  89 46	04			 mov	 [esi].reg_acc,	eax
2  9580
2  9581	000018BF  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9582	000018C3  C9				 LEAVED
3  9583	000018C4  C2 0004			 RET	 00004h
2  9584	000018C7			 vm_sinvar		 endp
2  9585
2  9586					 ;-----------------------------------------------------------------------------------------[+
   9587					 cos imm
2  9588	000018C7			 vm_cosimm		 proc	 STDCALL, ptrMachine:DWORD
3  9589	000018C7  C8 0000 00			 ENTERD	 00000h,0
3  9590	000018CB  8B 75	08			 mov	 esi, ptrMachine
2  9591	000018CE  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9592	000018D1  47				 inc	 edi
2  9593
2  9594	000018D2  57				 push	 edi
2  9595	000018D3  56				 push	 esi
2  9596	000018D4  E8 FFFFEA29			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9597
2  9598	000018D9  33 D2				 xor	 edx, edx
2  9599	000018DB  B9 00000168			 mov	 ecx, 360
2  9600	000018E0  F7 F1				 div	 ecx
2  9601	000018E2  D1 E2				 shl	 edx, 1					 ; EDX == Pointer in cose table
2  9602	000018E4  81 C2	000005D9r		 add	 edx, offset trig_CosineTable
2  9603	000018EA  0F B7	02			 movzx	 eax, word ptr [edx]
2  9604
2  9605	000018ED  89 46	04			 mov	 [esi].reg_acc,	eax
2  9606
2  9607	000018F0  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9608	000018F4  C9				 LEAVED
3  9609	000018F5  C2 0004			 RET	 00004h
2  9610	000018F8			 vm_cosimm		 endp
2  9611
2  9612					 ;-----------------------------------------------------------------------------------------[+
   9613					 cos cnt
2  9614	000018F8			 vm_coscnt		 proc	 STDCALL, ptrMachine:DWORD
3  9615	000018F8  C8 0000 00			 ENTERD	 00000h,0
3  9616	000018FC  8B 75	08			 mov	 esi, ptrMachine
2  9617	000018FF  8B 46	08			 mov	 eax, [esi].reg_cnt
2  9618	00001902  33 D2				 xor	 edx, edx
2  9619	00001904  B9 00000168			 mov	 ecx, 360
2  9620	00001909  F7 F1				 div	 ecx
2  9621	0000190B  D1 E2				 shl	 edx, 1					 ; EDX == Pointer in cose table
2  9622	0000190D  81 C2	000005D9r		 add	 edx, offset trig_CosineTable
2  9623	00001913  0F B7	02			 movzx	 eax, word ptr [edx]
2  9624
2  9625	00001916  89 46	04			 mov	 [esi].reg_acc,	eax
2  9626
2  9627	00001919  FF 46	1C			 inc	 [esi].reg_ip
3  9628	0000191C  C9				 LEAVED
3  9629	0000191D  C2 0004			 RET	 00004h
2  9630	00001920			 vm_coscnt		 endp
2  9631
2  9632					 ;-----------------------------------------------------------------------------------------[+
   9633					 cos var
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 170
pmScript.ASM



2  9634	00001920			 vm_cosvar		 proc	 STDCALL, ptrMachine:DWORD
3  9635	00001920  C8 0000 00			 ENTERD	 00000h,0
3  9636	00001924  8B 75	08			 mov	 esi, ptrMachine
2  9637	00001927  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9638	0000192A  47				 inc	 edi
2  9639
2  9640	0000192B  57				 push	 edi
2  9641	0000192C  56				 push	 esi
2  9642	0000192D  E8 FFFFE9D0			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9643	00001932  50				 push	 eax
2  9644	00001933  56				 push	 esi
2  9645	00001934  E8 FFFFE9C9			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9646
2  9647	00001939  33 D2				 xor	 edx, edx
2  9648	0000193B  B9 00000168			 mov	 ecx, 360
2  9649	00001940  F7 F1				 div	 ecx
2  9650	00001942  D1 E2				 shl	 edx, 1					 ; EDX == Pointer in cose table
2  9651	00001944  81 C2	000005D9r		 add	 edx, offset trig_CosineTable
2  9652	0000194A  0F B7	02			 movzx	 eax, word ptr [edx]
2  9653
2  9654	0000194D  89 46	04			 mov	 [esi].reg_acc,	eax
2  9655
2  9656	00001950  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9657	00001954  C9				 LEAVED
3  9658	00001955  C2 0004			 RET	 00004h
2  9659	00001958			 vm_cosvar		 endp
2  9660
2  9661					 ;-----------------------------------------------------------------------------------------[+
   9662					 tan imm
2  9663	00001958			 vm_tanimm		 proc	 STDCALL, ptrMachine:DWORD
3  9664	00001958  C8 0000 00			 ENTERD	 00000h,0
3  9665	0000195C  8B 75	08			 mov	 esi, ptrMachine
2  9666	0000195F  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9667	00001962  47				 inc	 edi
2  9668
2  9669	00001963  57				 push	 edi
2  9670	00001964  56				 push	 esi
2  9671	00001965  E8 FFFFE998			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9672
2  9673	0000196A  33 D2				 xor	 edx, edx
2  9674	0000196C  B9 00000168			 mov	 ecx, 360
2  9675	00001971  F7 F1				 div	 ecx
2  9676	00001973  D1 E2				 shl	 edx, 1					 ; EDX == Pointer in tane table
2  9677	00001975  81 C2	000008A9r		 add	 edx, offset trig_TangentTable
2  9678	0000197B  0F B7	02			 movzx	 eax, word ptr [edx]
2  9679
2  9680	0000197E  89 46	04			 mov	 [esi].reg_acc,	eax
2  9681
2  9682	00001981  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9683	00001985  C9				 LEAVED
3  9684	00001986  C2 0004			 RET	 00004h
2  9685	00001989			 vm_tanimm		 endp
2  9686
2  9687					 ;-----------------------------------------------------------------------------------------[+
   9688					 tan cnt
2  9689	00001989			 vm_tancnt		 proc	 STDCALL, ptrMachine:DWORD
3  9690	00001989  C8 0000 00			 ENTERD	 00000h,0
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 171
pmScript.ASM



3  9691	0000198D  8B 75	08			 mov	 esi, ptrMachine
2  9692	00001990  8B 46	08			 mov	 eax, [esi].reg_cnt
2  9693	00001993  33 D2				 xor	 edx, edx
2  9694	00001995  B9 00000168			 mov	 ecx, 360
2  9695	0000199A  F7 F1				 div	 ecx
2  9696	0000199C  D1 E2				 shl	 edx, 1					 ; EDX == Pointer in tane table
2  9697	0000199E  81 C2	000008A9r		 add	 edx, offset trig_TangentTable
2  9698	000019A4  0F B7	02			 movzx	 eax, word ptr [edx]
2  9699
2  9700	000019A7  89 46	04			 mov	 [esi].reg_acc,	eax
2  9701
2  9702	000019AA  FF 46	1C			 inc	 [esi].reg_ip
3  9703	000019AD  C9				 LEAVED
3  9704	000019AE  C2 0004			 RET	 00004h
2  9705	000019B1			 vm_tancnt		 endp
2  9706
2  9707					 ;-----------------------------------------------------------------------------------------[+
   9708					 tan var
2  9709	000019B1			 vm_tanvar		 proc	 STDCALL, ptrMachine:DWORD
3  9710	000019B1  C8 0000 00			 ENTERD	 00000h,0
3  9711	000019B5  8B 75	08			 mov	 esi, ptrMachine
2  9712	000019B8  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9713	000019BB  47				 inc	 edi
2  9714
2  9715	000019BC  57				 push	 edi
2  9716	000019BD  56				 push	 esi
2  9717	000019BE  E8 FFFFE93F			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9718	000019C3  50				 push	 eax
2  9719	000019C4  56				 push	 esi
2  9720	000019C5  E8 FFFFE938			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9721
2  9722	000019CA  33 D2				 xor	 edx, edx
2  9723	000019CC  B9 00000168			 mov	 ecx, 360
2  9724	000019D1  F7 F1				 div	 ecx
2  9725	000019D3  D1 E2				 shl	 edx, 1					 ; EDX == Pointer in tane table
2  9726	000019D5  81 C2	000008A9r		 add	 edx, offset trig_TangentTable
2  9727	000019DB  0F B7	02			 movzx	 eax, word ptr [edx]
2  9728
2  9729	000019DE  89 46	04			 mov	 [esi].reg_acc,	eax
2  9730
2  9731	000019E1  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9732	000019E5  C9				 LEAVED
3  9733	000019E6  C2 0004			 RET	 00004h
2  9734	000019E9			 vm_tanvar		 endp
2  9735
2  9736
2  9737
1  9738					 INCLUDE ops_rotate.inc
2  9739
2  9740
2  9741	000019E9				 .code
2  9742
2  9743					 ;-----------------------------------------------------------------------------------------[+
   9744					 rol immediate
2  9745	000019E9			 vm_rolimm		 proc	 STDCALL, ptrMachine:DWORD
3  9746	000019E9  C8 0000 00			 ENTERD	 00000h,0
3  9747	000019ED  8B 75	08			 mov	 esi, ptrMachine
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 172
pmScript.ASM



2  9748	000019F0  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9749	000019F3  47				 inc	 edi
2  9750
2  9751	000019F4  57				 push	 edi
2  9752	000019F5  56				 push	 esi
2  9753	000019F6  E8 FFFFE907			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9754	000019FB  8B C8				 mov	 ecx, eax
2  9755	000019FD  8B 46	04			 mov	 eax, [esi].reg_acc
2  9756	00001A00  D3 C0				 rol	 eax, cl
2  9757
2  9758	00001A02  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9759	00001A06  C9				 LEAVED
3  9760	00001A07  C2 0004			 RET	 00004h
2  9761	00001A0A			 vm_rolimm		 endp
2  9762
2  9763					 ;-----------------------------------------------------------------------------------------[+
   9764					 rol cnt
2  9765	00001A0A			 vm_rolcnt		 proc	 STDCALL, ptrMachine:DWORD
3  9766	00001A0A  C8 0000 00			 ENTERD	 00000h,0
3  9767	00001A0E  8B 75	08			 mov	 esi, ptrMachine
2  9768
2  9769	00001A11  8B 4E	08			 mov	 ecx, [esi].reg_cnt
2  9770	00001A14  8B 46	04			 mov	 eax, [esi].reg_acc
2  9771	00001A17  D3 C0				 rol	 eax, cl
2  9772
2  9773	00001A19  FF 46	1C			 inc	 [esi].reg_ip
3  9774	00001A1C  C9				 LEAVED
3  9775	00001A1D  C2 0004			 RET	 00004h
2  9776	00001A20			 vm_rolcnt		 endp
2  9777
2  9778					 ;-----------------------------------------------------------------------------------------[+
   9779					 ror immediate
2  9780	00001A20			 vm_rorimm		 proc	 STDCALL, ptrMachine:DWORD
3  9781	00001A20  C8 0000 00			 ENTERD	 00000h,0
3  9782	00001A24  8B 75	08			 mov	 esi, ptrMachine
2  9783	00001A27  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9784	00001A2A  47				 inc	 edi
2  9785
2  9786	00001A2B  57				 push	 edi
2  9787	00001A2C  56				 push	 esi
2  9788	00001A2D  E8 FFFFE8D0			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9789	00001A32  8B C8				 mov	 ecx, eax
2  9790	00001A34  8B 46	04			 mov	 eax, [esi].reg_acc
2  9791	00001A37  D3 C8				 ror	 eax, cl
2  9792
2  9793	00001A39  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9794	00001A3D  C9				 LEAVED
3  9795	00001A3E  C2 0004			 RET	 00004h
2  9796	00001A41			 vm_rorimm		 endp
2  9797
2  9798					 ;-----------------------------------------------------------------------------------------[+
   9799					 ror cnt
2  9800	00001A41			 vm_rorcnt		 proc	 STDCALL, ptrMachine:DWORD
3  9801	00001A41  C8 0000 00			 ENTERD	 00000h,0
3  9802	00001A45  8B 75	08			 mov	 esi, ptrMachine
2  9803
2  9804	00001A48  8B 4E	08			 mov	 ecx, [esi].reg_cnt
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 173
pmScript.ASM



2  9805	00001A4B  8B 46	04			 mov	 eax, [esi].reg_acc
2  9806	00001A4E  D3 C8				 ror	 eax, cl
2  9807
2  9808	00001A50  FF 46	1C			 inc	 [esi].reg_ip
3  9809	00001A53  C9				 LEAVED
3  9810	00001A54  C2 0004			 RET	 00004h
2  9811	00001A57			 vm_rorcnt		 endp
2  9812
2  9813					 ;-----------------------------------------------------------------------------------------[+
   9814					 shl immediate
2  9815	00001A57			 vm_shlimm		 proc	 STDCALL, ptrMachine:DWORD
3  9816	00001A57  C8 0000 00			 ENTERD	 00000h,0
3  9817	00001A5B  8B 75	08			 mov	 esi, ptrMachine
2  9818	00001A5E  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9819	00001A61  47				 inc	 edi
2  9820
2  9821	00001A62  57				 push	 edi
2  9822	00001A63  56				 push	 esi
2  9823	00001A64  E8 FFFFE899			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9824	00001A69  8B C8				 mov	 ecx, eax
2  9825	00001A6B  8B 46	04			 mov	 eax, [esi].reg_acc
2  9826	00001A6E  D3 E0				 shl	 eax, cl
2  9827
2  9828	00001A70  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9829	00001A74  C9				 LEAVED
3  9830	00001A75  C2 0004			 RET	 00004h
2  9831	00001A78			 vm_shlimm		 endp
2  9832
2  9833					 ;-----------------------------------------------------------------------------------------[+
   9834					 shl cnt
2  9835	00001A78			 vm_shlcnt		 proc	 STDCALL, ptrMachine:DWORD
3  9836	00001A78  C8 0000 00			 ENTERD	 00000h,0
3  9837	00001A7C  8B 75	08			 mov	 esi, ptrMachine
2  9838
2  9839	00001A7F  8B 4E	08			 mov	 ecx, [esi].reg_cnt
2  9840	00001A82  8B 46	04			 mov	 eax, [esi].reg_acc
2  9841	00001A85  D3 E0				 shl	 eax, cl
2  9842
2  9843	00001A87  FF 46	1C			 inc	 [esi].reg_ip
3  9844	00001A8A  C9				 LEAVED
3  9845	00001A8B  C2 0004			 RET	 00004h
2  9846	00001A8E			 vm_shlcnt		 endp
2  9847
2  9848					 ;-----------------------------------------------------------------------------------------[+
   9849					 shr immediate
2  9850	00001A8E			 vm_shrimm		 proc	 STDCALL, ptrMachine:DWORD
3  9851	00001A8E  C8 0000 00			 ENTERD	 00000h,0
3  9852	00001A92  8B 75	08			 mov	 esi, ptrMachine
2  9853	00001A95  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9854	00001A98  47				 inc	 edi
2  9855
2  9856	00001A99  57				 push	 edi
2  9857	00001A9A  56				 push	 esi
2  9858	00001A9B  E8 FFFFE862			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9859	00001AA0  8B C8				 mov	 ecx, eax
2  9860	00001AA2  8B 46	04			 mov	 eax, [esi].reg_acc
2  9861	00001AA5  D3 E8				 shr	 eax, cl
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 174
pmScript.ASM



2  9862
2  9863	00001AA7  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9864	00001AAB  C9				 LEAVED
3  9865	00001AAC  C2 0004			 RET	 00004h
2  9866	00001AAF			 vm_shrimm		 endp
2  9867
2  9868					 ;-----------------------------------------------------------------------------------------[+
   9869					 shr cnt
2  9870	00001AAF			 vm_shrcnt		 proc	 STDCALL, ptrMachine:DWORD
3  9871	00001AAF  C8 0000 00			 ENTERD	 00000h,0
3  9872	00001AB3  8B 75	08			 mov	 esi, ptrMachine
2  9873
2  9874	00001AB6  8B 4E	08			 mov	 ecx, [esi].reg_cnt
2  9875	00001AB9  8B 46	04			 mov	 eax, [esi].reg_acc
2  9876	00001ABC  D3 E8				 shr	 eax, cl
2  9877
2  9878	00001ABE  FF 46	1C			 inc	 [esi].reg_ip
3  9879	00001AC1  C9				 LEAVED
3  9880	00001AC2  C2 0004			 RET	 00004h
2  9881	00001AC5			 vm_shrcnt		 endp
2  9882
2  9883
1  9884					 INCLUDE ops_alloc.inc
2  9885
2  9886
2  9887	00001AC5				 .code
2  9888
2  9889					 ;-----------------------------------------------------------------------------------------[+
   9890					 alloc immediate
2  9891	00001AC5			 vm_allocimm		 proc	 STDCALL, ptrMachine:DWORD
3  9892	00001AC5  C8 0000 00			 ENTERD	 00000h,0
3  9893	00001AC9  8B 75	08			 mov	 esi, ptrMachine
2  9894	00001ACC  8B 5E	29			 mov	 ebx, [esi].code_len
2  9895
2  9896	00001ACF  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9897	00001AD2  47				 inc	 edi
2  9898
2  9899	00001AD3  57				 push	 edi
2  9900	00001AD4  56				 push	 esi
2  9901	00001AD5  E8 FFFFE828			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9902
2  9903	00001ADA  50				 push	 eax
2  9904	00001ADB  56				 push	 esi
2  9905	00001ADC  E8 FFFFE8FD			 call	 internals_Allocate			 ; Allocate the	extra memory
2  9906
2  9907	00001AE1  89 5E	04			 mov	 [esi].reg_acc,	ebx			 ; acc -> new area
2  9908	00001AE4  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9909	00001AE8  C9				 LEAVED
3  9910	00001AE9  C2 0004			 RET	 00004h
2  9911	00001AEC			 vm_allocimm		 endp
2  9912
2  9913					 ;-----------------------------------------------------------------------------------------[+
   9914					 alloc cnt
2  9915	00001AEC			 vm_alloccnt		 proc	 STDCALL, ptrMachine:DWORD
3  9916	00001AEC  C8 0000 00			 ENTERD	 00000h,0
3  9917	00001AF0  8B 75	08			 mov	 esi, ptrMachine
2  9918	00001AF3  8B 5E	29			 mov	 ebx, [esi].code_len
Turbo Assembler	 Version 5.0	    07-27-08 22:36:34	    Page 175
pmScript.ASM



2  9919
2  9920	00001AF6  FF 76	08			 push	 [esi].reg_cnt
2  9921	00001AF9  56				 push	 esi
2  9922	00001AFA  E8 FFFFE8DF			 call	 internals_Allocate			 ; Allocate the	extra memory
2  9923
2  9924	00001AFF  89 5E	04			 mov	 [esi].reg_acc,	ebx			 ; acc -> new area
2  9925	00001B02  FF 46	1C			 inc	 [esi].reg_ip
3  9926	00001B05  C9				 LEAVED
3  9927	00001B06  C2 0004			 RET	 00004h
2  9928	00001B09			 vm_alloccnt		 endp
2  9929
2  9930					 ;-----------------------------------------------------------------------------------------[+
   9931					 alloc acc
2  9932	00001B09			 vm_allocacc		 proc	 STDCALL, ptrMachine:DWORD
3  9933	00001B09  C8 0000 00			 ENTERD	 00000h,0
3  9934	00001B0D  8B 75	08			 mov	 esi, ptrMachine
2  9935	00001B10  8B 5E	29			 mov	 ebx, [esi].code_len
2  9936
2  9937	00001B13  FF 76	04			 push	 [esi].reg_acc
2  9938	00001B16  56				 push	 esi
2  9939	00001B17  E8 FFFFE8C2			 call	 internals_Allocate			 ; Allocate the	extra memory
2  9940
2  9941	00001B1C  89 5E	04			 mov	 [esi].reg_acc,	ebx			 ; acc -> new area
2  9942	00001B1F  FF 46	1C			 inc	 [esi].reg_ip
3  9943	00001B22  C9				 LEAVED
3  9944	00001B23  C2 0004			 RET	 00004h
2  9945	00001B26			 vm_allocacc		 endp
1  9946
1  9947
1  9948
   9949
   9950						 end	 DLLMain
