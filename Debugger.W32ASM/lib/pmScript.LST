Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 1
pmScript.ASM



      1						 .386
      2	00000000				 .model	flat, STDCALL
      3
      4		  =0000			 UNICODE equ	 0
      5					 INCLUDE ..\Win32.INC
1     6					 ;Commented out	because	of errors:
1     7					 ;PROCESS_ALL_ACCESS
1     8					 ;THREAD_ALL_ACCESS
1     9					 ;SECTION_ALL_ACCESS
1    10
1    11					 ;Changed because of errors:
1    12
1    13					 ;From:	PostQuitMessage	    PROCDESC	WINAPI	:SWORD
1    14					 ;To:	PostQuitMessage	    PROCDESC	WINAPI	:DWORD
1    15
1    16
1    17					 ;Main include file for	Win32 applications built with TASM5.
1    18					 ;Supplied on Companion	Disk for book
1    19					 ;"Windows Assembly Language and Systems Programming"
1    20					 ;by Barry Kauler, published by	R&D Books / Miller Freeman, USA, 1997.
1    21					 ;
1    22					 ;I have inserted some comments, marked	by "*bk*".
1    23					 ;some unicode support,	but a bit patchy.  What	is missing mainly is
1    24					 ;the prototypes and structures	for UNICODE characters.	 All API
1    25					 ;functions ending in "....A" are ANSI character, while	UNICODE
1    26					 ;functions end	in "....W".  Maybe someone will	be moved to fix	this?
1    27					 ;Also,	I have stuck stuff into	this file "here	and there" and it
1    28					 ;could	do with	a bit of organising.
1    29
1    30
1    31					 ;I would like to acknowledge Sven Schreiber:
1    32					 ;				   W32Main.inc
1    33					 ;			   Win32 Main Header File V1.00
1    34					 ;		 03-14-1996 Sven B. Schreiber sbs@psbs.franken.de
1    35					 ;			  This is Public Domain	Software
1    36					 ;His file W32MAIN.INC is part of his WALK32 Windows 95	assembly language
1    37					 ;development tools, all public	domain.	 I have	incorporated much of
1    38					 ;W32MAIN.INC into this	file.
1    39
1    40					 ;I would like to acknowledge Wayne Radburn.
1    41					 ;Wayne	has a public domain example assembly language program for Windows 95,
1    42					 ;included on the Companion Disk as SKELETON.ZIP.  It is for MASM 6.11.
1    43					 ;I have "borrowed" from his file WINDOWSA.INC,	which has the API
1    44					 ;prototypes. I	have modified the prototypes to	suit TASM 5.0.
1    45
1    46
1    47
1    48					 ;------------------------------------------------------------------------------
1    49					 ;
1    50		  = ACHAR		 CHAR				 textequ <ACHAR>	 ;ansi char type
1    51		  =0001			 CHAR_				 equ	 1		 ;ansi char size
1    52					 ;
1    53					 ;
1    54					 ;------------------------------------------------------------------------------
1    55
1    56
1    57					 ;
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 2
pmScript.ASM



1    58					 ;	 BASIC TYPES
1    59					 ;........................................................................
1    60					 ACHAR				 typedef BYTE		 ;ansi character
1    61					 ATOM				 typedef DWORD		 ;string atom
1    62					 BOOL				 typedef DWORD		 ;boolean variable
1    63					 COLORREF			 typedef DWORD		 ;rgb color
1    64					 DWORDLONG			 typedef QWORD		 ;long double word
1    65					 GLOBALHANDLE			 typedef DWORD		 ;global handle
1    66					 HACCEL				 typedef DWORD		 ;accelerator handle
1    67					 HANDLE				 typedef DWORD		 ;unspecified handle
1    68					 HBITMAP			 typedef DWORD		 ;bitmap handle
1    69					 HBRUSH				 typedef DWORD		 ;brush	handle
1    70					 HCOLORSPACE			 typedef DWORD		 ;color	space handle
1    71					 HCURSOR			 typedef DWORD		 ;cursor handle
1    72					 HDC				 typedef DWORD		 ;device context handle
1    73					 HDWP				 typedef DWORD		 ;defer	win pos	handle
1    74					 HENHMETAFILE			 typedef DWORD		 ;enh. metafile	handle
1    75					 HFILE				 typedef DWORD		 ;file handle
1    76					 HFONT				 typedef DWORD		 ;font handle
1    77					 HGLOBAL			 typedef DWORD		 ;global handle
1    78					 HHOOK				 typedef DWORD		 ;hook handle
1    79					 HICON				 typedef DWORD		 ;icon handle
1    80					 HINSTANCE			 typedef DWORD		 ;instance handle
1    81					 HINTERNET			 typedef DWORD		 ;internet handle
1    82					 HLOCAL				 typedef DWORD		 ;local	handle
1    83					 HMENU				 typedef DWORD		 ;menu handle
1    84					 HMETAFILE			 typedef DWORD		 ;metafile handle
1    85					 HPALETTE			 typedef DWORD		 ;palette handle
1    86					 HPEN				 typedef DWORD		 ;pen handle
1    87					 HRGN				 typedef DWORD		 ;region handle
1    88					 HRSRC				 typedef DWORD		 ;resource handle
1    89					 HSTR				 typedef DWORD		 ;string handle
1    90					 HTASK				 typedef DWORD		 ;task handle
1    91					 HTREEITEM			 typedef DWORD		 ;tree view item handle
1    92					 HWND				 typedef DWORD		 ;window handle
1    93					 INTEGER			 typedef DWORD		 ;standard integer
1    94					 LOCALHANDLE			 typedef DWORD		 ;local	handle
1    95					 LONG				 typedef DWORD		 ;long integer
1    96					 LONGINT			 typedef DWORD		 ;long integer
1    97					 LPARAM				 typedef DWORD		 ;long parameter
1    98					 LPBOOL				 typedef DWORD		 ;long ptr to boolean
1    99					 LPBYTE				 typedef DWORD		 ;long ptr to byte
1   100					 LPCSTR				 typedef DWORD		 ;long ptr to string
1   101					 LPCTSTR			 typedef DWORD		 ;long ptr to string
1   102					 LPCVOID			 typedef DWORD		 ;long ptr to buffer
1   103					 LPDWORD			 typedef DWORD		 ;long ptr to dword
1   104					 LPFN				 typedef DWORD		 ;long ptr to function
1   105					 LPINT				 typedef DWORD		 ;long ptr to integer
1   106					 LPLONG				 typedef DWORD		 ;long ptr to long int
1   107					 LPSTR				 typedef DWORD		 ;long ptr to string
1   108					 LPTSTR				 typedef DWORD		 ;long ptr to string
1   109					 LPVOID				 typedef DWORD		 ;long ptr to buffer
1   110					 LPWORD				 typedef DWORD		 ;long ptr to word
1   111					 LRESULT			 typedef DWORD		 ;long result
1   112					 POINTER			 typedef DWORD		 ;pointer to anything
1   113					 PVOID				 typedef DWORD		 ;pointer to buffer
1   114					 SHORTINT			 typedef WORD		 ;short	integer
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 3
pmScript.ASM



1   115					 UINT				 typedef DWORD		 ;unsigned integer
1   116					 WCHAR				 typedef WORD		 ;unicode character
1   117					 WNDPROC			 typedef DWORD		 ;window procedure
1   118					 WPARAM				 typedef DWORD		 ;word parameter
1   119					 ;
1   120					 ;
1   121					 ;
1   122		  =0000			 NULL				 equ	 0		 ;null
1   123		  =0000			 FALSE				 equ	 0		 ;boolean false
1   124		  =0001			 TRUE				 equ	 1		 ;boolean true
1   125					 ;
1   126					 ;------------------------------------------------------------------------------
1   127					 ;
1   128		  =0080			 BUTTON				 equ	 0080h		 ;button class
1   129		  =0081			 EDIT				 equ	 0081h		 ;edit class
1   130		  =0082			 STATIC				 equ	 0082h		 ;static class
1   131		  =0083			 LISTBOX			 equ	 0083h		 ;list box class
1   132		  =0084			 SCROLLBAR			 equ	 0084h		 ;scroll bar class
1   133		  =0085			 COMBOBOX			 equ	 0085h		 ;combo	box class
1   134					 ;
1   135					 ;------------------------------------------------------------------------------
1   136					 ;
1   137		  =0104			 MAX_PATH			 equ	 260		 ;maximum path length
1   138		  =0080			 OFS_MAXPATHNAME		 equ	 128		 ;max OF] path len
1   139					 ;
1   140					 ;------------------------------------------------------------------------------
1   141					 ;
1   142		  =FFFFFFFF		 INVALID_HANDLE_VALUE		 equ	 0FFFFFFFFh	 ;invalid handle
1   143		  =FFFFFFFF		 INVALID_FILE_SIZE		 equ	 0FFFFFFFFh	 ;invalid file size
1   144		  =FFFFFFFF		 INVALID_FILE_POINTER		 equ	 0FFFFFFFFh	 ;invalid file pointer
1   145					 ;
1   146					 ;==============================================================================
1   147					 ;
1   148					 ;	 WIN32 CONSTANTS
1   149					 ;
1   150					 ;==============================================================================
1   151					 ;
1   152					 ; ========================
1   153					 ; bitmap compression types
1   154					 ; ========================
1   155					 ;
1   156		  =0000			 BI_RGB				 equ	 0
1   157		  =0001			 BI_RLE8			 equ	 1
1   158		  =0002			 BI_RLE4			 equ	 2
1   159		  =0003			 BI_BITFIELDS			 equ	 3
1   160					 ;
1   161					 ;------------------------------------------------------------------------------
1   162					 ;
1   163					 ; =======================
1   164					 ; button control messages
1   165					 ; =======================
1   166					 ;
1   167		  =00F0			 BM_GETCHECK			 equ	 00F0h
1   168		  =00F1			 BM_SETCHECK			 equ	 00F1h
1   169		  =00F2			 BM_GETSTATE			 equ	 00F2h
1   170		  =00F3			 BM_SETSTATE			 equ	 00F3h
1   171		  =00F4			 BM_SETSTYLE			 equ	 00F4h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 4
pmScript.ASM



1   172		  =00F5			 BM_CLICK			 equ	 00F5h
1   173		  =00F6			 BM_GETIMAGE			 equ	 00F6h
1   174		  =00F7			 BM_SETIMAGE			 equ	 00F7h
1   175					 ;
1   176					 ;------------------------------------------------------------------------------
1   177					 ;
1   178					 ; ============================
1   179					 ; button control notifications
1   180					 ; ============================
1   181					 ;
1   182		  =0000			 BN_CLICKED			 equ	 0000h
1   183		  =0001			 BN_PAINT			 equ	 0001h
1   184		  =0002			 BN_HILITE			 equ	 0002h
1   185		  =0003			 BN_UNHILITE			 equ	 0003h
1   186		  =0004			 BN_DISABLE			 equ	 0004h
1   187		  =0005			 BN_DOUBLECLICKED		 equ	 0005h
1   188		  =0006			 BN_SETFOCUS			 equ	 0006h
1   189		  =0007			 BN_KILLFOCUS			 equ	 0007h
1   190					 ;
1   191					 BN_PUSHED			 equ	 BN_HILITE
1   192					 BN_UNPUSHED			 equ	 BN_UNHILITE
1   193					 BN_DBLCLK			 equ	 BN_DOUBLECLICKED
1   194					 ;
1   195					 ;------------------------------------------------------------------------------
1   196					 ;
1   197					 ; =====================
1   198					 ; button control styles
1   199					 ; =====================
1   200					 ;
1   201		  =0000			 BS_PUSHBUTTON			 equ	 0000h
1   202		  =0001			 BS_DEFPUSHBUTTON		 equ	 0001h
1   203		  =0002			 BS_CHECKBOX			 equ	 0002h
1   204		  =0003			 BS_AUTOCHECKBOX		 equ	 0003h
1   205		  =0004			 BS_RADIOBUTTON			 equ	 0004h
1   206		  =0005			 BS_3STATE			 equ	 0005h
1   207		  =0006			 BS_AUTO3STATE			 equ	 0006h
1   208		  =0007			 BS_GROUPBOX			 equ	 0007h
1   209		  =0008			 BS_USERBUTTON			 equ	 0008h
1   210		  =0009			 BS_AUTORADIOBUTTON		 equ	 0009h
1   211		  =000B			 BS_OWNERDRAW			 equ	 000Bh
1   212		  =0020			 BS_LEFTTEXT			 equ	 0020h
1   213		  =0000			 BS_TEXT			 equ	 0000h
1   214		  =0040			 BS_ICON			 equ	 0040h
1   215		  =0080			 BS_BITMAP			 equ	 0080h
1   216		  =0100			 BS_LEFT			 equ	 0100h
1   217		  =0200			 BS_RIGHT			 equ	 0200h
1   218		  =0300			 BS_CENTER			 equ	 0300h
1   219		  =0400			 BS_TOP				 equ	 0400h
1   220		  =0800			 BS_BOTTOM			 equ	 0800h
1   221		  =0C00			 BS_VCENTER			 equ	 0C00h
1   222		  =1000			 BS_PUSHLIKE			 equ	 1000h
1   223		  =2000			 BS_MULTILINE			 equ	 2000h
1   224		  =4000			 BS_NOTIFY			 equ	 4000h
1   225		  =8000			 BS_FLAT			 equ	 8000h
1   226					 ;
1   227					 BS_RIGHTBUTTON			 equ	 BS_LEFTTEXT
1   228					 ;
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 5
pmScript.ASM



1   229					 ;------------------------------------------------------------------------------
1   230					 ;
1   231					 ; ==================
1   232					 ; combo box messages
1   233					 ; ==================
1   234					 ;
1   235		  =0140			 CB_GETEDITSEL			 equ	 0140h
1   236		  =0141			 CB_LIMITTEXT			 equ	 0141h
1   237		  =0142			 CB_SETEDITSEL			 equ	 0142h
1   238		  =0143			 CB_ADDSTRING			 equ	 0143h
1   239		  =0144			 CB_DELETESTRING		 equ	 0144h
1   240		  =0145			 CB_DIR				 equ	 0145h
1   241		  =0146			 CB_GETCOUNT			 equ	 0146h
1   242		  =0147			 CB_GETCURSEL			 equ	 0147h
1   243		  =0148			 CB_GETLBTEXT			 equ	 0148h
1   244		  =0149			 CB_GETLBTEXTLEN		 equ	 0149h
1   245		  =014A			 CB_INSERTSTRING		 equ	 014Ah
1   246		  =014B			 CB_RESETCONTENT		 equ	 014Bh
1   247		  =014C			 CB_FINDSTRING			 equ	 014Ch
1   248		  =014D			 CB_SELECTSTRING		 equ	 014Dh
1   249		  =014E			 CB_SETCURSEL			 equ	 014Eh
1   250		  =014F			 CB_SHOWDROPDOWN		 equ	 014Fh
1   251		  =0150			 CB_GETITEMDATA			 equ	 0150h
1   252		  =0151			 CB_SETITEMDATA			 equ	 0151h
1   253		  =0152			 CB_GETDROPPEDCONTROLRECT	 equ	 0152h
1   254		  =0153			 CB_SETITEMHEIGHT		 equ	 0153h
1   255		  =0154			 CB_GETITEMHEIGHT		 equ	 0154h
1   256		  =0155			 CB_SETEXTENDEDUI		 equ	 0155h
1   257		  =0156			 CB_GETEXTENDEDUI		 equ	 0156h
1   258		  =0157			 CB_GETDROPPEDSTATE		 equ	 0157h
1   259		  =0158			 CB_FINDSTRINGEXACT		 equ	 0158h
1   260		  =0159			 CB_SETLOCALE			 equ	 0159h
1   261		  =015A			 CB_GETLOCALE			 equ	 015Ah
1   262		  =015B			 CB_GETTOPINDEX			 equ	 015Bh
1   263		  =015C			 CB_SETTOPINDEX			 equ	 015Ch
1   264		  =015D			 CB_GETHORIZONTALEXTENT		 equ	 015Dh
1   265		  =015E			 CB_SETHORIZONTALEXTENT		 equ	 015Eh
1   266		  =015F			 CB_GETDROPPEDWIDTH		 equ	 015Fh
1   267		  =0160			 CB_SETDROPPEDWIDTH		 equ	 0160h
1   268		  =0161			 CB_INITSTORAGE			 equ	 0161h
1   269		  =0162			 CB_MSGMAX			 equ	 0162h
1   270					 ;
1   271					 ;------------------------------------------------------------------------------
1   272					 ;
1   273					 ; =======================
1   274					 ; combo box return values
1   275					 ; =======================
1   276					 ;
1   277		  =0000			 CB_OKAY			 equ	  0
1   278		  =-0001		 CB_ERR				 equ	 -1
1   279		  =-0002		 CB_ERRSPACE			 equ	 -2
1   280					 ;
1   281					 ;------------------------------------------------------------------------------
1   282					 ;
1   283					 ; ======================
1   284					 ; CreateDIBitmap() codes
1   285					 ; ======================
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 6
pmScript.ASM



1   286					 ;
1   287		  =0004			 CBM_INIT			 equ	 4
1   288					 ;
1   289					 ;------------------------------------------------------------------------------
1   290					 ;
1   291					 ; ============================
1   292					 ; combo box notification codes
1   293					 ; ============================
1   294					 ;
1   295		  =-0001		 CBN_ERRSPACE			 equ	 -1
1   296		  =0001			 CBN_SELCHANGE			 equ	  1
1   297		  =0002			 CBN_DBLCLK			 equ	  2
1   298		  =0003			 CBN_SETFOCUS			 equ	  3
1   299		  =0004			 CBN_KILLFOCUS			 equ	  4
1   300		  =0005			 CBN_EDITCHANGE			 equ	  5
1   301		  =0006			 CBN_EDITUPDATE			 equ	  6
1   302		  =0007			 CBN_DROPDOWN			 equ	  7
1   303		  =0008			 CBN_CLOSEUP			 equ	  8
1   304		  =0009			 CBN_SELENDOK			 equ	  9
1   305		  =000A			 CBN_SELENDCANCEL		 equ	 10
1   306					 ;
1   307					 ;------------------------------------------------------------------------------
1   308					 ;
1   309					 ; ================
1   310					 ; combo box styles
1   311					 ; ================
1   312					 ;
1   313		  =0001			 CBS_SIMPLE			 equ	 0001h
1   314		  =0002			 CBS_DROPDOWN			 equ	 0002h
1   315		  =0003			 CBS_DROPDOWNLIST		 equ	 0003h
1   316		  =0010			 CBS_OWNERDRAWFIXED		 equ	 0010h
1   317		  =0020			 CBS_OWNERDRAWVARIABLE		 equ	 0020h
1   318		  =0040			 CBS_AUTOHSCROLL		 equ	 0040h
1   319		  =0080			 CBS_OEMCONVERT			 equ	 0080h
1   320		  =0100			 CBS_SORT			 equ	 0100h
1   321		  =0200			 CBS_HASSTRINGS			 equ	 0200h
1   322		  =0400			 CBS_NOINTEGRALHEIGHT		 equ	 0400h
1   323		  =0800			 CBS_DISABLENOSCROLL		 equ	 0800h
1   324		  =2000			 CBS_UPPERCASE			 equ	 2000h
1   325		  =4000			 CBS_LOWERCASE			 equ	 4000h
1   326					 ;
1   327					 ;------------------------------------------------------------------------------
1   328					 ;
1   329					 ; =================
1   330					 ; clipboard formats
1   331					 ; =================
1   332					 ;
1   333		  =0001			 CF_TEXT			 equ	 0001h
1   334		  =0002			 CF_BITMAP			 equ	 0002h
1   335		  =0003			 CF_METAFILEPICT		 equ	 0003h
1   336		  =0004			 CF_SYLK			 equ	 0004h
1   337		  =0005			 CF_DIF				 equ	 0005h
1   338		  =0006			 CF_TIFF			 equ	 0006h
1   339		  =0007			 CF_OEMTEXT			 equ	 0007h
1   340		  =0008			 CF_DIB				 equ	 0008h
1   341		  =0009			 CF_PALETTE			 equ	 0009h
1   342		  =000A			 CF_PENDATA			 equ	 000Ah
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 7
pmScript.ASM



1   343		  =000B			 CF_RIFF			 equ	 000Bh
1   344		  =000C			 CF_WAVE			 equ	 000Ch
1   345		  =000D			 CF_UNICODETEXT			 equ	 000Dh
1   346		  =000E			 CF_ENHMETAFILE			 equ	 000Eh
1   347		  =000F			 CF_HDROP			 equ	 000Fh
1   348		  =0010			 CF_LOCALE			 equ	 0010h
1   349		  =0011			 CF_MAX				 equ	 0011h
1   350					 ;
1   351		  =0080			 CF_OWNERDISPLAY		 equ	 0080h
1   352		  =0081			 CF_DSPTEXT			 equ	 0081h
1   353		  =0082			 CF_DSPBITMAP			 equ	 0082h
1   354		  =0083			 CF_DSPMETAFILEPICT		 equ	 0083h
1   355		  =008E			 CF_DSPENHMETAFILE		 equ	 008Eh
1   356					 ;
1   357		  =0200			 CF_PRIVATEFIRST		 equ	 0200h
1   358		  =02FF			 CF_PRIVATELAST			 equ	 02FFh
1   359					 ;
1   360		  =0300			 CF_GDIOBJFIRST			 equ	 0300h
1   361		  =03FF			 CF_GDIOBJLAST			 equ	 03FFh
1   362					 ;
1   363					 ;------------------------------------------------------------------------------
1   364					 ;
1   365					 ; ===========
1   366					 ; color types
1   367					 ; ===========
1   368					 ;
1   369		  =0000			 COLOR_SCROLLBAR		 equ	  0
1   370		  =0001			 COLOR_BACKGROUND		 equ	  1
1   371		  =0002			 COLOR_ACTIVECAPTION		 equ	  2
1   372		  =0003			 COLOR_INACTIVECAPTION		 equ	  3
1   373		  =0004			 COLOR_MENU			 equ	  4
1   374		  =0005			 COLOR_WINDOW			 equ	  5
1   375		  =0006			 COLOR_WINDOWFRAME		 equ	  6
1   376		  =0007			 COLOR_MENUTEXT			 equ	  7
1   377		  =0008			 COLOR_WINDOWTEXT		 equ	  8
1   378		  =0009			 COLOR_CAPTIONTEXT		 equ	  9
1   379		  =000A			 COLOR_ACTIVEBORDER		 equ	 10
1   380		  =000B			 COLOR_INACTIVEBORDER		 equ	 11
1   381		  =000C			 COLOR_APPWORKSPACE		 equ	 12
1   382		  =000D			 COLOR_HIGHLIGHT		 equ	 13
1   383		  =000E			 COLOR_HIGHLIGHTTEXT		 equ	 14
1   384		  =000F			 COLOR_BTNFACE			 equ	 15
1   385		  =0010			 COLOR_BTNSHADOW		 equ	 16
1   386		  =0011			 COLOR_GRAYTEXT			 equ	 17
1   387		  =0012			 COLOR_BTNTEXT			 equ	 18
1   388		  =0013			 COLOR_INACTIVECAPTIONTEXT	 equ	 19
1   389		  =0014			 COLOR_BTNHIGHLIGHT		 equ	 20
1   390		  =0015			 COLOR_3DDKSHADOW		 equ	 21
1   391		  =0016			 COLOR_3DLIGHT			 equ	 22
1   392		  =0017			 COLOR_INFOTEXT			 equ	 23
1   393		  =0018			 COLOR_INFOBK			 equ	 24
1   394					 ;
1   395					 COLOR_DESKTOP			 equ	 COLOR_BACKGROUND
1   396					 COLOR_3DFACE			 equ	 COLOR_BTNFACE
1   397					 COLOR_3DSHADOW			 equ	 COLOR_BTNSHADOW
1   398					 COLOR_3DHIGHLIGHT		 equ	 COLOR_BTNHIGHLIGHT
1   399					 COLOR_3DHILIGHT		 equ	 COLOR_BTNHIGHLIGHT
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 8
pmScript.ASM



1   400					 COLOR_BTNHILIGHT		 equ	 COLOR_BTNHIGHLIGHT
1   401					 ;
1   402					 ;------------------------------------------------------------------------------
1   403					 ;
1   404					 ; ===================
1   405					 ; network connections
1   406					 ; ===================
1   407					 ;
1   408		  =0001			 CONNECT_UPDATE_PROFILE		 equ	 00000001h
1   409		  =0002			 CONNECT_UPDATE_RECENT		 equ	 00000002h
1   410		  =0004			 CONNECT_TEMPORARY		 equ	 00000004h
1   411		  =0008			 CONNECT_INTERACTIVE		 equ	 00000008h
1   412		  =0010			 CONNECT_PROMPT			 equ	 00000010h
1   413		  =0020			 CONNECT_NEED_DRIVE		 equ	 00000020h
1   414		  =0040			 CONNECT_REFCOUNT		 equ	 00000040h
1   415		  =0080			 CONNECT_REDIRECT		 equ	 00000080h
1   416		  =0100			 CONNECT_LOCALDRIVE		 equ	 00000100h
1   417		  =0200			 CONNECT_CURRENT_MEDIA		 equ	 00000200h
1   418					 ;
1   419		  =0001			 NETPROPERTY_PERSISTENT		 equ	 1
1   420					 ;
1   421					 ;------------------------------------------------------------------------------
1   422					 ;
1   423					 ; ====================
1   424					 ; thread context flags
1   425					 ; ====================
1   426					 ;
1   427		  =00010000		 CONTEXT_i386			 equ	 00010000h
1   428		  =00010000		 CONTEXT_i486			 equ	 00010000h
1   429					 ;
1   430		  =00010001		 CONTEXT_CONTROL		 equ	 CONTEXT_i386+00000001h
1   431		  =00010002		 CONTEXT_INTEGER		 equ	 CONTEXT_i386+00000002h
1   432		  =00010004		 CONTEXT_SEGMENTS		 equ	 CONTEXT_i386+00000004h
1   433		  =00010008		 CONTEXT_FLOATING_POINT		 equ	 CONTEXT_i386+00000008h
1   434		  =00010010		 CONTEXT_DEBUG_REGISTERS	 equ	 CONTEXT_i386+00000010h
1   435					 ;
1   436		  =00030007		 CONTEXT_FULL		 equ CONTEXT_CONTROL+CONTEXT_INTEGER+CONTEXT_SEGMENTS
1   437					 ;
1   438		  =0050			 SIZE_OF_80387_REGISTERS	 equ	 80
1   439					 ;
1   440					 ;------------------------------------------------------------------------------
1   441					 ;
1   442					 ; ==========
1   443					 ; code	pages
1   444					 ; ==========
1   445					 ;
1   446		  =0000			 CP_ACP				 equ	 0
1   447		  =0001			 CP_OEMCP			 equ	 1
1   448		  =0002			 CP_MACCP			 equ	 2
1   449					 ;
1   450					 ;------------------------------------------------------------------------------
1   451					 ;
1   452					 ; ============
1   453					 ; class styles
1   454					 ; ============
1   455					 ;
1   456		  =0001			 CS_VREDRAW			 equ	 00000001h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 9
pmScript.ASM



1   457		  =0002			 CS_HREDRAW			 equ	 00000002h
1   458		  =0004			 CS_KEYCVTWINDOW		 equ	 00000004h
1   459		  =0008			 CS_DBLCLKS			 equ	 00000008h
1   460		  =0020			 CS_OWNDC			 equ	 00000020h
1   461		  =0040			 CS_CLASSDC			 equ	 00000040h
1   462		  =0080			 CS_PARENTDC			 equ	 00000080h
1   463		  =0100			 CS_NOKEYCVT			 equ	 00000100h
1   464		  =0200			 CS_NOCLOSE			 equ	 00000200h
1   465		  =0800			 CS_SAVEBITS			 equ	 00000800h
1   466		  =1000			 CS_BYTEALIGNCLIENT		 equ	 00001000h
1   467		  =2000			 CS_BYTEALIGNWINDOW		 equ	 00002000h
1   468		  =4000			 CS_GLOBALCLASS			 equ	 00004000h
1   469		  =00010000		 CS_IME				 equ	 00010000h
1   470					 ;
1   471					 ;------------------------------------------------------------------------------
1   472					 ;
1   473					 ; ===================
1   474					 ; control color types
1   475					 ; ===================
1   476					 ;
1   477		  =0000			 CTLCOLOR_MSGBOX		 equ	 0
1   478		  =0001			 CTLCOLOR_EDIT			 equ	 1
1   479		  =0002			 CTLCOLOR_LISTBOX		 equ	 2
1   480		  =0003			 CTLCOLOR_BTN			 equ	 3
1   481		  =0004			 CTLCOLOR_DLG			 equ	 4
1   482		  =0005			 CTLCOLOR_SCROLLBAR		 equ	 5
1   483		  =0006			 CTLCOLOR_STATIC		 equ	 6
1   484		  =0007			 CTLCOLOR_MAX			 equ	 7
1   485					 ;
1   486					 ;------------------------------------------------------------------------------
1   487					 ;
1   488					 ; =======================
1   489					 ; CreateWindow() commands
1   490					 ; =======================
1   491					 ;
1   492		  =80000000		 CW_USEDEFAULT			 equ	 80000000h
1   493					 ;
1   494					 ;------------------------------------------------------------------------------
1   495					 ;
1   496					 ; ===================
1   497					 ; device capabilities
1   498					 ; ===================
1   499					 ;
1   500		  =0001			 DC_FIELDS			 equ	  1
1   501		  =0002			 DC_PAPERS			 equ	  2
1   502		  =0003			 DC_PAPERSIZE			 equ	  3
1   503		  =0004			 DC_MINEXTENT			 equ	  4
1   504		  =0005			 DC_MAXEXTENT			 equ	  5
1   505		  =0006			 DC_BINS			 equ	  6
1   506		  =0007			 DC_DUPLEX			 equ	  7
1   507		  =0008			 DC_SIZE			 equ	  8
1   508		  =0009			 DC_EXTRA			 equ	  9
1   509		  =000A			 DC_VERSION			 equ	 10
1   510		  =000B			 DC_DRIVER			 equ	 11
1   511		  =000C			 DC_BINNAMES			 equ	 12
1   512		  =000D			 DC_ENUMRESOLUTIONS		 equ	 13
1   513		  =000E			 DC_FILEDEPENDENCIES		 equ	 14
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 10
pmScript.ASM



1   514		  =000F			 DC_TRUETYPE			 equ	 15
1   515		  =0010			 DC_PAPERNAMES			 equ	 16
1   516		  =0011			 DC_ORIENTATION			 equ	 17
1   517		  =0012			 DC_COPIES			 equ	 18
1   518					 ;
1   519					 ;------------------------------------------------------------------------------
1   520					 ;
1   521					 ; ====================
1   522					 ; dib color table id's
1   523					 ; ====================
1   524					 ;
1   525		  =0000			 DIB_RGB_COLORS			 equ	 0
1   526		  =0001			 DIB_PAL_COLORS			 equ	 1
1   527					 ;
1   528					 ;------------------------------------------------------------------------------
1   529					 ;
1   530					 ; ====================
1   531					 ; DLL LibMain() events
1   532					 ; ====================
1   533					 ;
1   534		  =0000			 DLL_PROCESS_DETACH		 equ	 0
1   535		  =0001			 DLL_PROCESS_ATTACH		 equ	 1
1   536		  =0002			 DLL_THREAD_ATTACH		 equ	 2
1   537		  =0003			 DLL_THREAD_DETACH		 equ	 3
1   538					 ;
1   539					 ;------------------------------------------------------------------------------
1   540					 ;
1   541					 ; ======================
1   542					 ; device mode selections
1   543					 ; ======================
1   544					 ;
1   545		  =0001			 DM_UPDATE			 equ	 1
1   546		  =0002			 DM_COPY			 equ	 2
1   547		  =0004			 DM_PROMPT			 equ	 4
1   548		  =0008			 DM_MODIFY			 equ	 8
1   549					 ;
1   550					 DM_IN_BUFFER			 equ	 DM_MODIFY
1   551					 DM_IN_PROMPT			 equ	 DM_PROMPT
1   552					 DM_OUT_BUFFER			 equ	 DM_COPY
1   553					 DM_OUT_DEFAULT			 equ	 DM_UPDATE
1   554					 ;
1   555					 ;------------------------------------------------------------------------------
1   556					 ;
1   557					 ; =============
1   558					 ; dialog styles
1   559					 ; =============
1   560					 ;
1   561		  =0001			 DS_ABSALIGN			 equ	 0001h
1   562		  =0002			 DS_SYSMODAL			 equ	 0002h
1   563		  =0004			 DS_3DLOOK			 equ	 0004h
1   564		  =0008			 DS_FIXEDSYS			 equ	 0008h
1   565		  =0010			 DS_NOFAILCREATE		 equ	 0010h
1   566		  =0020			 DS_LOCALEDIT			 equ	 0020h	 ;edit items get local storage
1   567		  =0040			 DS_SETFONT			 equ	 0040h	 ;user specified font
1   568		  =0080			 DS_MODALFRAME			 equ	 0080h	 ;combinable with WS_CAPTION
1   569		  =0100			 DS_NOIDLEMSG			 equ	 0100h	 ;don't	send WM_ENTERIDLE
1   570		  =0200			 DS_SETFOREGROUND		 equ	 0200h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 11
pmScript.ASM



1   571		  =0400			 DS_CONTROL			 equ	 0400h
1   572		  =0800			 DS_CENTER			 equ	 0800h
1   573		  =1000			 DS_CENTERMOUSE			 equ	 1000h
1   574		  =2000			 DS_CONTEXTHELP			 equ	 2000h
1   575					 ;
1   576		  =0081			 DS_MODAL			 equ	 DS_ABSALIGN+DS_MODALFRAME
1   577					 DS_MODELESS			 equ	 DS_ABSALIGN
1   578					 ;
1   579					 ;------------------------------------------------------------------------------
1   580					 ;
1   581					 ; =======================
1   582					 ; DrawText() format flags
1   583					 ; =======================
1   584					 ;
1   585		  =0000			 DT_TOP				 equ	 00000000h
1   586		  =0000			 DT_LEFT			 equ	 00000000h
1   587		  =0001			 DT_CENTER			 equ	 00000001h
1   588		  =0002			 DT_RIGHT			 equ	 00000002h
1   589		  =0004			 DT_VCENTER			 equ	 00000004h
1   590		  =0008			 DT_BOTTOM			 equ	 00000008h
1   591		  =0010			 DT_WORDBREAK			 equ	 00000010h
1   592		  =0020			 DT_SINGLELINE			 equ	 00000020h
1   593		  =0040			 DT_EXPANDTABS			 equ	 00000040h
1   594		  =0080			 DT_TABSTOP			 equ	 00000080h
1   595		  =0100			 DT_NOCLIP			 equ	 00000100h
1   596		  =0200			 DT_EXTERNALLEADING		 equ	 00000200h
1   597		  =0400			 DT_CALCRECT			 equ	 00000400h
1   598		  =0800			 DT_NOPREFIX			 equ	 00000800h
1   599		  =1000			 DT_INTERNAL			 equ	 00001000h
1   600		  =2000			 DT_EDITCONTROL			 equ	 00002000h
1   601		  =4000			 DT_PATH_ELLIPSIS		 equ	 00004000h
1   602		  =8000			 DT_END_ELLIPSIS		 equ	 00008000h
1   603		  =00010000		 DT_MODIFYSTRING		 equ	 00010000h
1   604		  =00020000		 DT_RTLREADING			 equ	 00020000h
1   605		  =00040000		 DT_WORD_ELLIPSIS		 equ	 00040000h
1   606					 ;
1   607					 ;------------------------------------------------------------------------------
1   608					 ;
1   609					 ; =====================
1   610					 ; edit	control	messages
1   611					 ; =====================
1   612					 ;
1   613		  =00B0			 EM_GETSEL			 equ	 00B0h
1   614		  =00B1			 EM_SETSEL			 equ	 00B1h
1   615		  =00B2			 EM_GETRECT			 equ	 00B2h
1   616		  =00B3			 EM_SETRECT			 equ	 00B3h
1   617		  =00B4			 EM_SETRECTNP			 equ	 00B4h
1   618		  =00B5			 EM_SCROLL			 equ	 00B5h
1   619		  =00B6			 EM_LINESCROLL			 equ	 00B6h
1   620		  =00B7			 EM_SCROLLCARET			 equ	 00B7h
1   621		  =00B8			 EM_GETMODIFY			 equ	 00B8h
1   622		  =00B9			 EM_SETMODIFY			 equ	 00B9h
1   623		  =00BA			 EM_GETLINECOUNT		 equ	 00BAh
1   624		  =00BB			 EM_LINEINDEX			 equ	 00BBh
1   625		  =00BC			 EM_SETHANDLE			 equ	 00BCh
1   626		  =00BD			 EM_GETHANDLE			 equ	 00BDh
1   627		  =00BE			 EM_GETTHUMB			 equ	 00BEh
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 12
pmScript.ASM



1   628		  =00C1			 EM_LINELENGTH			 equ	 00C1h
1   629		  =00C2			 EM_REPLACESEL			 equ	 00C2h
1   630		  =00C4			 EM_GETLINE			 equ	 00C4h
1   631		  =00C5			 EM_LIMITTEXT			 equ	 00C5h
1   632		  =00C6			 EM_CANUNDO			 equ	 00C6h
1   633		  =00C7			 EM_UNDO			 equ	 00C7h
1   634		  =00C8			 EM_FMTLINES			 equ	 00C8h
1   635		  =00C9			 EM_LINEFROMCHAR		 equ	 00C9h
1   636		  =00CB			 EM_SETTABSTOPS			 equ	 00CBh
1   637		  =00CC			 EM_SETPASSWORDCHAR		 equ	 00CCh
1   638		  =00CD			 EM_EMPTYUNDOBUFFER		 equ	 00CDh
1   639		  =00CE			 EM_GETFIRSTVISIBLELINE		 equ	 00CEh
1   640		  =00CF			 EM_SETREADONLY			 equ	 00CFh
1   641		  =00D0			 EM_SETWORDBREAKPROC		 equ	 00D0h
1   642		  =00D1			 EM_GETWORDBREAKPROC		 equ	 00D1h
1   643		  =00D2			 EM_GETPASSWORDCHAR		 equ	 00D2h
1   644		  =00D3			 EM_SETMARGINS			 equ	 00D3h
1   645		  =00D4			 EM_GETMARGINS			 equ	 00D4h
1   646		  =00D5			 EM_GETLIMITTEXT		 equ	 00D5h
1   647		  =00D6			 EM_POSFROMCHAR			 equ	 00D6h
1   648		  =00D7			 EM_CHARFROMPOS			 equ	 00D7h
1   649					 ;
1   650					 EM_SETLIMITTEXT		 equ	 EM_LIMITTEXT
1   651					 ;
1   652					 ;------------------------------------------------------------------------------
1   653					 ;
1   654					 ; ==========================
1   655					 ; edit	control	notifications
1   656					 ; ==========================
1   657					 ;
1   658		  =0100			 EN_SETFOCUS			 equ	 0100h
1   659		  =0200			 EN_KILLFOCUS			 equ	 0200h
1   660		  =0300			 EN_CHANGE			 equ	 0300h
1   661		  =0400			 EN_UPDATE			 equ	 0400h
1   662		  =0500			 EN_ERRSPACE			 equ	 0500h
1   663		  =0501			 EN_MAXTEXT			 equ	 0501h
1   664		  =0601			 EN_HSCROLL			 equ	 0601h
1   665		  =0602			 EN_VSCROLL			 equ	 0602h
1   666					 ;
1   667					 ;------------------------------------------------------------------------------
1   668					 ;
1   669					 ; ===========
1   670					 ; error codes
1   671					 ; ===========
1   672					 ;
1   673		  =0000			 ERROR_SUCCESS				 equ	    0
1   674		  =0000			 NO_ERROR				 equ	    0
1   675					 ;
1   676		  =0001			 ERROR_INVALID_FUNCTION			 equ	    1
1   677		  =0002			 ERROR_FILE_NOT_FOUND			 equ	    2
1   678		  =0003			 ERROR_PATH_NOT_FOUND			 equ	    3
1   679		  =0004			 ERROR_TOO_MANY_OPEN_FILES		 equ	    4
1   680		  =0005			 ERROR_ACCESS_DENIED			 equ	    5
1   681		  =0006			 ERROR_INVALID_HANDLE			 equ	    6
1   682		  =0007			 ERROR_ARENA_TRASHED			 equ	    7
1   683		  =0008			 ERROR_NOT_ENOUGH_MEMORY		 equ	    8
1   684		  =0009			 ERROR_INVALID_BLOCK			 equ	    9
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 13
pmScript.ASM



1   685		  =000A			 ERROR_BAD_ENVIRONMENT			 equ	   10
1   686		  =000B			 ERROR_BAD_FORMAT			 equ	   11
1   687		  =000C			 ERROR_INVALID_ACCESS			 equ	   12
1   688		  =000D			 ERROR_INVALID_DATA			 equ	   13
1   689		  =000E			 ERROR_OUTOFMEMORY			 equ	   14
1   690		  =000F			 ERROR_INVALID_DRIVE			 equ	   15
1   691		  =0010			 ERROR_CURRENT_DIRECTORY		 equ	   16
1   692		  =0011			 ERROR_NOT_SAME_DEVICE			 equ	   17
1   693		  =0012			 ERROR_NO_MORE_FILES			 equ	   18
1   694		  =0013			 ERROR_WRITE_PROTECT			 equ	   19
1   695		  =0014			 ERROR_BAD_UNIT				 equ	   20
1   696		  =0015			 ERROR_NOT_READY			 equ	   21
1   697		  =0016			 ERROR_BAD_COMMAND			 equ	   22
1   698		  =0017			 ERROR_CRC				 equ	   23
1   699		  =0018			 ERROR_BAD_LENGTH			 equ	   24
1   700		  =0019			 ERROR_SEEK				 equ	   25
1   701		  =001A			 ERROR_NOT_DOS_DISK			 equ	   26
1   702		  =001B			 ERROR_SECTOR_NOT_FOUND			 equ	   27
1   703		  =001C			 ERROR_OUT_OF_PAPER			 equ	   28
1   704		  =001D			 ERROR_WRITE_FAULT			 equ	   29
1   705		  =001E			 ERROR_READ_FAULT			 equ	   30
1   706		  =001F			 ERROR_GEN_FAILURE			 equ	   31
1   707		  =0020			 ERROR_SHARING_VIOLATION		 equ	   32
1   708		  =0021			 ERROR_LOCK_VIOLATION			 equ	   33
1   709		  =0022			 ERROR_WRONG_DISK			 equ	   34
1   710		  =0024			 ERROR_SHARING_BUFFER_EXCEEDED		 equ	   36
1   711		  =0026			 ERROR_HANDLE_EOF			 equ	   38
1   712		  =0027			 ERROR_HANDLE_DISK_FULL			 equ	   39
1   713		  =0032			 ERROR_NOT_SUPPORTED			 equ	   50
1   714		  =0033			 ERROR_REM_NOT_LIST			 equ	   51
1   715		  =0034			 ERROR_DUP_NAME				 equ	   52
1   716		  =0035			 ERROR_BAD_NETPATH			 equ	   53
1   717		  =0036			 ERROR_NETWORK_BUSY			 equ	   54
1   718		  =0037			 ERROR_DEV_NOT_EXIST			 equ	   55
1   719		  =0038			 ERROR_TOO_MANY_CMDS			 equ	   56
1   720		  =0039			 ERROR_ADAP_HDW_ERR			 equ	   57
1   721		  =003A			 ERROR_BAD_NET_RESP			 equ	   58
1   722		  =003B			 ERROR_UNEXP_NET_ERR			 equ	   59
1   723		  =003C			 ERROR_BAD_REM_ADAP			 equ	   60
1   724		  =003D			 ERROR_PRINTQ_FULL			 equ	   61
1   725		  =003E			 ERROR_NO_SPOOL_SPACE			 equ	   62
1   726		  =003F			 ERROR_PRINT_CANCELLED			 equ	   63
1   727		  =0040			 ERROR_NETNAME_DELETED			 equ	   64
1   728		  =0041			 ERROR_NETWORK_ACCESS_DENIED		 equ	   65
1   729		  =0042			 ERROR_BAD_DEV_TYPE			 equ	   66
1   730		  =0043			 ERROR_BAD_NET_NAME			 equ	   67
1   731		  =0044			 ERROR_TOO_MANY_NAMES			 equ	   68
1   732		  =0045			 ERROR_TOO_MANY_SESS			 equ	   69
1   733		  =0046			 ERROR_SHARING_PAUSED			 equ	   70
1   734		  =0047			 ERROR_REQ_NOT_ACCEP			 equ	   71
1   735		  =0048			 ERROR_REDIR_PAUSED			 equ	   72
1   736		  =0050			 ERROR_FILE_EXISTS			 equ	   80
1   737		  =0052			 ERROR_CANNOT_MAKE			 equ	   82
1   738		  =0053			 ERROR_FAIL_I24				 equ	   83
1   739		  =0054			 ERROR_OUT_OF_STRUCTURES		 equ	   84
1   740		  =0055			 ERROR_ALREADY_ASSIGNED			 equ	   85
1   741		  =0056			 ERROR_INVALID_PASSWORD			 equ	   86
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 14
pmScript.ASM



1   742		  =0057			 ERROR_INVALID_PARAMETER		 equ	   87
1   743		  =0058			 ERROR_NET_WRITE_FAULT			 equ	   88
1   744		  =0059			 ERROR_NO_PROC_SLOTS			 equ	   89
1   745		  =0064			 ERROR_TOO_MANY_SEMAPHORES		 equ	  100
1   746		  =0065			 ERROR_EXCL_SEM_ALREADY_OWNED		 equ	  101
1   747		  =0066			 ERROR_SEM_IS_SET			 equ	  102
1   748		  =0067			 ERROR_TOO_MANY_SEM_REQUESTS		 equ	  103
1   749		  =0068			 ERROR_INVALID_AT_INTERRUPT_TIME	 equ	  104
1   750		  =0069			 ERROR_SEM_OWNER_DIED			 equ	  105
1   751		  =006A			 ERROR_SEM_USER_LIMIT			 equ	  106
1   752		  =006B			 ERROR_DISK_CHANGE			 equ	  107
1   753		  =006C			 ERROR_DRIVE_LOCKED			 equ	  108
1   754		  =006D			 ERROR_BROKEN_PIPE			 equ	  109
1   755		  =006E			 ERROR_OPEN_FAILED			 equ	  110
1   756		  =006F			 ERROR_BUFFER_OVERFLOW			 equ	  111
1   757		  =0070			 ERROR_DISK_FULL			 equ	  112
1   758		  =0071			 ERROR_NO_MORE_SEARCH_HANDLES		 equ	  113
1   759		  =0072			 ERROR_INVALID_TARGET_HANDLE		 equ	  114
1   760		  =0075			 ERROR_INVALID_CATEGORY			 equ	  117
1   761		  =0076			 ERROR_INVALID_VERIFY_SWITCH		 equ	  118
1   762		  =0077			 ERROR_BAD_DRIVER_LEVEL			 equ	  119
1   763		  =0078			 ERROR_CALL_NOT_IMPLEMENTED		 equ	  120
1   764		  =0079			 ERROR_SEM_TIMEOUT			 equ	  121
1   765		  =007A			 ERROR_INSUFFICIENT_BUFFER		 equ	  122
1   766		  =007B			 ERROR_INVALID_NAME			 equ	  123
1   767		  =007C			 ERROR_INVALID_LEVEL			 equ	  124
1   768		  =007D			 ERROR_NO_VOLUME_LABEL			 equ	  125
1   769		  =007E			 ERROR_MOD_NOT_FOUND			 equ	  126
1   770		  =007F			 ERROR_PROC_NOT_FOUND			 equ	  127
1   771		  =0080			 ERROR_WAIT_NO_CHILDREN			 equ	  128
1   772		  =0081			 ERROR_CHILD_NOT_COMPLETE		 equ	  129
1   773		  =0082			 ERROR_DIRECT_ACCESS_HANDLE		 equ	  130
1   774		  =0083			 ERROR_NEGATIVE_SEEK			 equ	  131
1   775		  =0084			 ERROR_SEEK_ON_DEVICE			 equ	  132
1   776		  =0085			 ERROR_IS_JOIN_TARGET			 equ	  133
1   777		  =0086			 ERROR_IS_JOINED			 equ	  134
1   778		  =0087			 ERROR_IS_SUBSTED			 equ	  135
1   779		  =0088			 ERROR_NOT_JOINED			 equ	  136
1   780		  =0089			 ERROR_NOT_SUBSTED			 equ	  137
1   781		  =008A			 ERROR_JOIN_TO_JOIN			 equ	  138
1   782		  =008B			 ERROR_SUBST_TO_SUBST			 equ	  139
1   783		  =008C			 ERROR_JOIN_TO_SUBST			 equ	  140
1   784		  =008D			 ERROR_SUBST_TO_JOIN			 equ	  141
1   785		  =008E			 ERROR_BUSY_DRIVE			 equ	  142
1   786		  =008F			 ERROR_SAME_DRIVE			 equ	  143
1   787		  =0090			 ERROR_DIR_NOT_ROOT			 equ	  144
1   788		  =0091			 ERROR_DIR_NOT_EMPTY			 equ	  145
1   789		  =0092			 ERROR_IS_SUBST_PATH			 equ	  146
1   790		  =0093			 ERROR_IS_JOIN_PATH			 equ	  147
1   791		  =0094			 ERROR_PATH_BUSY			 equ	  148
1   792		  =0095			 ERROR_IS_SUBST_TARGET			 equ	  149
1   793		  =0096			 ERROR_SYSTEM_TRACE			 equ	  150
1   794		  =0097			 ERROR_INVALID_EVENT_COUNT		 equ	  151
1   795		  =0098			 ERROR_TOO_MANY_MUXWAITERS		 equ	  152
1   796		  =0099			 ERROR_INVALID_LIST_FORMAT		 equ	  153
1   797		  =009A			 ERROR_LABEL_TOO_LONG			 equ	  154
1   798		  =009B			 ERROR_TOO_MANY_TCBS			 equ	  155
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 15
pmScript.ASM



1   799		  =009C			 ERROR_SIGNAL_REFUSED			 equ	  156
1   800		  =009D			 ERROR_DISCARDED			 equ	  157
1   801		  =009E			 ERROR_NOT_LOCKED			 equ	  158
1   802		  =009F			 ERROR_BAD_THREADID_ADDR		 equ	  159
1   803		  =00A0			 ERROR_BAD_ARGUMENTS			 equ	  160
1   804		  =00A1			 ERROR_BAD_PATHNAME			 equ	  161
1   805		  =00A2			 ERROR_SIGNAL_PENDING			 equ	  162
1   806		  =00A4			 ERROR_MAX_THRDS_REACHED		 equ	  164
1   807		  =00A7			 ERROR_LOCK_FAILED			 equ	  167
1   808		  =00AA			 ERROR_BUSY				 equ	  170
1   809		  =00AD			 ERROR_CANCEL_VIOLATION			 equ	  173
1   810		  =00AE			 ERROR_ATOMIC_LOCKS_NOT_SUPPORTED	 equ	  174
1   811		  =00B4			 ERROR_INVALID_SEGMENT_NUMBER		 equ	  180
1   812		  =00B6			 ERROR_INVALID_ORDINAL			 equ	  182
1   813		  =00B7			 ERROR_ALREADY_EXISTS			 equ	  183
1   814		  =00BA			 ERROR_INVALID_FLAG_NUMBER		 equ	  186
1   815		  =00BB			 ERROR_SEM_NOT_FOUND			 equ	  187
1   816		  =00BC			 ERROR_INVALID_STARTING_CODESEG		 equ	  188
1   817		  =00BD			 ERROR_INVALID_STACKSEG			 equ	  189
1   818		  =00BE			 ERROR_INVALID_MODULETYPE		 equ	  190
1   819		  =00BF			 ERROR_INVALID_EXE_SIGNATURE		 equ	  191
1   820		  =00C0			 ERROR_EXE_MARKED_INVALID		 equ	  192
1   821		  =00C1			 ERROR_BAD_EXE_FORMAT			 equ	  193
1   822		  =00C2			 ERROR_ITERATED_DATA_EXCEEDS_64k	 equ	  194
1   823		  =00C3			 ERROR_INVALID_MINALLOCSIZE		 equ	  195
1   824		  =00C4			 ERROR_DYNLINK_FROM_INVALID_RING	 equ	  196
1   825		  =00C5			 ERROR_IOPL_NOT_ENABLED			 equ	  197
1   826		  =00C6			 ERROR_INVALID_SEGDPL			 equ	  198
1   827		  =00C7			 ERROR_AUTODATASEG_EXCEEDS_64k		 equ	  199
1   828		  =00C8			 ERROR_RING2SEG_MUST_BE_MOVABLE		 equ	  200
1   829		  =00C9			 ERROR_RELOC_CHAIN_XEEDS_SEGLIM		 equ	  201
1   830		  =00CA			 ERROR_INFLOOP_IN_RELOC_CHAIN		 equ	  202
1   831		  =00CB			 ERROR_ENVVAR_NOT_FOUND			 equ	  203
1   832		  =00CD			 ERROR_NO_SIGNAL_SENT			 equ	  205
1   833		  =00CE			 ERROR_FILENAME_EXCED_RANGE		 equ	  206
1   834		  =00CF			 ERROR_RING2_STACK_IN_USE		 equ	  207
1   835		  =00D0			 ERROR_META_EXPANSION_TOO_LONG		 equ	  208
1   836		  =00D1			 ERROR_INVALID_SIGNAL_NUMBER		 equ	  209
1   837		  =00D2			 ERROR_THREAD_1_INACTIVE		 equ	  210
1   838		  =00D4			 ERROR_LOCKED				 equ	  212
1   839		  =00D6			 ERROR_TOO_MANY_MODULES			 equ	  214
1   840		  =00D7			 ERROR_NESTING_NOT_ALLOWED		 equ	  215
1   841		  =00E6			 ERROR_BAD_PIPE				 equ	  230
1   842		  =00E7			 ERROR_PIPE_BUSY			 equ	  231
1   843		  =00E8			 ERROR_NO_DATA				 equ	  232
1   844		  =00E9			 ERROR_PIPE_NOT_CONNECTED		 equ	  233
1   845		  =00EA			 ERROR_MORE_DATA			 equ	  234
1   846		  =00F0			 ERROR_VC_DISCONNECTED			 equ	  240
1   847		  =00FE			 ERROR_INVALID_EA_NAME			 equ	  254
1   848		  =00FF			 ERROR_EA_LIST_INCONSISTENT		 equ	  255
1   849		  =0103			 ERROR_NO_MORE_ITEMS			 equ	  259
1   850		  =010A			 ERROR_CANNOT_COPY			 equ	  266
1   851		  =010B			 ERROR_DIRECTORY			 equ	  267
1   852		  =0113			 ERROR_EAS_DIDNT_FIT			 equ	  275
1   853		  =0114			 ERROR_EA_FILE_CORRUPT			 equ	  276
1   854		  =0115			 ERROR_EA_TABLE_FULL			 equ	  277
1   855		  =0116			 ERROR_INVALID_EA_HANDLE		 equ	  278
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 16
pmScript.ASM



1   856		  =011A			 ERROR_EAS_NOT_SUPPORTED		 equ	  282
1   857		  =0120			 ERROR_NOT_OWNER			 equ	  288
1   858		  =012A			 ERROR_TOO_MANY_POSTS			 equ	  298
1   859		  =012B			 ERROR_PARTIAL_COPY			 equ	  299
1   860		  =013D			 ERROR_MR_MID_NOT_FOUND			 equ	  317
1   861		  =01E7			 ERROR_INVALID_ADDRESS			 equ	  487
1   862		  =0216			 ERROR_ARITHMETIC_OVERFLOW		 equ	  534
1   863		  =0217			 ERROR_PIPE_CONNECTED			 equ	  535
1   864		  =0218			 ERROR_PIPE_LISTENING			 equ	  536
1   865		  =03E2			 ERROR_EA_ACCESS_DENIED			 equ	  994
1   866		  =03E3			 ERROR_OPERATION_ABORTED		 equ	  995
1   867		  =03E4			 ERROR_IO_INCOMPLETE			 equ	  996
1   868		  =03E5			 ERROR_IO_PENDING			 equ	  997
1   869		  =03E6			 ERROR_NOACCESS				 equ	  998
1   870		  =03E7			 ERROR_SWAPERROR			 equ	  999
1   871		  =03E9			 ERROR_STACK_OVERFLOW			 equ	 1001
1   872		  =03EA			 ERROR_INVALID_MESSAGE			 equ	 1002
1   873		  =03EB			 ERROR_CAN_NOT_COMPLETE			 equ	 1003
1   874		  =03EC			 ERROR_INVALID_FLAGS			 equ	 1004
1   875		  =03ED			 ERROR_UNRECOGNIZED_VOLUME		 equ	 1005
1   876		  =03EE			 ERROR_FILE_INVALID			 equ	 1006
1   877		  =03EF			 ERROR_FULLSCREEN_MODE			 equ	 1007
1   878		  =03F0			 ERROR_NO_TOKEN				 equ	 1008
1   879		  =03F1			 ERROR_BADDB				 equ	 1009
1   880		  =03F2			 ERROR_BADKEY				 equ	 1010
1   881		  =03F3			 ERROR_CANTOPEN				 equ	 1011
1   882		  =03F4			 ERROR_CANTREAD				 equ	 1012
1   883		  =03F5			 ERROR_CANTWRITE			 equ	 1013
1   884		  =03F6			 ERROR_REGISTRY_RECOVERED		 equ	 1014
1   885		  =03F7			 ERROR_REGISTRY_CORRUPT			 equ	 1015
1   886		  =03F8			 ERROR_REGISTRY_IO_FAILED		 equ	 1016
1   887		  =03F9			 ERROR_NOT_REGISTRY_FILE		 equ	 1017
1   888		  =03FA			 ERROR_KEY_DELETED			 equ	 1018
1   889		  =03FB			 ERROR_NO_LOG_SPACE			 equ	 1019
1   890		  =03FC			 ERROR_KEY_HAS_CHILDREN			 equ	 1020
1   891		  =03FD			 ERROR_CHILD_MUST_BE_VOLATILE		 equ	 1021
1   892		  =03FE			 ERROR_NOTIFY_ENUM_DIR			 equ	 1022
1   893		  =041B			 ERROR_DEPENDENT_SERVICES_RUNNING	 equ	 1051
1   894		  =041C			 ERROR_INVALID_SERVICE_CONTROL		 equ	 1052
1   895		  =041D			 ERROR_SERVICE_REQUEST_TIMEOUT		 equ	 1053
1   896		  =041E			 ERROR_SERVICE_NO_THREAD		 equ	 1054
1   897		  =041F			 ERROR_SERVICE_DATABASE_LOCKED		 equ	 1055
1   898		  =0420			 ERROR_SERVICE_ALREADY_RUNNING		 equ	 1056
1   899		  =0421			 ERROR_INVALID_SERVICE_ACCOUNT		 equ	 1057
1   900		  =0422			 ERROR_SERVICE_DISABLED			 equ	 1058
1   901		  =0423			 ERROR_CIRCULAR_DEPENDENCY		 equ	 1059
1   902		  =0424			 ERROR_SERVICE_DOES_NOT_EXIST		 equ	 1060
1   903		  =0425			 ERROR_SERVICE_CANNOT_ACCEPT_CTRL	 equ	 1061
1   904		  =0426			 ERROR_SERVICE_NOT_ACTIVE		 equ	 1062
1   905		  =0427			 ERROR_FAILED_SERVICE_CONTROLLER_CONNECT equ	 1063
1   906		  =0428			 ERROR_EXCEPTION_IN_SERVICE		 equ	 1064
1   907		  =0429			 ERROR_DATABASE_DOES_NOT_EXIST		 equ	 1065
1   908		  =042A			 ERROR_SERVICE_SPECIFIC_ERROR		 equ	 1066
1   909		  =042B			 ERROR_PROCESS_ABORTED			 equ	 1067
1   910		  =042C			 ERROR_SERVICE_DEPENDENCY_FAIL		 equ	 1068
1   911		  =042D			 ERROR_SERVICE_LOGON_FAILED		 equ	 1069
1   912		  =042E			 ERROR_SERVICE_START_HANG		 equ	 1070
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 17
pmScript.ASM



1   913		  =042F			 ERROR_INVALID_SERVICE_LOCK		 equ	 1071
1   914		  =0430			 ERROR_SERVICE_MARKED_FOR_DELETE	 equ	 1072
1   915		  =0431			 ERROR_SERVICE_EXISTS			 equ	 1073
1   916		  =0432			 ERROR_ALREADY_RUNNING_LKG		 equ	 1074
1   917		  =0433			 ERROR_SERVICE_DEPENDENCY_DELETED	 equ	 1075
1   918		  =0434			 ERROR_BOOT_ALREADY_ACCEPTED		 equ	 1076
1   919		  =0435			 ERROR_SERVICE_NEVER_STARTED		 equ	 1077
1   920		  =0436			 ERROR_DUPLICATE_SERVICE_NAME		 equ	 1078
1   921		  =044C			 ERROR_END_OF_MEDIA			 equ	 1100
1   922		  =044D			 ERROR_FILEMARK_DETECTED		 equ	 1101
1   923		  =044E			 ERROR_BEGINNING_OF_MEDIA		 equ	 1102
1   924		  =044F			 ERROR_SETMARK_DETECTED			 equ	 1103
1   925		  =0450			 ERROR_NO_DATA_DETECTED			 equ	 1104
1   926		  =0451			 ERROR_PARTITION_FAILURE		 equ	 1105
1   927		  =0452			 ERROR_INVALID_BLOCK_LENGTH		 equ	 1106
1   928		  =0453			 ERROR_DEVICE_NOT_PARTITIONED		 equ	 1107
1   929		  =0454			 ERROR_UNABLE_TO_LOCK_MEDIA		 equ	 1108
1   930		  =0455			 ERROR_UNABLE_TO_UNLOAD_MEDIA		 equ	 1109
1   931		  =0456			 ERROR_MEDIA_CHANGED			 equ	 1110
1   932		  =0457			 ERROR_BUS_RESET			 equ	 1111
1   933		  =0458			 ERROR_NO_MEDIA_IN_DRIVE		 equ	 1112
1   934		  =0459			 ERROR_NO_UNICODE_TRANSLATION		 equ	 1113
1   935		  =045A			 ERROR_DLL_INIT_FAILED			 equ	 1114
1   936		  =045B			 ERROR_SHUTDOWN_IN_PROGRESS		 equ	 1115
1   937		  =045C			 ERROR_NO_SHUTDOWN_IN_PROGRESS		 equ	 1116
1   938		  =045D			 ERROR_IO_DEVICE			 equ	 1117
1   939		  =045E			 ERROR_SERIAL_NO_DEVICE			 equ	 1118
1   940		  =045F			 ERROR_IRQ_BUSY				 equ	 1119
1   941		  =0460			 ERROR_MORE_WRITES			 equ	 1120
1   942		  =0461			 ERROR_COUNTER_TIMEOUT			 equ	 1121
1   943		  =0462			 ERROR_FLOPPY_ID_MARK_NOT_FOUND		 equ	 1122
1   944		  =0463			 ERROR_FLOPPY_WRONG_CYLINDER		 equ	 1123
1   945		  =0464			 ERROR_FLOPPY_UNKNOWN_ERROR		 equ	 1124
1   946		  =0465			 ERROR_FLOPPY_BAD_REGISTERS		 equ	 1125
1   947		  =0466			 ERROR_DISK_RECALIBRATE_FAILED		 equ	 1126
1   948		  =0467			 ERROR_DISK_OPERATION_FAILED		 equ	 1127
1   949		  =0468			 ERROR_DISK_RESET_FAILED		 equ	 1128
1   950		  =0469			 ERROR_EOM_OVERFLOW			 equ	 1129
1   951		  =046A			 ERROR_NOT_ENOUGH_SERVER_MEMORY		 equ	 1130
1   952		  =046B			 ERROR_POSSIBLE_DEADLOCK		 equ	 1131
1   953		  =046C			 ERROR_MAPPED_ALIGNMENT			 equ	 1132
1   954		  =0474			 ERROR_SET_POWER_STATE_VETOED		 equ	 1140
1   955		  =0475			 ERROR_SET_POWER_STATE_FAILED		 equ	 1141
1   956		  =047E			 ERROR_OLD_WIN_VERSION			 equ	 1150
1   957		  =047F			 ERROR_APP_WRONG_OS			 equ	 1151
1   958		  =0480			 ERROR_SINGLE_INSTANCE_APP		 equ	 1152
1   959		  =0481			 ERROR_RMODE_APP			 equ	 1153
1   960		  =0482			 ERROR_INVALID_DLL			 equ	 1154
1   961		  =0483			 ERROR_NO_ASSOCIATION			 equ	 1155
1   962		  =0484			 ERROR_DDE_FAIL				 equ	 1156
1   963		  =0485			 ERROR_DLL_NOT_FOUND			 equ	 1157
1   964		  =089A			 ERROR_BAD_USERNAME			 equ	 2202
1   965		  =08CA			 ERROR_NOT_CONNECTED			 equ	 2250
1   966		  =0961			 ERROR_OPEN_FILES			 equ	 2401
1   967		  =0962			 ERROR_ACTIVE_CONNECTIONS		 equ	 2402
1   968		  =0964			 ERROR_DEVICE_IN_USE			 equ	 2404
1   969		  =04B0			 ERROR_BAD_DEVICE			 equ	 1200
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 18
pmScript.ASM



1   970		  =04B1			 ERROR_CONNECTION_UNAVAIL		 equ	 1201
1   971		  =04B2			 ERROR_DEVICE_ALREADY_REMEMBERED	 equ	 1202
1   972		  =04B3			 ERROR_NO_NET_OR_BAD_PATH		 equ	 1203
1   973		  =04B4			 ERROR_BAD_PROVIDER			 equ	 1204
1   974		  =04B5			 ERROR_CANNOT_OPEN_PROFILE		 equ	 1205
1   975		  =04B6			 ERROR_BAD_PROFILE			 equ	 1206
1   976		  =04B7			 ERROR_NOT_CONTAINER			 equ	 1207
1   977		  =04B8			 ERROR_EXTENDED_ERROR			 equ	 1208
1   978		  =04B9			 ERROR_INVALID_GROUPNAME		 equ	 1209
1   979		  =04BA			 ERROR_INVALID_COMPUTERNAME		 equ	 1210
1   980		  =04BB			 ERROR_INVALID_EVENTNAME		 equ	 1211
1   981		  =04BC			 ERROR_INVALID_DOMAINNAME		 equ	 1212
1   982		  =04BD			 ERROR_INVALID_SERVICENAME		 equ	 1213
1   983		  =04BE			 ERROR_INVALID_NETNAME			 equ	 1214
1   984		  =04BF			 ERROR_INVALID_SHARENAME		 equ	 1215
1   985		  =04C0			 ERROR_INVALID_PASSWORDNAME		 equ	 1216
1   986		  =04C1			 ERROR_INVALID_MESSAGENAME		 equ	 1217
1   987		  =04C2			 ERROR_INVALID_MESSAGEDEST		 equ	 1218
1   988		  =04C3			 ERROR_SESSION_CREDENTIAL_CONFLICT	 equ	 1219
1   989		  =04C4			 ERROR_REMOTE_SESSION_LIMIT_EXCEEDED	 equ	 1220
1   990		  =04C5			 ERROR_DUP_DOMAINNAME			 equ	 1221
1   991		  =04C6			 ERROR_NO_NETWORK			 equ	 1222
1   992		  =04C7			 ERROR_CANCELLED			 equ	 1223
1   993		  =04C8			 ERROR_USER_MAPPED_FILE			 equ	 1224
1   994		  =04C9			 ERROR_CONNECTION_REFUSED		 equ	 1225
1   995		  =04CA			 ERROR_GRACEFUL_DISCONNECT		 equ	 1226
1   996		  =04CB			 ERROR_ADDRESS_ALREADY_ASSOCIATED	 equ	 1227
1   997		  =04CC			 ERROR_ADDRESS_NOT_ASSOCIATED		 equ	 1228
1   998		  =04CD			 ERROR_CONNECTION_INVALID		 equ	 1229
1   999		  =04CE			 ERROR_CONNECTION_ACTIVE		 equ	 1230
1  1000		  =04CF			 ERROR_NETWORK_UNREACHABLE		 equ	 1231
1  1001		  =04D0			 ERROR_HOST_UNREACHABLE			 equ	 1232
1  1002		  =04D1			 ERROR_PROTOCOL_UNREACHABLE		 equ	 1233
1  1003		  =04D2			 ERROR_PORT_UNREACHABLE			 equ	 1234
1  1004		  =04D3			 ERROR_REQUEST_ABORTED			 equ	 1235
1  1005		  =04D4			 ERROR_CONNECTION_ABORTED		 equ	 1236
1  1006		  =04D5			 ERROR_RETRY				 equ	 1237
1  1007		  =04D6			 ERROR_CONNECTION_COUNT_LIMIT		 equ	 1238
1  1008		  =04D7			 ERROR_LOGIN_TIME_RESTRICTION		 equ	 1239
1  1009		  =04D8			 ERROR_LOGIN_WKSTA_RESTRICTION		 equ	 1240
1  1010		  =04D9			 ERROR_INCORRECT_ADDRESS		 equ	 1241
1  1011		  =04DA			 ERROR_ALREADY_REGISTERED		 equ	 1242
1  1012		  =04DB			 ERROR_SERVICE_NOT_FOUND		 equ	 1243
1  1013		  =04DC			 ERROR_NOT_AUTHENTICATED		 equ	 1244
1  1014		  =04DD			 ERROR_NOT_LOGGED_ON			 equ	 1245
1  1015		  =04DE			 ERROR_CONTINUE				 equ	 1246
1  1016		  =04DF			 ERROR_ALREADY_INITIALIZED		 equ	 1247
1  1017		  =04E0			 ERROR_NO_MORE_DEVICES			 equ	 1248
1  1018		  =0514			 ERROR_NOT_ALL_ASSIGNED			 equ	 1300
1  1019		  =0515			 ERROR_SOME_NOT_MAPPED			 equ	 1301
1  1020		  =0516			 ERROR_NO_QUOTAS_FOR_ACCOUNT		 equ	 1302
1  1021		  =0517			 ERROR_LOCAL_USER_SESSION_KEY		 equ	 1303
1  1022		  =0518			 ERROR_NULL_LM_PASSWORD			 equ	 1304
1  1023		  =0519			 ERROR_UNKNOWN_REVISION			 equ	 1305
1  1024		  =051A			 ERROR_REVISION_MISMATCH		 equ	 1306
1  1025		  =051B			 ERROR_INVALID_OWNER			 equ	 1307
1  1026		  =051C			 ERROR_INVALID_PRIMARY_GROUP		 equ	 1308
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 19
pmScript.ASM



1  1027		  =051D			 ERROR_NO_IMPERSONATION_TOKEN		 equ	 1309
1  1028		  =051E			 ERROR_CANT_DISABLE_MANDATORY		 equ	 1310
1  1029		  =051F			 ERROR_NO_LOGON_SERVERS			 equ	 1311
1  1030		  =0520			 ERROR_NO_SUCH_LOGON_SESSION		 equ	 1312
1  1031		  =0521			 ERROR_NO_SUCH_PRIVILEGE		 equ	 1313
1  1032		  =0522			 ERROR_PRIVILEGE_NOT_HELD		 equ	 1314
1  1033		  =0523			 ERROR_INVALID_ACCOUNT_NAME		 equ	 1315
1  1034		  =0524			 ERROR_USER_EXISTS			 equ	 1316
1  1035		  =0525			 ERROR_NO_SUCH_USER			 equ	 1317
1  1036		  =0526			 ERROR_GROUP_EXISTS			 equ	 1318
1  1037		  =0527			 ERROR_NO_SUCH_GROUP			 equ	 1319
1  1038		  =0528			 ERROR_MEMBER_IN_GROUP			 equ	 1320
1  1039		  =0529			 ERROR_MEMBER_NOT_IN_GROUP		 equ	 1321
1  1040		  =052A			 ERROR_LAST_ADMIN			 equ	 1322
1  1041		  =052B			 ERROR_WRONG_PASSWORD			 equ	 1323
1  1042		  =052C			 ERROR_ILL_FORMED_PASSWORD		 equ	 1324
1  1043		  =052D			 ERROR_PASSWORD_RESTRICTION		 equ	 1325
1  1044		  =052E			 ERROR_LOGON_FAILURE			 equ	 1326
1  1045		  =052F			 ERROR_ACCOUNT_RESTRICTION		 equ	 1327
1  1046		  =0530			 ERROR_INVALID_LOGON_HOURS		 equ	 1328
1  1047		  =0531			 ERROR_INVALID_WORKSTATION		 equ	 1329
1  1048		  =0532			 ERROR_PASSWORD_EXPIRED			 equ	 1330
1  1049		  =0533			 ERROR_ACCOUNT_DISABLED			 equ	 1331
1  1050		  =0534			 ERROR_NONE_MAPPED			 equ	 1332
1  1051		  =0535			 ERROR_TOO_MANY_LUIDS_REQUESTED		 equ	 1333
1  1052		  =0536			 ERROR_LUIDS_EXHAUSTED			 equ	 1334
1  1053		  =0537			 ERROR_INVALID_SUB_AUTHORITY		 equ	 1335
1  1054		  =0538			 ERROR_INVALID_ACL			 equ	 1336
1  1055		  =0539			 ERROR_INVALID_SID			 equ	 1337
1  1056		  =053A			 ERROR_INVALID_SECURITY_DESCR		 equ	 1338
1  1057		  =053C			 ERROR_BAD_INHERITANCE_ACL		 equ	 1340
1  1058		  =053D			 ERROR_SERVER_DISABLED			 equ	 1341
1  1059		  =053E			 ERROR_SERVER_NOT_DISABLED		 equ	 1342
1  1060		  =053F			 ERROR_INVALID_ID_AUTHORITY		 equ	 1343
1  1061		  =0540			 ERROR_ALLOTTED_SPACE_EXCEEDED		 equ	 1344
1  1062		  =0541			 ERROR_INVALID_GROUP_ATTRIBUTES		 equ	 1345
1  1063		  =0542			 ERROR_BAD_IMPERSONATION_LEVEL		 equ	 1346
1  1064		  =0543			 ERROR_CANT_OPEN_ANONYMOUS		 equ	 1347
1  1065		  =0544			 ERROR_BAD_VALIDATION_CLASS		 equ	 1348
1  1066		  =0545			 ERROR_BAD_TOKEN_TYPE			 equ	 1349
1  1067		  =0546			 ERROR_NO_SECURITY_ON_OBJECT		 equ	 1350
1  1068		  =0547			 ERROR_CANT_ACCESS_DOMAIN_INFO		 equ	 1351
1  1069		  =0548			 ERROR_INVALID_SERVER_STATE		 equ	 1352
1  1070		  =0549			 ERROR_INVALID_DOMAIN_STATE		 equ	 1353
1  1071		  =054A			 ERROR_INVALID_DOMAIN_ROLE		 equ	 1354
1  1072		  =054B			 ERROR_NO_SUCH_DOMAIN			 equ	 1355
1  1073		  =054C			 ERROR_DOMAIN_EXISTS			 equ	 1356
1  1074		  =054D			 ERROR_DOMAIN_LIMIT_EXCEEDED		 equ	 1357
1  1075		  =054E			 ERROR_INTERNAL_DB_CORRUPTION		 equ	 1358
1  1076		  =054F			 ERROR_INTERNAL_ERROR			 equ	 1359
1  1077		  =0550			 ERROR_GENERIC_NOT_MAPPED		 equ	 1360
1  1078		  =0551			 ERROR_BAD_DESCRIPTOR_FORMAT		 equ	 1361
1  1079		  =0552			 ERROR_NOT_LOGON_PROCESS		 equ	 1362
1  1080		  =0553			 ERROR_LOGON_SESSION_EXISTS		 equ	 1363
1  1081		  =0554			 ERROR_NO_SUCH_PACKAGE			 equ	 1364
1  1082		  =0555			 ERROR_BAD_LOGON_SESSION_STATE		 equ	 1365
1  1083		  =0556			 ERROR_LOGON_SESSION_COLLISION		 equ	 1366
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 20
pmScript.ASM



1  1084		  =0557			 ERROR_INVALID_LOGON_TYPE		 equ	 1367
1  1085		  =0558			 ERROR_CANNOT_IMPERSONATE		 equ	 1368
1  1086		  =0559			 ERROR_RXACT_INVALID_STATE		 equ	 1369
1  1087		  =055A			 ERROR_RXACT_COMMIT_FAILURE		 equ	 1370
1  1088		  =055B			 ERROR_SPECIAL_ACCOUNT			 equ	 1371
1  1089		  =055C			 ERROR_SPECIAL_GROUP			 equ	 1372
1  1090		  =055D			 ERROR_SPECIAL_USER			 equ	 1373
1  1091		  =055E			 ERROR_MEMBERS_PRIMARY_GROUP		 equ	 1374
1  1092		  =055F			 ERROR_TOKEN_ALREADY_IN_USE		 equ	 1375
1  1093		  =0560			 ERROR_NO_SUCH_ALIAS			 equ	 1376
1  1094		  =0561			 ERROR_MEMBER_NOT_IN_ALIAS		 equ	 1377
1  1095		  =0562			 ERROR_MEMBER_IN_ALIAS			 equ	 1378
1  1096		  =0563			 ERROR_ALIAS_EXISTS			 equ	 1379
1  1097		  =0564			 ERROR_LOGON_NOT_GRANTED		 equ	 1380
1  1098		  =0565			 ERROR_TOO_MANY_SECRETS			 equ	 1381
1  1099		  =0566			 ERROR_SECRET_TOO_LONG			 equ	 1382
1  1100		  =0567			 ERROR_INTERNAL_DB_ERROR		 equ	 1383
1  1101		  =0568			 ERROR_TOO_MANY_CONTEXT_IDS		 equ	 1384
1  1102		  =0569			 ERROR_LOGON_TYPE_NOT_GRANTED		 equ	 1385
1  1103		  =056A			 ERROR_NT_CROSS_ENCRYPTION_REQUIRED	 equ	 1386
1  1104		  =056B			 ERROR_NO_SUCH_MEMBER			 equ	 1387
1  1105		  =056C			 ERROR_INVALID_MEMBER			 equ	 1388
1  1106		  =056D			 ERROR_TOO_MANY_SIDS			 equ	 1389
1  1107		  =056E			 ERROR_LM_CROSS_ENCRYPTION_REQUIRED	 equ	 1390
1  1108		  =056F			 ERROR_NO_INHERITANCE			 equ	 1391
1  1109		  =0570			 ERROR_FILE_CORRUPT			 equ	 1392
1  1110		  =0571			 ERROR_DISK_CORRUPT			 equ	 1393
1  1111		  =0572			 ERROR_NO_USER_SESSION_KEY		 equ	 1394
1  1112		  =0573			 ERROR_LICENSE_QUOTA_EXCEEDED		 equ	 1395
1  1113		  =0578			 ERROR_INVALID_WINDOW_HANDLE		 equ	 1400
1  1114		  =0579			 ERROR_INVALID_MENU_HANDLE		 equ	 1401
1  1115		  =057A			 ERROR_INVALID_CURSOR_HANDLE		 equ	 1402
1  1116		  =057B			 ERROR_INVALID_ACCEL_HANDLE		 equ	 1403
1  1117		  =057C			 ERROR_INVALID_HOOK_HANDLE		 equ	 1404
1  1118		  =057D			 ERROR_INVALID_DWP_HANDLE		 equ	 1405
1  1119		  =057E			 ERROR_TLW_WITH_WSCHILD			 equ	 1406
1  1120		  =057F			 ERROR_CANNOT_FIND_WND_CLASS		 equ	 1407
1  1121		  =0580			 ERROR_WINDOW_OF_OTHER_THREAD		 equ	 1408
1  1122		  =0581			 ERROR_HOTKEY_ALREADY_REGISTERED	 equ	 1409
1  1123		  =0582			 ERROR_CLASS_ALREADY_EXISTS		 equ	 1410
1  1124		  =0583			 ERROR_CLASS_DOES_NOT_EXIST		 equ	 1411
1  1125		  =0584			 ERROR_CLASS_HAS_WINDOWS		 equ	 1412
1  1126		  =0585			 ERROR_INVALID_INDEX			 equ	 1413
1  1127		  =0586			 ERROR_INVALID_ICON_HANDLE		 equ	 1414
1  1128		  =0587			 ERROR_PRIVATE_DIALOG_INDEX		 equ	 1415
1  1129		  =0588			 ERROR_LISTBOX_ID_NOT_FOUND		 equ	 1416
1  1130		  =0589			 ERROR_NO_WILDCARD_CHARACTERS		 equ	 1417
1  1131		  =058A			 ERROR_CLIPBOARD_NOT_OPEN		 equ	 1418
1  1132		  =058B			 ERROR_HOTKEY_NOT_REGISTERED		 equ	 1419
1  1133		  =058C			 ERROR_WINDOW_NOT_DIALOG		 equ	 1420
1  1134		  =058D			 ERROR_CONTROL_ID_NOT_FOUND		 equ	 1421
1  1135		  =058E			 ERROR_INVALID_COMBOBOX_MESSAGE		 equ	 1422
1  1136		  =058F			 ERROR_WINDOW_NOT_COMBOBOX		 equ	 1423
1  1137		  =0590			 ERROR_INVALID_EDIT_HEIGHT		 equ	 1424
1  1138		  =0591			 ERROR_DC_NOT_FOUND			 equ	 1425
1  1139		  =0592			 ERROR_INVALID_HOOK_FILTER		 equ	 1426
1  1140		  =0593			 ERROR_INVALID_FILTER_PROC		 equ	 1427
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 21
pmScript.ASM



1  1141		  =0594			 ERROR_HOOK_NEEDS_HMOD			 equ	 1428
1  1142		  =0595			 ERROR_GLOBAL_ONLY_HOOK			 equ	 1429
1  1143		  =0596			 ERROR_JOURNAL_HOOK_SET			 equ	 1430
1  1144		  =0597			 ERROR_HOOK_NOT_INSTALLED		 equ	 1431
1  1145		  =0598			 ERROR_INVALID_LB_MESSAGE		 equ	 1432
1  1146		  =0599			 ERROR_SETCOUNT_ON_BAD_LB		 equ	 1433
1  1147		  =059A			 ERROR_LB_WITHOUT_TABSTOPS		 equ	 1434
1  1148		  =059B			 ERROR_DESTROY_OBJECT_OF_OTHER_THREAD	 equ	 1435
1  1149		  =059C			 ERROR_CHILD_WINDOW_MENU		 equ	 1436
1  1150		  =059D			 ERROR_NO_SYSTEM_MENU			 equ	 1437
1  1151		  =059E			 ERROR_INVALID_MSGBOX_STYLE		 equ	 1438
1  1152		  =059F			 ERROR_INVALID_SPI_VALUE		 equ	 1439
1  1153		  =05A0			 ERROR_SCREEN_ALREADY_LOCKED		 equ	 1440
1  1154		  =05A1			 ERROR_HWNDS_HAVE_DIFF_PARENT		 equ	 1441
1  1155		  =05A2			 ERROR_NOT_CHILD_WINDOW			 equ	 1442
1  1156		  =05A3			 ERROR_INVALID_GW_COMMAND		 equ	 1443
1  1157		  =05A4			 ERROR_INVALID_THREAD_ID		 equ	 1444
1  1158		  =05A5			 ERROR_NON_MDICHILD_WINDOW		 equ	 1445
1  1159		  =05A6			 ERROR_POPUP_ALREADY_ACTIVE		 equ	 1446
1  1160		  =05A7			 ERROR_NO_SCROLLBARS			 equ	 1447
1  1161		  =05A8			 ERROR_INVALID_SCROLLBAR_RANGE		 equ	 1448
1  1162		  =05A9			 ERROR_INVALID_SHOWWIN_COMMAND		 equ	 1449
1  1163		  =05AA			 ERROR_NO_SYSTEM_RESOURCES		 equ	 1450
1  1164		  =05AB			 ERROR_NONPAGED_SYSTEM_RESOURCES	 equ	 1451
1  1165		  =05AC			 ERROR_PAGED_SYSTEM_RESOURCES		 equ	 1452
1  1166		  =05AD			 ERROR_WORKING_SET_QUOTA		 equ	 1453
1  1167		  =05AE			 ERROR_PAGEFILE_QUOTA			 equ	 1454
1  1168		  =05AF			 ERROR_COMMITMENT_LIMIT			 equ	 1455
1  1169		  =05B0			 ERROR_MENU_ITEM_NOT_FOUND		 equ	 1456
1  1170		  =05DC			 ERROR_EVENTLOG_FILE_CORRUPT		 equ	 1500
1  1171		  =05DD			 ERROR_EVENTLOG_CANT_START		 equ	 1501
1  1172		  =05DE			 ERROR_LOG_FILE_FULL			 equ	 1502
1  1173		  =05DF			 ERROR_EVENTLOG_FILE_CHANGED		 equ	 1503
1  1174		  =06F8			 ERROR_INVALID_USER_BUFFER		 equ	 1784
1  1175		  =06F9			 ERROR_UNRECOGNIZED_MEDIA		 equ	 1785
1  1176		  =06FA			 ERROR_NO_TRUST_LSA_SECRET		 equ	 1786
1  1177		  =06FB			 ERROR_NO_TRUST_SAM_ACCOUNT		 equ	 1787
1  1178		  =06FC			 ERROR_TRUSTED_DOMAIN_FAILURE		 equ	 1788
1  1179		  =06FD			 ERROR_TRUSTED_RELATIONSHIP_FAILURE	 equ	 1789
1  1180		  =06FE			 ERROR_TRUST_FAILURE			 equ	 1790
1  1181		  =0700			 ERROR_NETLOGON_NOT_STARTED		 equ	 1792
1  1182		  =0701			 ERROR_ACCOUNT_EXPIRED			 equ	 1793
1  1183		  =0702			 ERROR_REDIRECTOR_HAS_OPEN_HANDLES	 equ	 1794
1  1184		  =0703			 ERROR_PRINTER_DRIVER_ALREADY_INSTALLED	 equ	 1795
1  1185		  =0704			 ERROR_UNKNOWN_PORT			 equ	 1796
1  1186		  =0705			 ERROR_UNKNOWN_PRINTER_DRIVER		 equ	 1797
1  1187		  =0706			 ERROR_UNKNOWN_PRINTPROCESSOR		 equ	 1798
1  1188		  =0707			 ERROR_INVALID_SEPARATOR_FILE		 equ	 1799
1  1189		  =0708			 ERROR_INVALID_PRIORITY			 equ	 1800
1  1190		  =0709			 ERROR_INVALID_PRINTER_NAME		 equ	 1801
1  1191		  =070A			 ERROR_PRINTER_ALREADY_EXISTS		 equ	 1802
1  1192		  =070B			 ERROR_INVALID_PRINTER_COMMAND		 equ	 1803
1  1193		  =070C			 ERROR_INVALID_DATATYPE			 equ	 1804
1  1194		  =070D			 ERROR_INVALID_ENVIRONMENT		 equ	 1805
1  1195		  =070F			 ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT equ	 1807
1  1196		  =0710			 ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT equ	 1808
1  1197		  =0711			 ERROR_NOLOGON_SERVER_TRUST_ACCOUNT	 equ	 1809
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 22
pmScript.ASM



1  1198		  =0712			 ERROR_DOMAIN_TRUST_INCONSISTENT	 equ	 1810
1  1199		  =0713			 ERROR_SERVER_HAS_OPEN_HANDLES		 equ	 1811
1  1200		  =0714			 ERROR_RESOURCE_DATA_NOT_FOUND		 equ	 1812
1  1201		  =0715			 ERROR_RESOURCE_TYPE_NOT_FOUND		 equ	 1813
1  1202		  =0716			 ERROR_RESOURCE_NAME_NOT_FOUND		 equ	 1814
1  1203		  =0717			 ERROR_RESOURCE_LANG_NOT_FOUND		 equ	 1815
1  1204		  =0718			 ERROR_NOT_ENOUGH_QUOTA			 equ	 1816
1  1205		  =076D			 ERROR_INVALID_TIME			 equ	 1901
1  1206		  =076E			 ERROR_INVALID_FORM_NAME		 equ	 1902
1  1207		  =076F			 ERROR_INVALID_FORM_SIZE		 equ	 1903
1  1208		  =0770			 ERROR_ALREADY_WAITING			 equ	 1904
1  1209		  =0771			 ERROR_PRINTER_DELETED			 equ	 1905
1  1210		  =0772			 ERROR_INVALID_PRINTER_STATE		 equ	 1906
1  1211		  =0773			 ERROR_PASSWORD_MUST_CHANGE		 equ	 1907
1  1212		  =0774			 ERROR_DOMAIN_CONTROLLER_NOT_FOUND	 equ	 1908
1  1213		  =0775			 ERROR_ACCOUNT_LOCKED_OUT		 equ	 1909
1  1214		  =07D0			 ERROR_INVALID_PIXEL_FORMAT		 equ	 2000
1  1215		  =07D1			 ERROR_BAD_DRIVER			 equ	 2001
1  1216		  =07D2			 ERROR_INVALID_WINDOW_STYLE		 equ	 2002
1  1217		  =07D3			 ERROR_METAFILE_NOT_SUPPORTED		 equ	 2003
1  1218		  =07D4			 ERROR_TRANSFORM_NOT_SUPPORTED		 equ	 2004
1  1219		  =07D5			 ERROR_CLIPPING_NOT_SUPPORTED		 equ	 2005
1  1220		  =0BB8			 ERROR_UNKNOWN_PRINT_MONITOR		 equ	 3000
1  1221		  =0BB9			 ERROR_PRINTER_DRIVER_IN_USE		 equ	 3001
1  1222		  =0BBA			 ERROR_SPOOL_FILE_NOT_FOUND		 equ	 3002
1  1223		  =0BBB			 ERROR_SPL_NO_STARTDOC			 equ	 3003
1  1224		  =0BBC			 ERROR_SPL_NO_ADDJOB			 equ	 3004
1  1225		  =0BBD			 ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED equ	 3005
1  1226		  =0BBE			 ERROR_PRINT_MONITOR_ALREADY_INSTALLED	 equ	 3006
1  1227		  =0FA0			 ERROR_WINS_INTERNAL			 equ	 4000
1  1228		  =0FA1			 ERROR_CAN_NOT_DEL_LOCAL_WINS		 equ	 4001
1  1229		  =0FA2			 ERROR_STATIC_INIT			 equ	 4002
1  1230		  =0FA3			 ERROR_INC_BACKUP			 equ	 4003
1  1231		  =0FA4			 ERROR_FULL_BACKUP			 equ	 4004
1  1232		  =0FA5			 ERROR_REC_NON_EXISTENT			 equ	 4005
1  1233		  =0FA6			 ERROR_RPL_NOT_ALLOWED			 equ	 4006
1  1234		  =17E6			 ERROR_NO_BROWSER_SERVERS_FOUND		 equ	 6118
1  1235					 ;
1  1236					 ;------------------------------------------------------------------------------
1  1237					 ;
1  1238					 ; ===================
1  1239					 ; edit	control	styles
1  1240					 ; ===================
1  1241					 ;
1  1242		  =0000			 ES_LEFT			 equ	 0000h
1  1243		  =0001			 ES_CENTER			 equ	 0001h
1  1244		  =0002			 ES_RIGHT			 equ	 0002h
1  1245		  =0004			 ES_MULTILINE			 equ	 0004h
1  1246		  =0008			 ES_UPPERCASE			 equ	 0008h
1  1247		  =0010			 ES_LOWERCASE			 equ	 0010h
1  1248		  =0020			 ES_PASSWORD			 equ	 0020h
1  1249		  =0040			 ES_AUTOVSCROLL			 equ	 0040h
1  1250		  =0080			 ES_AUTOHSCROLL			 equ	 0080h
1  1251		  =0100			 ES_NOHIDESEL			 equ	 0100h
1  1252		  =0400			 ES_OEMCONVERT			 equ	 0400h
1  1253		  =0800			 ES_READONLY			 equ	 0800h
1  1254		  =1000			 ES_WANTRETURN			 equ	 1000h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 23
pmScript.ASM



1  1255		  =2000			 ES_NUMBER			 equ	 2000h
1  1256					 ;
1  1257		  =0084			 ES_DEFAULT			 equ	 ES_MULTILINE+ES_AUTOHSCROLL
1  1258					 ;
1  1259					 ;------------------------------------------------------------------------------
1  1260					 ;
1  1261					 ; =============
1  1262					 ; font	families
1  1263					 ; =============
1  1264					 ;
1  1265		  =0000			 FF_DONTCARE			 equ	 0000h
1  1266		  =0010			 FF_ROMAN			 equ	 0010h
1  1267		  =0020			 FF_SWISS			 equ	 0020h
1  1268		  =0030			 FF_MODERN			 equ	 0030h
1  1269		  =0040			 FF_SCRIPT			 equ	 0040h
1  1270		  =0050			 FF_DECORATIVE			 equ	 0050h
1  1271					 ;
1  1272					 ;------------------------------------------------------------------------------
1  1273					 ;
1  1274					 ; ===============
1  1275					 ; file	attributes
1  1276					 ; ===============
1  1277					 ;
1  1278		  =0001			 FILE_ATTRIBUTE_READONLY	 equ	 00000001h
1  1279		  =0002			 FILE_ATTRIBUTE_HIDDEN		 equ	 00000002h
1  1280		  =0004			 FILE_ATTRIBUTE_SYSTEM		 equ	 00000004h
1  1281		  =0010			 FILE_ATTRIBUTE_DIRECTORY	 equ	 00000010h
1  1282		  =0020			 FILE_ATTRIBUTE_ARCHIVE		 equ	 00000020h
1  1283		  =0080			 FILE_ATTRIBUTE_NORMAL		 equ	 00000080h
1  1284		  =0100			 FILE_ATTRIBUTE_TEMPORARY	 equ	 00000100h
1  1285		  =0800			 FILE_ATTRIBUTE_COMPRESSED	 equ	 00000800h
1  1286					 ;
1  1287					 ;------------------------------------------------------------------------------
1  1288					 ;
1  1289					 ; ===================
1  1290					 ; file	creation flags
1  1291					 ; ===================
1  1292					 ;
1  1293		  =80000000		 FILE_FLAG_WRITE_THROUGH	 equ	 80000000h
1  1294		  =40000000		 FILE_FLAG_OVERLAPPED		 equ	 40000000h
1  1295		  =20000000		 FILE_FLAG_NO_BUFFERING		 equ	 20000000h
1  1296		  =10000000		 FILE_FLAG_RANDOM_ACCESS	 equ	 10000000h
1  1297		  =08000000		 FILE_FLAG_SEQUENTIAL_SCAN	 equ	 08000000h
1  1298		  =04000000		 FILE_FLAG_DELETE_ON_CLOSE	 equ	 04000000h
1  1299		  =02000000		 FILE_FLAG_BACKUP_SEMANTICS	 equ	 02000000h
1  1300		  =01000000		 FILE_FLAG_POSIX_SEMANTICS	 equ	 01000000h
1  1301					 ;
1  1302					 ;------------------------------------------------------------------------------
1  1303					 ;
1  1304					 ; ==================
1  1305					 ; file	notifications
1  1306					 ; ==================
1  1307					 ;
1  1308		  =0001			 FILE_NOTIFY_CHANGE_FILE_NAME	 equ	 0001h
1  1309		  =0002			 FILE_NOTIFY_CHANGE_DIR_NAME	 equ	 0002h
1  1310		  =0004			 FILE_NOTIFY_CHANGE_ATTRIBUTES	 equ	 0004h
1  1311		  =0008			 FILE_NOTIFY_CHANGE_SIZE	 equ	 0008h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 24
pmScript.ASM



1  1312		  =0010			 FILE_NOTIFY_CHANGE_LAST_WRITE	 equ	 0010h
1  1313		  =0100			 FILE_NOTIFY_CHANGE_SECURITY	 equ	 0100h
1  1314					 ;
1  1315					 ;------------------------------------------------------------------------------
1  1316					 ;
1  1317					 ; ================
1  1318					 ; file	share modes
1  1319					 ; ================
1  1320					 ;
1  1321		  =0000			 FILE_SHARE_NONE		 equ	 0000h
1  1322		  =0001			 FILE_SHARE_READ		 equ	 0001h
1  1323		  =0002			 FILE_SHARE_WRITE		 equ	 0002h
1  1324					 ;
1  1325		  =0003			 FILE_SHARE_READWRITE		 equ	 FILE_SHARE_READ+FILE_SHARE_WRITE
1  1326					 ;
1  1327					 ;------------------------------------------------------------------------------
1  1328					 ;
1  1329					 ; ========================
1  1330					 ; SetFilePointer() methods
1  1331					 ; ========================
1  1332					 ;
1  1333		  =0000			 FILE_BEGIN			 equ	 0
1  1334		  =0001			 FILE_CURRENT			 equ	 1
1  1335		  =0002			 FILE_END			 equ	 2
1  1336					 ;
1  1337					 ;------------------------------------------------------------------------------
1  1338					 ;
1  1339					 ; =================
1  1340					 ; file	system flags
1  1341					 ; =================
1  1342					 ;
1  1343		  =0001			 FILE_CASE_SENSITIVE_SEARCH	 equ	 00000001h
1  1344		  =0002			 FILE_CASE_PRESERVED_NAMES	 equ	 00000002h
1  1345		  =0004			 FILE_UNICODE_ON_DISK		 equ	 00000004h
1  1346		  =0008			 FILE_PERSISTENT_ACLS		 equ	 00000008h
1  1347		  =0010			 FILE_FILE_COMPRESSION		 equ	 00000010h
1  1348		  =8000			 FILE_VOLUME_IS_COMPRESSED	 equ	 00008000h
1  1349					 ;
1  1350					 FS_CASE_SENSITIVE		 equ	 FILE_CASE_SENSITIVE_SEARCH
1  1351					 FS_CASE_IS_PRESERVED		 equ	 FILE_CASE_PRESERVED_NAMES
1  1352					 FS_UNICODE_STORED_ON_DISK	 equ	 FILE_UNICODE_ON_DISK
1  1353					 FS_PERSISTENT_ACLS		 equ	 FILE_PERSISTENT_ACLS
1  1354					 FS_FILE_COMPRESSION		 equ	 FILE_FILE_COMPRESSION
1  1355					 FS_VOL_IS_COMPRESSED		 equ	 FILE_VOLUME_IS_COMPRESSED
1  1356					 ;
1  1357					 ;------------------------------------------------------------------------------
1  1358					 ;
1  1359					 ; ============
1  1360					 ; font	weights
1  1361					 ; ============
1  1362					 ;
1  1363		  =0000			 FW_DONTCARE			 equ	 000
1  1364		  =0064			 FW_THIN			 equ	 100
1  1365		  =00C8			 FW_EXTRALIGHT			 equ	 200
1  1366		  =012C			 FW_LIGHT			 equ	 300
1  1367		  =0190			 FW_NORMAL			 equ	 400
1  1368		  =01F4			 FW_MEDIUM			 equ	 500
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 25
pmScript.ASM



1  1369		  =0258			 FW_SEMIBOLD			 equ	 600
1  1370		  =02BC			 FW_BOLD			 equ	 700
1  1371		  =0320			 FW_EXTRABOLD			 equ	 800
1  1372		  =0384			 FW_HEAVY			 equ	 900
1  1373					 ;
1  1374					 FW_ULTRALIGHT			 equ	 FW_EXTRALIGHT
1  1375					 FW_REGULAR			 equ	 FW_NORMAL
1  1376					 FW_DEMIBOLD			 equ	 FW_SEMIBOLD
1  1377					 FW_ULTRABOLD			 equ	 FW_EXTRABOLD
1  1378					 FW_BLACK			 equ	 FW_HEAVY
1  1379					 ;
1  1380					 ;------------------------------------------------------------------------------
1  1381					 ;
1  1382					 ; ======================
1  1383					 ; GetClassLong() offsets
1  1384					 ; ======================
1  1385					 ;
1  1386		  =-0008		 GCL_MENUNAME			 equ	 -08
1  1387		  =-000A		 GCL_HBRBACKGROUND		 equ	 -10
1  1388		  =-000C		 GCL_HCURSOR			 equ	 -12
1  1389		  =-000E		 GCL_HICON			 equ	 -14
1  1390		  =-0010		 GCL_HMODULE			 equ	 -16
1  1391		  =-0012		 GCL_CBWNDEXTRA			 equ	 -18
1  1392		  =-0014		 GCL_CBCLSEXTRA			 equ	 -20
1  1393		  =-0018		 GCL_WNDPROC			 equ	 -24
1  1394		  =-001A		 GCL_STYLE			 equ	 -26
1  1395		  =-0020		 GCW_ATOM			 equ	 -32
1  1396		  =-0022		 GCL_HICONSM			 equ	 -34
1  1397					 ;
1  1398					 ;------------------------------------------------------------------------------
1  1399					 ;
1  1400					 ; =================
1  1401					 ; file	access types
1  1402					 ; =================
1  1403					 ;
1  1404		  =10000000		 GENERIC_ALL			 equ	 10000000h
1  1405		  =20000000		 GENERIC_EXECUTE		 equ	 20000000h
1  1406		  =40000000		 GENERIC_WRITE			 equ	 40000000h
1  1407		  =80000000		 GENERIC_READ			 equ	 80000000h
1  1408					 ;
1  1409		  =C0000000		 GENERIC_READWRITE		 equ	 GENERIC_READ+GENERIC_WRITE
1  1410					 ;
1  1411					 ;------------------------------------------------------------------------------
1  1412					 ;
1  1413					 ; ===================
1  1414					 ; global memory flags
1  1415					 ; ===================
1  1416					 ;
1  1417		  =0000			 GMEM_FIXED			 equ	 0000h
1  1418		  =0002			 GMEM_MOVEABLE			 equ	 0002h
1  1419		  =0010			 GMEM_NOCOMPACT			 equ	 0010h
1  1420		  =0020			 GMEM_NODISCARD			 equ	 0020h
1  1421		  =0040			 GMEM_ZEROINIT			 equ	 0040h
1  1422		  =0080			 GMEM_MODIFY			 equ	 0080h
1  1423		  =0100			 GMEM_DISCARDABLE		 equ	 0100h
1  1424		  =1000			 GMEM_NOT_BANKED		 equ	 1000h
1  1425		  =2000			 GMEM_SHARE			 equ	 2000h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 26
pmScript.ASM



1  1426		  =2000			 GMEM_DDESHARE			 equ	 2000h
1  1427		  =4000			 GMEM_NOTIFY			 equ	 4000h
1  1428		  =8000			 GMEM_INVALID_HANDLE		 equ	 8000h
1  1429					 ;
1  1430		  =7F72			 GMEM_VALID_FLAGS		 equ	 7F72h
1  1431					 GMEM_LOWER			 equ	 GMEM_NOT_BANKED
1  1432					 ;
1  1433					 ;------------------------------------------------------------------------------
1  1434					 ;
1  1435					 ; ================
1  1436					 ; GetWindow() id's
1  1437					 ; ================
1  1438					 ;
1  1439		  =0000			 GW_HWNDFIRST			 equ	 0
1  1440		  =0001			 GW_HWNDLAST			 equ	 1
1  1441		  =0002			 GW_HWNDNEXT			 equ	 2
1  1442		  =0003			 GW_HWNDPREV			 equ	 3
1  1443		  =0004			 GW_OWNER			 equ	 4
1  1444		  =0005			 GW_CHILD			 equ	 5
1  1445					 ;
1  1446		  =0005			 GW_MAX				 equ	 5
1  1447					 ;
1  1448					 ;------------------------------------------------------------------------------
1  1449					 ;
1  1450					 ; =======================
1  1451					 ; GetWindowLong() offsets
1  1452					 ; =======================
1  1453					 ;
1  1454		  =-0004		 GWL_WNDPROC			 equ	 -04
1  1455		  =-0006		 GWL_HINSTANCE			 equ	 -06
1  1456		  =-0008		 GWL_HWNDPARENT			 equ	 -08
1  1457		  =-0010		 GWL_STYLE			 equ	 -16
1  1458		  =-0014		 GWL_EXSTYLE			 equ	 -20
1  1459		  =-0015		 GWL_USERDATA			 equ	 -21
1  1460		  =-000C		 GWL_ID				 equ	 -12
1  1461					 ;
1  1462					 ;------------------------------------------------------------------------------
1  1463					 ;
1  1464					 ; ==================
1  1465					 ; WinHelp() commands
1  1466					 ; ==================
1  1467					 ;
1  1468		  =0001			 HELP_CONTEXT			 equ	 0001h
1  1469		  =0002			 HELP_QUIT			 equ	 0002h
1  1470		  =0003			 HELP_INDEX			 equ	 0003h
1  1471		  =0003			 HELP_CONTENTS			 equ	 0003h
1  1472		  =0004			 HELP_HELPONHELP		 equ	 0004h
1  1473		  =0005			 HELP_SETINDEX			 equ	 0005h
1  1474		  =0005			 HELP_SETCONTENTS		 equ	 0005h
1  1475		  =0008			 HELP_CONTEXTPOPUP		 equ	 0008h
1  1476		  =0009			 HELP_FORCEFILE			 equ	 0009h
1  1477		  =000A			 HELP_CONTEXTMENU		 equ	 000Ah
1  1478		  =000B			 HELP_FINDER			 equ	 000Bh
1  1479		  =000C			 HELP_WM_HELP			 equ	 000Ch
1  1480		  =000D			 HELP_SETPOPUP_POS		 equ	 000Dh
1  1481		  =0010			 HELP_TCARD_DATA		 equ	 0010h
1  1482		  =0011			 HELP_TCARD_OTHER_CALLER	 equ	 0011h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 27
pmScript.ASM



1  1483		  =0101			 HELP_KEY			 equ	 0101h
1  1484		  =0102			 HELP_COMMAND			 equ	 0102h
1  1485		  =0105			 HELP_PARTIALKEY		 equ	 0105h
1  1486		  =0201			 HELP_MULTIKEY			 equ	 0201h
1  1487		  =0203			 HELP_SETWINPOS			 equ	 0203h
1  1488		  =8000			 HELP_TCARD			 equ	 8000h
1  1489					 ;
1  1490					 ;------------------------------------------------------------------------------
1  1491					 ;
1  1492					 ; =======================
1  1493					 ; hit test position codes
1  1494					 ; =======================
1  1495					 ;
1  1496		  =-0002		 HTERROR			 equ	 -2
1  1497		  =-0001		 HTTRANSPARENT			 equ	 -1
1  1498		  =0000			 HTNOWHERE			 equ	  0
1  1499		  =0001			 HTCLIENT			 equ	  1
1  1500		  =0002			 HTCAPTION			 equ	  2
1  1501		  =0003			 HTSYSMENU			 equ	  3
1  1502		  =0004			 HTGROWBOX			 equ	  4
1  1503		  =0005			 HTMENU				 equ	  5
1  1504		  =0006			 HTHSCROLL			 equ	  6
1  1505		  =0007			 HTVSCROLL			 equ	  7
1  1506		  =0008			 HTMINBUTTON			 equ	  8
1  1507		  =0009			 HTMAXBUTTON			 equ	  9
1  1508					 ;
1  1509					 HTSIZEFIRST			 equ	 HTLEFT
1  1510		  =000A			 HTLEFT				 equ	 10
1  1511		  =000B			 HTRIGHT			 equ	 11
1  1512		  =000C			 HTTOP				 equ	 12
1  1513		  =000D			 HTTOPLEFT			 equ	 13
1  1514		  =000E			 HTTOPRIGHT			 equ	 14
1  1515		  =000F			 HTBOTTOM			 equ	 15
1  1516		  =0010			 HTBOTTOMLEFT			 equ	 16
1  1517		  =0011			 HTBOTTOMRIGHT			 equ	 17
1  1518					 HTSIZELAST			 equ	 HTBOTTOMRIGHT
1  1519					 ;
1  1520		  =0012			 HTBORDER			 equ	 18
1  1521		  =0013			 HTOBJECT			 equ	 19
1  1522		  =0014			 HTCLOSE			 equ	 20
1  1523		  =0015			 HTHELP				 equ	 21
1  1524					 ;
1  1525					 HTSIZE				 equ	 HTGROWBOX
1  1526					 HTREDUCE			 equ	 HTMINBUTTON
1  1527					 HTZOOM				 equ	 HTMAXBUTTON
1  1528					 ;
1  1529					 ;------------------------------------------------------------------------------
1  1530					 ;
1  1531					 ; ===================
1  1532					 ; toolbar bitmap id's
1  1533					 ; ===================
1  1534					 ;
1  1535		  =0000			 IDB_STD_SMALL_COLOR		 equ	  0
1  1536		  =0001			 IDB_STD_LARGE_COLOR		 equ	  1
1  1537		  =0004			 IDB_VIEW_SMALL_COLOR		 equ	  4
1  1538		  =0005			 IDB_VIEW_LARGE_COLOR		 equ	  5
1  1539					 ;
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 28
pmScript.ASM



1  1540		  =-0001		 HINST_COMMCTRL			 equ	 -1
1  1541					 ;
1  1542					 ;------------------------------------------------------------------------------
1  1543					 ;
1  1544					 ; ====================
1  1545					 ; standard cursor id's
1  1546					 ; ====================
1  1547					 ;
1  1548		  =7F00			 IDC_ARROW			 equ	 32512
1  1549		  =7F01			 IDC_IBEAM			 equ	 32513
1  1550		  =7F02			 IDC_WAIT			 equ	 32514
1  1551		  =7F03			 IDC_CROSS			 equ	 32515
1  1552		  =7F04			 IDC_UPARROW			 equ	 32516
1  1553		  =7F80			 IDC_SIZE			 equ	 32640	 ;obsolete, use	IDC_SIZEALL
1  1554		  =7F81			 IDC_ICON			 equ	 32641	 ;obsolete, use	IDC_ARROW
1  1555		  =7F82			 IDC_SIZENWSE			 equ	 32642
1  1556		  =7F83			 IDC_SIZENESW			 equ	 32643
1  1557		  =7F84			 IDC_SIZEWE			 equ	 32644
1  1558		  =7F85			 IDC_SIZENS			 equ	 32645
1  1559		  =7F86			 IDC_SIZEALL			 equ	 32646
1  1560		  =7F88			 IDC_NO				 equ	 32648
1  1561		  =7F8A			 IDC_APPSTARTING		 equ	 32650
1  1562		  =7F8B			 IDC_HELP			 equ	 32651
1  1563					 ;
1  1564					 ;------------------------------------------------------------------------------
1  1565					 ;
1  1566					 ; ==================
1  1567					 ; standard icon id's
1  1568					 ; ==================
1  1569					 ;
1  1570		  =7F00			 IDI_APPLICATION		 equ	 32512
1  1571		  =7F01			 IDI_HAND			 equ	 32513
1  1572		  =7F02			 IDI_QUESTION			 equ	 32514
1  1573		  =7F03			 IDI_EXCLAMATION		 equ	 32515
1  1574		  =7F04			 IDI_ASTERISK			 equ	 32516
1  1575		  =7F05			 IDI_WINLOGO			 equ	 32517
1  1576					 ;
1  1577					 ;------------------------------------------------------------------------------
1  1578					 ;
1  1579					 ; ===================
1  1580					 ; dialog command id's
1  1581					 ; ===================
1  1582					 ;
1  1583		  =0001			 IDOK				 equ	 1
1  1584		  =0002			 IDCANCEL			 equ	 2
1  1585		  =0003			 IDABORT			 equ	 3
1  1586		  =0004			 IDRETRY			 equ	 4
1  1587		  =0005			 IDIGNORE			 equ	 5
1  1588		  =0006			 IDYES				 equ	 6
1  1589		  =0007			 IDNO				 equ	 7
1  1590		  =0008			 IDCLOSE			 equ	 8
1  1591		  =0009			 IDHELP				 equ	 9
1  1592					 ;
1  1593					 ;------------------------------------------------------------------------------
1  1594					 ;
1  1595					 ; =============================
1  1596					 ; keyboard message lParam flags
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 29
pmScript.ASM



1  1597					 ; =============================
1  1598					 ;
1  1599		  =0100			 KF_EXTENDED			 equ	 0100h
1  1600		  =0800			 KF_DLGMODE			 equ	 0800h
1  1601		  =1000			 KF_MENUMODE			 equ	 1000h
1  1602		  =2000			 KF_ALTDOWN			 equ	 2000h
1  1603		  =4000			 KF_REPEAT			 equ	 4000h
1  1604		  =8000			 KF_UP				 equ	 8000h
1  1605					 ;
1  1606					 ;------------------------------------------------------------------------------
1  1607					 ;
1  1608					 ; ================
1  1609					 ; listbox messages
1  1610					 ; ================
1  1611					 ;
1  1612		  =0180			 LB_ADDSTRING			 equ	 0180h
1  1613		  =0181			 LB_INSERTSTRING		 equ	 0181h
1  1614		  =0182			 LB_DELETESTRING		 equ	 0182h
1  1615		  =0183			 LB_SELITEMRANGEEX		 equ	 0183h
1  1616		  =0184			 LB_RESETCONTENT		 equ	 0184h
1  1617		  =0185			 LB_SETSEL			 equ	 0185h
1  1618		  =0186			 LB_SETCURSEL			 equ	 0186h
1  1619		  =0187			 LB_GETSEL			 equ	 0187h
1  1620		  =0188			 LB_GETCURSEL			 equ	 0188h
1  1621		  =0189			 LB_GETTEXT			 equ	 0189h
1  1622		  =018A			 LB_GETTEXTLEN			 equ	 018Ah
1  1623		  =018B			 LB_GETCOUNT			 equ	 018Bh
1  1624		  =018C			 LB_SELECTSTRING		 equ	 018Ch
1  1625		  =018D			 LB_DIR				 equ	 018Dh
1  1626		  =018E			 LB_GETTOPINDEX			 equ	 018Eh
1  1627		  =018F			 LB_FINDSTRING			 equ	 018Fh
1  1628		  =0190			 LB_GETSELCOUNT			 equ	 0190h
1  1629		  =0191			 LB_GETSELITEMS			 equ	 0191h
1  1630		  =0192			 LB_SETTABSTOPS			 equ	 0192h
1  1631		  =0193			 LB_GETHORIZONTALEXTENT		 equ	 0193h
1  1632		  =0194			 LB_SETHORIZONTALEXTENT		 equ	 0194h
1  1633		  =0195			 LB_SETCOLUMNWIDTH		 equ	 0195h
1  1634		  =0196			 LB_ADDFILE			 equ	 0196h
1  1635		  =0197			 LB_SETTOPINDEX			 equ	 0197h
1  1636		  =0198			 LB_GETITEMRECT			 equ	 0198h
1  1637		  =0199			 LB_GETITEMDATA			 equ	 0199h
1  1638		  =019A			 LB_SETITEMDATA			 equ	 019Ah
1  1639		  =019B			 LB_SELITEMRANGE		 equ	 019Bh
1  1640		  =019C			 LB_SETANCHORINDEX		 equ	 019Ch
1  1641		  =019D			 LB_GETANCHORINDEX		 equ	 019Dh
1  1642		  =019E			 LB_SETCARETINDEX		 equ	 019Eh
1  1643		  =019F			 LB_GETCARETINDEX		 equ	 019Fh
1  1644		  =01A0			 LB_SETITEMHEIGHT		 equ	 01A0h
1  1645		  =01A1			 LB_GETITEMHEIGHT		 equ	 01A1h
1  1646		  =01A2			 LB_FINDSTRINGEXACT		 equ	 01A2h
1  1647		  =01A5			 LB_SETLOCALE			 equ	 01A5h
1  1648		  =01A6			 LB_GETLOCALE			 equ	 01A6h
1  1649		  =01A7			 LB_SETCOUNT			 equ	 01A7h
1  1650		  =01A8			 LB_INITSTORAGE			 equ	 01A8h
1  1651		  =01A9			 LB_ITEMFROMPOINT		 equ	 01A9h
1  1652		  =01B0			 LB_MSGMAX			 equ	 01B0h
1  1653					 ;
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 30
pmScript.ASM



1  1654					 ;------------------------------------------------------------------------------
1  1655					 ;
1  1656					 ; =====================
1  1657					 ; listbox return values
1  1658					 ; =====================
1  1659					 ;
1  1660		  =0000			 LB_OKAY			 equ	  0
1  1661		  =-0001		 LB_ERR				 equ	 -1
1  1662		  =-0002		 LB_ERRSPACE			 equ	 -2
1  1663					 ;
1  1664					 ;------------------------------------------------------------------------------
1  1665					 ;
1  1666					 ; ==========================
1  1667					 ; listbox notification	codes
1  1668					 ; ==========================
1  1669					 ;
1  1670		  =-0002		 LBN_ERRSPACE			 equ	 -2
1  1671		  =0001			 LBN_SELCHANGE			 equ	  1
1  1672		  =0002			 LBN_DBLCLK			 equ	  2
1  1673		  =0003			 LBN_SELCANCEL			 equ	  3
1  1674		  =0004			 LBN_SETFOCUS			 equ	  4
1  1675		  =0005			 LBN_KILLFOCUS			 equ	  5
1  1676					 ;
1  1677					 ;------------------------------------------------------------------------------
1  1678					 ;
1  1679					 ; ==============
1  1680					 ; listbox styles
1  1681					 ; ==============
1  1682					 ;
1  1683		  =0001			 LBS_NOTIFY			 equ	 00000001h
1  1684		  =0002			 LBS_SORT			 equ	 00000002h
1  1685		  =0004			 LBS_NOREDRAW			 equ	 00000004h
1  1686		  =0008			 LBS_MULTIPLESEL		 equ	 00000008h
1  1687		  =0010			 LBS_OWNERDRAWFIXED		 equ	 00000010h
1  1688		  =0020			 LBS_OWNERDRAWVARIABLE		 equ	 00000020h
1  1689		  =0040			 LBS_HASSTRINGS			 equ	 00000040h
1  1690		  =0080			 LBS_USETABSTOPS		 equ	 00000080h
1  1691		  =0100			 LBS_NOINTEGRALHEIGHT		 equ	 00000100h
1  1692		  =0200			 LBS_MULTICOLUMN		 equ	 00000200h
1  1693		  =0400			 LBS_WANTKEYBOARDINPUT		 equ	 00000400h
1  1694		  =0800			 LBS_EXTENDEDSEL		 equ	 00000800h
1  1695		  =1000			 LBS_DISABLENOSCROLL		 equ	 00001000h
1  1696		  =2000			 LBS_NODATA			 equ	 00002000h
1  1697		  =4000			 LBS_NOSEL			 equ	 00004000h
1  1698		  =00A00003		 LBS_STANDARD			 equ	 00A00003h
1  1699					 ;
1  1700					 ;------------------------------------------------------------------------------
1  1701					 ;
1  1702					 ; ==================
1  1703					 ; local memory	flags
1  1704					 ; ==================
1  1705					 ;
1  1706		  =0000			 LMEM_FIXED			 equ	 0000h
1  1707		  =0002			 LMEM_MOVEABLE			 equ	 0002h
1  1708		  =0010			 LMEM_NOCOMPACT			 equ	 0010h
1  1709		  =0020			 LMEM_NODISCARD			 equ	 0020h
1  1710		  =0040			 LMEM_ZEROINIT			 equ	 0040h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 31
pmScript.ASM



1  1711		  =0080			 LMEM_MODIFY			 equ	 0080h
1  1712		  =00FF			 LMEM_LOCKCOUNT			 equ	 00FFh
1  1713		  =0F00			 LMEM_DISCARDABLE		 equ	 0F00h
1  1714		  =4000			 LMEM_DISCARDED			 equ	 4000h
1  1715		  =8000			 LMEM_INVALID_HANDLE		 equ	 8000h
1  1716					 ;
1  1717		  =0F72			 LMEM_VALID_FLAGS		 equ	 0F72h
1  1718					 ;
1  1719					 NONZEROLHND			 equ	 LMEM_MOVEABLE
1  1720					 NONZEROLPTR			 equ	 LMEM_FIXED
1  1721					 ;
1  1722		  =0042			 LHND				 equ	 LMEM_ZEROINIT+LMEM_MOVEABLE
1  1723		  =0040			 LPTR				 equ	 LMEM_ZEROINIT+LMEM_FIXED
1  1724					 ;
1  1725					 ;------------------------------------------------------------------------------
1  1726					 ;
1  1727					 ; ==================
1  1728					 ; list	view messages
1  1729					 ; ==================
1  1730					 ;
1  1731		  =1000			 LVM_FIRST			 equ	 1000h
1  1732					 ;
1  1733		  =1000			 LVM_GETBKCOLOR			 equ	 LVM_FIRST+000
1  1734		  =1001			 LVM_SETBKCOLOR			 equ	 LVM_FIRST+001
1  1735		  =1002			 LVM_GETIMAGELIST		 equ	 LVM_FIRST+002
1  1736		  =1003			 LVM_SETIMAGELIST		 equ	 LVM_FIRST+003
1  1737		  =1004			 LVM_GETITEMCOUNT		 equ	 LVM_FIRST+004
1  1738		  =1005			 LVM_GETITEMA			 equ	 LVM_FIRST+005
1  1739		  =1006			 LVM_SETITEMA			 equ	 LVM_FIRST+006
1  1740		  =1007			 LVM_INSERTITEMA		 equ	 LVM_FIRST+007
1  1741		  =1008			 LVM_DELETEITEM			 equ	 LVM_FIRST+008
1  1742		  =1009			 LVM_DELETEALLITEMS		 equ	 LVM_FIRST+009
1  1743		  =100A			 LVM_GETCALLBACKMASK		 equ	 LVM_FIRST+010
1  1744		  =100B			 LVM_SETCALLBACKMASK		 equ	 LVM_FIRST+011
1  1745		  =100C			 LVM_GETNEXTITEM		 equ	 LVM_FIRST+012
1  1746		  =100D			 LVM_FINDITEMA			 equ	 LVM_FIRST+013
1  1747		  =100E			 LVM_GETITEMRECT		 equ	 LVM_FIRST+014
1  1748		  =100F			 LVM_SETITEMPOSITION		 equ	 LVM_FIRST+015
1  1749		  =1010			 LVM_GETITEMPOSITION		 equ	 LVM_FIRST+016
1  1750		  =1011			 LVM_GETSTRINGWIDTHA		 equ	 LVM_FIRST+017
1  1751		  =1012			 LVM_HITTEST			 equ	 LVM_FIRST+018
1  1752		  =1013			 LVM_ENSUREVISIBLE		 equ	 LVM_FIRST+019
1  1753		  =1014			 LVM_SCROLL			 equ	 LVM_FIRST+020
1  1754		  =1015			 LVM_REDRAWITEMS		 equ	 LVM_FIRST+021
1  1755		  =1016			 LVM_ARRANGE			 equ	 LVM_FIRST+022
1  1756		  =1017			 LVM_EDITLABELA			 equ	 LVM_FIRST+023
1  1757		  =1018			 LVM_GETEDITCONTROL		 equ	 LVM_FIRST+024
1  1758		  =1019			 LVM_GETCOLUMNA			 equ	 LVM_FIRST+025
1  1759		  =101A			 LVM_SETCOLUMNA			 equ	 LVM_FIRST+026
1  1760		  =101B			 LVM_INSERTCOLUMNA		 equ	 LVM_FIRST+027
1  1761		  =101C			 LVM_DELETECOLUMN		 equ	 LVM_FIRST+028
1  1762		  =101D			 LVM_GETCOLUMNWIDTH		 equ	 LVM_FIRST+029
1  1763		  =101E			 LVM_SETCOLUMNWIDTH		 equ	 LVM_FIRST+030
1  1764		  =1021			 LVM_CREATEDRAGIMAGE		 equ	 LVM_FIRST+033
1  1765		  =1022			 LVM_GETVIEWRECT		 equ	 LVM_FIRST+034
1  1766		  =1023			 LVM_GETTEXTCOLOR		 equ	 LVM_FIRST+035
1  1767		  =1024			 LVM_SETTEXTCOLOR		 equ	 LVM_FIRST+036
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 32
pmScript.ASM



1  1768		  =1025			 LVM_GETTEXTBKCOLOR		 equ	 LVM_FIRST+037
1  1769		  =1026			 LVM_SETTEXTBKCOLOR		 equ	 LVM_FIRST+038
1  1770		  =1027			 LVM_GETTOPINDEX		 equ	 LVM_FIRST+039
1  1771		  =1028			 LVM_GETCOUNTPERPAGE		 equ	 LVM_FIRST+040
1  1772		  =1029			 LVM_GETORIGIN			 equ	 LVM_FIRST+041
1  1773		  =102A			 LVM_UPDATE			 equ	 LVM_FIRST+042
1  1774		  =102B			 LVM_SETITEMSTATE		 equ	 LVM_FIRST+043
1  1775		  =102C			 LVM_GETITEMSTATE		 equ	 LVM_FIRST+044
1  1776		  =102D			 LVM_GETITEMTEXTA		 equ	 LVM_FIRST+045
1  1777		  =102E			 LVM_SETITEMTEXTA		 equ	 LVM_FIRST+046
1  1778		  =102F			 LVM_SETITEMCOUNT		 equ	 LVM_FIRST+047
1  1779		  =1030			 LVM_SORTITEMS			 equ	 LVM_FIRST+048
1  1780		  =1031			 LVM_SETITEMPOSITION32		 equ	 LVM_FIRST+049
1  1781		  =1032			 LVM_GETSELECTEDCOUNT		 equ	 LVM_FIRST+050
1  1782		  =1033			 LVM_GETITEMSPACING		 equ	 LVM_FIRST+051
1  1783		  =1034			 LVM_GETISEARCHSTRINGA		 equ	 LVM_FIRST+052
1  1784					 ;
1  1785		  =104B			 LVM_GETITEMW			 equ	 LVM_FIRST+075
1  1786		  =104C			 LVM_SETITEMW			 equ	 LVM_FIRST+076
1  1787		  =104D			 LVM_INSERTITEMW		 equ	 LVM_FIRST+077
1  1788		  =1053			 LVM_FINDITEMW			 equ	 LVM_FIRST+083
1  1789		  =1057			 LVM_GETSTRINGWIDTHW		 equ	 LVM_FIRST+087
1  1790		  =105F			 LVM_GETCOLUMNW			 equ	 LVM_FIRST+095
1  1791		  =1060			 LVM_SETCOLUMNW			 equ	 LVM_FIRST+096
1  1792		  =1061			 LVM_INSERTCOLUMNW		 equ	 LVM_FIRST+097
1  1793		  =1073			 LVM_GETITEMTEXTW		 equ	 LVM_FIRST+115
1  1794		  =1074			 LVM_SETITEMTEXTW		 equ	 LVM_FIRST+116
1  1795		  =1075			 LVM_GETISEARCHSTRINGW		 equ	 LVM_FIRST+117
1  1796		  =1076			 LVM_EDITLABELW			 equ	 LVM_FIRST+118
1  1797					 ;
1  1798					 LVM_GETITEM			 equ	 LVM_GETITEMA
1  1799					 LVM_SETITEM			 equ	 LVM_SETITEMA
1  1800					 LVM_INSERTITEM			 equ	 LVM_INSERTITEMA
1  1801					 LVM_FINDITEM			 equ	 LVM_FINDITEMA
1  1802					 LVM_GETSTRINGWIDTH		 equ	 LVM_GETSTRINGWIDTHA
1  1803					 LVM_GETCOLUMN			 equ	 LVM_GETCOLUMNA
1  1804					 LVM_SETCOLUMN			 equ	 LVM_SETCOLUMNA
1  1805					 LVM_INSERTCOLUMN		 equ	 LVM_INSERTCOLUMNA
1  1806					 LVM_GETITEMTEXT		 equ	 LVM_GETITEMTEXTA
1  1807					 LVM_SETITEMTEXT		 equ	 LVM_SETITEMTEXTA
1  1808					 LVM_GETISEARCHSTRING		 equ	 LVM_GETISEARCHSTRINGA
1  1809					 LVM_EDITLABEL			 equ	 LVM_EDITLABELA
1  1810					 ;
1  1811					 ;------------------------------------------------------------------------------
1  1812					 ;
1  1813					 ; =======================
1  1814					 ; list	view notifications
1  1815					 ; =======================
1  1816					 ;
1  1817		  =-0064		 LVN_FIRST			 equ	 -100
1  1818		  =-00C7		 LVN_LAST			 equ	 LVN_FIRST-99
1  1819					 ;
1  1820		  =-0064		 LVN_ITEMCHANGING		 equ	 LVN_FIRST-00
1  1821		  =-0065		 LVN_ITEMCHANGED		 equ	 LVN_FIRST-01
1  1822		  =-0066		 LVN_INSERTITEM			 equ	 LVN_FIRST-02
1  1823		  =-0067		 LVN_DELETEITEM			 equ	 LVN_FIRST-03
1  1824		  =-0068		 LVN_DELETEALLITEMS		 equ	 LVN_FIRST-04
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 33
pmScript.ASM



1  1825		  =-0069		 LVN_BEGINLABELEDITA		 equ	 LVN_FIRST-05
1  1826		  =-006A		 LVN_ENDLABELEDITA		 equ	 LVN_FIRST-06
1  1827		  =-006C		 LVN_COLUMNCLICK		 equ	 LVN_FIRST-08
1  1828		  =-006D		 LVN_BEGINDRAG			 equ	 LVN_FIRST-09
1  1829		  =-006F		 LVN_BEGINRDRAG			 equ	 LVN_FIRST-11
1  1830		  =-0096		 LVN_GETDISPINFOA		 equ	 LVN_FIRST-50
1  1831		  =-0097		 LVN_SETDISPINFOA		 equ	 LVN_FIRST-51
1  1832					 ;
1  1833		  =-00AF		 LVN_BEGINLABELEDITW		 equ	 LVN_FIRST-75
1  1834		  =-00B0		 LVN_ENDLABELEDITW		 equ	 LVN_FIRST-76
1  1835		  =-00B1		 LVN_GETDISPINFOW		 equ	 LVN_FIRST-77
1  1836		  =-00B2		 LVN_SETDISPINFOW		 equ	 LVN_FIRST-78
1  1837					 ;
1  1838					 LVN_BEGINLABELEDIT		 equ	 LVN_BEGINLABELEDITA
1  1839					 LVN_ENDLABELEDIT		 equ	 LVN_ENDLABELEDITA
1  1840					 LVN_GETDISPINFO		 equ	 LVN_GETDISPINFOA
1  1841					 LVN_SETDISPINFO		 equ	 LVN_SETDISPINFOA
1  1842					 ;
1  1843					 ;------------------------------------------------------------------------------
1  1844					 ;
1  1845					 ; ================
1  1846					 ; list	view styles
1  1847					 ; ================
1  1848					 ;
1  1849		  =0003			 LVS_TYPEMASK			 equ	 00000003h
1  1850		  =0000			 LVS_ICON			 equ	 00000000h
1  1851		  =0001			 LVS_REPORT			 equ	 00000001h
1  1852		  =0002			 LVS_SMALLICON			 equ	 00000002h
1  1853		  =0003			 LVS_LIST			 equ	 00000003h
1  1854					 ;
1  1855		  =0004			 LVS_SINGLESEL			 equ	 00000004h
1  1856		  =0008			 LVS_SHOWSELALWAYS		 equ	 00000008h
1  1857		  =0010			 LVS_SORTASCENDING		 equ	 00000010h
1  1858		  =0020			 LVS_SORTDESCENDING		 equ	 00000020h
1  1859		  =0040			 LVS_SHAREIMAGELISTS		 equ	 00000040h
1  1860		  =0080			 LVS_NOLABELWRAP		 equ	 00000080h
1  1861		  =0100			 LVS_AUTOARRANGE		 equ	 00000100h
1  1862		  =0200			 LVS_EDITLABELS			 equ	 00000200h
1  1863					 ;
1  1864		  =FC00			 LVS_TYPESTYLEMASK		 equ	 0000FC00h
1  1865					 ;
1  1866		  =0C00			 LVS_ALIGNMASK			 equ	 00000C00h
1  1867		  =0000			 LVS_ALIGNTOP			 equ	 00000000h
1  1868		  =0400			 LVS_OWNERDRAWFIXED		 equ	 00000400h
1  1869		  =0800			 LVS_ALIGNLEFT			 equ	 00000800h
1  1870					 ;
1  1871		  =2000			 LVS_NOSCROLL			 equ	 00002000h
1  1872		  =4000			 LVS_NOCOLUMNHEADER		 equ	 00004000h
1  1873		  =8000			 LVS_NOSORTHEADER		 equ	 00008000h
1  1874					 ;
1  1875					 ;------------------------------------------------------------------------------
1  1876					 ;
1  1877					 ; ==================
1  1878					 ; MessageBox()	flags
1  1879					 ; ==================
1  1880					 ;
1  1881		  =0000			 MB_OK				 equ	 00000000h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 34
pmScript.ASM



1  1882		  =0001			 MB_OKCANCEL			 equ	 00000001h
1  1883		  =0002			 MB_ABORTRETRYIGNORE		 equ	 00000002h
1  1884		  =0003			 MB_YESNOCANCEL			 equ	 00000003h
1  1885		  =0004			 MB_YESNO			 equ	 00000004h
1  1886		  =0005			 MB_RETRYCANCEL			 equ	 00000005h
1  1887					 ;
1  1888		  =0010			 MB_ICONHAND			 equ	 00000010h
1  1889		  =0020			 MB_ICONQUESTION		 equ	 00000020h
1  1890		  =0030			 MB_ICONEXCLAMATION		 equ	 00000030h
1  1891		  =0040			 MB_ICONASTERISK		 equ	 00000040h
1  1892					 ;
1  1893					 MB_ICONWARNING			 equ	 MB_ICONEXCLAMATION
1  1894					 MB_ICONERROR			 equ	 MB_ICONHAND
1  1895					 MB_ICONINFORMATION		 equ	 MB_ICONASTERISK
1  1896					 MB_ICONSTOP			 equ	 MB_ICONHAND
1  1897					 ;
1  1898		  =0000			 MB_DEFBUTTON1			 equ	 00000000h
1  1899		  =0100			 MB_DEFBUTTON2			 equ	 00000100h
1  1900		  =0200			 MB_DEFBUTTON3			 equ	 00000200h
1  1901		  =0300			 MB_DEFBUTTON4			 equ	 00000300h
1  1902					 ;
1  1903		  =0000			 MB_APPLMODAL			 equ	 00000000h
1  1904		  =1000			 MB_SYSTEMMODAL			 equ	 00001000h
1  1905		  =2000			 MB_TASKMODAL			 equ	 00002000h
1  1906		  =4000			 MB_HELP			 equ	 00004000h
1  1907		  =00080000		 MB_RIGHT			 equ	 00080000h
1  1908		  =00100000		 MB_RTLREADING			 equ	 00100000h
1  1909					 ;
1  1910		  =8000			 MB_NOFOCUS			 equ	 00008000h
1  1911		  =00010000		 MB_SETFOREGROUND		 equ	 00010000h
1  1912		  =00020000		 MB_DEFAULT_DESKTOP_ONLY	 equ	 00020000h
1  1913		  =00040000		 MB_SERVICE_NOTIFICATION	 equ	 00040000h
1  1914					 ;
1  1915		  =000F			 MB_TYPEMASK			 equ	 0000000Fh
1  1916		  =0080			 MB_USERICON			 equ	 00000080h
1  1917		  =00F0			 MB_ICONMASK			 equ	 000000F0h
1  1918		  =0F00			 MB_DEFMASK			 equ	 00000F00h
1  1919		  =3000			 MB_MODEMASK			 equ	 00003000h
1  1920		  =C000			 MB_MISCMASK			 equ	 0000C000h
1  1921					 ;
1  1922					 ;------------------------------------------------------------------------------
1  1923					 ;
1  1924					 ; ==========
1  1925					 ; menu	flags
1  1926					 ; ==========
1  1927					 ;
1  1928		  =0000			 MF_INSERT			 equ	 00000000h
1  1929		  =0080			 MF_CHANGE			 equ	 00000080h
1  1930		  =0100			 MF_APPEND			 equ	 00000100h
1  1931		  =0200			 MF_DELETE			 equ	 00000200h
1  1932		  =1000			 MF_REMOVE			 equ	 00001000h
1  1933					 ;
1  1934		  =0000			 MF_BYCOMMAND			 equ	 00000000h
1  1935		  =0400			 MF_BYPOSITION			 equ	 00000400h
1  1936					 ;
1  1937		  =0800			 MF_SEPARATOR			 equ	 00000800h
1  1938					 ;
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 35
pmScript.ASM



1  1939		  =0000			 MF_ENABLED			 equ	 00000000h
1  1940		  =0001			 MF_GRAYED			 equ	 00000001h
1  1941		  =0002			 MF_DISABLED			 equ	 00000002h
1  1942					 ;
1  1943		  =0000			 MF_UNCHECKED			 equ	 00000000h
1  1944		  =0008			 MF_CHECKED			 equ	 00000008h
1  1945		  =0200			 MF_USECHECKBITMAPS		 equ	 00000200h
1  1946					 ;
1  1947		  =0000			 MF_STRING			 equ	 00000000h
1  1948		  =0004			 MF_BITMAP			 equ	 00000004h
1  1949		  =0100			 MF_OWNERDRAW			 equ	 00000100h
1  1950					 ;
1  1951		  =0010			 MF_POPUP			 equ	 00000010h
1  1952		  =0020			 MF_MENUBARBREAK		 equ	 00000020h
1  1953		  =0040			 MF_MENUBREAK			 equ	 00000040h
1  1954					 ;
1  1955		  =0000			 MF_UNHILITE			 equ	 00000000h
1  1956		  =0080			 MF_HILITE			 equ	 00000080h
1  1957					 ;
1  1958		  =1000			 MF_DEFAULT			 equ	 00001000h
1  1959		  =2000			 MF_SYSMENU			 equ	 00002000h
1  1960		  =4000			 MF_HELP			 equ	 00004000h
1  1961		  =4000			 MF_RIGHTJUSTIFY		 equ	 00004000h
1  1962					 ;
1  1963		  =8000			 MF_MOUSESELECT			 equ	 00008000h
1  1964		  =0080			 MF_END				 equ	 00000080h	 ;obsolete
1  1965					 ;
1  1966					 MFT_STRING			 equ	 MF_STRING
1  1967					 MFT_BITMAP			 equ	 MF_BITMAP
1  1968					 MFT_MENUBARBREAK		 equ	 MF_MENUBARBREAK
1  1969					 MFT_MENUBREAK			 equ	 MF_MENUBREAK
1  1970					 MFT_OWNERDRAW			 equ	 MF_OWNERDRAW
1  1971		  =0200			 MFT_RADIOCHECK			 equ	 00000200h
1  1972					 MFT_SEPARATOR			 equ	 MF_SEPARATOR
1  1973		  =2000			 MFT_RIGHTORDER			 equ	 00002000h
1  1974					 MFT_RIGHTJUSTIFY		 equ	 MF_RIGHTJUSTIFY
1  1975					 ;
1  1976		  =0003			 MFS_GRAYED			 equ	 00000003h
1  1977					 MFS_DISABLED			 equ	 MFS_GRAYED
1  1978					 MFS_CHECKED			 equ	 MF_CHECKED
1  1979					 MFS_HILITE			 equ	 MF_HILITE
1  1980					 MFS_ENABLED			 equ	 MF_ENABLED
1  1981					 MFS_UNCHECKED			 equ	 MF_UNCHECKED
1  1982					 MFS_UNHILITE			 equ	 MF_UNHILITE
1  1983					 MFS_DEFAULT			 equ	 MF_DEFAULT
1  1984					 ;
1  1985					 ;------------------------------------------------------------------------------
1  1986					 ;
1  1987					 ; ========================
1  1988					 ; mouse message key states
1  1989					 ; ========================
1  1990					 ;
1  1991		  =0001			 MK_LBUTTON			 equ	 0001h
1  1992		  =0002			 MK_RBUTTON			 equ	 0002h
1  1993		  =0004			 MK_SHIFT			 equ	 0004h
1  1994		  =0008			 MK_CONTROL			 equ	 0008h
1  1995		  =0010			 MK_MBUTTON			 equ	 0010h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 36
pmScript.ASM



1  1996					 ;
1  1997					 ;------------------------------------------------------------------------------
1  1998					 ;
1  1999					 ; ==================
1  2000					 ; owner draw actions
1  2001					 ; ==================
1  2002					 ;
1  2003		  =0001			 ODA_DRAWENTIRE			 equ	 0001h
1  2004		  =0002			 ODA_SELECT			 equ	 0002h
1  2005		  =0004			 ODA_FOCUS			 equ	 0004h
1  2006					 ;
1  2007					 ;------------------------------------------------------------------------------
1  2008					 ;
1  2009					 ; =================
1  2010					 ; owner draw states
1  2011					 ; =================
1  2012					 ;
1  2013		  =0001			 ODS_SELECTED			 equ	 0001h
1  2014		  =0002			 ODS_GRAYED			 equ	 0002h
1  2015		  =0004			 ODS_DISABLED			 equ	 0004h
1  2016		  =0008			 ODS_CHECKED			 equ	 0008h
1  2017		  =0010			 ODS_FOCUS			 equ	 0010h
1  2018		  =0020			 ODS_DEFAULT			 equ	 0020h
1  2019		  =1000			 ODS_COMBOBOXEDIT		 equ	 1000h
1  2020					 ;
1  2021					 ;------------------------------------------------------------------------------
1  2022					 ;
1  2023					 ; ================
1  2024					 ; owner draw types
1  2025					 ; ================
1  2026					 ;
1  2027		  =0001			 ODT_MENU			 equ	 1
1  2028		  =0002			 ODT_LISTBOX			 equ	 2
1  2029		  =0003			 ODT_COMBOBOX			 equ	 3
1  2030		  =0004			 ODT_BUTTON			 equ	 4
1  2031		  =0005			 ODT_STATIC			 equ	 5
1  2032					 ;
1  2033					 ;------------------------------------------------------------------------------
1  2034					 ;
1  2035					 ; ==================
1  2036					 ; OPENFILENAME	flags
1  2037					 ; ==================
1  2038					 ;
1  2039		  =0001			 OFN_READONLY			 equ	 00000001h
1  2040		  =0002			 OFN_OVERWRITEPROMPT		 equ	 00000002h
1  2041		  =0004			 OFN_HIDEREADONLY		 equ	 00000004h
1  2042		  =0008			 OFN_NOCHANGEDIR		 equ	 00000008h
1  2043		  =0010			 OFN_SHOWHELP			 equ	 00000010h
1  2044		  =0020			 OFN_ENABLEHOOK			 equ	 00000020h
1  2045		  =0040			 OFN_ENABLETEMPLATE		 equ	 00000040h
1  2046		  =0080			 OFN_ENABLETEMPLATEHANDLE	 equ	 00000080h
1  2047		  =0100			 OFN_NOVALIDATE			 equ	 00000100h
1  2048		  =0200			 OFN_ALLOWMULTISELECT		 equ	 00000200h
1  2049		  =0400			 OFN_EXTENSIONDIFFERENT		 equ	 00000400h
1  2050		  =0800			 OFN_PATHMUSTEXIST		 equ	 00000800h
1  2051		  =1000			 OFN_FILEMUSTEXIST		 equ	 00001000h
1  2052		  =2000			 OFN_CREATEPROMPT		 equ	 00002000h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 37
pmScript.ASM



1  2053		  =4000			 OFN_SHAREAWARE			 equ	 00004000h
1  2054		  =8000			 OFN_NOREADONLYRETURN		 equ	 00008000h
1  2055		  =00010000		 OFN_NOTESTFILECREATE		 equ	 00010000h
1  2056		  =00020000		 OFN_NONETWORKBUTTON		 equ	 00020000h
1  2057		  =00040000		 OFN_NOLONGNAMES		 equ	 00040000h
1  2058		  =00080000		 OFN_EXPLORER			 equ	 00080000h
1  2059		  =00100000		 OFN_NODEREFERENCELINKS		 equ	 00100000h
1  2060		  =00200000		 OFN_LONGNAMES			 equ	 00200000h
1  2061					 ;
1  2062					 ;------------------------------------------------------------------------------
1  2063					 ;
1  2064					 ; ==============================
1  2065					 ; OPENFILENAME	hook return codes
1  2066					 ; ==============================
1  2067					 ;
1  2068		  =0000			 OFN_SHAREWARN			 equ	 0
1  2069		  =0001			 OFN_SHARENOWARN		 equ	 1
1  2070		  =0002			 OFN_SHAREFALLTHROUGH		 equ	 2
1  2071					 ;
1  2072					 ;------------------------------------------------------------------------------
1  2073					 ;
1  2074					 ; ================
1  2075					 ; pipe	definitions
1  2076					 ; ================
1  2077					 ;
1  2078		  =0001			 PIPE_ACCESS_INBOUND		 equ	 00000001h
1  2079		  =0002			 PIPE_ACCESS_OUTBOUND		 equ	 00000002h
1  2080		  =0003			 PIPE_ACCESS_DUPLEX		 equ	 00000003h
1  2081					 ;
1  2082		  =0000			 PIPE_CLIENT_END		 equ	 00000000h
1  2083		  =0001			 PIPE_SERVER_END		 equ	 00000001h
1  2084					 ;
1  2085		  =0000			 PIPE_WAIT			 equ	 00000000h
1  2086		  =0001			 PIPE_NOWAIT			 equ	 00000001h
1  2087					 ;
1  2088		  =0000			 PIPE_READMODE_BYTE		 equ	 00000000h
1  2089		  =0002			 PIPE_READMODE_MESSAGE		 equ	 00000002h
1  2090					 ;
1  2091		  =0000			 PIPE_TYPE_BYTE			 equ	 00000000h
1  2092		  =0004			 PIPE_TYPE_MESSAGE		 equ	 00000004h
1  2093					 ;
1  2094		  =00FF			 PIPE_UNLIMITED_INSTANCES	 equ	 255
1  2095					 ;
1  2096					 ;------------------------------------------------------------------------------
1  2097					 ;
1  2098					 ; ====================
1  2099					 ; process access flags
1  2100					 ; ====================
1  2101					 ;
1  2102		  =0001			 PROCESS_TERMINATE		 equ	 0001h
1  2103		  =0002			 PROCESS_CREATE_THREAD		 equ	 0002h
1  2104		  =0008			 PROCESS_VM_OPERATION		 equ	 0008h
1  2105		  =0010			 PROCESS_VM_READ		 equ	 0010h
1  2106		  =0020			 PROCESS_VM_WRITE		 equ	 0020h
1  2107		  =0040			 PROCESS_DUP_HANDLE		 equ	 0040h
1  2108		  =0080			 PROCESS_CREATE_PROCESS		 equ	 0080h
1  2109		  =0100			 PROCESS_SET_QUOTA		 equ	 0100h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 38
pmScript.ASM



1  2110		  =0200			 PROCESS_SET_INFORMATION	 equ	 0200h
1  2111		  =0400			 PROCESS_QUERY_INFORMATION	 equ	 0400h
1  2112					 ;
1  2113					 ;PROCESS_ALL_ACCESS	  equ STANDARD_RIGHTS_REQUIRED+SYNCHRONIZE+0FFFh
1  2114					 ;
1  2115					 ;------------------------------------------------------------------------------
1  2116					 ;
1  2117					 ; ========================
1  2118					 ; binary raster operations
1  2119					 ; ========================
1  2120					 ;
1  2121		  =0001			 R2_BLACK			 equ	  1		 ;0
1  2122		  =0002			 R2_NOTMERGEPEN			 equ	  2		 ;DPon
1  2123		  =0003			 R2_MASKNOTPEN			 equ	  3		 ;DPna
1  2124		  =0004			 R2_NOTCOPYPEN			 equ	  4		 ;PN
1  2125		  =0005			 R2_MASKPENNOT			 equ	  5		 ;PDna
1  2126		  =0006			 R2_NOT				 equ	  6		 ;Dn
1  2127		  =0007			 R2_XORPEN			 equ	  7		 ;DPx
1  2128		  =0008			 R2_NOTMASKPEN			 equ	  8		 ;DPan
1  2129		  =0009			 R2_MASKPEN			 equ	  9		 ;DPa
1  2130		  =000A			 R2_NOTXORPEN			 equ	 10		 ;DPxn
1  2131		  =000B			 R2_NOP				 equ	 11		 ;D
1  2132		  =000C			 R2_MERGENOTPEN			 equ	 12		 ;DPno
1  2133		  =000D			 R2_COPYPEN			 equ	 13		 ;P
1  2134		  =000E			 R2_MERGEPENNOT			 equ	 14		 ;PDno
1  2135		  =000F			 R2_MERGEPEN			 equ	 15		 ;DPo
1  2136		  =0010			 R2_WHITE			 equ	 16		 ;1
1  2137		  =0010			 R2_LAST			 equ	 16
1  2138					 ;
1  2139					 ;------------------------------------------------------------------------------
1  2140					 ;
1  2141					 ; =================
1  2142					 ; network resources
1  2143					 ; =================
1  2144					 ;
1  2145		  =0001			 RESOURCE_CONNECTED		 equ	 00000001h
1  2146		  =0002			 RESOURCE_GLOBALNET		 equ	 00000002h
1  2147		  =0003			 RESOURCE_REMEMBERED		 equ	 00000003h
1  2148		  =0004			 RESOURCE_RECENT		 equ	 00000004h
1  2149		  =0005			 RESOURCE_CONTEXT		 equ	 00000005h
1  2150					 ;
1  2151		  =0000			 RESOURCETYPE_ANY		 equ	 00000000h
1  2152		  =0001			 RESOURCETYPE_DISK		 equ	 00000001h
1  2153		  =0002			 RESOURCETYPE_PRINT		 equ	 00000002h
1  2154		  =0008			 RESOURCETYPE_RESERVED		 equ	 00000008h
1  2155		  =-0001		 RESOURCETYPE_UNKNOWN		 equ	 -1
1  2156					 ;
1  2157		  =0001			 RESOURCEUSAGE_CONNECTABLE	 equ	 00000001h
1  2158		  =0002			 RESOURCEUSAGE_CONTAINER	 equ	 00000002h
1  2159		  =0004			 RESOURCEUSAGE_NOLOCALDEVICE	 equ	 00000004h
1  2160		  =0008			 RESOURCEUSAGE_SIBLING		 equ	 00000008h
1  2161		  =80000000		 RESOURCEUSAGE_RESERVED		 equ	 80000000h
1  2162					 ;
1  2163		  =0003			 RESOURCEUSAGE_ALL		 equ	 RESOURCEUSAGE_CONNECTABLE+\
   2164										 RESOURCEUSAGE_CONTAINER
1  2165					 ;
1  2166		  =0000			 RESOURCEDISPLAYTYPE_GENERIC	 equ	 00000000h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 39
pmScript.ASM



1  2167		  =0001			 RESOURCEDISPLAYTYPE_DOMAIN	 equ	 00000001h
1  2168		  =0002			 RESOURCEDISPLAYTYPE_SERVER	 equ	 00000002h
1  2169		  =0003			 RESOURCEDISPLAYTYPE_SHARE	 equ	 00000003h
1  2170		  =0004			 RESOURCEDISPLAYTYPE_FILE	 equ	 00000004h
1  2171		  =0005			 RESOURCEDISPLAYTYPE_GROUP	 equ	 00000005h
1  2172		  =0006			 RESOURCEDISPLAYTYPE_NETWORK	 equ	 00000006h
1  2173		  =0007			 RESOURCEDISPLAYTYPE_ROOT	 equ	 00000007h
1  2174		  =0008			 RESOURCEDISPLAYTYPE_SHAREADMIN	 equ	 00000008h
1  2175		  =0009			 RESOURCEDISPLAYTYPE_DIRECTORY	 equ	 00000009h
1  2176		  =000A			 RESOURCEDISPLAYTYPE_TREE	 equ	 0000000Ah
1  2177					 ;
1  2178					 ;------------------------------------------------------------------------------
1  2179					 ;
1  2180					 ; ==========
1  2181					 ; rgb colors
1  2182					 ; ==========
1  2183					 ;
1  2184		  =0000			 RGB_BLACK			 equ	 00000000h
1  2185		  =00202020		 RGB_VDKGRAY32			 equ	 00202020h
1  2186		  =00404040		 RGB_DKGRAY			 equ	 00404040h
1  2187		  =00808080		 RGB_SOLIDGRAY			 equ	 00808080h
1  2188		  =00C0C0C0		 RGB_SOLIDLTGRAY		 equ	 00C0C0C0h
1  2189		  =00E0E0E0		 RGB_EBONY			 equ	 00E0E0E0h
1  2190		  =00FF0000		 RGB_BLUE			 equ	 00FF0000h
1  2191		  =FF00			 RGB_GREEN			 equ	 0000FF00h
1  2192		  =00FF			 RGB_RED			 equ	 000000FFh
1  2193					 ;
1  2194		  =00FFFF00		 RGB_CYAN			 equ	 RGB_BLUE + RGB_GREEN
1  2195		  =00FF00FF		 RGB_MAGENTA			 equ	 RGB_BLUE	      +	RGB_RED
1  2196		  =FFFF			 RGB_YELLOW			 equ		    RGB_GREEN +	RGB_RED
1  2197		  =00FFFFFF		 RGB_WHITE			 equ	 RGB_BLUE + RGB_GREEN +	RGB_RED
1  2198					 ;
1  2199		  =00800000		 RGB_DKBLUE			 equ	 00800000h
1  2200		  =8000			 RGB_DKGREEN			 equ	 00008000h
1  2201		  =0080			 RGB_DKRED			 equ	 00000080h
1  2202					 ;
1  2203		  =00808000		 RGB_DKCYAN			 equ	 RGB_DKBLUE + RGB_DKGREEN
1  2204		  =00800080		 RGB_DKMAGENTA			 equ	 RGB_DKBLUE		  + RGB_DKRED
1  2205		  =8080			 RGB_DKYELLOW			 equ		      RGB_DKGREEN + RGB_DKRED
1  2206					 ;
1  2207					 ;------------------------------------------------------------------------------
1  2208					 ;
1  2209					 ; ===================
1  2210					 ; CombineRgn()	styles
1  2211					 ; ===================
1  2212					 ;
1  2213		  =0001			 RGN_AND			 equ	 1
1  2214		  =0002			 RGN_OR				 equ	 2
1  2215		  =0003			 RGN_XOR			 equ	 3
1  2216		  =0004			 RGN_DIFF			 equ	 4
1  2217		  =0005			 RGN_COPY			 equ	 5
1  2218					 RGN_MIN			 equ	 RGN_AND
1  2219					 RGN_MAX			 equ	 RGN_COPY
1  2220					 ;
1  2221					 ;------------------------------------------------------------------------------
1  2222					 ;
1  2223					 ; ====================
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 40
pmScript.ASM



1  2224					 ; scroll bar constants
1  2225					 ; ====================
1  2226					 ;
1  2227		  =0000			 SB_HORZ			 equ	 0
1  2228		  =0001			 SB_VERT			 equ	 1
1  2229		  =0002			 SB_CTL				 equ	 2
1  2230		  =0003			 SB_BOTH			 equ	 3
1  2231					 ;
1  2232					 ;------------------------------------------------------------------------------
1  2233					 ;
1  2234					 ; ===================
1  2235					 ; scroll bar commands
1  2236					 ; ===================
1  2237					 ;
1  2238		  =0000			 SB_LINEUP			 equ	 0
1  2239		  =0000			 SB_LINELEFT			 equ	 0
1  2240		  =0001			 SB_LINEDOWN			 equ	 1
1  2241		  =0001			 SB_LINERIGHT			 equ	 1
1  2242		  =0002			 SB_PAGEUP			 equ	 2
1  2243		  =0002			 SB_PAGELEFT			 equ	 2
1  2244		  =0003			 SB_PAGEDOWN			 equ	 3
1  2245		  =0003			 SB_PAGERIGHT			 equ	 3
1  2246		  =0004			 SB_THUMBPOSITION		 equ	 4
1  2247		  =0005			 SB_THUMBTRACK			 equ	 5
1  2248		  =0006			 SB_TOP				 equ	 6
1  2249		  =0006			 SB_LEFT			 equ	 6
1  2250		  =0007			 SB_BOTTOM			 equ	 7
1  2251		  =0007			 SB_RIGHT			 equ	 7
1  2252		  =0008			 SB_ENDSCROLL			 equ	 8
1  2253					 ;
1  2254					 ;------------------------------------------------------------------------------
1  2255					 ;
1  2256					 ; ===================
1  2257					 ; status bar messages
1  2258					 ; ===================
1  2259					 ;
1  2260		  =0401			 SB_SETTEXTA			 equ	 WM_USER+01
1  2261		  =0402			 SB_GETTEXTA			 equ	 WM_USER+02
1  2262		  =0403			 SB_GETTEXTLENGTHA		 equ	 WM_USER+03
1  2263		  =0404			 SB_SETPARTS			 equ	 WM_USER+04
1  2264		  =0406			 SB_GETPARTS			 equ	 WM_USER+06
1  2265		  =0407			 SB_GETBORDERS			 equ	 WM_USER+07
1  2266		  =0408			 SB_SETMINHEIGHT		 equ	 WM_USER+08
1  2267		  =0409			 SB_SIMPLE			 equ	 WM_USER+09
1  2268		  =040A			 SB_GETRECT			 equ	 WM_USER+10
1  2269		  =040B			 SB_SETTEXTW			 equ	 WM_USER+11
1  2270		  =040C			 SB_GETTEXTLENGTHW		 equ	 WM_USER+12
1  2271		  =040D			 SB_GETTEXTW			 equ	 WM_USER+13
1  2272					 ;
1  2273					 SB_GETTEXT			 equ	 SB_GETTEXTA
1  2274					 SB_SETTEXT			 equ	 SB_SETTEXTA
1  2275					 SB_GETTEXTLENGTH		 equ	 SB_GETTEXTLENGTHA
1  2276					 ;
1  2277					 ;------------------------------------------------------------------------------
1  2278					 ;
1  2279					 ; ===================
1  2280					 ; scroll bar messages
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 41
pmScript.ASM



1  2281					 ; ===================
1  2282					 ;
1  2283		  =00E0			 SBM_SETPOS			 equ	 00E0h
1  2284		  =00E1			 SBM_GETPOS			 equ	 00E1h
1  2285		  =00E2			 SBM_SETRANGE			 equ	 00E2h
1  2286		  =00E3			 SBM_GETRANGE			 equ	 00E3h
1  2287		  =00E4			 SBM_ENABLE_ARROWS		 equ	 00E4h
1  2288		  =00E6			 SBM_SETRANGEREDRAW		 equ	 00E6h
1  2289		  =00E9			 SBM_SETSCROLLINFO		 equ	 00E9h
1  2290		  =00EA			 SBM_GETSCROLLINFO		 equ	 00EAh
1  2291					 ;
1  2292					 ;------------------------------------------------------------------------------
1  2293					 ;
1  2294					 ; =================
1  2295					 ; scroll bar styles
1  2296					 ; =================
1  2297					 ;
1  2298		  =0000			 SBS_HORZ			 equ	 0000h
1  2299		  =0001			 SBS_VERT			 equ	 0001h
1  2300		  =0002			 SBS_TOPALIGN			 equ	 0002h
1  2301		  =0002			 SBS_LEFTALIGN			 equ	 0002h
1  2302		  =0004			 SBS_BOTTOMALIGN		 equ	 0004h
1  2303		  =0004			 SBS_RIGHTALIGN			 equ	 0004h
1  2304		  =0002			 SBS_SIZEBOXTOPLEFTALIGN	 equ	 0002h
1  2305		  =0004			 SBS_SIZEBOXBOTTOMRIGHTALIGN	 equ	 0004h
1  2306		  =0008			 SBS_SIZEBOX			 equ	 0008h
1  2307		  =0010			 SBS_SIZEGRIP			 equ	 0010h
1  2308					 ;
1  2309					 ;------------------------------------------------------------------------------
1  2310					 ;
1  2311					 ; ================
1  2312					 ; status bar types
1  2313					 ; ================
1  2314					 ;
1  2315		  =0000			 SBT_DEFAULT			 equ	 0000h
1  2316		  =0100			 SBT_NOBORDERS			 equ	 0100h
1  2317		  =0200			 SBT_POPOUT			 equ	 0200h
1  2318		  =0400			 SBT_RTLREADING			 equ	 0400h
1  2319		  =1000			 SBT_OWNERDRAW			 equ	 1000h
1  2320					 ;
1  2321					 ;------------------------------------------------------------------------------
1  2322					 ;
1  2323					 ; ===================
1  2324					 ; security attributes
1  2325					 ; ===================
1  2326					 ;
1  2327		  =0000			 SECURITY_ANONYMOUS		 equ	 00000000h
1  2328		  =00010000		 SECURITY_IDENTIFICATION	 equ	 00010000h
1  2329		  =00020000		 SECURITY_IMPERSONATION		 equ	 00020000h
1  2330		  =00030000		 SECURITY_DELEGATION		 equ	 00030000h
1  2331					 ;
1  2332		  =00040000		 SECURITY_CONTEXT_TRACKING	 equ	 00040000h
1  2333		  =00080000		 SECURITY_EFFECTIVE_ONLY	 equ	 00080000h
1  2334					 ;
1  2335		  =00100000		 SECURITY_SQOS_PRESENT		 equ	 00100000h
1  2336		  =001F0000		 SECURITY_VALID_SQOS_FLAGS	 equ	 001F0000h
1  2337					 ;
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 42
pmScript.ASM



1  2338					 ;------------------------------------------------------------------------------
1  2339					 ;
1  2340					 ; =====================
1  2341					 ; WM_SIZE wParam values
1  2342					 ; =====================
1  2343					 ;
1  2344		  =0000			 SIZE_RESTORED			 equ	 0
1  2345		  =0001			 SIZE_MINIMIZED			 equ	 1
1  2346		  =0002			 SIZE_MAXIMIZED			 equ	 2
1  2347		  =0003			 SIZE_MAXSHOW			 equ	 3
1  2348		  =0004			 SIZE_MAXHIDE			 equ	 4
1  2349					 ;
1  2350					 SIZENORMAL			 equ	 SIZE_RESTORED
1  2351					 SIZEICONIC			 equ	 SIZE_MINIMIZED
1  2352					 SIZEFULLSCREEN			 equ	 SIZE_MAXIMIZED
1  2353					 SIZEZOOMSHOW			 equ	 SIZE_MAXSHOW
1  2354					 SIZEZOOMHIDE			 equ	 SIZE_MAXHIDE
1  2355					 ;
1  2356					 ;------------------------------------------------------------------------------
1  2357					 ;
1  2358					 ; ========================
1  2359					 ; GetSystemMetrics() codes
1  2360					 ; ========================
1  2361					 ;
1  2362		  =0000			 SM_CXSCREEN			 equ	  0
1  2363		  =0001			 SM_CYSCREEN			 equ	  1
1  2364		  =0002			 SM_CXVSCROLL			 equ	  2
1  2365		  =0003			 SM_CYHSCROLL			 equ	  3
1  2366		  =0004			 SM_CYCAPTION			 equ	  4
1  2367		  =0005			 SM_CXBORDER			 equ	  5
1  2368		  =0006			 SM_CYBORDER			 equ	  6
1  2369		  =0007			 SM_CXDLGFRAME			 equ	  7
1  2370		  =0008			 SM_CYDLGFRAME			 equ	  8
1  2371		  =0009			 SM_CYVTHUMB			 equ	  9
1  2372		  =000A			 SM_CXHTHUMB			 equ	 10
1  2373		  =000B			 SM_CXICON			 equ	 11
1  2374		  =000C			 SM_CYICON			 equ	 12
1  2375		  =000D			 SM_CXCURSOR			 equ	 13
1  2376		  =000E			 SM_CYCURSOR			 equ	 14
1  2377		  =000F			 SM_CYMENU			 equ	 15
1  2378		  =0010			 SM_CXFULLSCREEN		 equ	 16
1  2379		  =0011			 SM_CYFULLSCREEN		 equ	 17
1  2380		  =0012			 SM_CYKANJIWINDOW		 equ	 18
1  2381		  =0013			 SM_MOUSEPRESENT		 equ	 19
1  2382		  =0014			 SM_CYVSCROLL			 equ	 20
1  2383		  =0015			 SM_CXHSCROLL			 equ	 21
1  2384		  =0016			 SM_DEBUG			 equ	 22
1  2385		  =0017			 SM_SWAPBUTTON			 equ	 23
1  2386		  =0018			 SM_RESERVED1			 equ	 24
1  2387		  =0019			 SM_RESERVED2			 equ	 25
1  2388		  =001A			 SM_RESERVED3			 equ	 26
1  2389		  =001B			 SM_RESERVED4			 equ	 27
1  2390		  =001C			 SM_CXMIN			 equ	 28
1  2391		  =001D			 SM_CYMIN			 equ	 29
1  2392		  =001E			 SM_CXSIZE			 equ	 30
1  2393		  =001F			 SM_CYSIZE			 equ	 31
1  2394		  =0020			 SM_CXFRAME			 equ	 32
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 43
pmScript.ASM



1  2395		  =0021			 SM_CYFRAME			 equ	 33
1  2396		  =0022			 SM_CXMINTRACK			 equ	 34
1  2397		  =0023			 SM_CYMINTRACK			 equ	 35
1  2398		  =0024			 SM_CXDOUBLECLK			 equ	 36
1  2399		  =0025			 SM_CYDOUBLECLK			 equ	 37
1  2400		  =0026			 SM_CXICONSPACING		 equ	 38
1  2401		  =0027			 SM_CYICONSPACING		 equ	 39
1  2402		  =0028			 SM_MENUDROPALIGNMENT		 equ	 40
1  2403		  =0029			 SM_PENWINDOWS			 equ	 41
1  2404		  =002A			 SM_DBCSENABLED			 equ	 42
1  2405		  =002B			 SM_CMOUSEBUTTONS		 equ	 43
1  2406		  =002C			 SM_SECURE			 equ	 44
1  2407		  =002D			 SM_CXEDGE			 equ	 45
1  2408		  =002E			 SM_CYEDGE			 equ	 46
1  2409		  =002F			 SM_CXMINSPACING		 equ	 47
1  2410		  =0030			 SM_CYMINSPACING		 equ	 48
1  2411		  =0031			 SM_CXSMICON			 equ	 49
1  2412		  =0032			 SM_CYSMICON			 equ	 50
1  2413		  =0033			 SM_CYSMCAPTION			 equ	 51
1  2414		  =0034			 SM_CXSMSIZE			 equ	 52
1  2415		  =0035			 SM_CYSMSIZE			 equ	 53
1  2416		  =0036			 SM_CXMENUSIZE			 equ	 54
1  2417		  =0037			 SM_CYMENUSIZE			 equ	 55
1  2418		  =0038			 SM_ARRANGE			 equ	 56
1  2419		  =0039			 SM_CXMINIMIZED			 equ	 57
1  2420		  =003A			 SM_CYMINIMIZED			 equ	 58
1  2421		  =003B			 SM_CXMAXTRACK			 equ	 59
1  2422		  =003C			 SM_CYMAXTRACK			 equ	 60
1  2423		  =003D			 SM_CXMAXIMIZED			 equ	 61
1  2424		  =003E			 SM_CYMAXIMIZED			 equ	 62
1  2425		  =003F			 SM_NETWORK			 equ	 63
1  2426		  =0043			 SM_CLEANBOOT			 equ	 67
1  2427		  =0044			 SM_CXDRAG			 equ	 68
1  2428		  =0045			 SM_CYDRAG			 equ	 69
1  2429		  =0046			 SM_SHOWSOUNDS			 equ	 70
1  2430		  =0047			 SM_CXMENUCHECK			 equ	 71
1  2431		  =0048			 SM_CYMENUCHECK			 equ	 72
1  2432		  =0049			 SM_SLOWMACHINE			 equ	 73
1  2433		  =004A			 SM_MIDEASTENABLED		 equ	 74
1  2434					 ;
1  2435					 SM_CXFIXEDFRAME		 equ	 SM_CXDLGFRAME
1  2436					 SM_CYFIXEDFRAME		 equ	 SM_CYDLGFRAME
1  2437					 SM_CXSIZEFRAME			 equ	 SM_CXFRAME
1  2438					 SM_CYSIZEFRAME			 equ	 SM_CYFRAME
1  2439					 ;
1  2440					 ;------------------------------------------------------------------------------
1  2441					 ;
1  2442					 ; =====================
1  2443					 ; static control styles
1  2444					 ; =====================
1  2445					 ;
1  2446		  =0000			 SS_LEFT			 equ	 0000h
1  2447		  =0001			 SS_CENTER			 equ	 0001h
1  2448		  =0002			 SS_RIGHT			 equ	 0002h
1  2449		  =0003			 SS_ICON			 equ	 0003h
1  2450		  =0004			 SS_BLACKRECT			 equ	 0004h
1  2451		  =0005			 SS_GRAYRECT			 equ	 0005h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 44
pmScript.ASM



1  2452		  =0006			 SS_WHITERECT			 equ	 0006h
1  2453		  =0007			 SS_BLACKFRAME			 equ	 0007h
1  2454		  =0008			 SS_GRAYFRAME			 equ	 0008h
1  2455		  =0009			 SS_WHITEFRAME			 equ	 0009h
1  2456		  =000A			 SS_USERITEM			 equ	 000Ah
1  2457		  =000B			 SS_SIMPLE			 equ	 000Bh
1  2458		  =000C			 SS_LEFTNOWORDWRAP		 equ	 000Ch
1  2459		  =000E			 SS_BITMAP			 equ	 000Eh
1  2460		  =000D			 SS_OWNERDRAW			 equ	 000Dh
1  2461		  =000F			 SS_ENHMETAFILE			 equ	 000Fh
1  2462		  =0010			 SS_ETCHEDHORZ			 equ	 0010h
1  2463		  =0011			 SS_ETCHEDVERT			 equ	 0011h
1  2464		  =0012			 SS_ETCHEDFRAME			 equ	 0012h
1  2465		  =001F			 SS_TYPEMASK			 equ	 001Fh
1  2466		  =0080			 SS_NOPREFIX			 equ	 0080h
1  2467		  =0100			 SS_NOTIFY			 equ	 0100h
1  2468		  =0200			 SS_CENTERIMAGE			 equ	 0200h
1  2469		  =0400			 SS_RIGHTJUST			 equ	 0400h
1  2470		  =0800			 SS_REALSIZEIMAGE		 equ	 0800h
1  2471		  =1000			 SS_SUNKEN			 equ	 1000h
1  2472					 ;
1  2473					 ;------------------------------------------------------------------------------
1  2474					 ;
1  2475					 ; ================
1  2476					 ; startup commands
1  2477					 ; ================
1  2478					 ;
1  2479		  =0001			 STARTF_USESHOWWINDOW		 equ	 00000001h
1  2480		  =0002			 STARTF_USESIZE			 equ	 00000002h
1  2481		  =0004			 STARTF_USEPOSITION		 equ	 00000004h
1  2482		  =0008			 STARTF_USECOUNTCHARS		 equ	 00000008h
1  2483		  =0010			 STARTF_USEFILLATTRIBUTE	 equ	 00000010h
1  2484		  =0020			 STARTF_RUNFULLSCREEN		 equ	 00000020h	 ;ignored for non-x86
1  2485		  =0040			 STARTF_FORCEONFEEDBACK		 equ	 00000040h
1  2486		  =0080			 STARTF_FORCEOFFFEEDBACK	 equ	 00000080h
1  2487		  =0100			 STARTF_USESTDHANDLES		 equ	 00000100h
1  2488		  =0200			 STARTF_USEHOTKEY		 equ	 00000200h
1  2489					 ;
1  2490					 ;------------------------------------------------------------------------------
1  2491					 ;
1  2492					 ; ============
1  2493					 ; status codes
1  2494					 ; ============
1  2495					 ;
1  2496		  =0000			 STATUS_WAIT_0			 equ	 000000000h
1  2497		  =0080			 STATUS_ABANDONED_WAIT_0	 equ	 000000080h
1  2498		  =00C0			 STATUS_USER_APC		 equ	 0000000C0h
1  2499		  =0102			 STATUS_TIMEOUT			 equ	 000000102h
1  2500		  =0103			 STATUS_PENDING			 equ	 000000103h
1  2501		  =40000005		 STATUS_SEGMENT_NOTIFICATION	 equ	 040000005h
1  2502		  =80000001		 STATUS_GUARD_PAGE_VIOLATION	 equ	 080000001h
1  2503		  =80000002		 STATUS_DATATYPE_MISALIGNMENT	 equ	 080000002h
1  2504		  =80000003		 STATUS_BREAKPOINT		 equ	 080000003h
1  2505		  =80000004		 STATUS_SINGLE_STEP		 equ	 080000004h
1  2506		  =C0000005		 STATUS_ACCESS_VIOLATION	 equ	 0C0000005h
1  2507		  =C0000006		 STATUS_IN_PAGE_ERROR		 equ	 0C0000006h
1  2508		  =C0000017		 STATUS_NO_MEMORY		 equ	 0C0000017h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 45
pmScript.ASM



1  2509		  =C000001D		 STATUS_ILLEGAL_INSTRUCTION	 equ	 0C000001Dh
1  2510		  =C0000025		 STATUS_NONCONTINUABLE_EXCEPTION equ	 0C0000025h
1  2511		  =C0000026		 STATUS_INVALID_DISPOSITION	 equ	 0C0000026h
1  2512		  =C000008C		 STATUS_ARRAY_BOUNDS_EXCEEDED	 equ	 0C000008Ch
1  2513		  =C000008D		 STATUS_FLOAT_DENORMAL_OPERAND	 equ	 0C000008Dh
1  2514		  =C000008E		 STATUS_FLOAT_DIVIDE_BY_ZERO	 equ	 0C000008Eh
1  2515		  =C000008F		 STATUS_FLOAT_INEXACT_RESULT	 equ	 0C000008Fh
1  2516		  =C0000090		 STATUS_FLOAT_INVALID_OPERATION	 equ	 0C0000090h
1  2517		  =C0000091		 STATUS_FLOAT_OVERFLOW		 equ	 0C0000091h
1  2518		  =C0000092		 STATUS_FLOAT_STACK_CHECK	 equ	 0C0000092h
1  2519		  =C0000093		 STATUS_FLOAT_UNDERFLOW		 equ	 0C0000093h
1  2520		  =C0000094		 STATUS_INTEGER_DIVIDE_BY_ZERO	 equ	 0C0000094h
1  2521		  =C0000095		 STATUS_INTEGER_OVERFLOW	 equ	 0C0000095h
1  2522		  =C0000096		 STATUS_PRIVILEGED_INSTRUCTION	 equ	 0C0000096h
1  2523		  =C00000FD		 STATUS_STACK_OVERFLOW		 equ	 0C00000FDh
1  2524		  =C000013A		 STATUS_CONTROL_C_EXIT		 equ	 0C000013Ah
1  2525					 ;
1  2526					 ;------------------------------------------------------------------------------
1  2527					 ;
1  2528					 ; ========================
1  2529					 ; toolbar standard bitmaps
1  2530					 ; ========================
1  2531					 ;
1  2532		  =0000			 STD_CUT			 equ	  0
1  2533		  =0001			 STD_COPY			 equ	  1
1  2534		  =0002			 STD_PASTE			 equ	  2
1  2535		  =0003			 STD_UNDO			 equ	  3
1  2536		  =0004			 STD_REDOW			 equ	  4
1  2537		  =0005			 STD_DELETE			 equ	  5
1  2538		  =0006			 STD_FILENEW			 equ	  6
1  2539		  =0007			 STD_FILEOPEN			 equ	  7
1  2540		  =0008			 STD_FILESAVE			 equ	  8
1  2541		  =0009			 STD_PRINTPRE			 equ	  9
1  2542		  =000A			 STD_PROPERTIES			 equ	 10
1  2543		  =000B			 STD_HELP			 equ	 11
1  2544		  =000C			 STD_FIND			 equ	 12
1  2545		  =000D			 STD_REPLACE			 equ	 13
1  2546		  =000E			 STD_PRINT			 equ	 14
1  2547					 ;
1  2548					 ;------------------------------------------------------------------------------
1  2549					 ;
1  2550					 ; =====================
1  2551					 ; standard file handles
1  2552					 ; =====================
1  2553					 ;
1  2554		  =-000A		 STD_INPUT_HANDLE		 equ	 -10
1  2555		  =-000B		 STD_OUTPUT_HANDLE		 equ	 -11
1  2556		  =-000C		 STD_ERROR_HANDLE		 equ	 -12
1  2557					 ;
1  2558					 ;------------------------------------------------------------------------------
1  2559					 ;
1  2560					 ; =====================
1  2561					 ; ShowWindow()	commands
1  2562					 ; =====================
1  2563					 ;
1  2564		  =0000			 SW_HIDE			 equ	  0
1  2565		  =0001			 SW_SHOWNORMAL			 equ	  1
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 46
pmScript.ASM



1  2566		  =0001			 SW_NORMAL			 equ	  1
1  2567		  =0002			 SW_SHOWMINIMIZED		 equ	  2
1  2568		  =0003			 SW_SHOWMAXIMIZED		 equ	  3
1  2569		  =0003			 SW_MAXIMIZE			 equ	  3
1  2570		  =0004			 SW_SHOWNOACTIVATE		 equ	  4
1  2571		  =0005			 SW_SHOW			 equ	  5
1  2572		  =0006			 SW_MINIMIZE			 equ	  6
1  2573		  =0007			 SW_SHOWMINNOACTIVE		 equ	  7
1  2574		  =0008			 SW_SHOWNA			 equ	  8
1  2575		  =0009			 SW_RESTORE			 equ	  9
1  2576		  =000A			 SW_SHOWDEFAULT			 equ	 10
1  2577		  =000A			 SW_MAX				 equ	 10
1  2578					 ;
1  2579					 ;------------------------------------------------------------------------------
1  2580					 ;
1  2581					 ; ====================
1  2582					 ; SetWindowPos() flags
1  2583					 ; ====================
1  2584					 ;
1  2585		  =0001			 SWP_NOSIZE			 equ	 0001h
1  2586		  =0002			 SWP_NOMOVE			 equ	 0002h
1  2587		  =0004			 SWP_NOZORDER			 equ	 0004h
1  2588		  =0008			 SWP_NOREDRAW			 equ	 0008h
1  2589		  =0010			 SWP_NOACTIVATE			 equ	 0010h
1  2590		  =0020			 SWP_FRAMECHANGED		 equ	 0020h
1  2591		  =0040			 SWP_SHOWWINDOW			 equ	 0040h
1  2592		  =0080			 SWP_HIDEWINDOW			 equ	 0080h
1  2593		  =0100			 SWP_NOCOPYBITS			 equ	 0100h
1  2594		  =0200			 SWP_NOOWNERZORDER		 equ	 0200h
1  2595		  =0400			 SWP_NOSENDCHANGING		 equ	 0400h
1  2596		  =2000			 SWP_DEFERERASE			 equ	 2000h
1  2597		  =4000			 SWP_ASYNCWINDOWPOS		 equ	 4000h
1  2598					 ;
1  2599					 SWP_DRAWFRAME			 equ	 SWP_FRAMECHANGED
1  2600					 SWP_NOREPOSITION		 equ	 SWP_NOOWNERZORDER
1  2601					 ;
1  2602					 ;------------------------------------------------------------------------------
1  2603					 ;
1  2604					 ; ======================
1  2605					 ; text	alignment options
1  2606					 ; ======================
1  2607					 ;
1  2608		  =0000			 TA_NOUPDATECP			 equ	 0000h
1  2609		  =0001			 TA_UPDATECP			 equ	 0001h
1  2610					 ;
1  2611		  =0000			 TA_LEFT			 equ	 0000h
1  2612		  =0002			 TA_RIGHT			 equ	 0002h
1  2613		  =0006			 TA_CENTER			 equ	 0006h
1  2614					 ;
1  2615		  =0000			 TA_TOP				 equ	 0000h
1  2616		  =0008			 TA_BOTTOM			 equ	 0008h
1  2617		  =0018			 TA_BASELINE			 equ	 0018h
1  2618		  =0100			 TA_RTLREADING			 equ	 0100h
1  2619		  =011F			 TA_MASK			 equ	 TA_BASELINE+TA_CENTER+TA_UPDATECP+\
   2620										 TA_RTLREADING
1  2621					 ;
1  2622					 ;------------------------------------------------------------------------------
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 47
pmScript.ASM



1  2623					 ;
1  2624					 ; ================
1  2625					 ; toolbar messages
1  2626					 ; ================
1  2627					 ;
1  2628		  =0401			 TB_ENABLEBUTTON		 equ	 WM_USER+01
1  2629		  =0402			 TB_CHECKBUTTON			 equ	 WM_USER+02
1  2630		  =0403			 TB_PRESSBUTTON			 equ	 WM_USER+03
1  2631		  =0404			 TB_HIDEBUTTON			 equ	 WM_USER+04
1  2632		  =0405			 TB_INDETERMINATE		 equ	 WM_USER+05
1  2633		  =0409			 TB_ISBUTTONENABLED		 equ	 WM_USER+09
1  2634		  =040A			 TB_ISBUTTONCHECKED		 equ	 WM_USER+10
1  2635		  =040B			 TB_ISBUTTONPRESSED		 equ	 WM_USER+11
1  2636		  =040C			 TB_ISBUTTONHIDDEN		 equ	 WM_USER+12
1  2637		  =040D			 TB_ISBUTTONINDETERMINATE	 equ	 WM_USER+13
1  2638		  =0411			 TB_SETSTATE			 equ	 WM_USER+17
1  2639		  =0412			 TB_GETSTATE			 equ	 WM_USER+18
1  2640		  =0413			 TB_ADDBITMAP			 equ	 WM_USER+19
1  2641		  =0414			 TB_ADDBUTTONS			 equ	 WM_USER+20
1  2642		  =0415			 TB_INSERTBUTTON		 equ	 WM_USER+21
1  2643		  =0416			 TB_DELETEBUTTON		 equ	 WM_USER+22
1  2644		  =0417			 TB_GETBUTTON			 equ	 WM_USER+23
1  2645		  =0418			 TB_BUTTONCOUNT			 equ	 WM_USER+24
1  2646		  =0419			 TB_COMMANDTOINDEX		 equ	 WM_USER+25
1  2647		  =041A			 TB_SAVERESTOREA		 equ	 WM_USER+26
1  2648		  =041B			 TB_CUSTOMIZE			 equ	 WM_USER+27
1  2649		  =041C			 TB_ADDSTRINGA			 equ	 WM_USER+28
1  2650		  =041D			 TB_GETITEMRECT			 equ	 WM_USER+29
1  2651		  =041E			 TB_BUTTONSTRUCTSIZE		 equ	 WM_USER+30
1  2652		  =041F			 TB_SETBUTTONSIZE		 equ	 WM_USER+31
1  2653		  =0420			 TB_SETBITMAPSIZE		 equ	 WM_USER+32
1  2654		  =0421			 TB_AUTOSIZE			 equ	 WM_USER+33
1  2655		  =0423			 TB_GETTOOLTIPS			 equ	 WM_USER+35
1  2656		  =0424			 TB_SETTOOLTIPS			 equ	 WM_USER+36
1  2657		  =0425			 TB_SETPARENT			 equ	 WM_USER+37
1  2658		  =0427			 TB_SETROWS			 equ	 WM_USER+39
1  2659		  =0428			 TB_GETROWS			 equ	 WM_USER+40
1  2660		  =0429			 TB_GETBITMAPFLAGS		 equ	 WM_USER+41
1  2661		  =042A			 TB_SETCMDID			 equ	 WM_USER+42
1  2662		  =042B			 TB_CHANGEBITMAP		 equ	 WM_USER+43
1  2663		  =042C			 TB_GETBITMAP			 equ	 WM_USER+44
1  2664		  =042D			 TB_GETBUTTONTEXTA		 equ	 WM_USER+45
1  2665		  =042E			 TB_REPLACEBITMAP		 equ	 WM_USER+46
1  2666					 ;
1  2667		  =044B			 TB_GETBUTTONTEXTW		 equ	 WM_USER+75
1  2668		  =044C			 TB_SAVERESTOREW		 equ	 WM_USER+76
1  2669		  =044D			 TB_ADDSTRINGW			 equ	 WM_USER+77
1  2670					 ;
1  2671					 TB_GETBUTTONTEXT		 equ	 TB_GETBUTTONTEXTA
1  2672					 TB_SAVERESTORE			 equ	 TB_SAVERESTOREA
1  2673					 TB_ADDSTRING			 equ	 TB_ADDSTRINGA
1  2674					 ;
1  2675					 ;------------------------------------------------------------------------------
1  2676					 ;
1  2677					 ; =====================
1  2678					 ; toolbar notifications
1  2679					 ; =====================
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 48
pmScript.ASM



1  2680					 ;
1  2681		  =-02BC		 TBN_FIRST			 equ	 -700
1  2682		  =-02D0		 TBN_LAST			 equ	 TBN_FIRST-20
1  2683					 ;
1  2684		  =-02BC		 TBN_GETBUTTONINFOA		 equ	 TBN_FIRST-00
1  2685		  =-02BD		 TBN_BEGINDRAG			 equ	 TBN_FIRST-01
1  2686		  =-02BE		 TBN_ENDDRAG			 equ	 TBN_FIRST-02
1  2687		  =-02BF		 TBN_BEGINADJUST		 equ	 TBN_FIRST-03
1  2688		  =-02C0		 TBN_ENDADJUST			 equ	 TBN_FIRST-04
1  2689		  =-02C1		 TBN_RESET			 equ	 TBN_FIRST-05
1  2690		  =-02C2		 TBN_QUERYINSERT		 equ	 TBN_FIRST-06
1  2691		  =-02C3		 TBN_QUERYDELETE		 equ	 TBN_FIRST-07
1  2692		  =-02C4		 TBN_TOOLBARCHANGE		 equ	 TBN_FIRST-08
1  2693		  =-02C5		 TBN_CUSTHELP			 equ	 TBN_FIRST-09
1  2694		  =-02D0		 TBN_GETBUTTONINFOW		 equ	 TBN_FIRST-20
1  2695					 ;
1  2696					 ;------------------------------------------------------------------------------
1  2697					 ;
1  2698					 ; ==============
1  2699					 ; toolbar states
1  2700					 ; ==============
1  2701					 ;
1  2702		  =0001			 TBSTATE_CHECKED		 equ	 0001h
1  2703		  =0002			 TBSTATE_PRESSED		 equ	 0002h
1  2704		  =0004			 TBSTATE_ENABLED		 equ	 0004h
1  2705		  =0008			 TBSTATE_HIDDEN			 equ	 0008h
1  2706		  =0010			 TBSTATE_INDETERMINATE		 equ	 0010h
1  2707		  =0020			 TBSTATE_WRAP			 equ	 0020h
1  2708					 ;
1  2709					 ;------------------------------------------------------------------------------
1  2710					 ;
1  2711					 ; ==============
1  2712					 ; toolbar styles
1  2713					 ; ==============
1  2714					 ;
1  2715		  =0000			 TBSTYLE_BUTTON			 equ	 0000h
1  2716		  =0001			 TBSTYLE_SEP			 equ	 0001h
1  2717		  =0002			 TBSTYLE_CHECK			 equ	 0002h
1  2718		  =0004			 TBSTYLE_GROUP			 equ	 0004h
1  2719		  =0100			 TBSTYLE_TOOLTIPS		 equ	 0100h
1  2720		  =0200			 TBSTYLE_WRAPABLE		 equ	 0200h
1  2721		  =0400			 TBSTYLE_ALTDRAG		 equ	 0400h
1  2722					 ;
1  2723		  =0006			 TBSTYLE_CHECKGROUP		 equ	 TBSTYLE_GROUP+TBSTYLE_CHECK
1  2724					 ;
1  2725					 ;------------------------------------------------------------------------------
1  2726					 ;
1  2727					 ; ===================
1  2728					 ; thread access flags
1  2729					 ; ===================
1  2730					 ;
1  2731		  =0001			 THREAD_TERMINATE		 equ	 0001h
1  2732		  =0002			 THREAD_SUSPEND_RESUME		 equ	 0002h
1  2733		  =0008			 THREAD_GET_CONTEXT		 equ	 0008h
1  2734		  =0010			 THREAD_SET_CONTEXT		 equ	 0010h
1  2735		  =0020			 THREAD_SET_INFORMATION		 equ	 0020h
1  2736		  =0040			 THREAD_QUERY_INFORMATION	 equ	 0040h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 49
pmScript.ASM



1  2737		  =0080			 THREAD_SET_THREAD_TOKEN	 equ	 0080h
1  2738		  =0100			 THREAD_IMPERSONATE		 equ	 0100h
1  2739		  =0200			 THREAD_DIRECT_IMPERSONATION	 equ	 0200h
1  2740					 ;
1  2741					 ;THREAD_ALL_ACCESS	  equ STANDARD_RIGHTS_REQUIRED+SYNCHRONIZE+03FFh
1  2742					 ;
1  2743					 ;------------------------------------------------------------------------------
1  2744					 ;
1  2745					 ; =================
1  2746					 ; thread priorities
1  2747					 ; =================
1  2748					 ;
1  2749		  =-000F		 THREAD_BASE_PRIORITY_IDLE	 equ	 -15
1  2750		  =-0002		 THREAD_BASE_PRIORITY_MIN	 equ	  -2
1  2751		  =0002			 THREAD_BASE_PRIORITY_MAX	 equ	   2
1  2752		  =000F			 THREAD_BASE_PRIORITY_LOWRT	 equ	  15
1  2753					 ;
1  2754					 THREAD_PRIORITY_LOWEST		 equ	 THREAD_BASE_PRIORITY_MIN
1  2755		  =-0001		 THREAD_PRIORITY_BELOW_NORMAL	 equ	 THREAD_PRIORITY_LOWEST+1
1  2756		  =0000			 THREAD_PRIORITY_NORMAL		 equ	   0
1  2757		  =0001			 THREAD_PRIORITY_ABOVE_NORMAL	 equ	 THREAD_PRIORITY_HIGHEST-1
1  2758					 THREAD_PRIORITY_HIGHEST	 equ	 THREAD_BASE_PRIORITY_MAX
1  2759					 ;
1  2760					 THREAD_PRIORITY_TIME_CRITICAL	 equ	 THREAD_BASE_PRIORITY_LOWRT
1  2761					 THREAD_PRIORITY_IDLE		 equ	 THREAD_BASE_PRIORITY_IDLE
1  2762					 ;
1  2763		  =-0001		 THREAD_PRIORITY_ERROR_RETURN	 equ	  -1
1  2764					 ;
1  2765					 ;------------------------------------------------------------------------------
1  2766					 ;
1  2767					 ; ==================
1  2768					 ; tree	view messages
1  2769					 ; ==================
1  2770					 ;
1  2771		  =1100			 TVM_FIRST			 equ	 1100h
1  2772					 TV_FIRST			 equ	 TVM_FIRST
1  2773					 ;
1  2774		  =1100			 TVM_INSERTITEMA		 equ	 TVM_FIRST+00
1  2775		  =1101			 TVM_DELETEITEM			 equ	 TVM_FIRST+01
1  2776		  =1102			 TVM_EXPAND			 equ	 TVM_FIRST+02
1  2777		  =1104			 TVM_GETITEMRECT		 equ	 TVM_FIRST+04
1  2778		  =1105			 TVM_GETCOUNT			 equ	 TVM_FIRST+05
1  2779		  =1106			 TVM_GETINDENT			 equ	 TVM_FIRST+06
1  2780		  =1107			 TVM_SETINDENT			 equ	 TVM_FIRST+07
1  2781		  =1108			 TVM_GETIMAGELIST		 equ	 TVM_FIRST+08
1  2782		  =1109			 TVM_SETIMAGELIST		 equ	 TVM_FIRST+09
1  2783		  =110A			 TVM_GETNEXTITEM		 equ	 TVM_FIRST+10
1  2784		  =110B			 TVM_SELECTITEM			 equ	 TVM_FIRST+11
1  2785		  =110C			 TVM_GETITEMA			 equ	 TVM_FIRST+12
1  2786		  =110D			 TVM_SETITEMA			 equ	 TVM_FIRST+13
1  2787		  =110E			 TVM_EDITLABELA			 equ	 TVM_FIRST+14
1  2788		  =110F			 TVM_GETEDITCONTROL		 equ	 TVM_FIRST+15
1  2789		  =1110			 TVM_GETVISIBLECOUNT		 equ	 TVM_FIRST+16
1  2790		  =1111			 TVM_HITTEST			 equ	 TVM_FIRST+17
1  2791		  =1112			 TVM_CREATEDRAGIMAGE		 equ	 TVM_FIRST+18
1  2792		  =1113			 TVM_SORTCHILDREN		 equ	 TVM_FIRST+19
1  2793		  =1114			 TVM_ENSUREVISIBLE		 equ	 TVM_FIRST+20
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 50
pmScript.ASM



1  2794		  =1115			 TVM_SORTCHILDRENCB		 equ	 TVM_FIRST+21
1  2795		  =1116			 TVM_ENDEDITLABELNOW		 equ	 TVM_FIRST+22
1  2796		  =1117			 TVM_GETISEARCHSTRINGA		 equ	 TVM_FIRST+23
1  2797					 ;
1  2798		  =1132			 TVM_INSERTITEMW		 equ	 TVM_FIRST+50
1  2799		  =113E			 TVM_GETITEMW			 equ	 TVM_FIRST+62
1  2800		  =113F			 TVM_SETITEMW			 equ	 TVM_FIRST+63
1  2801		  =1140			 TVM_GETISEARCHSTRINGW		 equ	 TVM_FIRST+64
1  2802		  =1141			 TVM_EDITLABELW			 equ	 TVM_FIRST+65
1  2803					 ;
1  2804					 TVM_INSERTITEM			 equ	 TVM_INSERTITEMA
1  2805					 TVM_GETITEM			 equ	 TVM_GETITEMA
1  2806					 TVM_SETITEM			 equ	 TVM_SETITEMA
1  2807					 TVM_GETISEARCHSTRING		 equ	 TVM_GETISEARCHSTRINGA
1  2808					 TVM_EDITLABEL			 equ	 TVM_EDITLABELA
1  2809					 ;
1  2810					 ;------------------------------------------------------------------------------
1  2811					 ;
1  2812					 ; =======================
1  2813					 ; tree	view notifications
1  2814					 ; =======================
1  2815					 ;
1  2816		  =-0190		 TVN_FIRST			 equ	 -400
1  2817		  =-01F3		 TVN_LAST			 equ	 TVN_FIRST-99
1  2818					 ;
1  2819		  =-0191		 TVN_SELCHANGINGA		 equ	 TVN_FIRST-01
1  2820		  =-0192		 TVN_SELCHANGEDA		 equ	 TVN_FIRST-02
1  2821		  =-0193		 TVN_GETDISPINFOA		 equ	 TVN_FIRST-03
1  2822		  =-0194		 TVN_SETDISPINFOA		 equ	 TVN_FIRST-04
1  2823		  =-0195		 TVN_ITEMEXPANDINGA		 equ	 TVN_FIRST-05
1  2824		  =-0196		 TVN_ITEMEXPANDEDA		 equ	 TVN_FIRST-06
1  2825		  =-0197		 TVN_BEGINDRAGA			 equ	 TVN_FIRST-07
1  2826		  =-0198		 TVN_BEGINRDRAGA		 equ	 TVN_FIRST-08
1  2827		  =-0199		 TVN_DELETEITEMA		 equ	 TVN_FIRST-09
1  2828		  =-019B		 TVN_ENDLABELEDITA		 equ	 TVN_FIRST-11
1  2829		  =-019C		 TVN_KEYDOWN			 equ	 TVN_FIRST-12
1  2830					 ;
1  2831		  =-01C2		 TVN_SELCHANGINGW		 equ	 TVN_FIRST-50
1  2832		  =-01C3		 TVN_SELCHANGEDW		 equ	 TVN_FIRST-51
1  2833		  =-01C4		 TVN_GETDISPINFOW		 equ	 TVN_FIRST-52
1  2834		  =-01C5		 TVN_SETDISPINFOW		 equ	 TVN_FIRST-53
1  2835		  =-01C6		 TVN_ITEMEXPANDINGW		 equ	 TVN_FIRST-54
1  2836		  =-01C7		 TVN_ITEMEXPANDEDW		 equ	 TVN_FIRST-55
1  2837		  =-01C8		 TVN_BEGINDRAGW			 equ	 TVN_FIRST-56
1  2838		  =-01C9		 TVN_BEGINRDRAGW		 equ	 TVN_FIRST-57
1  2839		  =-01CA		 TVN_DELETEITEMW		 equ	 TVN_FIRST-58
1  2840		  =-019A		 TVN_BEGINLABELEDITA		 equ	 TVN_FIRST-10
1  2841		  =-01CB		 TVN_BEGINLABELEDITW		 equ	 TVN_FIRST-59
1  2842		  =-01CC		 TVN_ENDLABELEDITW		 equ	 TVN_FIRST-60
1  2843					 ;
1  2844					 TVN_SELCHANGING		 equ	 TVN_SELCHANGINGA
1  2845					 TVN_SELCHANGED			 equ	 TVN_SELCHANGEDA
1  2846					 TVN_GETDISPINFO		 equ	 TVN_GETDISPINFOA
1  2847					 TVN_SETDISPINFO		 equ	 TVN_SETDISPINFOA
1  2848					 TVN_ITEMEXPANDING		 equ	 TVN_ITEMEXPANDINGA
1  2849					 TVN_ITEMEXPANDED		 equ	 TVN_ITEMEXPANDEDA
1  2850					 TVN_BEGINDRAG			 equ	 TVN_BEGINDRAGA
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 51
pmScript.ASM



1  2851					 TVN_BEGINRDRAG			 equ	 TVN_BEGINRDRAGA
1  2852					 TVN_DELETEITEM			 equ	 TVN_DELETEITEMA
1  2853					 TVN_BEGINLABELEDIT		 equ	 TVN_BEGINLABELEDITA
1  2854					 TVN_ENDLABELEDIT		 equ	 TVN_ENDLABELEDITA
1  2855					 ;
1  2856					 ;------------------------------------------------------------------------------
1  2857					 ;
1  2858					 ; ================
1  2859					 ; tree	view styles
1  2860					 ; ================
1  2861					 ;
1  2862		  =0001			 TVS_HASBUTTONS			 equ	 00000001h
1  2863		  =0002			 TVS_HASLINES			 equ	 00000002h
1  2864		  =0004			 TVS_LINESATROOT		 equ	 00000004h
1  2865		  =0008			 TVS_EDITLABELS			 equ	 00000008h
1  2866		  =0010			 TVS_DISABLEDRAGDROP		 equ	 00000010h
1  2867		  =0020			 TVS_SHOWSELALWAYS		 equ	 00000020h
1  2868					 ;
1  2869					 ;------------------------------------------------------------------------------
1  2870					 ;
1  2871					 ; ================
1  2872					 ; os platform id's
1  2873					 ; ================
1  2874					 ;
1  2875		  =0000			 VER_PLATFORM_WIN32s		 equ	 0
1  2876		  =0001			 VER_PLATFORM_WIN32_WINDOWS	 equ	 1
1  2877		  =0002			 VER_PLATFORM_WIN32_NT		 equ	 2
1  2878					 ;
1  2879					 ;------------------------------------------------------------------------------
1  2880					 ;
1  2881					 ; ====================
1  2882					 ; toolbar view	bitmaps
1  2883					 ; ====================
1  2884					 ;
1  2885		  =0000			 VIEW_LARGEICONS		 equ	  0
1  2886		  =0001			 VIEW_SMALLICONS		 equ	  1
1  2887		  =0002			 VIEW_LIST			 equ	  2
1  2888		  =0003			 VIEW_DETAILS			 equ	  3
1  2889		  =0004			 VIEW_SORTNAME			 equ	  4
1  2890		  =0005			 VIEW_SORTSIZE			 equ	  5
1  2891		  =0006			 VIEW_SORTDATE			 equ	  6
1  2892		  =0007			 VIEW_SORTTYPE			 equ	  7
1  2893		  =0008			 VIEW_PARENTFOLDER		 equ	  8
1  2894		  =0009			 VIEW_NETCONNECT		 equ	  9
1  2895		  =000A			 VIEW_NETDISCONNECT		 equ	 10
1  2896		  =000B			 VIEW_NEWFOLDER			 equ	 11
1  2897					 ;
1  2898					 ;------------------------------------------------------------------------------
1  2899					 ;
1  2900					 ; =====================
1  2901					 ; standard virtual keys
1  2902					 ; =====================
1  2903					 ;
1  2904		  =0001			 VK_LBUTTON			 equ	 01h
1  2905		  =0002			 VK_RBUTTON			 equ	 02h
1  2906		  =0003			 VK_CANCEL			 equ	 03h
1  2907		  =0004			 VK_MBUTTON			 equ	 04h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 52
pmScript.ASM



1  2908					 ;
1  2909		  =0008			 VK_BACK			 equ	 08h
1  2910		  =0009			 VK_TAB				 equ	 09h
1  2911		  =000C			 VK_CLEAR			 equ	 0Ch
1  2912		  =000D			 VK_RETURN			 equ	 0Dh
1  2913		  =0010			 VK_SHIFT			 equ	 10h
1  2914		  =0011			 VK_CONTROL			 equ	 11h
1  2915		  =0012			 VK_MENU			 equ	 12h
1  2916		  =0013			 VK_PAUSE			 equ	 13h
1  2917		  =0014			 VK_CAPITAL			 equ	 14h
1  2918		  =001B			 VK_ESCAPE			 equ	 1Bh
1  2919					 ;
1  2920		  =0020			 VK_SPACE			 equ	 20h
1  2921		  =0021			 VK_PRIOR			 equ	 21h
1  2922		  =0022			 VK_NEXT			 equ	 22h
1  2923		  =0023			 VK_END				 equ	 23h
1  2924		  =0024			 VK_HOME			 equ	 24h
1  2925		  =0025			 VK_LEFT			 equ	 25h
1  2926		  =0026			 VK_UP				 equ	 26h
1  2927		  =0027			 VK_RIGHT			 equ	 27h
1  2928		  =0028			 VK_DOWN			 equ	 28h
1  2929		  =0029			 VK_SELECT			 equ	 29h
1  2930		  =002A			 VK_PRINT			 equ	 2Ah
1  2931		  =002B			 VK_EXECUTE			 equ	 2Bh
1  2932		  =002C			 VK_SNAPSHOT			 equ	 2Ch
1  2933		  =002D			 VK_INSERT			 equ	 2Dh
1  2934		  =002E			 VK_DELETE			 equ	 2Eh
1  2935		  =002F			 VK_HELP			 equ	 2Fh
1  2936					 ;
1  2937		  =005B			 VK_LWIN			 equ	 5Bh
1  2938		  =005C			 VK_RWIN			 equ	 5Ch
1  2939		  =005D			 VK_APPS			 equ	 5Dh
1  2940					 ;
1  2941		  =0060			 VK_NUMPAD0			 equ	 60h
1  2942		  =0061			 VK_NUMPAD1			 equ	 61h
1  2943		  =0062			 VK_NUMPAD2			 equ	 62h
1  2944		  =0063			 VK_NUMPAD3			 equ	 63h
1  2945		  =0064			 VK_NUMPAD4			 equ	 64h
1  2946		  =0065			 VK_NUMPAD5			 equ	 65h
1  2947		  =0066			 VK_NUMPAD6			 equ	 66h
1  2948		  =0067			 VK_NUMPAD7			 equ	 67h
1  2949		  =0068			 VK_NUMPAD8			 equ	 68h
1  2950		  =0069			 VK_NUMPAD9			 equ	 69h
1  2951		  =006A			 VK_MULTIPLY			 equ	 6Ah
1  2952		  =006B			 VK_ADD				 equ	 6Bh
1  2953		  =006C			 VK_SEPARATOR			 equ	 6Ch
1  2954		  =006D			 VK_SUBTRACT			 equ	 6Dh
1  2955		  =006E			 VK_DECIMAL			 equ	 6Eh
1  2956		  =006F			 VK_DIVIDE			 equ	 6Fh
1  2957		  =0070			 VK_F1				 equ	 70h
1  2958		  =0071			 VK_F2				 equ	 71h
1  2959		  =0072			 VK_F3				 equ	 72h
1  2960		  =0073			 VK_F4				 equ	 73h
1  2961		  =0074			 VK_F5				 equ	 74h
1  2962		  =0075			 VK_F6				 equ	 75h
1  2963		  =0076			 VK_F7				 equ	 76h
1  2964		  =0077			 VK_F8				 equ	 77h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 53
pmScript.ASM



1  2965		  =0078			 VK_F9				 equ	 78h
1  2966		  =0079			 VK_F10				 equ	 79h
1  2967		  =007A			 VK_F11				 equ	 7Ah
1  2968		  =007B			 VK_F12				 equ	 7Bh
1  2969		  =007C			 VK_F13				 equ	 7Ch
1  2970		  =007D			 VK_F14				 equ	 7Dh
1  2971		  =007E			 VK_F15				 equ	 7Eh
1  2972		  =007F			 VK_F16				 equ	 7Fh
1  2973		  =0080			 VK_F17				 equ	 80h
1  2974		  =0081			 VK_F18				 equ	 81h
1  2975		  =0082			 VK_F19				 equ	 82h
1  2976		  =0083			 VK_F20				 equ	 83h
1  2977		  =0084			 VK_F21				 equ	 84h
1  2978		  =0085			 VK_F22				 equ	 85h
1  2979		  =0086			 VK_F23				 equ	 86h
1  2980		  =0087			 VK_F24				 equ	 87h
1  2981					 ;
1  2982		  =0090			 VK_NUMLOCK			 equ	 90h
1  2983		  =0091			 VK_SCROLL			 equ	 91h
1  2984					 ;
1  2985					 ;------------------------------------------------------------------------------
1  2986					 ;
1  2987					 ; ====================
1  2988					 ; special virtual keys
1  2989					 ; ====================
1  2990					 ;
1  2991		  =00A0			 VK_LSHIFT			 equ	 0A0h
1  2992		  =00A1			 VK_RSHIFT			 equ	 0A1h
1  2993		  =00A2			 VK_LCONTROL			 equ	 0A2h
1  2994		  =00A3			 VK_RCONTROL			 equ	 0A3h
1  2995		  =00A4			 VK_LMENU			 equ	 0A4h
1  2996		  =00A5			 VK_RMENU			 equ	 0A5h
1  2997					 ;
1  2998		  =00E5			 VK_PROCESSKEY			 equ	 0E5h
1  2999					 ;
1  3000		  =00F6			 VK_ATTN			 equ	 0F6h
1  3001		  =00F7			 VK_CRSEL			 equ	 0F7h
1  3002		  =00F8			 VK_EXSEL			 equ	 0F8h
1  3003		  =00F9			 VK_EREOF			 equ	 0F9h
1  3004		  =00FA			 VK_PLAY			 equ	 0FAh
1  3005		  =00FB			 VK_ZOOM			 equ	 0FBh
1  3006		  =00FC			 VK_NONAME			 equ	 0FCh
1  3007		  =00FD			 VK_PA1				 equ	 0FDh
1  3008		  =00FE			 VK_OEM_CLEAR			 equ	 0FEh
1  3009					 ;
1  3010					 ;------------------------------------------------------------------------------
1  3011					 ;
1  3012					 ; =================
1  3013					 ; wait	status codes
1  3014					 ; =================
1  3015					 ;
1  3016		  =-0001		 WAIT_FAILED			 equ	 -1
1  3017					 WAIT_OBJECT_0			 equ	 STATUS_WAIT_0
1  3018					 ;
1  3019					 WAIT_ABANDONED			 equ	 STATUS_ABANDONED_WAIT_0
1  3020					 WAIT_ABANDONED_0		 equ	 STATUS_ABANDONED_WAIT_0
1  3021					 ;
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 54
pmScript.ASM



1  3022					 WAIT_TIMEOUT			 equ	 STATUS_TIMEOUT
1  3023					 WAIT_IO_COMPLETION		 equ	 STATUS_USER_APC
1  3024					 STILL_ACTIVE			 equ	 STATUS_PENDING
1  3025					 ;
1  3026		  =0040			 MAXIMUM_WAIT_OBJECTS		 equ	  64
1  3027		  =007F			 MAXIMUM_SUSPEND_COUNT		 equ	 127
1  3028		  =-0001		 INFINITE			 equ	  -1
1  3029					 ;
1  3030					 ;------------------------------------------------------------------------------
1  3031					 ;
1  3032					 ; ===============
1  3033					 ; window messages
1  3034					 ; ===============
1  3035					 ;
1  3036		  =0000			 WM_NULL			 equ	 0000h
1  3037		  =0001			 WM_CREATE			 equ	 0001h
1  3038		  =0002			 WM_DESTROY			 equ	 0002h
1  3039		  =0003			 WM_MOVE			 equ	 0003h
1  3040		  =0005			 WM_SIZE			 equ	 0005h
1  3041		  =0006			 WM_ACTIVATE			 equ	 0006h
1  3042		  =0007			 WM_SETFOCUS			 equ	 0007h
1  3043		  =0008			 WM_KILLFOCUS			 equ	 0008h
1  3044		  =000A			 WM_ENABLE			 equ	 000Ah
1  3045		  =000B			 WM_SETREDRAW			 equ	 000Bh
1  3046		  =000C			 WM_SETTEXT			 equ	 000Ch
1  3047		  =000D			 WM_GETTEXT			 equ	 000Dh
1  3048		  =000E			 WM_GETTEXTLENGTH		 equ	 000Eh
1  3049		  =000F			 WM_PAINT			 equ	 000Fh
1  3050		  =0010			 WM_CLOSE			 equ	 0010h
1  3051		  =0011			 WM_QUERYENDSESSION		 equ	 0011h
1  3052		  =0012			 WM_QUIT			 equ	 0012h
1  3053		  =0013			 WM_QUERYOPEN			 equ	 0013h
1  3054		  =0014			 WM_ERASEBKGND			 equ	 0014h
1  3055		  =0015			 WM_SYSCOLORCHANGE		 equ	 0015h
1  3056		  =0016			 WM_ENDSESSION			 equ	 0016h
1  3057		  =0018			 WM_SHOWWINDOW			 equ	 0018h
1  3058		  =001A			 WM_WININICHANGE		 equ	 001Ah
1  3059					 WM_SETTINGCHANGE		 equ	 WM_WININICHANGE
1  3060		  =001B			 WM_DEVMODECHANGE		 equ	 001Bh
1  3061		  =001C			 WM_ACTIVATEAPP			 equ	 001Ch
1  3062		  =001D			 WM_FONTCHANGE			 equ	 001Dh
1  3063		  =001E			 WM_TIMECHANGE			 equ	 001Eh
1  3064		  =001F			 WM_CANCELMODE			 equ	 001Fh
1  3065		  =0020			 WM_SETCURSOR			 equ	 0020h
1  3066		  =0021			 WM_MOUSEACTIVATE		 equ	 0021h
1  3067		  =0022			 WM_CHILDACTIVATE		 equ	 0022h
1  3068		  =0023			 WM_QUEUESYNC			 equ	 0023h
1  3069		  =0024			 WM_GETMINMAXINFO		 equ	 0024h
1  3070		  =0026			 WM_PAINTICON			 equ	 0026h
1  3071		  =0027			 WM_ICONERASEBKGND		 equ	 0027h
1  3072		  =0028			 WM_NEXTDLGCTL			 equ	 0028h
1  3073		  =002A			 WM_SPOOLERSTATUS		 equ	 002Ah
1  3074		  =002B			 WM_DRAWITEM			 equ	 002Bh
1  3075		  =002C			 WM_MEASUREITEM			 equ	 002Ch
1  3076		  =002D			 WM_DELETEITEM			 equ	 002Dh
1  3077		  =002E			 WM_VKEYTOITEM			 equ	 002Eh
1  3078		  =002F			 WM_CHARTOITEM			 equ	 002Fh
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 55
pmScript.ASM



1  3079		  =0030			 WM_SETFONT			 equ	 0030h
1  3080		  =0031			 WM_GETFONT			 equ	 0031h
1  3081		  =0032			 WM_SETHOTKEY			 equ	 0032h
1  3082		  =0033			 WM_GETHOTKEY			 equ	 0033h
1  3083		  =0037			 WM_QUERYDRAGICON		 equ	 0037h
1  3084		  =0039			 WM_COMPAREITEM			 equ	 0039h
1  3085		  =0041			 WM_COMPACTING			 equ	 0041h
1  3086		  =0044			 WM_COMMNOTIFY			 equ	 0044h		 ;no longer suported
1  3087		  =0046			 WM_WINDOWPOSCHANGING		 equ	 0046h
1  3088		  =0047			 WM_WINDOWPOSCHANGED		 equ	 0047h
1  3089		  =0048			 WM_POWER			 equ	 0048h
1  3090		  =004A			 WM_COPYDATA			 equ	 004Ah
1  3091		  =004B			 WM_CANCELJOURNAL		 equ	 004Bh
1  3092		  =004E			 WM_NOTIFY			 equ	 004Eh
1  3093		  =0050			 WM_INPUTLANGCHANGEREQUEST	 equ	 0050h
1  3094		  =0051			 WM_INPUTLANGCHANGE		 equ	 0051h
1  3095		  =0052			 WM_TCARD			 equ	 0052h
1  3096		  =0053			 WM_HELP			 equ	 0053h
1  3097		  =0054			 WM_USERCHANGED			 equ	 0054h
1  3098		  =0055			 WM_NOTIFYFORMAT		 equ	 0055h
1  3099		  =007B			 WM_CONTEXTMENU			 equ	 007Bh
1  3100		  =007C			 WM_STYLECHANGING		 equ	 007Ch
1  3101		  =007D			 WM_STYLECHANGED		 equ	 007Dh
1  3102		  =007E			 WM_DISPLAYCHANGE		 equ	 007Eh
1  3103		  =007F			 WM_GETICON			 equ	 007Fh
1  3104		  =0080			 WM_SETICON			 equ	 0080h
1  3105		  =0081			 WM_NCCREATE			 equ	 0081h
1  3106		  =0082			 WM_NCDESTROY			 equ	 0082h
1  3107		  =0083			 WM_NCCALCSIZE			 equ	 0083h
1  3108		  =0084			 WM_NCHITTEST			 equ	 0084h
1  3109		  =0085			 WM_NCPAINT			 equ	 0085h
1  3110		  =0086			 WM_NCACTIVATE			 equ	 0086h
1  3111		  =0087			 WM_GETDLGCODE			 equ	 0087h
1  3112					 ;
1  3113		  =00A0			 WM_NCMOUSEMOVE			 equ	 00A0h
1  3114		  =00A1			 WM_NCLBUTTONDOWN		 equ	 00A1h
1  3115		  =00A2			 WM_NCLBUTTONUP			 equ	 00A2h
1  3116		  =00A3			 WM_NCLBUTTONDBLCLK		 equ	 00A3h
1  3117		  =00A4			 WM_NCRBUTTONDOWN		 equ	 00A4h
1  3118		  =00A5			 WM_NCRBUTTONUP			 equ	 00A5h
1  3119		  =00A6			 WM_NCRBUTTONDBLCLK		 equ	 00A6h
1  3120		  =00A7			 WM_NCMBUTTONDOWN		 equ	 00A7h
1  3121		  =00A8			 WM_NCMBUTTONUP			 equ	 00A8h
1  3122		  =00A9			 WM_NCMBUTTONDBLCLK		 equ	 00A9h
1  3123					 ;
1  3124		  =0100			 WM_KEYFIRST			 equ	 0100h
1  3125		  =0100			 WM_KEYDOWN			 equ	 0100h
1  3126		  =0101			 WM_KEYUP			 equ	 0101h
1  3127		  =0102			 WM_CHAR			 equ	 0102h
1  3128		  =0103			 WM_DEADCHAR			 equ	 0103h
1  3129		  =0104			 WM_SYSKEYDOWN			 equ	 0104h
1  3130		  =0105			 WM_SYSKEYUP			 equ	 0105h
1  3131		  =0106			 WM_SYSCHAR			 equ	 0106h
1  3132		  =0107			 WM_SYSDEADCHAR			 equ	 0107h
1  3133		  =0108			 WM_KEYLAST			 equ	 0108h
1  3134					 ;
1  3135		  =010D			 WM_IME_STARTCOMPOSITION	 equ	 010Dh
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 56
pmScript.ASM



1  3136		  =010E			 WM_IME_ENDCOMPOSITION		 equ	 010Eh
1  3137		  =010F			 WM_IME_COMPOSITION		 equ	 010Fh
1  3138		  =010F			 WM_IME_KEYLAST			 equ	 010Fh
1  3139		  =0110			 WM_INITDIALOG			 equ	 0110h
1  3140		  =0111			 WM_COMMAND			 equ	 0111h
1  3141		  =0112			 WM_SYSCOMMAND			 equ	 0112h
1  3142		  =0113			 WM_TIMER			 equ	 0113h
1  3143		  =0114			 WM_HSCROLL			 equ	 0114h
1  3144		  =0115			 WM_VSCROLL			 equ	 0115h
1  3145		  =0116			 WM_INITMENU			 equ	 0116h
1  3146		  =0117			 WM_INITMENUPOPUP		 equ	 0117h
1  3147		  =011F			 WM_MENUSELECT			 equ	 011Fh
1  3148		  =0120			 WM_MENUCHAR			 equ	 0120h
1  3149		  =0121			 WM_ENTERIDLE			 equ	 0121h
1  3150		  =0132			 WM_CTLCOLORMSGBOX		 equ	 0132h
1  3151		  =0133			 WM_CTLCOLOREDIT		 equ	 0133h
1  3152		  =0134			 WM_CTLCOLORLISTBOX		 equ	 0134h
1  3153		  =0135			 WM_CTLCOLORBTN			 equ	 0135h
1  3154		  =0136			 WM_CTLCOLORDLG			 equ	 0136h
1  3155		  =0137			 WM_CTLCOLORSCROLLBAR		 equ	 0137h
1  3156		  =0138			 WM_CTLCOLORSTATIC		 equ	 0138h
1  3157					 ;
1  3158		  =0200			 WM_MOUSEFIRST			 equ	 0200h
1  3159		  =0200			 WM_MOUSEMOVE			 equ	 0200h
1  3160		  =0201			 WM_LBUTTONDOWN			 equ	 0201h
1  3161		  =0202			 WM_LBUTTONUP			 equ	 0202h
1  3162		  =0203			 WM_LBUTTONDBLCLK		 equ	 0203h
1  3163		  =0204			 WM_RBUTTONDOWN			 equ	 0204h
1  3164		  =0205			 WM_RBUTTONUP			 equ	 0205h
1  3165		  =0206			 WM_RBUTTONDBLCLK		 equ	 0206h
1  3166		  =0207			 WM_MBUTTONDOWN			 equ	 0207h
1  3167		  =0208			 WM_MBUTTONUP			 equ	 0208h
1  3168		  =0209			 WM_MBUTTONDBLCLK		 equ	 0209h
1  3169		  =0209			 WM_MOUSELAST			 equ	 0209h
1  3170					 ;
1  3171		  =0210			 WM_PARENTNOTIFY		 equ	 0210h
1  3172		  =0211			 WM_ENTERMENULOOP		 equ	 0211h
1  3173		  =0212			 WM_EXITMENULOOP		 equ	 0212h
1  3174		  =0213			 WM_NEXTMENU			 equ	 0213h
1  3175		  =0214			 WM_SIZING			 equ	 0214h
1  3176		  =0215			 WM_CAPTURECHANGED		 equ	 0215h
1  3177		  =0216			 WM_MOVING			 equ	 0216h
1  3178		  =0218			 WM_POWERBROADCAST		 equ	 0218h
1  3179		  =0219			 WM_DEVICECHANGE		 equ	 0219h
1  3180		  =0220			 WM_MDICREATE			 equ	 0220h
1  3181		  =0221			 WM_MDIDESTROY			 equ	 0221h
1  3182		  =0222			 WM_MDIACTIVATE			 equ	 0222h
1  3183		  =0223			 WM_MDIRESTORE			 equ	 0223h
1  3184		  =0224			 WM_MDINEXT			 equ	 0224h
1  3185		  =0225			 WM_MDIMAXIMIZE			 equ	 0225h
1  3186		  =0226			 WM_MDITILE			 equ	 0226h
1  3187		  =0227			 WM_MDICASCADE			 equ	 0227h
1  3188		  =0228			 WM_MDIICONARRANGE		 equ	 0228h
1  3189		  =0229			 WM_MDIGETACTIVE		 equ	 0229h
1  3190		  =0230			 WM_MDISETMENU			 equ	 0230h
1  3191		  =0231			 WM_ENTERSIZEMOVE		 equ	 0231h
1  3192		  =0232			 WM_EXITSIZEMOVE		 equ	 0232h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 57
pmScript.ASM



1  3193		  =0233			 WM_DROPFILES			 equ	 0233h
1  3194		  =0234			 WM_MDIREFRESHMENU		 equ	 0234h
1  3195					 ;
1  3196		  =0281			 WM_IME_SETCONTEXT		 equ	 0281h
1  3197		  =0282			 WM_IME_NOTIFY			 equ	 0282h
1  3198		  =0283			 WM_IME_CONTROL			 equ	 0283h
1  3199		  =0284			 WM_IME_COMPOSITIONFULL		 equ	 0284h
1  3200		  =0285			 WM_IME_SELECT			 equ	 0285h
1  3201		  =0286			 WM_IME_CHAR			 equ	 0286h
1  3202		  =0290			 WM_IME_KEYDOWN			 equ	 0290h
1  3203		  =0291			 WM_IME_KEYUP			 equ	 0291h
1  3204					 ;
1  3205		  =02A1			 WM_MOUSEHOVER			 equ	 02A1h
1  3206					 ;
1  3207		  =0300			 WM_CUT				 equ	 0300h
1  3208		  =0301			 WM_COPY			 equ	 0301h
1  3209		  =0302			 WM_PASTE			 equ	 0302h
1  3210		  =0303			 WM_CLEAR			 equ	 0303h
1  3211		  =0304			 WM_UNDO			 equ	 0304h
1  3212		  =0305			 WM_RENDERFORMAT		 equ	 0305h
1  3213		  =0306			 WM_RENDERALLFORMATS		 equ	 0306h
1  3214		  =0307			 WM_DESTROYCLIPBOARD		 equ	 0307h
1  3215		  =0308			 WM_DRAWCLIPBOARD		 equ	 0308h
1  3216		  =0309			 WM_PAINTCLIPBOARD		 equ	 0309h
1  3217		  =030A			 WM_VSCROLLCLIPBOARD		 equ	 030Ah
1  3218		  =030B			 WM_SIZECLIPBOARD		 equ	 030Bh
1  3219		  =030C			 WM_ASKCBFORMATNAME		 equ	 030Ch
1  3220		  =030D			 WM_CHANGECBCHAIN		 equ	 030Dh
1  3221		  =030E			 WM_HSCROLLCLIPBOARD		 equ	 030Eh
1  3222		  =030F			 WM_QUERYNEWPALETTE		 equ	 030Fh
1  3223		  =0310			 WM_PALETTEISCHANGING		 equ	 0310h
1  3224		  =0311			 WM_PALETTECHANGED		 equ	 0311h
1  3225		  =0312			 WM_HOTKEY			 equ	 0312h
1  3226		  =0317			 WM_PRINT			 equ	 0317h
1  3227		  =0318			 WM_PRINTCLIENT			 equ	 0318h
1  3228					 ;
1  3229		  =0358			 WM_HANDHELDFIRST		 equ	 0358h
1  3230		  =035F			 WM_HANDHELDLAST		 equ	 035Fh
1  3231					 ;
1  3232		  =0360			 WM_AFXFIRST			 equ	 0360h
1  3233		  =037F			 WM_AFXLAST			 equ	 037Fh
1  3234					 ;
1  3235		  =0380			 WM_PENWINFIRST			 equ	 0380h
1  3236		  =038F			 WM_PENWINLAST			 equ	 038Fh
1  3237					 ;
1  3238		  =03E0			 WM_DDE_FIRST			 equ	 03E0h
1  3239					 WM_DDE_INITIATE		 equ	 WM_DDE_FIRST
1  3240		  =03E1			 WM_DDE_TERMINATE		 equ	 WM_DDE_FIRST+1
1  3241		  =03E2			 WM_DDE_ADVISE			 equ	 WM_DDE_FIRST+2
1  3242		  =03E3			 WM_DDE_UNADVISE		 equ	 WM_DDE_FIRST+3
1  3243		  =03E4			 WM_DDE_ACK			 equ	 WM_DDE_FIRST+4
1  3244		  =03E5			 WM_DDE_DATA			 equ	 WM_DDE_FIRST+5
1  3245		  =03E6			 WM_DDE_REQUEST			 equ	 WM_DDE_FIRST+6
1  3246		  =03E7			 WM_DDE_POKE			 equ	 WM_DDE_FIRST+7
1  3247		  =03E8			 WM_DDE_EXECUTE			 equ	 WM_DDE_FIRST+8
1  3248		  =03E8			 WM_DDE_LAST			 equ	 03E8h
1  3249					 ;
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 58
pmScript.ASM



1  3250		  =0400			 WM_USER			 equ	 0400h
1  3251		  =8000			 WM_APP				 equ	 8000h
1  3252					 ;
1  3253					 ;------------------------------------------------------------------------------
1  3254					 ;
1  3255					 ; ====================
1  3256					 ; WNet*() status codes
1  3257					 ; ====================
1  3258					 ;
1  3259					 WN_SUCCESS			 equ	 NO_ERROR
1  3260					 WN_NO_ERROR			 equ	 NO_ERROR
1  3261					 ;
1  3262					 WN_NOT_SUPPORTED		 equ	 ERROR_NOT_SUPPORTED
1  3263					 WN_CANCEL			 equ	 ERROR_CANCELLED
1  3264					 WN_RETRY			 equ	 ERROR_RETRY
1  3265					 WN_NET_ERROR			 equ	 ERROR_UNEXP_NET_ERR
1  3266					 WN_MORE_DATA			 equ	 ERROR_MORE_DATA
1  3267					 WN_BAD_POINTER			 equ	 ERROR_INVALID_ADDRESS
1  3268					 WN_BAD_VALUE			 equ	 ERROR_INVALID_PARAMETER
1  3269					 WN_BAD_USER			 equ	 ERROR_BAD_USERNAME
1  3270					 WN_BAD_PASSWORD		 equ	 ERROR_INVALID_PASSWORD
1  3271					 WN_ACCESS_DENIED		 equ	 ERROR_ACCESS_DENIED
1  3272					 WN_FUNCTION_BUSY		 equ	 ERROR_BUSY
1  3273					 WN_WINDOWS_ERROR		 equ	 ERROR_UNEXP_NET_ERR
1  3274					 WN_OUT_OF_MEMORY		 equ	 ERROR_NOT_ENOUGH_MEMORY
1  3275					 WN_NO_NETWORK			 equ	 ERROR_NO_NETWORK
1  3276					 WN_EXTENDED_ERROR		 equ	 ERROR_EXTENDED_ERROR
1  3277					 WN_BAD_LEVEL			 equ	 ERROR_INVALID_LEVEL
1  3278					 WN_BAD_HANDLE			 equ	 ERROR_INVALID_HANDLE
1  3279					 WN_NOT_INITIALIZING		 equ	 ERROR_ALREADY_INITIALIZED
1  3280					 WN_NO_MORE_DEVICES		 equ	 ERROR_NO_MORE_DEVICES
1  3281					 ;
1  3282					 WN_NOT_CONNECTED		 equ	 ERROR_NOT_CONNECTED
1  3283					 WN_OPEN_FILES			 equ	 ERROR_OPEN_FILES
1  3284					 WN_DEVICE_IN_USE		 equ	 ERROR_DEVICE_IN_USE
1  3285					 WN_BAD_NETNAME			 equ	 ERROR_BAD_NET_NAME
1  3286					 WN_BAD_LOCALNAME		 equ	 ERROR_BAD_DEVICE
1  3287					 WN_ALREADY_CONNECTED		 equ	 ERROR_ALREADY_ASSIGNED
1  3288					 WN_DEVICE_ERROR		 equ	 ERROR_GEN_FAILURE
1  3289					 WN_CONNECTION_CLOSED		 equ	 ERROR_CONNECTION_UNAVAIL
1  3290					 WN_NO_NET_OR_BAD_PATH		 equ	 ERROR_NO_NET_OR_BAD_PATH
1  3291					 WN_BAD_PROVIDER		 equ	 ERROR_BAD_PROVIDER
1  3292					 WN_CANNOT_OPEN_PROFILE		 equ	 ERROR_CANNOT_OPEN_PROFILE
1  3293					 WN_BAD_PROFILE			 equ	 ERROR_BAD_PROFILE
1  3294					 WN_BAD_DEV_TYPE		 equ	 ERROR_BAD_DEV_TYPE
1  3295					 WN_DEVICE_ALREADY_REMEMBERED	 equ	 ERROR_DEVICE_ALREADY_REMEMBERED
1  3296					 ;
1  3297					 WN_NO_MORE_ENTRIES		 equ	 ERROR_NO_MORE_ITEMS
1  3298					 WN_NOT_CONTAINER		 equ	 ERROR_NOT_CONTAINER
1  3299					 ;
1  3300					 WN_NOT_AUTHENTICATED		 equ	 ERROR_NOT_AUTHENTICATED
1  3301					 WN_NOT_LOGGED_ON		 equ	 ERROR_NOT_LOGGED_ON
1  3302					 WN_NOT_VALIDATED		 equ	 ERROR_NO_LOGON_SERVERS
1  3303					 ;
1  3304					 ;------------------------------------------------------------------------------
1  3305					 ;
1  3306					 ; =============
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 59
pmScript.ASM



1  3307					 ; network types
1  3308					 ; =============
1  3309					 ;
1  3310		  =00010000		 WNNC_NET_MSNET			 equ	 00010000h
1  3311		  =00020000		 WNNC_NET_LANMAN		 equ	 00020000h
1  3312		  =00030000		 WNNC_NET_NETWARE		 equ	 00030000h
1  3313		  =00040000		 WNNC_NET_VINES			 equ	 00040000h
1  3314		  =00050000		 WNNC_NET_10NET			 equ	 00050000h
1  3315		  =00060000		 WNNC_NET_LOCUS			 equ	 00060000h
1  3316		  =00070000		 WNNC_NET_SUN_PC_NFS		 equ	 00070000h
1  3317		  =00080000		 WNNC_NET_LANSTEP		 equ	 00080000h
1  3318		  =00090000		 WNNC_NET_9TILES		 equ	 00090000h
1  3319		  =000A0000		 WNNC_NET_LANTASTIC		 equ	 000A0000h
1  3320		  =000B0000		 WNNC_NET_AS400			 equ	 000B0000h
1  3321		  =000C0000		 WNNC_NET_FTP_NFS		 equ	 000C0000h
1  3322		  =000D0000		 WNNC_NET_PATHWORKS		 equ	 000D0000h
1  3323		  =000E0000		 WNNC_NET_LIFENET		 equ	 000E0000h
1  3324		  =000F0000		 WNNC_NET_POWERLAN		 equ	 000F0000h
1  3325		  =00100000		 WNNC_NET_BWNFS			 equ	 00100000h
1  3326		  =00110000		 WNNC_NET_COGENT		 equ	 00110000h
1  3327		  =00120000		 WNNC_NET_FARALLON		 equ	 00120000h
1  3328		  =00130000		 WNNC_NET_APPLETALK		 equ	 00130000h
1  3329					 ;
1  3330					 ;------------------------------------------------------------------------------
1  3331					 ;
1  3332					 ; =============
1  3333					 ; window styles
1  3334					 ; =============
1  3335					 ;
1  3336		  =0000			 WS_OVERLAPPED			 equ	 00000000h
1  3337		  =00010000		 WS_TABSTOP			 equ	 00010000h
1  3338		  =00020000		 WS_GROUP			 equ	 00020000h
1  3339		  =00010000		 WS_MAXIMIZEBOX			 equ	 00010000h
1  3340		  =00020000		 WS_MINIMIZEBOX			 equ	 00020000h
1  3341		  =00040000		 WS_THICKFRAME			 equ	 00040000h
1  3342		  =00080000		 WS_SYSMENU			 equ	 00080000h
1  3343		  =00100000		 WS_HSCROLL			 equ	 00100000h
1  3344		  =00200000		 WS_VSCROLL			 equ	 00200000h
1  3345		  =00400000		 WS_DLGFRAME			 equ	 00400000h
1  3346		  =00800000		 WS_BORDER			 equ	 00800000h
1  3347		  =01000000		 WS_MAXIMIZE			 equ	 01000000h
1  3348		  =02000000		 WS_CLIPCHILDREN		 equ	 02000000h
1  3349		  =04000000		 WS_CLIPSIBLINGS		 equ	 04000000h
1  3350		  =08000000		 WS_DISABLED			 equ	 08000000h
1  3351		  =10000000		 WS_VISIBLE			 equ	 10000000h
1  3352		  =20000000		 WS_MINIMIZE			 equ	 20000000h
1  3353		  =40000000		 WS_CHILD			 equ	 40000000h
1  3354		  =80000000		 WS_POPUP			 equ	 80000000h
1  3355					 ;
1  3356		  =00C00000		 WS_CAPTION			 equ	 WS_BORDER+WS_DLGFRAME
1  3357		  =80880000		 WS_POPUPWINDOW			 equ	 WS_POPUP+WS_BORDER+WS_SYSMENU
1  3358		  =10C80000		 WS_MODAL			 equ	 WS_CAPTION+WS_SYSMENU+WS_VISIBLE
1  3359		  =10C80000		 WS_MODELESS			 equ	 WS_CAPTION+WS_SYSMENU+WS_VISIBLE
1  3360		  =50000000		 WS_CONTROL			 equ	 WS_CHILD+WS_VISIBLE
1  3361		  =00CF0000		 WS_OVERLAPPEDWINDOW	 equ WS_OVERLAPPED+WS_CAPTION+WS_SYSMENU+WS_THICKFRAME		    +
   3362					 +WS_MINIMIZEBOX+WS_MAXIMIZEBOX
1  3363					 ;
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 60
pmScript.ASM



1  3364					 WS_TILED			 equ	 WS_OVERLAPPED
1  3365					 WS_CHILDWINDOW			 equ	 WS_CHILD
1  3366					 WS_ICONIC			 equ	 WS_MINIMIZE
1  3367					 WS_SIZEBOX			 equ	 WS_THICKFRAME
1  3368					 WS_TILEDWINDOW			 equ	 WS_OVERLAPPEDWINDOW
1  3369					 ;
1  3370					 ;------------------------------------------------------------------------------
1  3371					 ;
1  3372					 ; ======================
1  3373					 ; extended window styles
1  3374					 ; ======================
1  3375					 ;
1  3376		  =0000			 WS_EX_NONE			 equ	 00000000h
1  3377		  =0001			 WS_EX_DLGMODALFRAME		 equ	 00000001h
1  3378		  =0004			 WS_EX_NOPARENTNOTIFY		 equ	 00000004h
1  3379		  =0008			 WS_EX_TOPMOST			 equ	 00000008h
1  3380		  =0010			 WS_EX_ACCEPTFILES		 equ	 00000010h
1  3381		  =0020			 WS_EX_TRANSPARENT		 equ	 00000020h
1  3382		  =0040			 WS_EX_MDICHILD			 equ	 00000040h
1  3383		  =0080			 WS_EX_TOOLWINDOW		 equ	 00000080h
1  3384		  =0100			 WS_EX_WINDOWEDGE		 equ	 00000100h
1  3385		  =0200			 WS_EX_CLIENTEDGE		 equ	 00000200h
1  3386		  =0400			 WS_EX_CONTEXTHELP		 equ	 00000400h
1  3387		  =1000			 WS_EX_RIGHT			 equ	 00001000h
1  3388		  =0000			 WS_EX_LEFT			 equ	 00000000h
1  3389		  =2000			 WS_EX_RTLREADING		 equ	 00002000h
1  3390		  =0000			 WS_EX_LTRREADING		 equ	 00000000h
1  3391		  =4000			 WS_EX_LEFTSCROLLBAR		 equ	 00004000h
1  3392		  =0000			 WS_EX_RIGHTSCROLLBAR		 equ	 00000000h
1  3393		  =00010000		 WS_EX_CONTROLPARENT		 equ	 00010000h
1  3394		  =00020000		 WS_EX_STATICEDGE		 equ	 00020000h
1  3395		  =00040000		 WS_EX_APPWINDOW		 equ	 00040000h
1  3396					 ;
1  3397		  =0300			 WS_EX_OVERLAPPEDWINDOW		 equ	 00000300h
1  3398		  =0188			 WS_EX_PALETTEWINDOW		 equ	 00000188h
1  3399					 ;
1  3400					 ;------------------------------------------------------------------------------
1  3401					 ;
1  3402					 ; ================
1  3403					 ; background modes
1  3404					 ; ================
1  3405					 ;
1  3406		  =0001			 TRANSPARENT			 equ	 1
1  3407		  =0002			 OPAQUE				 equ	 2
1  3408		  =0002			 BKMODE_LAST			 equ	 2
1  3409					 ;
1  3410					 ;------------------------------------------------------------------------------
1  3411					 ;
1  3412					 ; ====================
1  3413					 ; CreateFile()	actions
1  3414					 ; ====================
1  3415					 ;
1  3416		  =0001			 CREATE_NEW			 equ	 1
1  3417		  =0002			 CREATE_ALWAYS			 equ	 2
1  3418		  =0003			 OPEN_EXISTING			 equ	 3
1  3419		  =0004			 OPEN_ALWAYS			 equ	 4
1  3420		  =0005			 TRUNCATE_EXISTING		 equ	 5
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 61
pmScript.ASM



1  3421					 ;
1  3422					 ;------------------------------------------------------------------------------
1  3423					 ;
1  3424					 ; =====================
1  3425					 ; CreateProcess() flags
1  3426					 ; =====================
1  3427					 ;
1  3428		  =0001			 DEBUG_PROCESS			 equ	 00000001h
1  3429		  =0002			 DEBUG_ONLY_THIS_PROCESS	 equ	 00000002h
1  3430		  =0004			 CREATE_SUSPENDED		 equ	 00000004h
1  3431		  =0008			 DETACHED_PROCESS		 equ	 00000008h
1  3432		  =0010			 CREATE_NEW_CONSOLE		 equ	 00000010h
1  3433		  =0020			 NORMAL_PRIORITY_CLASS		 equ	 00000020h
1  3434		  =0040			 IDLE_PRIORITY_CLASS		 equ	 00000040h
1  3435		  =0080			 HIGH_PRIORITY_CLASS		 equ	 00000080h
1  3436		  =0100			 REALTIME_PRIORITY_CLASS	 equ	 00000100h
1  3437					 ;
1  3438		  =0200			 CREATE_NEW_PROCESS_GROUP	 equ	 00000200h
1  3439		  =0400			 CREATE_UNICODE_ENVIRONMENT	 equ	 00000400h
1  3440		  =0800			 CREATE_SEPARATE_WOW_VDM	 equ	 00000800h
1  3441		  =1000			 CREATE_SHARED_WOW_VDM		 equ	 00001000h
1  3442		  =04000000		 CREATE_DEFAULT_ERROR_MODE	 equ	 04000000h
1  3443		  =08000000		 CREATE_NO_WINDOW		 equ	 08000000h
1  3444					 ;
1  3445		  =10000000		 PROFILE_USER			 equ	 10000000h
1  3446		  =20000000		 PROFILE_KERNEL			 equ	 20000000h
1  3447		  =40000000		 PROFILE_SERVER			 equ	 40000000h
1  3448					 ;
1  3449					 ;------------------------------------------------------------------------------
1  3450					 ;
1  3451					 ; ===============
1  3452					 ; gdi error codes
1  3453					 ; ===============
1  3454					 ;
1  3455		  =-0001		 GDI_ERROR			 equ	 -1
1  3456		  =-0001		 HGDI_ERROR			 equ	 -1
1  3457					 ;
1  3458					 ;------------------------------------------------------------------------------
1  3459					 ;
1  3460					 ; =================
1  3461					 ; memory attributes
1  3462					 ; =================
1  3463					 ;
1  3464		  =0001			 PAGE_NOACCESS			 equ	 00000001h
1  3465		  =0002			 PAGE_READONLY			 equ	 00000002h
1  3466		  =0004			 PAGE_READWRITE			 equ	 00000004h
1  3467		  =0008			 PAGE_WRITECOPY			 equ	 00000008h
1  3468		  =0010			 PAGE_EXECUTE			 equ	 00000010h
1  3469		  =0020			 PAGE_EXECUTE_READ		 equ	 00000020h
1  3470		  =0040			 PAGE_EXECUTE_READWRITE		 equ	 00000040h
1  3471		  =0080			 PAGE_EXECUTE_WRITECOPY		 equ	 00000080h
1  3472		  =0100			 PAGE_GUARD			 equ	 00000100h
1  3473		  =0200			 PAGE_NOCACHE			 equ	 00000200h
1  3474					 ;
1  3475		  =1000			 MEM_COMMIT			 equ	 00001000h
1  3476		  =2000			 MEM_RESERVE			 equ	 00002000h
1  3477		  =4000			 MEM_DECOMMIT			 equ	 00004000h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 62
pmScript.ASM



1  3478		  =8000			 MEM_RELEASE			 equ	 00008000h
1  3479		  =00010000		 MEM_FREE			 equ	 00010000h
1  3480		  =00020000		 MEM_PRIVATE			 equ	 00020000h
1  3481		  =00040000		 MEM_MAPPED			 equ	 00040000h
1  3482		  =00100000		 MEM_TOP_DOWN			 equ	 00100000h
1  3483					 ;
1  3484		  =00800000		 SEC_FILE			 equ	 00800000h
1  3485		  =01000000		 SEC_IMAGE			 equ	 01000000h
1  3486		  =04000000		 SEC_RESERVE			 equ	 04000000h
1  3487		  =08000000		 SEC_COMMIT			 equ	 08000000h
1  3488		  =10000000		 SEC_NOCACHE			 equ	 10000000h
1  3489					 ;
1  3490					 MEM_IMAGE			 equ	 SEC_IMAGE
1  3491					 ;
1  3492		  =0001			 SECTION_QUERY			 equ	 00000001h
1  3493		  =0002			 SECTION_MAP_WRITE		 equ	 00000002h
1  3494		  =0004			 SECTION_MAP_READ		 equ	 00000004h
1  3495		  =0008			 SECTION_MAP_EXECUTE		 equ	 00000008h
1  3496		  =0010			 SECTION_EXTEND_SIZE		 equ	 00000010h
1  3497					 ;
1  3498					 ;SECTION_ALL_ACCESS	  equ STANDARD_RIGHTS_REQUIRED+SECTION_QUERY+SECTION_MAP_WRITE	    +
   3499					 +SECTION_MAP_READ+SECTION_MAP_EXECUTE+SECTION_EXTEND_SIZE
1  3500					 ;
1  3501					 FILE_MAP_COPY			 equ	 SECTION_QUERY
1  3502					 FILE_MAP_WRITE			 equ	 SECTION_MAP_WRITE
1  3503					 FILE_MAP_READ			 equ	 SECTION_MAP_READ
1  3504					 FILE_MAP_ALL_ACCESS		 equ	 SECTION_ALL_ACCESS
1  3505					 ;
1  3506					 ;------------------------------------------------------------------------------
1  3507					 ;
1  3508					 ; ================
1  3509					 ; PolyFill() modes
1  3510					 ; ================
1  3511					 ;
1  3512		  =0001			 ALTERNATE			 equ	 1
1  3513		  =0002			 WINDING			 equ	 2
1  3514		  =0002			 POLYFILL_LAST			 equ	 2
1  3515					 ;
1  3516					 ;------------------------------------------------------------------------------
1  3517					 ;
1  3518					 ; ============
1  3519					 ; region flags
1  3520					 ; ============
1  3521					 ;
1  3522		  =0000			 ERROR				 equ	 0
1  3523		  =0001			 NULLREGION			 equ	 1
1  3524		  =0002			 SIMPLEREGION			 equ	 2
1  3525		  =0003			 COMPLEXREGION			 equ	 3
1  3526					 RGN_ERROR			 equ	 ERROR
1  3527					 ;
1  3528					 ;------------------------------------------------------------------------------
1  3529					 ;
1  3530					 ; =====================
1  3531					 ; standard access types
1  3532					 ; =====================
1  3533					 ;
1  3534		  =00010000		 DELETE				 equ	 00010000h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 63
pmScript.ASM



1  3535		  =00020000		 READ_CONTROL			 equ	 00020000h
1  3536		  =00040000		 WRITE_DAC			 equ	 00040000h
1  3537		  =00080000		 WRITE_OWNER			 equ	 00080000h
1  3538		  =00100000		 SYNCHRONIZE			 equ	 00100000h
1  3539					 ;
1  3540		  =FFFF			 SPECIFIC_RIGHTS_ALL		 equ	 0000FFFFh
1  3541		  =000F0000		 STANDARD_RIGHTS_REQUIRED	 equ	 000F0000h
1  3542		  =001F0000		 STANDARD_RIGHTS_ALL		 equ	 001F0000h
1  3543					 ;
1  3544					 STANDARD_RIGHTS_READ		 equ	 READ_CONTROL
1  3545					 STANDARD_RIGHTS_WRITE		 equ	 READ_CONTROL
1  3546					 STANDARD_RIGHTS_EXECUTE	 equ	 READ_CONTROL
1  3547					 ;
1  3548					 ;------------------------------------------------------------------------------
1  3549					 ;
1  3550					 ; =====================
1  3551					 ; stock logical objects
1  3552					 ; =====================
1  3553					 ;
1  3554		  =0000			 WHITE_BRUSH			 equ	  0
1  3555		  =0001			 LTGRAY_BRUSH			 equ	  1
1  3556		  =0002			 GRAY_BRUSH			 equ	  2
1  3557		  =0003			 DKGRAY_BRUSH			 equ	  3
1  3558		  =0004			 BLACK_BRUSH			 equ	  4
1  3559		  =0005			 NULL_BRUSH			 equ	  5
1  3560		  =0006			 WHITE_PEN			 equ	  6
1  3561		  =0007			 BLACK_PEN			 equ	  7
1  3562		  =0008			 NULL_PEN			 equ	  8
1  3563		  =000A			 OEM_FIXED_FONT			 equ	 10
1  3564		  =000B			 ANSI_FIXED_FONT		 equ	 11
1  3565		  =000C			 ANSI_VAR_FONT			 equ	 12
1  3566		  =000D			 SYSTEM_FONT			 equ	 13
1  3567		  =000E			 DEVICE_DEFAULT_FONT		 equ	 14
1  3568		  =000F			 DEFAULT_PALETTE		 equ	 15
1  3569		  =0010			 SYSTEM_FIXED_FONT		 equ	 16
1  3570		  =0011			 DEFAULT_GUI_FONT		 equ	 17
1  3571					 ;
1  3572					 HOLLOW_BRUSH			 equ	 NULL_BRUSH
1  3573					 ;
1  3574					 ;------------------------------------------------------------------------------
1  3575					 ;
1  3576					 ; ==================
1  3577					 ; StretchBlt()	modes
1  3578					 ; ==================
1  3579					 ;
1  3580		  =0001			 BLACKONWHITE			 equ	 1
1  3581		  =0002			 WHITEONBLACK			 equ	 2
1  3582		  =0003			 COLORONCOLOR			 equ	 3
1  3583		  =0004			 HALFTONE			 equ	 4
1  3584		  =0004			 MAXSTRETCHBLTMODE		 equ	 4
1  3585					 ;
1  3586					 STRETCH_ANDSCANS		 equ	 BLACKONWHITE
1  3587					 STRETCH_ORSCANS		 equ	 WHITEONBLACK
1  3588					 STRETCH_DELETESCANS		 equ	 COLORONCOLOR
1  3589					 STRETCH_HALFTONE		 equ	 HALFTONE
1  3590					 ;
1  3591					 ;------------------------------------------------------------------------------
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 64
pmScript.ASM



1  3592					 ;
1  3593					 ; =========================
1  3594					 ; ternary raster operations
1  3595					 ; =========================
1  3596					 ;
1  3597		  =00CC0020		 SRCCOPY			 equ	 00CC0020h	 ;dest = src
1  3598		  =00EE0086		 SRCPAINT			 equ	 00EE0086h	 ;dest = src or	dest
1  3599		  =008800C6		 SRCAND				 equ	 008800C6h	 ;dest = src and dest
1  3600		  =00660046		 SRCINVERT			 equ	 00660046h	 ;dest = src xor dest
1  3601		  =00440328		 SRCERASE			 equ	 00440328h	 ;dest = src and -dest
1  3602		  =00330008		 NOTSRCCOPY			 equ	 00330008h	 ;dest = -src
1  3603		  =001100A6		 NOTSRCERASE			 equ	 001100A6h	 ;dest = -src and -dest
1  3604		  =00C000CA		 MERGECOPY			 equ	 00C000CAh	 ;dest = src and pat
1  3605		  =00BB0226		 MERGEPAINT			 equ	 00BB0226h	 ;dest = -src or dest
1  3606		  =00F00021		 PATCOPY			 equ	 00F00021h	 ;dest = pat
1  3607		  =00FB0A09		 PATPAINT			 equ	 00FB0A09h	 ;dest = DPSnoo
1  3608		  =005A0049		 PATINVERT			 equ	 005A0049h	 ;dest = pat xor dest
1  3609		  =00550009		 DSTINVERT			 equ	 00550009h	 ;dest = -dest
1  3610		  =0042			 BLACKNESS			 equ	 00000042h	 ;dest = black
1  3611		  =00FF0062		 WHITENESS			 equ	 00FF0062h	 ;dest = white
1  3612					 ;
1  3613					 ;;==============================================================================
1  3614					 ;
1  3615					 ;	 STRUCTURES
1  3616					 ;
1  3617					 ;==============================================================================
1  3618					 ;
1  3619	00000000			 STARTUPINFOA		 STRUCT
1  3620	00000000  01*(????????)			 cb		 DWORD		 ?
1  3621	00000004  01*(????????)			 lpReserved	 LPSTR		 ?
1  3622	00000008  01*(????????)			 lpDesktop	 LPSTR		 ?
1  3623	0000000C  01*(????????)			 lpTitle	 LPSTR		 ?
1  3624	00000010  01*(????????)			 dwX		 DWORD		 ?
1  3625	00000014  01*(????????)			 dwY		 DWORD		 ?
1  3626	00000018  01*(????????)			 dwXSize	 DWORD		 ?
1  3627	0000001C  01*(????????)			 dwYSize	 DWORD		 ?
1  3628	00000020  01*(????????)			 dwXCountChars	 DWORD		 ?
1  3629	00000024  01*(????????)			 dwYCountChars	 DWORD		 ?
1  3630	00000028  01*(????????)			 dwFillAttribute DWORD		 ?
1  3631	0000002C  01*(????????)			 dwFlags	 DWORD		 ?
1  3632	00000030  01*(????)			 wShowWindow	 WORD		 ?
1  3633	00000032  01*(????)			 cbReserved2	 WORD		 ?
1  3634	00000034  01*(????????)			 lpReserved2	 LPBYTE		 ?
1  3635	00000038  01*(????????)			 hStdInput	 HANDLE		 ?
1  3636	0000003C  01*(????????)			 hStdOutput	 HANDLE		 ?
1  3637	00000040  01*(????????)			 hStdError	 HANDLE		 ?
1  3638	00000044			 STARTUPINFOA		 ENDS
1  3639
1  3640
1  3641
1  3642
1  3643					 ;
1  3644	00000000			 BITMAPFILEHEADER	 struct
1  3645	00000000  01*(0000)		 bf_bfType		 WORD	   0		 ;file type
1  3646	00000002  01*(00000000)		 bf_bfSize		 DWORD	   0		 ;file size
1  3647	00000006  01*(0000)		 bf_bfReserved1		 WORD	   0		 ;(reserved)
1  3648	00000008  01*(0000)		 bf_bfReserved2		 WORD	   0		 ;(reserved)
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 65
pmScript.ASM



1  3649	0000000A  01*(00000000)		 bf_bfOffBits		 DWORD	   0		 ;data offset
1  3650	0000000E			 BITMAPFILEHEADER	 ends
1  3651		  =000E			 BITMAPFILEHEADER_	 equ	   2+4+2+2+4
1  3652					 ;
1  3653					 ;------------------------------------------------------------------------------
1  3654					 ;
1  3655	00000000			 BITMAPINFOHEADER	 struct
1  3656	00000000  01*(00000000)		 bi_biSize		 DWORD	   0		 ;structure size
1  3657	00000004  01*(00000000)		 bi_biWidth		 LONG	   0		 ;bitmap width
1  3658	00000008  01*(00000000)		 bi_biHeight		 LONG	   0		 ;bitmap height
1  3659	0000000C  01*(0000)		 bi_biPlanes		 WORD	   0		 ;number of color planes
1  3660	0000000E  01*(0000)		 bi_biBitCount		 WORD	   0		 ;number of bits per pixel
1  3661	00000010  01*(00000000)		 bi_biCompression	 DWORD	   0		 ;compression type
1  3662	00000014  01*(00000000)		 bi_biSizeImage		 DWORD	   0		 ;number of data bytes
1  3663	00000018  01*(00000000)		 bi_biXPelsPerMeter	 LONG	   0		 ;horizontal resolution
1  3664	0000001C  01*(00000000)		 bi_biYPelsPerMeter	 LONG	   0		 ;vertical resolution
1  3665	00000020  01*(00000000)		 bi_biClrUsed		 DWORD	   0		 ;number of used colors
1  3666	00000024  01*(00000000)		 bi_biClrImportant	 DWORD	   0		 ;number of important colors
1  3667	00000028			 BITMAPINFOHEADER	 ends
1  3668		  =0028			 BITMAPINFOHEADER_	 equ	   4+4+4+2+2+4+4+4+4+4+4
1  3669					 ;
1  3670					 ;------------------------------------------------------------------------------
1  3671					 ;
1  3672	00000000			 BITMAP			 struct
1  3673	00000000  01*(00000000)		 bm_bmType		 LONG	   0		 ;bitmap type
1  3674	00000004  01*(00000000)		 bm_bmWidth		 LONG	   0		 ;bitmap width
1  3675	00000008  01*(00000000)		 bm_bmHeight		 LONG	   0		 ;bitmap height
1  3676	0000000C  01*(00000000)		 bm_bmWidthBytes	 LONG	   0		 ;bytes	per scan line
1  3677	00000010  01*(0000)		 bm_bmPlanes		 WORD	   0		 ;number of color planes
1  3678	00000012  01*(0000)		 bm_bmBitsPixel		 WORD	   0		 ;number of bits per pixel
1  3679	00000014  01*(00000000)		 bm_bmBits		 LPVOID	   0		 ;data pointer
1  3680	00000018			 BITMAP			 ends
1  3681		  =0018			 BITMAP_		 equ	   4+4+4+4+2+2+4
1  3682					 ;
1  3683					 ;------------------------------------------------------------------------------
1  3684					 ;
1  3685	00000000			 COPYDATASTRUCT		 struct
1  3686	00000000  01*(00000000)		 cd_dwData		 DWORD	   0		 ;32-bit data
1  3687	00000004  01*(00000000)		 cd_cbData		 DWORD	   0		 ;number of data bytes
1  3688	00000008  01*(00000000)		 cd_lpData		 PVOID	   0		 ;data bytes
1  3689	0000000C			 COPYDATASTRUCT		 ends
1  3690		  =000C			 COPYDATASTRUCT_	 equ	   4+4+4
1  3691					 ;
1  3692					 ;------------------------------------------------------------------------------
1  3693					 ;
1  3694	00000000			 CONTEXT		 struct
1  3695					 ;
1  3696	00000000  01*(00000000)		 cx_ContextFlags	 DWORD	   0		 ;context flags
1  3697					 ;
1  3698					 ; CONTEXT_DEBUG_REGISTERS
1  3699					 ;
1  3700	00000004  01*(00000000)		 cx_Dr0			 DWORD	   0		 ;debug	register #0
1  3701	00000008  01*(00000000)		 cx_Dr1			 DWORD	   0		 ;debug	register #1
1  3702	0000000C  01*(00000000)		 cx_Dr2			 DWORD	   0		 ;debug	register #2
1  3703	00000010  01*(00000000)		 cx_Dr3			 DWORD	   0		 ;debug	register #3
1  3704	00000014  01*(00000000)		 cx_Dr6			 DWORD	   0		 ;debug	register #6
1  3705	00000018  01*(00000000)		 cx_Dr7			 DWORD	   0		 ;debug	register #7
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 66
pmScript.ASM



1  3706					 ;
1  3707					 ; CONTEXT_FLOATING_POINT
1  3708					 ;
1  3709	0000001C  01*(00000000)		 cx_ControlWord		 DWORD	   0		 ;fpu context
1  3710	00000020  01*(00000000)		 cx_StatusWord		 DWORD	   0
1  3711	00000024  01*(00000000)		 cx_TagWord		 DWORD	   0
1  3712	00000028  01*(00000000)		 cx_ErrorOffset		 DWORD	   0
1  3713	0000002C  01*(00000000)		 cx_ErrorSelector	 DWORD	   0
1  3714	00000030  01*(00000000)		 cx_DataOffset		 DWORD	   0
1  3715	00000034  01*(00000000)		 cx_DataSelector	 DWORD	   0
1  3716	00000038  01*(50*(00))		 cx_RegisterArea	 BYTE	   SIZE_OF_80387_REGISTERS dup (0)
1  3717	00000088  01*(00000000)		 cx_Cr0NpxState		 DWORD	   0
1  3718					 ;
1  3719					 ; CONTEXT_SEGMENTS
1  3720					 ;
1  3721	0000008C  01*(00000000)		 cx_SegGs		 DWORD	   0		 ;gs register
1  3722	00000090  01*(00000000)		 cx_SegFs		 DWORD	   0		 ;fs register
1  3723	00000094  01*(00000000)		 cx_SegEs		 DWORD	   0		 ;es register
1  3724	00000098  01*(00000000)		 cx_SegDs		 DWORD	   0		 ;ds register
1  3725					 ;
1  3726					 ; CONTEXT_INTEGER
1  3727					 ;
1  3728	0000009C  01*(00000000)		 cx_Edi			 DWORD	   0		 ;edi register
1  3729	000000A0  01*(00000000)		 cx_Esi			 DWORD	   0		 ;esi register
1  3730	000000A4  01*(00000000)		 cx_Ebx			 DWORD	   0		 ;ebx register
1  3731	000000A8  01*(00000000)		 cx_Edx			 DWORD	   0		 ;edx register
1  3732	000000AC  01*(00000000)		 cx_Ecx			 DWORD	   0		 ;ecx register
1  3733	000000B0  01*(00000000)		 cx_Eax			 DWORD	   0		 ;eax register
1  3734					 ;
1  3735					 ; CONTEXT_CONTROL
1  3736					 ;
1  3737	000000B4  01*(00000000)		 cx_Ebp			 DWORD	   0		 ;ebp register
1  3738	000000B8  01*(00000000)		 cx_Eip			 DWORD	   0		 ;eip register
1  3739	000000BC  01*(00000000)		 cx_SegCs		 DWORD	   0		 ;cs register
1  3740	000000C0  01*(00000000)		 cx_EFlags		 DWORD	   0		 ;eflags register
1  3741	000000C4  01*(00000000)		 cx_Esp			 DWORD	   0		 ;esp register
1  3742	000000C8  01*(00000000)		 cx_SegSs		 DWORD	   0		 ;ss register
1  3743					 ;
1  3744	000000CC			 CONTEXT		 ends
1  3745					 ;
1  3746		  =0004			 CONTEXT_FLAGS_			 equ	 4
1  3747		  =0018			 CONTEXT_DEBUG_REGISTERS_	 equ	 4+4+4+4+4+4
1  3748		  =0070			 CONTEXT_FLOATING_POINT_	 equ	 4+4+4+4+4+4+4+SIZE_OF_80387_REGISTERS+4
1  3749		  =0010			 CONTEXT_SEGMENTS_		 equ	 4+4+4+4
1  3750		  =0018			 CONTEXT_INTEGER_		 equ	 4+4+4+4+4+4
1  3751		  =0018			 CONTEXT_CONTROL_		 equ	 4+4+4+4+4+4
1  3752					 ;
1  3753		  =0044			 CONTEXT_FULL_			 equ	 CONTEXT_FLAGS_+\
   3754										 CONTEXT_SEGMENTS_+\
   3755										 CONTEXT_INTEGER_+\
   3756										 CONTEXT_CONTROL_
1  3757					 ;
1  3758					 ;------------------------------------------------------------------------------
1  3759					 ;
1  3760	00000000			 DIALOGATTRIBUTES	 struct
1  3761	00000000  01*(00000000)		 da_Palette		 DWORD	   0		 ;palette pointer
1  3762	00000004  01*(00000000)		 da_TextBox		 DWORD	   0		 ;text box list	pointer
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 67
pmScript.ASM



1  3763	00000008			 DIALOGATTRIBUTES	 ends
1  3764		  =0008			 DIALOGATTRIBUTES_	 equ	   4+4
1  3765					 ;
1  3766					 ;------------------------------------------------------------------------------
1  3767					 ;
1  3768	00000000			 DIALOGPALETTE		 struct
1  3769	00000000  01*(00000000)		 dp_DlgText		 COLORREF  0		 ;dialog text color
1  3770	00000004  01*(00000000)		 dp_DlgBk		 COLORREF  0		 ;dialog background color
1  3771	00000008  01*(00000000)		 dp_StaticText		 COLORREF  0		 ;static text color
1  3772	0000000C  01*(00000000)		 dp_StaticBk		 COLORREF  0		 ;static background color
1  3773	00000010  01*(00000000)		 dp_TextBoxText		 COLORREF  0		 ;text box text	color
1  3774	00000014  01*(00000000)		 dp_TextBoxBk		 COLORREF  0		 ;text box background color
1  3775	00000018  01*(00000000)		 dp_EditText		 COLORREF  0		 ;edit text color
1  3776	0000001C  01*(00000000)		 dp_EditBk		 COLORREF  0		 ;edit background color
1  3777	00000020  01*(00000000)		 dp_ListBoxText		 COLORREF  0		 ;list box text	color
1  3778	00000024  01*(00000000)		 dp_ListBoxBk		 COLORREF  0		 ;list box background color
1  3779	00000028			 DIALOGPALETTE		 ends
1  3780		  =0028			 DIALOGPALETTE_		 equ	   4+4+4+4+4+4+4+4+4+4
1  3781					 ;
1  3782					 ;------------------------------------------------------------------------------
1  3783					 ;
1  3784	00000000			 DIALOGRECORD		 struct
1  3785	00000000  01*(00000000)		 dr_hWnd		 HWND	   0		 ;dialog window	handle
1  3786	00000004  01*(00000000)		 dr_fModeless		 BOOL	   FALSE	 ;mode flag
1  3787	00000008  01*(00000000)		 dr_Attributes		 DWORD	   0		 ;dialog window	attributes list
1  3788	0000000C  01*(00000000)		 dr_Data		 DWORD	   0		 ;dialog data
1  3789	00000010  01*(00000000)		 dr_hDlgBrush		 HBRUSH	   0		 ;dialog brush handle
1  3790	00000014  01*(00000000)		 dr_hStaticBrush	 HBRUSH	   0		 ;static brush handle
1  3791	00000018  01*(00000000)		 dr_hTextBoxBrush	 HBRUSH	   0		 ;text box brush handle
1  3792	0000001C  01*(00000000)		 dr_hEditBrush		 HBRUSH	   0		 ;edit brush handle
1  3793	00000020  01*(00000000)		 dr_hListBoxBrush	 HBRUSH	   0		 ;list box brush handle
1  3794	00000024			 DIALOGRECORD		 ends
1  3795		  =0024			 DIALOGRECORD_		 equ	   4+4+4+4+4+4+4+4+4
1  3796					 ;
1  3797					 ;------------------------------------------------------------------------------
1  3798					 ;
1  3799		  =013E			 WIN32_FIND_DATA_	 equ	   4+8+8+8+4+4+4+4+(MAX_PATH*CHAR_)+(14*CHAR_)
1  3800	00000000			 WIN32_FIND_DATA	 struct
1  3801	00000000  01*(00000000)		 fd_dwFileAttributes	 DWORD	   0		 ;file attributes
1  3802	00000004  01*(00000000	      +	 fd_ftCreationTime	 DWORD	   0, 0		 ;time of file creation
   3803		  00000000)
1  3804	0000000C  01*(00000000	      +	 fd_ftLastAccessTime	 DWORD	   0, 0		 ;time of last file access
   3805		  00000000)
1  3806	00000014  01*(00000000	      +	 fd_ftLastWriteTime	 DWORD	   0, 0		 ;time of last write access
   3807		  00000000)
1  3808	0000001C  01*(00000000)		 fd_nFileSizeHigh	 DWORD	   0		 ;high-order word of file size
1  3809	00000020  01*(00000000)		 fd_nFileSizeLow	 DWORD	   0		 ;low-order word of file size
1  3810	00000024  01*(00000000)		 fd_dwReserved0		 DWORD	   0		 ;(reserved)
1  3811	00000028  01*(00000000)		 fd_dwReserved1		 DWORD	   0		 ;(reserved)
1  3812	0000002C  01*(0104*(00))	 fd_cFileName		 CHAR	   MAX_PATH dup(0) ;matching file name
1  3813	00000130  01*(0E*(00))		 fd_cAlternateFileName	 CHAR	   14 dup(0)	 ;8.3 alias name
1  3814	0000013E			 WIN32_FIND_DATA	 ends
1  3815					 ;
1  3816					 ;------------------------------------------------------------------------------
1  3817					 ;
1  3818	00000000			 BY_HANDLE_FILE_INFORMATION struct
1  3819	00000000  01*(00000000)		 fi_dwFileAttributes	 DWORD	   0		 ;file attributes
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 68
pmScript.ASM



1  3820	00000004  01*(00000000	      +	 fi_ftCreationTime	 DWORD	   0, 0		 ;time of file creation
   3821		  00000000)
1  3822	0000000C  01*(00000000	      +	 fi_ftLastAccessTime	 DWORD	   0, 0		 ;time of last file access
   3823		  00000000)
1  3824	00000014  01*(00000000	      +	 fi_ftLastWriteTime	 DWORD	   0, 0		 ;time of last write access
   3825		  00000000)
1  3826	0000001C  01*(00000000)		 fi_dwVolumeSerialNumber DWORD	   0		 ;volume serial	number
1  3827	00000020  01*(00000000)		 fi_nFileSizeHigh	 DWORD	   0		 ;high-order word of file size
1  3828	00000024  01*(00000000)		 fi_nFileSizeLow	 DWORD	   0		 ;low-order word of file size
1  3829	00000028  01*(00000000)		 fi_nNumberOfLinks	 DWORD	   0		 ;number of links to the file
1  3830	0000002C  01*(00000000)		 fi_nFileIndexHigh	 DWORD	   0		 ;high-order word of identifier
1  3831	00000030  01*(00000000)		 fi_nFileIndexLow	 DWORD	   0		 ;low-order word of identifier
1  3832	00000034			 BY_HANDLE_FILE_INFORMATION  ends
1  3833		  =0034			 BY_HANDLE_FILE_INFORMATION_ equ   4+8+8+8+4+4+4+4+4+4
1  3834					 ;
1  3835					 ;------------------------------------------------------------------------------
1  3836					 ;
1  3837	00000000			 FILETIME		 struct
1  3838	00000000  01*(00000000)		 ft_dwLowDateTime	 DWORD	   0		 ;low-order 32 bits
1  3839	00000004  01*(00000000)		 ft_dwHighDateTime	 DWORD	   0		 ;high-order 32	bits
1  3840	00000008			 FILETIME		 ends
1  3841		  =0008			 FILETIME_		 equ	   4+4
1  3842					 ;
1  3843					 ;------------------------------------------------------------------------------
1  3844					 ;
1  3845	00000000			 MSG			 struct
1  3846	00000000  01*(00000000)		 ms_hwnd		 HWND	   0		 ;window handle
1  3847	00000004  01*(00000000)		 ms_message		 UINT	   0		 ;message id
1  3848	00000008  01*(00000000)		 ms_wParam		 WPARAM	   0		 ;additional parameter
1  3849	0000000C  01*(00000000)		 ms_lParam		 LPARAM	   0		 ;additional parameter
1  3850	00000010  01*(00000000)		 ms_time		 DWORD	   0		 ;time stamp
1  3851	00000014  01*(00000000)		 ms_x			 LONGINT   0		 ;x coordinate
1  3852	00000018  01*(00000000)		 ms_y			 LONGINT   0		 ;y coordinate
1  3853	0000001C			 MSG			 ends
1  3854		  =001C			 MSG_			 equ	   4+4+4+4+4+4+4
1  3855					 ;
1  3856					 ;------------------------------------------------------------------------------
1  3857					 ;
1  3858	00000000			 NETRESOURCE		 struct
1  3859	00000000  01*(00000000)		 nr_dwScope		 DWORD	   0		 ;resource scope
1  3860	00000004  01*(00000000)		 nr_dwType		 DWORD	   0		 ;resource type
1  3861	00000008  01*(00000000)		 nr_dwDisplayType	 DWORD	   0		 ;display type
1  3862	0000000C  01*(00000000)		 nr_dwUsage		 DWORD	   0		 ;resource usage
1  3863	00000010  01*(00000000)		 nr_lpLocalName		 LPSTR	   0		 ;redirected local device
1  3864	00000014  01*(00000000)		 nr_lpRemoteName	 LPSTR	   0		 ;remote name
1  3865	00000018  01*(00000000)		 nr_lpComment		 LPSTR	   0		 ;provider supplied comment
1  3866	0000001C  01*(00000000)		 nr_lpProvider		 LPSTR	   0		 ;name of provider
1  3867	00000020			 NETRESOURCE		 ends
1  3868		  =0020			 NETRESOURCE_		 equ	   4+4+4+4+4+4+4+4
1  3869					 ;
1  3870					 ;------------------------------------------------------------------------------
1  3871					 ;
1  3872		  =0088			 OFSTRUCT_		 equ	   1+1+2+2+2+OFS_MAXPATHNAME
1  3873	00000000			 OFSTRUCT		 struct
1  3874	00000000  01*(00)		 of_cBytes		 BYTE	   0		 ;structure size
1  3875	00000001  01*(00)		 of_fFixedDisk		 BYTE	   0		 ;fixed-disk flag
1  3876	00000002  01*(0000)		 of_nErrCode		 WORD	   0		 ;error	code
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 69
pmScript.ASM



1  3877	00000004  01*(0000)		 of_Reserved1		 WORD	   0		 ;(reserved)
1  3878	00000006  01*(0000)		 of_Reserved2		 WORD	   0		 ;(reserved)
1  3879	00000008  01*(80*(00))		 of_szPathName		 BYTE	   OFS_MAXPATHNAME dup (0) ;path name
1  3880	00000088			 OFSTRUCT		 ends
1  3881					 ;
1  3882					 ;------------------------------------------------------------------------------
1  3883					 ;
1  3884		  =004C			 OPENFILENAME_		 equ	   4+4+4+4+4+4+4+4+4+4+4+4+4+4+2+2+4+4+4+4
1  3885	00000000			 OPENFILENAME		 struct
1  3886	00000000  01*(0000004C)		 on_lStructSize		 DWORD	   OPENFILENAME_ ;number of bytes
1  3887	00000004  01*(00000000)		 on_hwndOwner		 HWND	   0		 ;dialog box owner
1  3888	00000008  01*(00000000)		 on_hInstance		 HINSTANCE 0		 ;dialog box template id
1  3889	0000000C  01*(00000000)		 on_lpstrFilter		 LPCSTR	   0		 ;filter strings
1  3890	00000010  01*(00000000)		 on_lpstrCustomFilter	 LPSTR	   0		 ;user-defined filter stings
1  3891	00000014  01*(00000000)		 on_nMaxCustFilter	 DWORD	   0		 ;size of custom filter	buffer
1  3892	00000018  01*(00000000)		 on_nFilterIndex	 DWORD	   0		 ;index	into the filter	buffer
1  3893	0000001C  01*(00000000)		 on_lpstrFile		 LPSTR	   0		 ;default file name buffer
1  3894	00000020  01*(00000000)		 on_nMaxFile		 DWORD	   0		 ;size of the file name	buffer
1  3895	00000024  01*(00000000)		 on_lpstrFileTitle	 LPSTR	   0		 ;file title buffer
1  3896	00000028  01*(00000000)		 on_nMaxFileTitle	 DWORD	   0		 ;size of the file title buffer
1  3897	0000002C  01*(00000000)		 on_lpstrInitialDir	 LPCSTR	   0		 ;initial directory
1  3898	00000030  01*(00000000)		 on_lpstrTitle		 LPCSTR	   0		 ;dialog box title
1  3899	00000034  01*(00000000)		 on_Flags		 DWORD	   0		 ;dialog box creation flags
1  3900	00000038  01*(0000)		 on_nFileOffset		 WORD	   0		 ;file name offset in lpstrFile
1  3901	0000003A  01*(0000)		 on_nFileExtension	 WORD	   0		 ;file ext offset in lpstrFile
1  3902	0000003C  01*(00000000)		 on_lpstrDefExt		 LPCSTR	   0		 ;default extension
1  3903	00000040  01*(00000000)		 on_lCustData		 LPARAM	   0		 ;application-defined hook data
1  3904	00000044  01*(00000000)		 on_lpfnHook		 LPFN	   0		 ;hook function
1  3905	00000048  01*(00000000)		 on_lpTemplateName	 LPCSTR	   0		 ;dialog box template name
1  3906	0000004C			 OPENFILENAME		 ends
1  3907					 ;
1  3908					 ;------------------------------------------------------------------------------
1  3909					 ;
1  3910		  =0094			 OSVERSIONINFO_		 equ	 4+4+4+4+4+(128*CHAR_)
1  3911	00000000			 OSVERSIONINFO		 struct
1  3912	00000000  01*(00000094)		 ov_dwOSVersionInfoSize	 DWORD	 OSVERSIONINFO_	 ;structure size
1  3913	00000004  01*(00000000)		 ov_dwMajorVersion	 DWORD	 0		 ;major	version	number
1  3914	00000008  01*(00000000)		 ov_dwMinorVersion	 DWORD	 0		 ;minor	version	number
1  3915	0000000C  01*(00000000)		 ov_dwBuildNumber	 DWORD	 0		 ;build	number
1  3916	00000010  01*(00000000)		 ov_dwPlatformId	 DWORD	 0		 ;platform id
1  3917	00000014  01*(80*(00))		 ov_szCSDVersion	 CHAR	 128 dup (0)	 ;info string
1  3918	00000094			 OSVERSIONINFO		 ends
1  3919					 ;
1  3920					 ;------------------------------------------------------------------------------
1  3921					 ;
1  3922	00000000			 PAINTSTRUCT		 struct
1  3923	00000000  01*(00000000)		 ps_hdc			 HDC	   0		 ;device context handle
1  3924	00000004  01*(00000000)		 ps_fErase		 BOOL	   FALSE	 ;background erase flag
1  3925	00000008  01*(00000000)		 ps_leftPaint		 LONGINT   0		 ;left margin of clipping rect
1  3926	0000000C  01*(00000000)		 ps_topPaint		 LONGINT   0		 ;top margin of	clipping rect
1  3927	00000010  01*(00000000)		 ps_rightPaint		 LONGINT   0		 ;right	margin of clipping rect
1  3928	00000014  01*(00000000)		 ps_bottomPaint		 LONGINT   0		 ;bottom margin	of clipping rect
1  3929	00000018  01*(00000000)		 ps_fRestore		 BOOL	   FALSE	 ;(reserved)
1  3930	0000001C  01*(00000000)		 ps_fIncUpdate		 BOOL	   FALSE	 ;(reserved)
1  3931	00000020  01*(20*(00))		 ps_rgbReserved		 BYTE	   32 dup (0)	 ;(reserved)
1  3932	00000040			 PAINTSTRUCT		 ends
1  3933		  =0040			 PAINTSTRUCT_		 equ	   4+4+4+4+4+4+4+4+32
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 70
pmScript.ASM



1  3934					 ;
1  3935					 ;------------------------------------------------------------------------------
1  3936					 ;
1  3937	00000000			 PROCESS_INFORMATION	 struct
1  3938	00000000  01*(00000000)		 pi_hProcess		 HANDLE	   0		 ;process handle
1  3939	00000004  01*(00000000)		 pi_hThread		 HANDLE	   0		 ;thread handle
1  3940	00000008  01*(00000000)		 pi_dwProcessId		 DWORD	   0		 ;process id
1  3941	0000000C  01*(00000000)		 pi_dwThreadId		 DWORD	   0		 ;thread id
1  3942	00000010			 PROCESS_INFORMATION	 ends
1  3943		  =0010			 PROCESS_INFORMATION_	 equ	   4+4+4+4
1  3944					 ;
1  3945					 ;------------------------------------------------------------------------------
1  3946					 ;
1  3947	00000000			 POINT			 struct
1  3948	00000000  01*(00000000)		 pt_x			 LONGINT   0		 ;x coordinate
1  3949	00000004  01*(00000000)		 pt_y			 LONGINT   0		 ;y coordinate
1  3950	00000008			 POINT			 ends
1  3951		  =0008			 POINT_			 equ	   4+4
1  3952					 ;
1  3953					 ;------------------------------------------------------------------------------
1  3954					 ;
1  3955	00000000			 RECT			 struct
1  3956	00000000  01*(00000000)		 rc_left		 LONGINT   0		 ;left margin
1  3957	00000004  01*(00000000)		 rc_top			 LONGINT   0		 ;top margin
1  3958	00000008  01*(00000000)		 rc_right		 LONGINT   0		 ;right	margin
1  3959	0000000C  01*(00000000)		 rc_bottom		 LONGINT   0		 ;bottom margin
1  3960	00000010			 RECT			 ends
1  3961		  =0010			 RECT_			 equ	   4+4+4+4
1  3962					 ;
1  3963					 ;------------------------------------------------------------------------------
1  3964					 ;
1  3965	00000000			 RGBQUAD		 struct
1  3966	00000000  01*(00)		 rq_rgbBlue		 BYTE	   0		 ;intensity of blue component
1  3967	00000001  01*(00)		 rq_rgbGreen		 BYTE	   0		 ;intensity of green component
1  3968	00000002  01*(00)		 rq_rgbRed		 BYTE	   0		 ;intensity of red component
1  3969	00000003  01*(00)		 rq_rgbReserved		 BYTE	   0		 ;(reserved)
1  3970	00000004			 RGBQUAD		 ends
1  3971		  =0004			 RGBQUAD_		 equ	   1+1+1+1
1  3972					 ;
1  3973					 ;------------------------------------------------------------------------------
1  3974					 ;
1  3975		  =000C			 SECURITY_ATTRIBUTES_	 equ	   4+4+4
1  3976	00000000			 SECURITY_ATTRIBUTES	 struct
1  3977	00000000  01*(0000000C)		 sa_nLength		 DWORD	   SECURITY_ATTRIBUTES_	;structure size
1  3978	00000004  01*(00000000)		 sa_lpSecurityDescriptor LPVOID	   0		 ;security descriptor
1  3979	00000008  01*(00000000)		 sa_bInheritHandle	 BOOL	   FALSE	 ;handle inheritance flag
1  3980	0000000C			 SECURITY_ATTRIBUTES	 ends
1  3981					 ;
1  3982					 ;------------------------------------------------------------------------------
1  3983					 ;
1  3984	00000000			 STARTUPINFO		 struct
1  3985	00000000  01*(00000000)		 si_cb			 DWORD	   0		 ;structure size
1  3986	00000004  01*(00000000)		 si_lpReserved		 LPSTR	   0		 ;(reserved)
1  3987	00000008  01*(00000000)		 si_lpDesktop		 LPSTR	   0		 ;desktop name
1  3988	0000000C  01*(00000000)		 sl_lpTitle		 LPSTR	   0		 ;console window title
1  3989	00000010  01*(00000000)		 si_dwX			 DWORD	   0		 ;window origin	(column)
1  3990	00000014  01*(00000000)		 si_dwY			 DWORD	   0		 ;window origin	(row)
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 71
pmScript.ASM



1  3991	00000018  01*(00000000)		 si_dwXSize		 DWORD	   0		 ;window width
1  3992	0000001C  01*(00000000)		 si_dwYSize		 DWORD	   0		 ;window height
1  3993	00000020  01*(00000000)		 si_dwXCountChars	 DWORD	   0		 ;screen buffer	width
1  3994	00000024  01*(00000000)		 si_dwYCountChars	 DWORD	   0		 ;screen buffer	height
1  3995	00000028  01*(00000000)		 si_dwFillAttribute	 DWORD	   0		 ;console window initialization
1  3996	0000002C  01*(00000000)		 si_dwFlags		 DWORD	   0		 ;structure member flags
1  3997	00000030  01*(0000)		 si_wShowWindow		 WORD	   0		 ;ShowWindow() parameter
1  3998	00000032  01*(0000)		 si_cbReserved2		 WORD	   0		 ;(reserved)
1  3999	00000034  01*(00000000)		 si_lpReserved2		 LPBYTE	   0		 ;(reserved)
1  4000	00000038  01*(00000000)		 si_hStdInput		 HANDLE	   0		 ;standard input handle
1  4001	0000003C  01*(00000000)		 si_hStdOutput		 HANDLE	   0		 ;standard output handle
1  4002	00000040  01*(00000000)		 si_hStdError		 HANDLE	   0		 ;standard error handle
1  4003	00000044			 STARTUPINFO		 ends
1  4004		  =0044			 STARTUPINFO_		 equ	   4+4+4+4+4+4+4+4+4+4+4+4+2+2+4+4+4+4
1  4005					 ;
1  4006					 ;------------------------------------------------------------------------------
1  4007					 ;
1  4008	00000000			 SYSTEMTIME		 struct
1  4009	00000000  01*(0000)		 st_wYear		 WORD	   0		 ;current year
1  4010	00000002  01*(0000)		 st_wMonth		 WORD	   0		 ;current month	(1..12)
1  4011	00000004  01*(0000)		 st_wDayOfWeek		 WORD	   0		 ;day of week (0 = sunday)
1  4012	00000006  01*(0000)		 st_wDay		 WORD	   0		 ;current day of the month
1  4013	00000008  01*(0000)		 st_wHour		 WORD	   0		 ;current hour
1  4014	0000000A  01*(0000)		 st_wMinute		 WORD	   0		 ;current minute
1  4015	0000000C  01*(0000)		 st_wSecond		 WORD	   0		 ;current second
1  4016	0000000E  01*(0000)		 st_wMilliseconds	 WORD	   0		 ;current millisecond
1  4017	00000010			 SYSTEMTIME		 ends
1  4018		  =0010			 SYSTEMTIME_		 equ	   2+2+2+2+2+2+2+2
1  4019					 ;
1  4020					 ;------------------------------------------------------------------------------
1  4021					 ;
1  4022	00000000			 TBADDBITMAP		 struct
1  4023	00000000  01*(00000000)		 ta_hInst		 HINSTANCE 0		 ;resource module instance
1  4024	00000004  01*(00000000)		 ta_nID			 UINT	   0		 ;resource id
1  4025	00000008			 TBADDBITMAP		 ends
1  4026		  =0008			 TBADDBITMAP_		 equ	   4+4
1  4027					 ;
1  4028					 ;------------------------------------------------------------------------------
1  4029					 ;
1  4030	00000000			 TBBUTTON		 struct
1  4031	00000000  01*(00000000)		 tb_iBitmap		 INTEGER   0		 ;zero-based button image index
1  4032	00000004  01*(00000000)		 tb_idCommand		 INTEGER   0		 ;button command id
1  4033	00000008  01*(00)		 tb_fsState		 BYTE	   0		 ;button state flags
1  4034	00000009  01*(00)		 tb_fsStyle		 BYTE	   0		 ;button style
1  4035	0000000A  01*(00 00)		 tb_bReserved		 BYTE	   0, 0		 ;(reserved)
1  4036	0000000C  01*(00000000)		 tb_dwData		 DWORD	   0		 ;application defined value
1  4037	00000010  01*(00000000)		 tb_iString		 INTEGER   0		 ;zero-based button string index
1  4038	00000014			 TBBUTTON		 ends
1  4039		  =0014			 TBBUTTON_		 equ	   4+4+1+1+(1+1)+4+4
1  4040					 ;
1  4041					 ;------------------------------------------------------------------------------
1  4042					 ;
1  4043	00000000			 TEXTMETRIC		 struct
1  4044	00000000  01*(00000000)		 tm_tmHeight		 LONGINT   0		 ;char height (ascent+descent)
1  4045	00000004  01*(00000000)		 tm_tmAscent		 LONGINT   0		 ;units	above baseline
1  4046	00000008  01*(00000000)		 tm_tmDescent		 LONGINT   0		 ;units	below baseline
1  4047	0000000C  01*(00000000)		 tm_tmInternalLeading	 LONGINT   0		 ;space	included in tmHeight
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 72
pmScript.ASM



1  4048	00000010  01*(00000000)		 tm_tmExternalLeading	 LONGINT   0		 ;extra	space between rows
1  4049	00000014  01*(00000000)		 tm_tmAveCharWidth	 LONGINT   0		 ;average character width ('x')
1  4050	00000018  01*(00000000)		 tm_tmMaxCharWidth	 LONGINT   0		 ;maximum character width
1  4051	0000001C  01*(00000000)		 tm_tmWeight		 LONGINT   0		 ;font weight
1  4052	00000020  01*(00000000)		 tm_tmOverhang		 LONGINT   0		 ;italic flag
1  4053	00000024  01*(00000000)		 tm_tmDigitizedAspectX	 LONGINT   0		 ;horizontal device aspect
1  4054	00000028  01*(00000000)		 tm_tmDigitizedAspectY	 LONGINT   0		 ;vertical device aspect
1  4055	0000002C  01*(00)		 tm_tmFirstChar		 CHAR	   0		 ;first	font character value
1  4056	0000002D  01*(00)		 tm_tmLastChar		 CHAR	   0		 ;last font character value
1  4057	0000002E  01*(00)		 tm_tmDefaultChar	 CHAR	   0		 ;default substitution character
1  4058	0000002F  01*(00)		 tm_tmBreakChar		 CHAR	   0		 ;word break character
1  4059	00000030  01*(00)		 tm_tmItalic		 BYTE	   0		 ;italic font
1  4060	00000031  01*(00)		 tm_tmUnderlined	 BYTE	   0		 ;underline font
1  4061	00000032  01*(00)		 tm_tmStruckOut		 BYTE	   0		 ;strikeout font
1  4062	00000033  01*(00)		 tm_tmPitchAndFamily	 BYTE	   0		 ;font pitch/family
1  4063	00000034  01*(00)		 tm_tmCharSet		 BYTE	   0		 ;font character set
1  4064	00000035			 TEXTMETRIC		 ends
1  4065		  =0035			 TEXTMETRIC_		 equ	   4+4+4+4+4+4+4+4+4+4+4+\
   4066									   CHAR_+CHAR_+CHAR_+CHAR_+\
   4067									   1+1+1+1+1
1  4068					 ;
1  4069					 ;------------------------------------------------------------------------------
1  4070					 ;
1  4071	00000000			 WNDCLASS		 struct
1  4072	00000000  01*(00000000)		 w_style		 UINT	   0		 ;class	style
1  4073	00000004  01*(00000000)		 w_lpfnWndProc		 WNDPROC   0		 ;window procedure
1  4074	00000008  01*(00000000)		 w_cbClsExtra		 INTEGER   0		 ;class	extra data
1  4075	0000000C  01*(00000000)		 w_cbWndExtra		 INTEGER   0		 ;window extra data
1  4076	00000010  01*(00000000)		 w_hInstance		 HINSTANCE 0		 ;class	owner
1  4077	00000014  01*(00000000)		 w_hIcon		 HICON	   0		 ;icon handle
1  4078	00000018  01*(00000000)		 w_hCursor		 HCURSOR   0		 ;cursor handle
1  4079	0000001C  01*(00000000)		 w_hbrBackground	 HBRUSH	   0		 ;background color
1  4080	00000020  01*(00000000)		 w_lpszMenuName		 LPCSTR	   0		 ;menu name
1  4081	00000024  01*(00000000)		 w_lpszClassName	 LPCSTR	   0		 ;class	name
1  4082	00000028			 WNDCLASS		 ends
1  4083		  =0028			 WNDCLASS_		 equ	   4+4+4+4+4+4+4+4+4+4
1  4084					 ;
1  4085					 ;------------------------------------------------------------------------------
1  4086					 ;
1  4087	00000000			 WNDPARAMETERS		 struct
1  4088	00000000  01*(00000000)		 wp_hWnd		 HWND	   0		 ;window handle
1  4089	00000004  01*(00000000)		 wp_FontId		 DWORD	   0		 ;font id
1  4090	00000008  01*(00000000)		 wp_TextColor		 COLORREF  0		 ;text color
1  4091	0000000C  01*(00000000)		 wp_BkColor		 COLORREF  0		 ;background color
1  4092	00000010  01*(00000000)		 wp_BkMode		 DWORD	   0		 ;background mode
1  4093	00000014			 WNDPARAMETERS		 ends
1  4094		  =0014			 WNDPARAMETERS_		 equ	   4+4+4+4+4
1  4095					 ;
1  4096					 ;==============================================================================
1  4097					 ;
1  4098					 ;	 DDE STRUCTURES
1  4099					 ;
1  4100					 ;==============================================================================
1  4101					 ;
1  4102	00000000			 DDEACK			 struct
1  4103	00000000  01*(0000)		 ddeack_Status		 WORD	   0		 ;status
1  4104	00000002			 DDEACK			 ends
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 73
pmScript.ASM



1  4105		  =0002			 DDEACK_		 equ	   2
1  4106					 ;
1  4107					 ;------------------------------------------------------------------------------
1  4108					 ;
1  4109	00000000			 DDEADVISE		 struct
1  4110	00000000  01*(0000)		 ddeadvise_Status	 WORD	   0		 ;status
1  4111	00000002  01*(0000)		 ddeadvise_cfFormat	 WORD	   0		 ;clipboard data format
1  4112	00000004			 DDEADVISE		 ends
1  4113		  =0004			 DDEADVISE_		 equ	   2+2
1  4114					 ;
1  4115					 ;------------------------------------------------------------------------------
1  4116					 ;
1  4117	00000000			 DDEDATA		 struct
1  4118	00000000  01*(0000)		 ddedata_Status		 WORD	   0		 ;status
1  4119	00000002  01*(0000)		 ddedata_cfFormat	 WORD	   0		 ;clipboard data format
1  4120	00000004  01*(00)		 ddedata_Value		 BYTE	   0		 ;data item
1  4121	00000005			 DDEDATA		 ends
1  4122		  =0005			 DDEDATA_		 equ	   2+2+1
1  4123					 ;
1  4124					 ;------------------------------------------------------------------------------
1  4125					 ;
1  4126	00000000			 DDEPOKE		 struct
1  4127	00000000  01*(0000)		 ddepoke_Status		 WORD	   0		 ;status
1  4128	00000002  01*(0000)		 ddepoke_cfFormat	 WORD	   0		 ;clipboard data format
1  4129	00000004  01*(00)		 ddepoke_Value		 BYTE	   0		 ;data item
1  4130	00000005			 DDEPOKE		 ends
1  4131		  =0005			 DDEPOKE_		 equ	   2+2+1
1  4132					 ;
1  4133					 ;==============================================================================
1  4134
1  4135					 ;*bk*
1  4136					 ;be careful from here on. This	stuff assumes ansi, not	unicode.
1  4137					 ;for example, StartDoc	is equated to StartDocA, the ansi API
1  4138					 ;function. The	unicode	equivalent is StartDocB.
1  4139
1  4140
1  4141
1  4142					 LPSECURITY_ATTRIBUTES	 TYPEDEF PTR SECURITY_ATTRIBUTES
1  4143					 LPRECT		 TYPEDEF PTR RECT
1  4144					 LPPOINT	 TYPEDEF PTR POINT
1  4145					 LPPAINTSTRUCT		 TYPEDEF PTR PAINTSTRUCT
1  4146					 HGDIOBJ	 TYPEDEF DWORD
1  4147					 LPPROCESS_INFORMATION	 TYPEDEF PTR PROCESS_INFORMATION
1  4148					 LPSTARTUPINFO		 TYPEDEF PTR STARTUPINFOA
1  4149					 LPCTBBUTTON		 TYPEDEF PTR TBBUTTON
1  4150
1  4151					 ;*******************************************************************************
1  4152					 ;*			 WINDEF.H	 ****************************************
1  4153					 ;*******************************************************************************
1  4154
1  4155		  =0104			 MAX_PATH	 EQU	 0104h
1  4156
1  4157		  =0000			 NULL		 EQU	 0h
1  4158		  =0000			 FALSE		 EQU	 0h
1  4159		  =0001			 TRUE		 EQU	 1h
1  4160
1  4161					 ;CALLBACK	 TYPEDEF PROTO STDCALL
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 74
pmScript.ASM



1  4162		  = STDCALL		 CALLBACK TEXTEQU	 <STDCALL>
1  4163					 ;WINAPI	 TYPEDEF PROTO STDCALL
1  4164		  = STDCALL		 WINAPI	TEXTEQU	 <STDCALL>
1  4165
1  4166
1  4167
1  4168
1  4169					 ;*******************************************************************************
1  4170					 ;*			 WINNT.H	 ****************************************
1  4171					 ;*******************************************************************************
1  4172
1  4173					 LPSTR		 TYPEDEF DWORD
1  4174					 LPCSTR		 TYPEDEF DWORD
1  4175
1  4176		  =0001			 FILE_ATTRIBUTE_READONLY EQU	 0001h
1  4177		  =0002			 FILE_ATTRIBUTE_HIDDEN	 EQU	 0002h
1  4178		  =0004			 FILE_ATTRIBUTE_SYSTEM	 EQU	 0004h
1  4179		  =0010			 FILE_ATTRIBUTE_DIRECTORY EQU	 0010h
1  4180		  =0020			 FILE_ATTRIBUTE_ARCHIVE	 EQU	 0020h
1  4181		  =0080			 FILE_ATTRIBUTE_NORMAL	 EQU	 0080h
1  4182		  =0100			 FILE_ATTRIBUTE_TEMPORARY EQU	 0100h
1  4183		  =0800			 FILE_ATTRIBUTE_COMPRESSED EQU	 0800h
1  4184
1  4185		  =80000000		 GENERIC_READ		 EQU	 080000000h
1  4186		  =40000000		 GENERIC_WRITE		 EQU	 040000000h
1  4187		  =20000000		 GENERIC_EXECUTE	 EQU	 020000000h
1  4188		  =10000000		 GENERIC_ALL		 EQU	 010000000h
1  4189
1  4190		  =0001			 DLL_PROCESS_ATTACH	 EQU	 01h
1  4191		  =0002			 DLL_THREAD_ATTACH	 EQU	 02h
1  4192		  =0003			 DLL_THREAD_DETACH	 EQU	 03h
1  4193		  =0000			 DLL_PROCESS_DETACH	 EQU	 00h
1  4194
1  4195					 RtlMoveMemory		 PROCDESC	 STDCALL :DWORD, :DWORD, :DWORD
1  4196		  = RtlMoveMemory	 MoveMemory		 TEXTEQU <RtlMoveMemory>
1  4197					 RtlFillMemory		 PROCDESC	 STDCALL :DWORD, :DWORD, :BYTE
1  4198		  = RtlFillMemory	 FillMemory		 TEXTEQU <RtlFillMemory>
1  4199
1  4200					 ;*******************************************************************************
1  4201					 ;*			 WINERROR.H	 ****************************************
1  4202					 ;*******************************************************************************
1  4203
1  4204		  =0000			 ERROR_SUCCESS		 EQU	 000h
1  4205		  =0006			 ERROR_INVALID_HANDLE	 EQU	 006h
1  4206		  =00B7			 ERROR_ALREADY_EXISTS	 EQU	 0B7h
1  4207
1  4208
1  4209					 ;*******************************************************************************
1  4210					 ;*	 KERNEL32.LIB	 WINBASE.H	 ****************************************
1  4211					 ;*******************************************************************************
1  4212
1  4213					 ;INVALID_HANDLE_VALUE	 EQU	 -1
1  4214
1  4215		  =0001			 CREATE_NEW		 EQU	 01h
1  4216		  =0002			 CREATE_ALWAYS		 EQU	 02h
1  4217		  =0003			 OPEN_EXISTING		 EQU	 03h
1  4218		  =0004			 OPEN_ALWAYS		 EQU	 04h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 75
pmScript.ASM



1  4219		  =0005			 TRUNCATE_EXISTING	 EQU	 05h
1  4220
1  4221	00000000			 OVERLAPPED		 STRUCT
1  4222	00000000  01*(????????)			 Internal	 DWORD	 ?
1  4223	00000004  01*(????????)			 InternalHigh	 DWORD	 ?
1  4224	00000008  01*(????????)			 _Offset	 DWORD	 ?
1  4225	0000000C  01*(????????)			 OffsetHigh	 DWORD	 ?
1  4226	00000010  01*(????????)			 hEvent		 HANDLE	 ?
1  4227	00000014			 OVERLAPPED		 ENDS
1  4228					 LPOVERLAPPED		 TYPEDEF PTR OVERLAPPED
1  4229
1  4230
1  4231		  =0000			 GMEM_FIXED		 EQU	 00000h
1  4232		  =0002			 GMEM_MOVEABLE		 EQU	 00002h
1  4233		  =0040			 GMEM_ZEROINIT		 EQU	 00040h
1  4234		  =2000			 GMEM_SHARE		 EQU	 02000h
1  4235
1  4236		  =0001			 DEBUG_PROCESS		 EQU	 001h
1  4237		  =0002			 DEBUG_ONLY_THIS_PROCESS EQU	 002h
1  4238		  =0004			 CREATE_SUSPENDED	 EQU	 004h
1  4239		  =0008			 DETACHED_PROCESS	 EQU	 008h
1  4240		  =0010			 CREATE_NEWE_CONSOLE	 EQU	 010h
1  4241		  =0020			 NORMAL_PRIORITY_CLASS	 EQU	 020h
1  4242
1  4243					 WinMain		 PROCDESC	 WINAPI	 :HINSTANCE, :HINSTANCE, :LPSTR, :SDWORD
1  4244					 GlobalAlloc		 PROCDESC	 WINAPI	 :UINT,	:DWORD
1  4245					 GlobalLock		 PROCDESC	 WINAPI	 :HGLOBAL
1  4246					 GlobalUnlock		 PROCDESC	 WINAPI	 :HGLOBAL
1  4247					 GlobalFree		 PROCDESC	 WINAPI	 :HGLOBAL
1  4248					 ExitProcess		 PROCDESC	 WINAPI	 :DWORD
1  4249					 GetLastError		 PROCDESC	 WINAPI
1  4250					 DebugBreak		 PROCDESC	 WINAPI
1  4251					 Sleep			 PROCDESC	 WINAPI	 :DWORD
1  4252					 LoadResource		 PROCDESC	 WINAPI	 :HINSTANCE, :HRSRC
1  4253					 GetFileSize		 PROCDESC	 WINAPI	 :HANDLE, :LPDWORD
1  4254					 WriteFile		 PROCDESC	 WINAPI	 :HANDLE, :LPCVOID, :DWORD, :LPDWORD,	    +
   4255					 :LPOVERLAPPED
1  4256					 ReadFile		 PROCDESC	 WINAPI	 :HANDLE, :LPVOID, :DWORD, :LPDWORD,	    +
   4257					 :LPOVERLAPPED
1  4258					 CloseHandle		 PROCDESC	 WINAPI	 :HANDLE
1  4259					 Beep			 PROCDESC	 WINAPI	 :DWORD, :DWORD
1  4260					 lstrlenA		 PROCDESC	 WINAPI	 :LPCSTR
1  4261		  = lstrlenA		 lstrlen		 TEXTEQU <lstrlenA>
1  4262
1  4263					 lstrcatA	 PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  4264		  = lstrcatA		 lstrcat	 TEXTEQU <lstrcatA>
1  4265
1  4266					 lstrcpyA	 PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  4267		  = lstrcpyA		 lstrcpy	 TEXTEQU <lstrcpyA>
1  4268
1  4269		  =0001			 STARTF_USESHOWWINDOW	 EQU	 0001h
1  4270		  =0002			 STARTF_USESIZE		 EQU	 0002h
1  4271		  =0004			 STARTF_USEPOSITION	 EQU	 0004h
1  4272		  =0008			 STARTF_USECOUNTCHARS	 EQU	 0008h
1  4273		  =0010			 STARTF_USEFILLATTRIBUTE EQU	 0010h
1  4274		  =0020			 STARTF_RUNFULLSCREEN	 EQU	 0020h
1  4275		  =0040			 STARTF_FORCEONFEEDBACK	 EQU	 0040h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 76
pmScript.ASM



1  4276		  =0080			 STARTF_FORCEOFFFEEDBACK EQU	 0080h
1  4277		  =0100			 STARTF_USESTDHANDLES	 EQU	 0100h
1  4278		  =0200			 STARTF_USEHOTKEY	 EQU	 0200h
1  4279
1  4280
1  4281					 CreateSemaphoreA	 PROCDESC	 WINAPI	 :LPSECURITY_ATTRIBUTES, :LONG,	:LONG,	    +
   4282					 :LPCSTR
1  4283		  = CreateSemaphoreA	 CreateSemaphore	 TEXTEQU <CreateSemaphoreA>
1  4284
1  4285					 GetModuleHandleA	 PROCDESC	 WINAPI	 :DWORD
1  4286		  = GetModuleHandleA	 GetModuleHandle	 TEXTEQU <GetModuleHandleA>
1  4287					 CreateProcessA		 PROCDESC	 STDCALL :LPCSTR, :LPSTR,\
   4288										 :LPSECURITY_ATTRIBUTES,\
   4289										 :LPSECURITY_ATTRIBUTES,\
   4290										 :BOOL,	:DWORD,	:LPVOID, :LPCSTR,\
   4291										 :LPSTARTUPINFO,\
   4292										 :LPPROCESS_INFORMATION
1  4293		  = CreateProcessA	 CreateProcess		 TEXTEQU <CreateProcessA>
1  4294					 GetStartupInfoA	 PROCDESC	 WINAPI	 :LPSTARTUPINFO
1  4295		  = GetStartupInfoA	 GetStartupInfo		 TEXTEQU <GetStartupInfoA>
1  4296					 GetCommandLineA	 PROCDESC	 WINAPI
1  4297		  = GetCommandLineA	 GetCommandLine		 TEXTEQU <GetCommandLineA>
1  4298					 OutputDebugStringA	 PROCDESC	 WINAPI	 :LPCSTR
1  4299		  = OutputDebugStringA	 OutputDebugString	 TEXTEQU <OutputDebugStringA>
1  4300					 FindResourceA		 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR, :LPCSTR
1  4301		  = FindResourceA	 FindResource		 TEXTEQU <FindResourceA>
1  4302					 CreateFileA		 PROCDESC	 WINAPI	 :LPCSTR, :DWORD, :DWORD,\
   4303										 :LPSECURITY_ATTRIBUTES,\
   4304										 :DWORD, :DWORD, :HANDLE
1  4305		  = CreateFileA		 CreateFile		 TEXTEQU <CreateFileA>
1  4306					 QueryPerformanceCounter PROCDESC	 WINAPI	 :DWORD
1  4307					 QueryPerformanceFrequency PROCDESC	 WINAPI	 :DWORD
1  4308
1  4309
1  4310					 ;*******************************************************************************
1  4311					 ;*	 GDI32.LIB	 WINGDI.H	 ****************************************
1  4312					 ;*******************************************************************************
1  4313
1  4314		  =00CC0020		 SRCCOPY		 EQU	 00CC0020h	 ;dest = source
1  4315		  =00EE0086		 SRCPAINT		 EQU	 00EE0086h	 ;dest = source	OR dest
1  4316		  =008800C6		 SRCAND			 EQU	 008800C6h	 ;dest = source	AND dest
1  4317		  =00660046		 SRCINVERT		 EQU	 00660046h	 ;dest = source	XOR dest
1  4318		  =00440328		 SRCERASE		 EQU	 00440328h	 ;dest = source	AND (NOT dest)
1  4319
1  4320		  =0000			 TA_LEFT		 EQU	 000h
1  4321		  =0002			 TA_RIGHT		 EQU	 002h
1  4322		  =0006			 TA_CENTER		 EQU	 006h
1  4323		  =0000			 TA_TOP			 EQU	 000h
1  4324		  =0008			 TA_BOTTOM		 EQU	 008h
1  4325		  =0018			 TA_BASELINE		 EQU	 018h
1  4326
1  4327		  =-0001		 SP_ERROR		 EQU	 -1
1  4328
1  4329
1  4330		  =0000			 DEFAULT_QUALITY	 EQU	 000h
1  4331		  =0001			 DRAFT_QUALITY		 EQU	 001h
1  4332		  =0002			 PROOF_QUALITY		 EQU	 002h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 77
pmScript.ASM



1  4333		  =0000			 DEFAULT_PITCH		 EQU	 000h
1  4334		  =0001			 FIXED_PITCH		 EQU	 001h
1  4335		  =0002			 VARIABLE_PITCH		 EQU	 002h
1  4336		  =0190			 FW_NORMAL		 EQU	 400
1  4337		  =02BC			 FW_BOLD		 EQU	 700
1  4338		  =0010			 FF_ROMAN		 EQU	 010h
1  4339		  =0030			 FF_MODERN		 EQU	 030h
1  4340
1  4341		  =0000			 CLIP_DEFAULT_PRECIS	 EQU	 000h
1  4342		  =0080			 CLIP_EMBEDDED_PRECIS	 EQU	 128
1  4343		  =0000			 OUT_DEFAULT_PRECIS	 EQU	 000h
1  4344		  =0001			 DEFAULT_CHARSET	 EQU	 001h
1  4345
1  4346		  =0001			 TRANSPARENT		 EQU	 01h
1  4347		  =0002			 OPAQUE			 EQU	 02h
1  4348
1  4349		  =0000			 WHITE_BRUSH		 EQU	 00h
1  4350		  =0001			 LTGRAY_BRUSH		 EQU	 01h
1  4351		  =0002			 GRAY_BRUSH		 EQU	 02h
1  4352		  =0003			 DKGRAY_BRUSH		 EQU	 03h
1  4353		  =0004			 BLACK_BRUSH		 EQU	 04h
1  4354
1  4355					 BitBlt			 PROCDESC	 WINAPI	 :HDC, :DWORD, :DWORD, :DWORD, :DWORD,\
   4356										 :HDC, :DWORD, :DWORD, :DWORD
1  4357					 CreateCompatibleDC	 PROCDESC	 WINAPI	 :HDC
1  4358					 CreateCompatibleBitmap	 PROCDESC	 WINAPI	 :HDC, :DWORD, :DWORD
1  4359					 CreateFontA		 PROCDESC	 WINAPI	 :SDWORD, :SDWORD, :SDWORD, :SDWORD,	    +
   4360					 :SDWORD, :DWORD, :DWORD,\
   4361										 :DWORD, :DWORD, :DWORD, :DWORD, :DWORD, :DWORD,    +
   4362					 :LPCSTR
1  4363		  = CreateFontA		 CreateFont		 TEXTEQU <CreateFontA>
1  4364					 CreateSolidBrush	 PROCDESC	 WINAPI	 :COLORREF
1  4365					 DeleteDC		 PROCDESC	 WINAPI	 :HDC
1  4366					 DeleteObject		 PROCDESC	 WINAPI	 :HGDIOBJ
1  4367					 GetStockObject		 PROCDESC	 WINAPI	 :SDWORD
1  4368					 LineTo			 PROCDESC	 WINAPI	 :HDC, :UINT, :UINT
1  4369					 RectVisible		 PROCDESC	 WINAPI	 :HDC, :LPRECT
1  4370					 SelectObject		 PROCDESC	 WINAPI	 :HDC, :HGDIOBJ
1  4371					 SetBkColor		 PROCDESC	 WINAPI	 :HDC, :COLORREF
1  4372					 SetBkMode		 PROCDESC	 WINAPI	 :HDC, :SDWORD
1  4373					 StretchBlt		 PROCDESC	 WINAPI	 :HDC, :SDWORD,	:SDWORD, :SDWORD, :SDWORD,\
   4374										 :HDC, :SDWORD,	:SDWORD, :SDWORD, :SDWORD, :DWORD
1  4375					 SetTextColor		 PROCDESC	 WINAPI	 :HDC, :COLORREF
1  4376					 SetTextAlign		 PROCDESC	 WINAPI	 :HDC, :UINT
1  4377
1  4378					 ;ABORTPROC		 TYPEDEF PROCDESC STDCALL
1  4379		  = STDCALL		 ABORTPROC TEXTEQU <STDCALL>
1  4380
1  4381	00000000			 DOCINFOA		 STRUCT
1  4382	00000000  01*(????????)			 cbSize		 SDWORD	 ?
1  4383	00000004  01*(????????)			 lpszDocName	 LPCSTR	 ?
1  4384	00000008  01*(????????)			 lpszOutput	 LPCSTR	 ?
1  4385	0000000C  01*(????????)			 lpszDataType	 LPCSTR	 ?
1  4386	00000010  01*(????????)			 fwType		 DWORD	 ?
1  4387	00000014			 DOCINFOA		 ENDS
1  4388					 LPDOCINFO		 TYPEDEF PTR DOCINFOA
1  4389		  = DOCINFOA		 DOCINFO		 TEXTEQU <DOCINFOA>
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 78
pmScript.ASM



1  4390
1  4391					 StartDocA		 PROCDESC	 WINAPI	 :HDC, :LPDOCINFO
1  4392		  = StartDocA		 StartDoc		 TEXTEQU <StartDocA>
1  4393					 EndDoc			 PROCDESC	 WINAPI	 :HDC
1  4394					 StartPage		 PROCDESC	 WINAPI	 :HDC
1  4395					 EndPage		 PROCDESC	 WINAPI	 :HDC
1  4396					 AbortDoc		 PROCDESC	 WINAPI	 :HDC
1  4397					 ;SetAbortProc		 PROCDESC	 WINAPI	 :HDC, :ABORTPROC
1  4398					 SetAbortProc		 PROCDESC	 WINAPI	 :HDC, :DWORD
1  4399
1  4400					 MoveToEx		 PROCDESC	 WINAPI	 :HDC, :UINT, :UINT, :LPPOINT
1  4401					 TextOutA		 PROCDESC	 WINAPI	 :HDC, :DWORD, :DWORD, :LPCSTR,	:DWORD
1  4402		  = TextOutA		 TextOut		 TEXTEQU <TextOutA>
1  4403
1  4404
1  4405					 ;*******************************************************************************
1  4406					 ;*	 USER32.LIB	 WINUSER.H	 ****************************************
1  4407					 ;*******************************************************************************
1  4408
1  4409					 ;DLGPROC		 TYPEDEF PROCDESC STDCALL
1  4410		  = STDCALL		 DLGPROC TEXTEQU <STDCALL>
1  4411
1  4412		  =0000			 SB_HORZ		 EQU	 0
1  4413		  =0001			 SB_VERT		 EQU	 1
1  4414		  =0002			 SB_CTL			 EQU	 2
1  4415		  =0003			 SB_BOTH		 EQU	 3
1  4416		  =0004			 SB_THUMBPOSITION	 EQU	 4
1  4417		  =0008			 SB_ENDSCROLL		 EQU	 8
1  4418
1  4419		  =0000			 SW_HIDE		 EQU	 00h
1  4420		  =0001			 SW_SHOWNORMAL		 EQU	 01h
1  4421		  =0002			 SW_SHOWMINIMIZED	 EQU	 02h
1  4422		  =0003			 SW_SHOWMAXIMIZED	 EQU	 03h
1  4423		  =0005			 SW_SHOW		 EQU	 05h
1  4424		  =0009			 SW_RESTORE		 EQU	 09h
1  4425		  =000A			 SW_SHOWDEFAULT		 EQU	 0Ah
1  4426
1  4427		  =0030			 WNDCLASSEX_ EQU 4*12
1  4428	00000000			 WNDCLASSEXA		 STRUCT
1  4429	00000000  01*(????????)			 wc_cbSize		 UINT		 ?
1  4430	00000004  01*(????????)			 wc_style		 UINT		 ?
1  4431	00000008  01*(????????)			 wc_lpfnWndProc		 DWORD		 ?
1  4432	0000000C  01*(????????)			 wc_cbClsExtra		 SDWORD		 ?
1  4433	00000010  01*(????????)			 wc_cbWndExtra		 SDWORD		 ?
1  4434	00000014  01*(????????)			 wc_hInstance		 HINSTANCE	 ?
1  4435	00000018  01*(????????)			 wc_hIcon		 HICON		 ?
1  4436	0000001C  01*(????????)			 wc_hCursor		 HCURSOR	 ?
1  4437	00000020  01*(????????)			 wc_hbrBackground	 HBRUSH		 ?
1  4438	00000024  01*(????????)			 wc_lpszMenuName	 LPCSTR		 ?
1  4439	00000028  01*(????????)			 wc_lpszClassName	 LPCSTR		 ?
1  4440	0000002C  01*(????????)			 wc_hIconSm		 HICON		 ?
1  4441	00000030			 WNDCLASSEXA		 ENDS
1  4442		  = WNDCLASSEXA		 WNDCLASSEX		 TEXTEQU <WNDCLASSEXA>
1  4443
1  4444					 LPMSG			 TYPEDEF DWORD
1  4445
1  4446					 ;GWL_ID		 EQU	 0FFFFFFF4h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 79
pmScript.ASM



1  4447
1  4448		  =0001			 WM_CREATE		 EQU	 0001h
1  4449		  =0002			 WM_DESTROY		 EQU	 0002h
1  4450		  =0005			 WM_SIZE		 EQU	 0005h
1  4451		  =000C			 WM_SETTEXT		 EQU	 000Ch
1  4452		  =000F			 WM_PAINT		 EQU	 000Fh
1  4453		  =0010			 WM_CLOSE		 EQU	 0010h
1  4454		  =0014			 WM_ERASEBKGND		 EQU	 0014h
1  4455		  =004E			 WM_NOTIFY		 EQU	 004Eh
1  4456		  =0053			 WM_HELP		 EQU	 0053h
1  4457		  =0102			 WM_CHAR		 EQU	 0102h
1  4458		  =0110			 WM_INITDIALOG		 EQU	 0110h
1  4459		  =0111			 WM_COMMAND		 EQU	 0111h
1  4460		  =0113			 WM_TIMER		 EQU	 0113h
1  4461		  =0114			 WM_HSCROLL		 EQU	 0114h
1  4462		  =0115			 WM_VSCROLL		 EQU	 0115h
1  4463		  =011F			 WM_MENUSELECT		 EQU	 011Fh
1  4464		  =0136			 WM_CTLCOLORDLG		 EQU	 0136h
1  4465		  =0200			 WM_MOUSEMOVE		 EQU	 0200h
1  4466		  =0201			 WM_LBUTTONDOWN		 EQU	 0201h
1  4467		  =0202			 WM_LBUTTONUP		 EQU	 0202h
1  4468		  =0203			 WM_LBUTTONDBLCLK	 EQU	 0203h
1  4469		  =0204			 WM_RBUTTONDOWN		 EQU	 0204h
1  4470		  =0205			 WM_RBUTTONUP		 EQU	 0205h
1  4471		  =0206			 WM_RBUTTONDBLCLK	 EQU	 0206h
1  4472		  =0300			 WM_CUT			 EQU	 0300h
1  4473		  =0301			 WM_COPY		 EQU	 0301h
1  4474		  =0302			 WM_PASTE		 EQU	 0302h
1  4475		  =0303			 WM_CLEAR		 EQU	 0303h
1  4476		  =0304			 WM_UNDO		 EQU	 0304h
1  4477		  =0400			 WM_USER		 EQU	 0400h
1  4478
1  4479		  =80000000		 WS_POPUP		 EQU	 080000000h
1  4480		  =40000000		 WS_CHILD		 EQU	 040000000h
1  4481		  =20000000		 WS_MINIMIZE		 EQU	 020000000h
1  4482		  =10000000		 WS_VISIBLE		 EQU	 010000000h
1  4483		  =01000000		 WS_MAXIMIZE		 EQU	 001000000h
1  4484		  =00C00000		 WS_CAPTION		 EQU	 000C00000h
1  4485		  =00800000		 WS_BORDER		 EQU	 000800000h
1  4486		  =00400000		 WS_DLGFRAME		 EQU	 000400000h
1  4487		  =00200000		 WS_VSCROLL		 EQU	 000200000h
1  4488		  =00100000		 WS_HSCROLL		 EQU	 000100000h
1  4489		  =00080000		 WS_SYSMENU		 EQU	 000080000h
1  4490					 ;WS_SIZEBOX		 EQU	 000040000h
1  4491		  =00020000		 WS_MINIMIZEBOX		 EQU	 000020000h
1  4492		  =00010000		 WS_MAXIMIZEBOX		 EQU	 000010000h
1  4493		  =00CF0000		 WS_OVERLAPPEDWINDOW	 EQU	 000CF0000h
1  4494		  =0004			 WS_EX_NOPARENTNOTIFY	 EQU	 000000004h
1  4495		  =0100			 WS_EX_WINDOWEDGE	 EQU	 000000100h
1  4496		  =0200			 WS_EX_CLIENTEDGE	 EQU	 000000200h
1  4497		  =0300			 WS_EX_OVERLAPPEDWINDOW	 EQU	 WS_EX_WINDOWEDGE + WS_EX_CLIENTEDGE
1  4498
1  4499		  =0001			 CS_VREDRAW		 EQU	 00001h
1  4500		  =0002			 CS_HREDRAW		 EQU	 00002h
1  4501		  =0080			 CS_PARENTDC		 EQU	 00080h
1  4502		  =2000			 CS_BYTEALIGNWINDOW	 EQU	 02000h
1  4503
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 80
pmScript.ASM



1  4504		  =0001			 BDR_RAISEDOUTER	 EQU	 01h
1  4505		  =0002			 BDR_SUNKENOUTER	 EQU	 02h
1  4506		  =0004			 BDR_RAISEDINNER	 EQU	 04h
1  4507		  =0008			 BDR_SUNKENINNER	 EQU	 08h
1  4508		  =0005			 EDGE_RAISED		 EQU	 BDR_RAISEDOUTER + BDR_RAISEDINNER
1  4509		  =000A			 EDGE_SUNKEN		 EQU	 BDR_SUNKENOUTER + BDR_SUNKENINNER
1  4510		  =0006			 EDGE_ETCHED		 EQU	 BDR_SUNKENOUTER + BDR_RAISEDINNER
1  4511		  =0009			 EDGE_BUMP		 EQU	 BDR_RAISEDOUTER + BDR_SUNKENINNER
1  4512		  =0001			 BF_LEFT		 EQU	 01h
1  4513		  =0002			 BF_TOP			 EQU	 02h
1  4514		  =0004			 BF_RIGHT		 EQU	 04h
1  4515		  =0008			 BF_BOTTOM		 EQU	 08h
1  4516		  =000F			 BF_RECT		 EQU	 BF_LEFT + BF_TOP + BF_RIGHT + BF_BOTTOM
1  4517					 DrawEdge		 PROCDESC	 WINAPI	 :HDC, :LPRECT,	:UINT, :UINT
1  4518
1  4519
1  4520	00000000			 NMHDR			 STRUCT
1  4521	00000000  01*(????????)			 hwndFrom	 HWND	 ?
1  4522	00000004  01*(????????)			 idFrom		 UINT	 ?
1  4523	00000008  01*(????????)			 code		 UINT	 ?
1  4524	0000000C			 NMHDR			 ENDS
1  4525
1  4526					 GetMessageA		 PROCDESC	 WINAPI	 :LPMSG, :HWND,	:UINT, :UINT
1  4527		  = GetMessageA		 GetMessage		 TEXTEQU <GetMessageA>
1  4528					 TranslateMessage	 PROCDESC	 WINAPI	 :LPMSG
1  4529					 DispatchMessageA	 PROCDESC	 WINAPI	 :LPMSG
1  4530		  = DispatchMessageA	 DispatchMessage	 TEXTEQU <DispatchMessageA>
1  4531
1  4532					 PeekMessageA		 PROCDESC	 WINAPI	 :LPMSG, :HWND,	:UINT, :UINT, :UINT
1  4533		  = PeekMessageA	 PeekMessage		 TEXTEQU <PeekMessageA>
1  4534		  =0000			 PM_NOREMOVE		 EQU	 00h
1  4535		  =0001			 PM_REMOVE		 EQU	 01h
1  4536		  =0002			 PM_NOYIELD		 EQU	 02h
1  4537
1  4538					 SendMessageA		 PROCDESC	 WINAPI	 :HWND,	:UINT, :WPARAM,	:LPARAM
1  4539		  = SendMessageA	 SendMessage		 TEXTEQU <SendMessageA>
1  4540					 PostMessageA		 PROCDESC	 WINAPI	 :HWND,	:UINT, :WPARAM,	:LPARAM
1  4541		  = PostMessageA	 PostMessage		 TEXTEQU <PostMessageA>
1  4542					 DefWindowProcA		 PROCDESC	 WINAPI	 :HWND,	:UINT, :WPARAM,	:LPARAM
1  4543		  = DefWindowProcA	 DefWindowProc		 TEXTEQU <DefWindowProcA>
1  4544					 PostQuitMessage     PROCDESC	 WINAPI	 :DWORD
1  4545					 RegisterClassA	     PROCDESC WINAPI :DWORD
1  4546		  = RegisterClassA	 RegisterClass	     TEXTEQU <RegisterClassA>
1  4547					 RegisterClassExA	 PROCDESC	 WINAPI	 :DWORD
1  4548		  = RegisterClassExA	 RegisterClassEx	 TEXTEQU <RegisterClassExA>
1  4549					 CreateWindowA	 PROCDESC WINAPI :LPCTSTR, :LPCTSTR, :DWORD, :DWORD, :DWORD, :DWORD, :DWORD,+
   4550					 :HWND,	:HMENU,	:HANDLE, :DWORD
1  4551		  = CreateWindowA	 CreateWindow	 TEXTEQU <CreateWindowA>
1  4552					 CreateWindowExA	 PROCDESC	 WINAPI	 :DWORD, :LPCSTR, :LPCSTR, :DWORD, :SDWORD, +
   4553					 :SDWORD,\
   4554										 :SDWORD, :SDWORD, :HWND, :HMENU, :HINSTANCE, :DWORD
1  4555		  = CreateWindowExA	 CreateWindowEx		 TEXTEQU <CreateWindowExA>
1  4556					 DestroyWindow		 PROCDESC	 WINAPI	 :HWND
1  4557					 ShowWindow		 PROCDESC	 WINAPI	 :HWND,	:SDWORD
1  4558					 MoveWindow		 PROCDESC	 WINAPI	 :HWND,	:UINT, :UINT, :UINT, :UINT, :BOOL
1  4559					 SetWindowPos		 PROCDESC	 WINAPI	 :HWND,	:HWND, :UINT, :UINT, :UINT, :UINT,  +
   4560					 :UINT
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 81
pmScript.ASM



1  4561					 IsIconic		 PROCDESC	 WINAPI	 :HWND
1  4562
1  4563		  =0001			 SWP_NOSIZE		 EQU	 001h
1  4564		  =0002			 SWP_NOMOVE		 EQU	 002h
1  4565		  =0004			 SWP_NOZORDER		 EQU	 004h
1  4566		  =0020			 SWP_FRAMECHANGED	 EQU	 020h
1  4567					 SWP_DRAWFRAME		 EQU	 SWP_FRAMECHANGED
1  4568		  =0000			 HWND_TOP		 EQU	 000h
1  4569
1  4570	00000000			 DLGTEMPLATE		 STRUCT
1  4571	00000000  01*(????????)			 style		 DWORD	 ?
1  4572	00000004  01*(????????)			 dwExtendedStyle DWORD	 ?
1  4573	00000008  01*(????)			 cdit		 WORD	 ?
1  4574	0000000A  01*(????)			 x		 SWORD	 ?
1  4575	0000000C  01*(????)			 y		 SWORD	 ?
1  4576	0000000E  01*(????)			 nx		 SWORD	 ?
1  4577	00000010  01*(????)			 ny		 SWORD	 ?
1  4578	00000012			 DLGTEMPLATE		 ENDS
1  4579					 ;LPCDLGTEMPLATE	 TYPEDEF PTR LPDLGTEMPLATE
1  4580
1  4581					 ;CreateDialogParamA	 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR, :HWND, :DLGPROC,	    +
   4582					 :LPARAM
1  4583					 CreateDialogParamA	 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR, :HWND, :DWORD, :LPARAM
1  4584		  = CreateDialogParamA	 CreateDialogParam	 TEXTEQU <CreateDialogParamA>
1  4585					 ;DialogBoxParamA		 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR, :HWND,	    +
   4586					 :DLGPROC, :LPARAM
1  4587					 DialogBoxParamA	 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR, :HWND, :DWORD, :LPARAM
1  4588		  = DialogBoxParamA	 DialogBoxParam		 TEXTEQU <DialogBoxParamA>
1  4589					 EndDialog		 PROCDESC	 WINAPI	 :HWND,	:UINT
1  4590					 GetDlgItem		 PROCDESC	 WINAPI	 :HWND,	:UINT
1  4591					 SetDlgItemTextA	 PROCDESC	 WINAPI	 :HWND,	:SDWORD, :LPCSTR
1  4592		  = SetDlgItemTextA	 SetDlgItemText		 TEXTEQU <SetDlgItemTextA>
1  4593					 GetDlgItemTextA     PROCDESC	 WINAPI	 :HWND,	:SDWORD, :LPCSTR, :DWORD
1  4594		  = GetDlgItemTextA	 GetDlgItemText	     TEXTEQU <GetDlgItemTextA>
1  4595					 SendDlgItemMessageA	 PROCDESC	 WINAPI	 :HWND,	:UINT, :UINT, :WPARAM, :LPARAM
1  4596		  = SendDlgItemMessageA	 SendDlgItemMessage	 TEXTEQU <SendDlgItemMessageA>
1  4597					 DefDlgProcA		 PROCDESC	 WINAPI	 :HWND,	:UINT, :WPARAM,	:LPARAM
1  4598		  = DefDlgProcA		 DefDlgProc		 TEXTEQU <DefDlgProcA>
1  4599		  =001E			 DLGWINDOWEXTRA		 EQU	 00000001Eh
1  4600
1  4601					 SetFocus		 PROCDESC	 WINAPI	 :HWND
1  4602					 SetTimer		 PROCDESC	 WINAPI	 :HWND,	:UINT, :UINT, :PTR DWORD
1  4603					 KillTimer		 PROCDESC	 WINAPI	 :HWND,	:UINT
1  4604					 EnableWindow		 PROCDESC	 WINAPI	 :HWND,	:BOOL
1  4605					 LoadAcceleratorsA	 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR
1  4606		  = LoadAcceleratorsA	 LoadAccelerators	 TEXTEQU <LoadAcceleratorsA>
1  4607					 TranslateAcceleratorA	 PROCDESC	 WINAPI	 :HWND,	:HACCEL, :LPMSG
1  4608		  =		      +	 TranslateAccelerator	 TEXTEQU <TranslateAcceleratorA>
   4609		  TranslateAcceleratorA
1  4610
1  4611		  =0000			 SM_CXSCREEN		 EQU	 000h
1  4612		  =0001			 SM_CYSCREEN		 EQU	 001h
1  4613		  =0010			 SM_CXFULLSCREEN	 EQU	 010h
1  4614		  =0011			 SM_CYFULLSCREEN	 EQU	 011h
1  4615					 GetSystemMetrics	 PROCDESC	 WINAPI	 :UINT
1  4616					 DrawTextA		 PROCDESC	 WINAPI	 :HDC, :LPCSTR,	:UINT, :LPRECT,	:UINT
1  4617		  = DrawTextA		 DrawText		 TEXTEQU <DrawTextA>
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 82
pmScript.ASM



1  4618					 UpdateWindow		 PROCDESC	 WINAPI	 :HWND
1  4619					 SetForegroundWindow	 PROCDESC	 WINAPI	 :HWND
1  4620					 GetDC			 PROCDESC	 WINAPI	 :HWND
1  4621					 GetWindowDC		 PROCDESC	 WINAPI	 :HWND
1  4622					 ReleaseDC		 PROCDESC	 WINAPI	 :HWND,	:HDC
1  4623					 BeginPaint		 PROCDESC	 WINAPI	 :HWND,	:LPPAINTSTRUCT
1  4624					 EndPaint		 PROCDESC	 WINAPI	 :HWND,	:LPPAINTSTRUCT
1  4625					 InvalidateRect		 PROCDESC	 WINAPI	 :HWND,	:LPRECT, :UINT
1  4626					 InvalidateRgn		 PROCDESC	 WINAPI	 :HWND,	:HRGN, :BOOL
1  4627					 GetScrollPos		 PROCDESC	 WINAPI	 :HWND,	:UINT
1  4628					 GetWindowTextA	     PROCDESC	 WINAPI	 :HWND,	:LPCSTR, :DWORD
1  4629		  = GetWindowTextA	 GetWindowText	     TEXTEQU <GetWindowTextA>
1  4630					 SetWindowTextA		 PROCDESC	 WINAPI	 :HWND,	:LPCSTR
1  4631		  = SetWindowTextA	 SetWindowText		 TEXTEQU <SetWindowTextA>
1  4632					 GetClientRect		 PROCDESC	 WINAPI	 :HWND,	:LPRECT
1  4633					 GetWindowRect		 PROCDESC	 WINAPI	 :HWND,	:LPRECT
1  4634
1  4635		  =0000			 MB_OK			 EQU	 000h
1  4636		  =0001			 MB_OKCANCEL		 EQU	 001h
1  4637		  =0002			 MB_ABORTRETRYIGNORE	 EQU	 002h
1  4638		  =0003			 MB_YESNOCANCEL		 EQU	 003h
1  4639		  =0004			 MB_YESNO		 EQU	 004h
1  4640		  =0005			 MB_RETRYCANCEL		 EQU	 005h
1  4641					 ;MB_ICONERROR		 EQU	 010h
1  4642					 ;MB_ICONWARNING	 EQU	 030h
1  4643					 MessageBoxA		 PROCDESC	 WINAPI	 :HWND,	:LPCSTR, :LPCSTR, :UINT
1  4644		  = MessageBoxA		 MessageBox		 TEXTEQU <MessageBoxA>
1  4645
1  4646		  =0001			 COLOR_BACKGROUND	 EQU	 001h
1  4647		  =0005			 COLOR_WINDOW		 EQU	 005h
1  4648					 ;COLOR_3DFACE		 EQU	 00Fh
1  4649					 ;COLOR_3DSHADOW	 EQU	 010h
1  4650		  =000C			 COLOR_APPWORKSPACE	 EQU	 00Ch
1  4651		  =0016			 COLOR_3DLIGHT		 EQU	 016h
1  4652					 GetSysColor		 PROCDESC	 WINAPI	 :UINT
1  4653					 SetSysColors		 PROCDESC	 WINAPI	 :UINT
1  4654					 FillRect		 PROCDESC	 WINAPI	 :HDC, :LPRECT,	:HBRUSH
1  4655					 GetWindowLongA		 PROCDESC	 WINAPI	 :HWND,	:DWORD
1  4656		  = GetWindowLongA	 GetWindowLong		 TEXTEQU <GetWindowLongA>
1  4657					 GetDesktopWindow	 PROCDESC	 WINAPI
1  4658					 FindWindowA		 PROCDESC	 WINAPI	 :LPCSTR, :LPCSTR
1  4659		  = FindWindowA		 FindWindow		 TEXTEQU <FindWindowA>
1  4660					 FindWindowExA		 PROCDESC	 WINAPI	 :LPCSTR, :LPCSTR
1  4661		  = FindWindowExA	 FindWindowEx		 TEXTEQU <FindWindowExA>
1  4662					 GetLastActivePopup	 PROCDESC	 WINAPI	 :HWND
1  4663
1  4664		  =0010			 MF_POPUP		 EQU	 00010h
1  4665		  =2000			 MF_SYSMENU		 EQU	 02000h
1  4666					 ;MFT_SEPARATOR		 EQU	 00800h
1  4667
1  4668		  =F000			 SC_SIZE		 EQU	 0F000h
1  4669		  =F010			 SC_MOVE		 EQU	 0F010h
1  4670		  =F020			 SC_MINIMIZE		 EQU	 0F020h
1  4671		  =F030			 SC_MAXIMIZE		 EQU	 0F030h
1  4672		  =F060			 SC_CLOSE		 EQU	 0F060h
1  4673		  =F120			 SC_RESTORE		 EQU	 0F120h
1  4674
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 83
pmScript.ASM



1  4675					 LoadBitmapA		 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR
1  4676		  = LoadBitmapA		 LoadBitmap		 TEXTEQU <LoadBitmapA>
1  4677					 LoadCursorA		 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR
1  4678		  = LoadCursorA		 LoadCursor		 TEXTEQU <LoadCursorA>
1  4679					 LoadCursorFromFileA	 PROCDESC	 WINAPI	 :LPCSTR
1  4680		  = LoadCursorFromFileA	 LoadCursorFromFile	 TEXTEQU <LoadCursorFromFileA>
1  4681					 SetCursor		 PROCDESC	 WINAPI	 :HCURSOR
1  4682					 LoadIconA		 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR
1  4683		  = LoadIconA		 LoadIcon		 TEXTEQU <LoadIconA>
1  4684					 LoadMenuA		 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR
1  4685		  = LoadMenuA		 LoadMenu		 TEXTEQU <LoadMenuA>
1  4686					 LoadStringA		 PROCDESC	 WINAPI	 :HINSTANCE, :INTEGER, :LPTSTR,	:INTEGER
1  4687		  = LoadStringA		 LoadString		 TEXTEQU <LoadStringA>
1  4688					 LoadLibraryA		 PROCDESC	 WINAPI	 :LPCSTR
1  4689		  = LoadLibraryA	 LoadLibrary		 TEXTEQU <LoadLibraryA>
1  4690
1  4691
1  4692		  =0000			 IMAGE_BITMAP		 EQU	 00000h
1  4693		  =0001			 IMAGE_ICON		 EQU	 00001h
1  4694		  =0002			 IMAGE_CURSOR		 EQU	 00002h
1  4695		  =0020			 LR_LOADTRANSPARENT	 EQU	 00020h
1  4696		  =1000			 LR_LOADMAP3DCOLORS	 EQU	 01000h
1  4697					 LoadImageA		 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR, :UINT, :UINT, :UINT,  +
   4698					 :UINT
1  4699		  = LoadImageA		 LoadImage		 TEXTEQU <LoadImageA>
1  4700
1  4701		  =7F00			 IDC_ARROW		 EQU	 07f00h
1  4702
1  4703					 LoadStringA		 PROCDESC	 WINAPI	 :HINSTANCE, :UINT, :LPCSTR, :UINT
1  4704		  = LoadStringA		 LoadString		 TEXTEQU <LoadStringA>
1  4705
1  4706		  =0001			 IDOK			 EQU	 01h
1  4707		  =0002			 IDCANCEL		 EQU	 02h
1  4708		  =0003			 IDABORT		 EQU	 03h
1  4709		  =0004			 IDRETRY		 EQU	 04h
1  4710		  =0005			 IDIGNORE		 EQU	 05h
1  4711		  =0006			 IDYES			 EQU	 06h
1  4712		  =0007			 IDNO			 EQU	 07h
1  4713		  =0008			 IDCLOSE		 EQU	 08h
1  4714		  =0009			 IDHELP			 EQU	 09h
1  4715
1  4716		  =0000			 ES_LEFT		 EQU	 000h
1  4717		  =0004			 ES_MULTILINE		 EQU	 004h
1  4718		  =0040			 ES_AUTOVSCROLL		 EQU	 040h
1  4719
1  4720		  =00F0			 BM_GETCHECK		 EQU	 0F0h
1  4721		  =00F1			 BM_SETCHECK		 EQU	 0F1h
1  4722		  =00F5			 BM_CLICK		 EQU	 0F5h
1  4723		  =00F7			 BM_SETIMAGE		 EQU	 0F7h
1  4724
1  4725		  =0000			 BST_UNCHECKED		 EQU	 00h
1  4726		  =0001			 BST_CHECKED		 EQU	 01h
1  4727		  =0002			 BST_INDETERMINATE	 EQU	 02h
1  4728
1  4729		  =0000			 SS_LEFT		 EQU	 00h
1  4730		  =0001			 SS_CENTER		 EQU	 01h
1  4731		  =0002			 SS_RIGHT		 EQU	 02h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 84
pmScript.ASM



1  4732		  =0003			 SS_ICON		 EQU	 03h
1  4733		  =0007			 SS_BLACKFRAME		 EQU	 07h
1  4734
1  4735					 IsDialogMessageA	 PROCDESC	 WINAPI	 :HWND,	:LPMSG
1  4736		  = IsDialogMessageA	 IsDialogMessage	 TEXTEQU <IsDialogMessageA>
1  4737
1  4738		  =0080			 DS_MODALFRAME		 EQU	 0080h
1  4739		  =0100			 DS_NOIDLEMSG		 EQU	 0100h
1  4740		  =0004			 DS_3DLOOK		 EQU	 0004h
1  4741
1  4742		  =0001			 HELP_CONTEXT		 EQU	 01h
1  4743		  =0002			 HELP_QUIT		 EQU	 02h
1  4744		  =0003			 HELP_INDEX		 EQU	 03h
1  4745		  =0003			 HELP_CONTENTS		 EQU	 03h
1  4746		  =0004			 HELP_HELPONHELP	 EQU	 04h
1  4747		  =000A			 HELP_CONTEXTMENU	 EQU	 0Ah
1  4748		  =000B			 HELP_FINDER		 EQU	 0Bh
1  4749		  =000C			 HELP_WM_HELP		 EQU	 0Ch
1  4750
1  4751					 WinHelpA		 PROCDESC	 WINAPI	 :HWND,	:LPCSTR, :UINT,	:DWORD
1  4752		  = WinHelpA		 WinHelp		 TEXTEQU <WinHelpA>
1  4753
1  4754
1  4755					 ;*******************************************************************************
1  4756					 ;*	 COMDLG32.LIB	 COMMDLG.H	 ****************************************
1  4757					 ;*******************************************************************************
1  4758
1  4759	00000000			 OPENFILENAMEA		 STRUCT
1  4760	00000000  01*(????????)			 op_lStructSize	 DWORD		 ?
1  4761	00000004  01*(????????)			 op_hwndOwner	 HWND		 ?
1  4762	00000008  01*(????????)			 op_hInstance	 HINSTANCE	 ?
1  4763	0000000C  01*(????????)			 op_lpstrFilter	 LPCSTR		 ?
1  4764	00000010  01*(????????)			 op_lpstrCustomFilter LPSTR		 ?
1  4765	00000014  01*(????????)			 op_nMaxCustFilter	 DWORD		 ?
1  4766	00000018  01*(????????)			 op_nFilterIndex DWORD		 ?
1  4767	0000001C  01*(????????)			 op_lpstrFile	 LPSTR		 ?
1  4768	00000020  01*(????????)			 op_nMaxFile	 DWORD		 ?
1  4769	00000024  01*(????????)			 op_lpstrFileTitle	 LPSTR		 ?
1  4770	00000028  01*(????????)			 op_nMaxFileTitle	 DWORD		 ?
1  4771	0000002C  01*(????????)			 op_lpstrInitialDir	 LPCSTR		 ?
1  4772	00000030  01*(????????)			 op_lpstrTitle	 LPCSTR		 ?
1  4773	00000034  01*(????????)			 op_Flags		 DWORD		 ?
1  4774	00000038  01*(????)			 op_nFileOffset	 WORD		 ?
1  4775	0000003A  01*(????)			 op_nFileExtension	 WORD		 ?
1  4776	0000003C  01*(????????)			 op_lpstrDefExt	 LPCSTR		 ?
1  4777	00000040  01*(????????)			 op_lCustData	 LPARAM		 ?
1  4778	00000044  01*(????????)			 op_lpfnHook	 DWORD		 ?
1  4779	00000048  01*(????????)			 op_lpTemplateName	 LPCSTR		 ?
1  4780	0000004C			 OPENFILENAMEA		 ENDS
1  4781					 LPOPENFILENAME		 TYPEDEF PTR OPENFILENAMEA
1  4782
1  4783					 GetOpenFileNameA	 PROCDESC	 WINAPI	 :LPOPENFILENAME
1  4784		  = GetOpenFileNameA	 GetOpenFileName TEXTEQU <GetOpenFileNameA>
1  4785					 GetSaveFileNameA	 PROCDESC	 WINAPI	 :LPOPENFILENAME
1  4786		  = GetSaveFileNameA	 GetSaveFileName TEXTEQU <GetSaveFileNameA>
1  4787
1  4788		  =0001			 OFN_READONLY		 EQU	 00000001h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 85
pmScript.ASM



1  4789		  =0002			 OFN_OVERWRITEPROMPT	 EQU	 00000002h
1  4790		  =0004			 OFN_HIDEREADONLY	 EQU	 00000004h
1  4791		  =0008			 OFN_NOCHANGEDIR	 EQU	 00000008h
1  4792		  =0010			 OFN_SHOWHELP		 EQU	 00000010h
1  4793		  =0020			 OFN_ENABLEHOOK		 EQU	 00000020h
1  4794		  =0040			 OFN_ENABLETEMPLATE	 EQU	 00000040h
1  4795		  =0080			 OFN_ENABLETEMPLATEHANDLE EQU	 00000080h
1  4796		  =0100			 OFN_NOVALIDATE		 EQU	 00000100h
1  4797		  =0200			 OFN_ALLOWMULTISELECT	 EQU	 00000200h
1  4798		  =0400			 OFN_EXTENSIONDIFFERENT	 EQU	 00000400h
1  4799		  =0800			 OFN_PATHMUSTEXIST	 EQU	 00000800h
1  4800		  =1000			 OFN_FILEMUSTEXIST	 EQU	 00001000h
1  4801		  =2000			 OFN_CREATEPROMPT	 EQU	 00002000h
1  4802		  =4000			 OFN_SHAREAWARE		 EQU	 00004000h
1  4803		  =8000			 OFN_NOREADONLYRETURN	 EQU	 00008000h
1  4804		  =00010000		 OFN_NOTESTFILECREATE	 EQU	 00010000h
1  4805		  =00020000		 OFN_NONETWORKBUTTON	 EQU	 00020000h
1  4806		  =00040000		 OFN_NOLONGNAMES	 EQU	 00040000h
1  4807		  =00080000		 OFN_EXPLORER		 EQU	 00080000h
1  4808		  =00100000		 OFN_NODEREFERENCELINKS	 EQU	 00100000h
1  4809		  =00200000		 OFN_LONGNAMES		 EQU	 00200000h
1  4810
1  4811	00000000			 PRINTDLGA		 STRUCT
1  4812	00000000  01*(????????)			 pr_lStructSize	 DWORD	 ?
1  4813	00000004  01*(????????)			 pr_hwndOwner	 HWND	 ?
1  4814	00000008  01*(????????)			 pr_hDevMode	 HGLOBAL ?
1  4815	0000000C  01*(????????)			 pr_hDevNames	 HGLOBAL ?
1  4816	00000010  01*(????????)			 pr_hDC		 HDC	 ?
1  4817	00000014  01*(????????)			 pr_Flags		 DWORD	 ?
1  4818	00000018  01*(????)			 pr_nFromPage	 WORD	 ?
1  4819	0000001A  01*(????)			 pr_nToPage		 WORD	 ?
1  4820	0000001C  01*(????)			 pr_nMinPage	 WORD	 ?
1  4821	0000001E  01*(????)			 pr_nMaxPage	 WORD	 ?
1  4822	00000020  01*(????)			 pr_nCopies		 WORD	 ?
1  4823	00000022  01*(????????)			 pr_hInstance	 HINSTANCE ?
1  4824	00000026  01*(????????)			 pr_lCustData	 DWORD	 ?
1  4825	0000002A  01*(????????)			 pr_lpfnPrintHook	 DWORD	 ?
1  4826	0000002E  01*(????????)			 pr_lpfnSetupHook	 DWORD	 ?
1  4827	00000032  01*(????????)			 pr_lpPrintTemplateName	LPCSTR ?
1  4828	00000036  01*(????????)			 pr_lpSetupTemplateName	LPCSTR ?
1  4829	0000003A  01*(????????)			 pr_hPrintTemplate	 HGLOBAL ?
1  4830	0000003E  01*(????????)			 pr_hSetupTemplate	 HGLOBAL ?
1  4831	00000042			 PRINTDLGA		 ENDS
1  4832					 LPPRINTDLG		 TYPEDEF PTR PRINTDLGA
1  4833
1  4834					 PrintDlg		 PROCDESC	 WINAPI	 :LPPRINTDLG
1  4835
1  4836		  =0000			 PD_ALLPAGES		 EQU	 00000h
1  4837		  =0001			 PD_SELECTION		 EQU	 00001h
1  4838		  =0002			 PD_PAGENUMS		 EQU	 00002h
1  4839		  =0004			 PD_NOSELECTION		 EQU	 00004h
1  4840		  =0008			 PD_NOPAGENUMS		 EQU	 00008h
1  4841		  =0010			 PD_COLLATE		 EQU	 00010h
1  4842		  =0020			 PD_PRINTTOFILE		 EQU	 00020h
1  4843		  =0040			 PD_PRINTSETUP		 EQU	 00040h
1  4844		  =0080			 PD_NOWARNING		 EQU	 00080h
1  4845		  =0100			 PD_RETURNDC		 EQU	 00100h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 86
pmScript.ASM



1  4846		  =0200			 PD_RETURNIC		 EQU	 00200h
1  4847		  =0400			 PD_RETURNDEFAULT	 EQU	 00400h
1  4848		  =0800			 PD_SHOWHELP		 EQU	 00800h
1  4849		  =1000			 PD_ENABLEPRINTHOOK	 EQU	 01000h
1  4850		  =2000			 PD_ENABLESETUPHOOK	 EQU	 02000h
1  4851		  =4000			 PD_ENABLEPRINTTEMPLATE	 EQU	 04000h
1  4852		  =8000			 PD_ENABLESETUPTEMPLATE	 EQU	 08000h
1  4853		  =00010000		 PD_ENABLEPRINTTEMPLATEHANDLE	 EQU	 0010000h
1  4854		  =00020000		 PD_ENABLESETUPTEMPLATEHANDLE	 EQU	 0020000h
1  4855		  =00040000		 PD_USEDEVMODECOPIES		 EQU	 0040000h
1  4856		  =00040000		 PD_USEDEVMODECOPIESANDCOLLATE	 EQU	 0040000h
1  4857		  =00080000		 PD_DISABLEPRINTTOFILE		 EQU	 0080000h
1  4858		  =00100000		 PD_HIDEPRINTTOFILE		 EQU	 0100000h
1  4859		  =00200000		 PD_NONETWORKBUTTON		 EQU	 0200000h
1  4860
1  4861					 CommDlgExtendedError	 PROCDESC	 WINAPI
1  4862
1  4863	00000000			 PAGESETUPDLGA		 STRUCT
1  4864	00000000  01*(????????)			 pa_lStructSize	 DWORD	 ?
1  4865	00000004  01*(????????)			 pa_hwndOwner	 HWND	 ?
1  4866	00000008  01*(????????)			 pa_hDevMode	 HGLOBAL ?
1  4867	0000000C  01*(????????)			 pa_hDevNames	 HGLOBAL ?
1  4868	00000010  01*(????????)			 pa_Flags		 DWORD	 ?
1  4869	00000014  01*(00000000	      +		 pa_ptPaperSize	 POINT	 <>
   4870		  00000000)
1  4871	0000001C  01*(00000000	      +		 pa_rtMinMargin	 RECT	 <>
   4872		  00000000 00000000   +
   4873		  00000000)
1  4874	0000002C  01*(00000000	      +		 pa_rtMargin	 RECT	 <>
   4875		  00000000 00000000   +
   4876		  00000000)
1  4877	0000003C  01*(????????)			 pa_hInstance	 HINSTANCE ?
1  4878	00000040  01*(????????)			 pa_lCustData	 LPARAM	 ?
1  4879	00000044  01*(????????)			 pa_lpfnPageSetupHook	 DWORD	 ?
1  4880	00000048  01*(????????)			 pa_lpfnPagePaintHook	 DWORD	 ?
1  4881	0000004C  01*(????????)			 pa_lpPageSetupTemplateName LPCSTR	 ?
1  4882	00000050  01*(????????)			 pa_hPageSetupTemplate	 HGLOBAL ?
1  4883	00000054			 PAGESETUPDLGA		 ENDS
1  4884					 LPPAGESETUPDLG		 TYPEDEF PTR PAGESETUPDLGA
1  4885
1  4886					 PageSetupDlg		 PROCDESC	 WINAPI	 :LPPAGESETUPDLG
1  4887
1  4888		  =0000			 PSD_DEFAULTMINMARGINS		 EQU	 0000000h
1  4889		  =0001			 PSD_MINMARGINS			 EQU	 0000001h
1  4890		  =0002			 PSD_MARGINS			 EQU	 0000002h
1  4891		  =0004			 PSD_INTHOUSANDTHSOFINCHES	 EQU	 0000004h
1  4892		  =0008			 PSD_INHUNDREDTHSOFMILLIMETERS	 EQU	 0000008h
1  4893		  =0010			 PSD_DISABLEMARGINS		 EQU	 0000010h
1  4894		  =0020			 PSD_DISABLEPRINTER		 EQU	 0000020h
1  4895		  =0080			 PSD_NOWARNING			 EQU	 0000080h
1  4896		  =0100			 PSD_DISABLEORIENTATION		 EQU	 0000100h
1  4897		  =0200			 PSD_DISABLEPAPER		 EQU	 0000200h
1  4898		  =0400			 PSD_RETURNDEFAULT		 EQU	 0000400h
1  4899		  =0800			 PSD_SHOWHELP			 EQU	 0000800h
1  4900		  =2000			 PSD_ENABLEPAGESETUPHOOK	 EQU	 0002000h
1  4901		  =8000			 PSD_ENABLEPAGESETUPTEMPLATE	 EQU	 0008000h
1  4902		  =00020000		 PSD_ENABLEPAGESETUPTEMPLATEHANDLE EQU	 0020000h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 87
pmScript.ASM



1  4903		  =00040000		 PSD_ENABLEPAGEPAINTHOOK	 EQU	 0040000h
1  4904		  =00080000		 PSD_DISABLEPAGEPAINTING	 EQU	 0080000h
1  4905		  =00200000		 PSD_NONETWORKBUTTON		 EQU	 0200000h
1  4906
1  4907
1  4908					 ;*******************************************************************************
1  4909					 ;*	 COMCTL32.LIB	 COMMCTRL.H	 ****************************************
1  4910					 ;*******************************************************************************
1  4911
1  4912					 InitCommonControls	 PROCDESC	 WINAPI
1  4913
1  4914
1  4915					 CreateToolbarEx	 PROCDESC	 WINAPI	 :HWND,	:DWORD,	:UINT, :SDWORD,\
   4916										 :HINSTANCE, :UINT, :LPCTBBUTTON,\
   4917										 :SDWORD, :SDWORD, :SDWORD,\
   4918										 :SDWORD, :SDWORD, :UINT
1  4919		  =0004			 TBSTATE_ENABLED	 EQU	 4h
1  4920		  =0000			 TBSTYLE_BUTTON		 EQU	 0h
1  4921		  =0001			 TBSTYLE_SEP		 EQU	 1h
1  4922		  =0100			 TBSTYLE_TOOLTIPS	 EQU	 0100h
1  4923
1  4924		  =0413			 TB_ADDBITMAP		 EQU	 WM_USER + 13h
1  4925
1  4926
1  4927		  =-0001		 HINST_COMMCTRL		 EQU	 -1h
1  4928		  =0000			 IDB_STD_SMALL_COLOR	 EQU	 00h
1  4929
1  4930		  =0000			 STD_CUT		 EQU	 00h
1  4931		  =0001			 STD_COPY		 EQU	 01h
1  4932		  =0002			 STD_PASTE		 EQU	 02h
1  4933		  =0003			 STD_UNDO		 EQU	 03h
1  4934		  =0004			 STD_REDOW		 EQU	 04h
1  4935		  =0005			 STD_DELETE		 EQU	 05h
1  4936		  =0006			 STD_FILENEW		 EQU	 06h
1  4937		  =0007			 STD_FILEOPEN		 EQU	 07h
1  4938		  =0008			 STD_FILESAVE		 EQU	 08h
1  4939		  =0009			 STD_PRINTPRE		 EQU	 09h
1  4940		  =000A			 STD_PROPERTIES		 EQU	 0Ah
1  4941		  =000B			 STD_HELP		 EQU	 0Bh
1  4942		  =000C			 STD_FIND		 EQU	 0Ch
1  4943		  =000D			 STD_REPLACE		 EQU	 0Dh
1  4944		  =000E			 STD_PRINT		 EQU	 0Eh
1  4945
1  4946		  =-0208		 TTN_FIRST		 EQU	 -520
1  4947		  =-0208		 TTN_NEEDTEXT		 EQU	 TTN_FIRST - 0
1  4948
1  4949	00000000			 TOOLTIPTEXTA		 STRUCT
1  4950	00000000  01*(0C*(??))			 hdr		 NMHDR	 <>
1  4951	0000000C  01*(????????)			 lpszText	 LPSTR	 ?
1  4952	00000010  01*(50*(??))			 szText		 SBYTE	 80 DUP	(?)
1  4953	00000060  01*(????????)			 hinst		 HINSTANCE ?
1  4954	00000064  01*(????????)			 uFlags		 UINT	 ?
1  4955	00000068			 TOOLTIPTEXTA		 ENDS
1  4956					 LPTOOLTIPTEXT		 TYPEDEF PTR TOOLTIPTEXTA
1  4957		  = TOOLTIPTEXTA	 TOOLTIPTEXT		 TEXTEQU <TOOLTIPTEXTA>
1  4958
1  4959					 CreateStatusWindow	 PROCDESC	 WINAPI	 :LONG,	:LPCSTR, :HWND,	:UINT
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 88
pmScript.ASM



1  4960
1  4961		  =0401			 SB_SETTEXTA		 EQU	 (WM_USER+1)
1  4962					 SB_SETTEXT		 EQU	 SB_SETTEXTA
1  4963		  =0409			 SB_SIMPLE		 EQU	 (WM_USER+9)
1  4964		  =0100			 SBT_NOBORDERS		 EQU	 0100h
1  4965		  =0200			 SBT_POPOUT		 EQU	 0200h
1  4966
1  4967		  =0400			 TBM_GETPOS		 EQU	 (WM_USER)
1  4968		  =0405			 TBM_SETPOS		 EQU	 (WM_USER+5)
1  4969		  =0406			 TBM_SETRANGE		 EQU	 (WM_USER+6)
1  4970		  =0414			 TBM_SETTICFREQ		 EQU	 (WM_USER+20)
1  4971		  =0415			 TBM_SETPAGESIZE	 EQU	 (WM_USER+21)
1  4972		  =0000			 TB_LINEUP		 EQU	 00h
1  4973		  =0001			 TB_LINEDOWN		 EQU	 01h
1  4974		  =0002			 TB_PAGEUP		 EQU	 02h
1  4975		  =0003			 TB_PAGEDOWN		 EQU	 03h
1  4976		  =0004			 TB_THUMBPOSITION	 EQU	 04h
1  4977		  =0005			 TB_THUMBTRACK		 EQU	 05h
1  4978		  =0006			 TB_TOP			 EQU	 06h
1  4979		  =0007			 TB_BOTTOM		 EQU	 07h
1  4980		  =0008			 TB_ENDTRACK		 EQU	 08h
1  4981
1  4982		  =0465			 UDM_SETRANGE		 EQU	 (WM_USER+101)
1  4983		  =0467			 UDM_SETPOS		 EQU	 (WM_USER+103)
1  4984		  =0468			 UDM_GETPOS		 EQU	 (WM_USER+104)
1  4985
1  4986
1  4987
1  4988					 ;............................
1  4989					 ;Added	21 Feb 97
1  4990
1  4991		  =7F00			 IDI_APPLICATION EQU	 32512
1  4992		  =7F01			 IDI_HAND EQU	    32513
1  4993		  =7F02			 IDI_QUESTION EQU	    32514
1  4994		  =7F03			 IDI_EXCLAMATION EQU   32515
1  4995		  =7F04			 IDI_ASTERISK EQU	    32516
1  4996
1  4997		  =0010			 MB_ICONHAND EQU	     00000010h
1  4998		  =0020			 MB_ICONQUESTION EQU	    00000020h
1  4999		  =0030			 MB_ICONEXCLAMATION EQU	    00000030h
1  5000		  =0040			 MB_ICONASTERISK EQU	    00000040h
1  5001
1  5002					 ;taken	from WINGDI.H:
1  5003		  =000A			 OEM_FIXED_FONT	    EQU	10
1  5004		  =000B			 ANSI_FIXED_FONT   EQU 11
1  5005		  =000C			 ANSI_VAR_FONT	   EQU 12
1  5006		  =000D			 SYSTEM_FONT	   EQU 13
1  5007		  =000E			 DEVICE_DEFAULT_FONT EQU 14
1  5008		  =000F			 DEFAULT_PALETTE   EQU 15
1  5009		  =0010			 SYSTEM_FIXED_FONT   EQU  16
1  5010
1  5011
1  5012					 MessageBeep PROCDESC WINAPI :DWORD
1  5013
1  5014	00000000			 MINMAXINFO struc
1  5015	00000000  01*(????????)		   res_x	       dd ?
1  5016	00000004  01*(????????)		   res_y	       dd ?
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 89
pmScript.ASM



1  5017	00000008  01*(????????)		   maxsize_x	       dd ?
1  5018	0000000C  01*(????????)		   maxsize_y	       dd ?
1  5019	00000010  01*(????????)		   maxposition_x       dd ?
1  5020	00000014  01*(????????)		   maxposition_y       dd ?
1  5021	00000018  01*(????????)		   mintrackposition_x  dd ?
1  5022	0000001C  01*(????????)		   mintrackposition_y  dd ?
1  5023	00000020  01*(????????)		   maxtrackposition_x  dd ?
1  5024	00000024  01*(????????)		   maxtrackposition_y  dd ?
1  5025	00000028			 MINMAXINFO ends
1  5026
1  5027
1  5028		  =0006			 RT_STRING		 EQU	 6
1  5029		  =0443			 EM_SETBKGNDCOLOR	 EQU	 WM_USER + 67
1  5030		  =044D			 EM_SETOPTIONS		 EQU	 WM_USER + 77
1  5031		  =044E			 EM_GETOPTIONS		 EQU	 WM_USER + 78
1  5032
1  5033		  =0459			 EM_SETTEXTMODE		 EQU	 WM_USER + 89
1  5034		  =045A			 EM_GETTEXTMODE		 EQU	 WM_USER + 90
1  5035		  =0001			 TM_PLAINTEXT		 EQU	 1
1  5036		  =0002			 TM_RICHTEXT		 EQU	 2
1  5037
1  5038		  =045D			 EM_SETPALETTE		 EQU	 WM_USER + 93
1  5039		  =2000			 ES_DISABLENOSCROLL	 EQU	 2000h
1  5040
1  5041					 GetTickCount		 PROCDESC	 WINAPI
1  5042
1  5043		  =0002			 RT_BITMAP		 EQU	 2
1  5044		  =0172			 STM_SETIMAGE		 EQU	 0172h
1  5045		  =0000			 STN_CLICKED		 EQU	 0
1  5046		  =0001			 STN_DBLCLK		 EQU	 1
1  5047		  =0002			 STN_ENABLE		 EQU	 2
1  5048		  =0003			 STN_DISABLE		 EQU	 3
1  5049
1  5050
1  5051					 GetProcAddress		 PROCDESC	 WINAPI
1  5052
1  5053					 FindFirstFileA	PROCDESC WINAPI	:DWORD
1  5054		  = FindFirstFileA	 FindFirstFile textequ <FindFirstFileA>
1  5055					 FindNextFileA PROCDESC	WINAPI :DWORD
1  5056		  = FindNextFileA	 FindNextFile textequ <FindNextFileA>
1  5057
1  5058					 GetCurrentDirectoryA PROCDESC WINAPI :DWORD
1  5059		  =		      +	 GetCurrentDirectory textequ <GetCurrentDirectoryA>
   5060		  GetCurrentDirectoryA
1  5061					 SetCurrentDirectoryA PROCDESC WINAPI :DWORD
1  5062		  =		      +	 SetCurrentDirectory textequ <SetCurrentDirectoryA>
   5063		  SetCurrentDirectoryA
1  5064
1  5065	00000000			 COMBOBOXINFO		 STRUCT
1  5066	00000000  01*(????????)		  cxSize	 DWORD	 ?
1  5067	00000004  01*(10*(??))		  rcItem	 RECT	 ?
1  5068	00000014  01*(10*(??))		  rcButton	 RECT	 ?
1  5069	00000024  01*(????????)		  stateButton	 DWORD	 ?
1  5070	00000028  01*(????????)		  wndCombo	 HWND	 ?
1  5071	0000002C  01*(????????)		  wndItem	 HWND	 ?
1  5072	00000030  01*(????????)		  wndList	 HWND	 ?
1  5073	00000034			 COMBOBOXINFO		 ENDS
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 90
pmScript.ASM



1  5074					 GetComboBoxInfo PROCDESC WINAPI :DWORD
1  5075
1  5076					 FILE_MAP_COPY		 EQU	 SECTION_QUERY
1  5077					 FILE_MAP_WRITE		 EQU	 SECTION_MAP_WRITE
1  5078					 FILE_MAP_READ		 EQU	 SECTION_MAP_READ
1  5079					 FILE_MAP_ALL_ACCESS	 EQU	 SECTION_ALL_ACCESS
1  5080					 UnmapViewOfFile PROCDESC WINAPI :DWORD
1  5081					 MapViewOfFile PROCDESC	WINAPI :DWORD
1  5082					 CreateFileMappingA PROCDESC WINAPI :DWORD
1  5083		  = CreateFileMappingA	 CreateFileMapping textequ <CreateFileMappingA>
1  5084
1  5085		  =0460			 EM_SHOWSCROLLBAR	 EQU	 (WM_USER + 96)
1  5086		  =0461			 EM_SETTEXTEX		 EQU	 (WM_USER + 97)
1  5087		  =0464			 EM_SETPUNCTUATION	 EQU	 (WM_USER + 100)
1  5088		  =0465			 EM_GETPUNCTUATION	 EQU	 (WM_USER + 101)
1  5089		  =0466			 EM_SETWORDWRAPMODE	 EQU	 (WM_USER + 102)
1  5090		  =0467			 EM_GETWORDWRAPMODE	 EQU	 (WM_USER + 103)
1  5091
1  5092					 TrackPopupMenuEx PROCDESC WINAPI :DWORD
1  5093					 GetSubMenu PROCDESC WINAPI :DWORD
1  5094					 SetActiveWindow PROCDESC WINAPI :DWORD
1  5095
1  5096		  =0000			 TPM_LEFTALIGN		 equ	 000h
1  5097		  =0004			 TPM_CENTERALIGN	 equ	 004h
1  5098		  =0008			 TPM_RIGHTALIGN		 equ	 008h
1  5099		  =0000			 TPM_TOPALIGN		 equ	 000h
1  5100		  =0010			 TPM_VCENTERALIGN	 equ	 010h
1  5101		  =0020			 TPM_BOTTOMALIGN	 equ	 020h
1  5102		  =0100			 TPM_RETURNCMD		 equ	 100h
1  5103
1  5104		  =0800			 TBSTYLE_FLAT		 equ	 800h
1  5105
1  5106					 WritePrivateProfileStringA PROCDESC WINAPI :DWORD
1  5107		  =		      +	 WritePrivateProfileString textequ <WritePrivateProfileStringA>
   5108		  WritePrivateProfileSt
   5109		  ringA
1  5110					 GetPrivateProfileStringA PROCDESC WINAPI :DWORD
1  5111		  =		      +	 GetPrivateProfileString textequ <GetPrivateProfileStringA>
   5112		  GetPrivateProfileStri
   5113		  ngA
1  5114
1  5115					 CreateCompatibleDC PROCDESC WINAPI :DWORD
1  5116
1  5117		  =0000			 LR_DEFAULTCOLOR     = 0000h
1  5118		  =0001			 LR_MONOCHROME	     = 0001h
1  5119		  =0002			 LR_COLOR	     = 0002h
1  5120		  =0004			 LR_COPYRETURNORG    = 0004h
1  5121		  =0008			 LR_COPYDELETEORG    = 0008h
1  5122		  =0010			 LR_LOADFROMFILE     = 0010h
1  5123		  =0020			 LR_LOADTRANSPARENT  = 0020h
1  5124		  =0040			 LR_DEFAULTSIZE	     = 0040h
1  5125		  =0080			 LR_VGACOLOR	     = 0080h
1  5126		  =1000			 LR_LOADMAP3DCOLORS  = 1000h
1  5127		  =2000			 LR_CREATEDIBSECTION = 2000h
1  5128		  =4000			 LR_COPYFROMRESOURCE = 4000h
1  5129		  =8000			 LR_SHARED	     = 8000h
1  5130
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 91
pmScript.ASM



1  5131					 GetMenu PROCDESC WINAPI :DWORD
1  5132					 SetMenuItemBitmaps PROCDESC WINAPI :DWORD
1  5133		  =0000			 ICON_SMALL	 =	 0
1  5134		  =0001			 ICON_BIG	 =	 1
1  5135					 GetFileInformationByHandle PROCDESC WINAPI :DWORD
1  5136
1  5137					 extrn	 ExitWindowsEx:PROC
1  5138
1  5139		  =0000			 EWX_LOGOFF	 =	 0
1  5140		  =0001			 EWX_SHUTDOWN	 =	 1
1  5141		  =0002			 EWX_REBOOT	 =	 2
1  5142		  =0004			 EWX_FORCE	 =	 4
1  5143		  =0008			 EWX_POWEROFF	 =	 8
1  5144
1  5145		  =0001			 WA_ACTIVE	 =	 1
1  5146
1  5147					 BringWindowToTop PROCDESC WINAPI :DWORD
1  5148					 GetActiveWindow PROCDESC WINAPI :DWORD
1  5149
1  5150		  =0004			 HORZSIZE			      equ 4
1  5151		  =0006			 VERTSIZE			      equ 6
1  5152		  =0008			 HORZRES			      equ 8
1  5153		  =000A			 VERTRES			      equ 10
1  5154		  =000C			 BITSPIXEL			      equ 12
1  5155		  =000E			 PLANES				      equ 14
1  5156		  =0001			 DCX_WINDOW	 equ	 1
1  5157					 GetDCEx PROCDESC WINAPI :DWORD
1  5158					 GetLocalTime PROCDESC WINAPI :DWORD
1  5159
1  5160					 lstrcmpA	 PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  5161		  = lstrcmpA		 lstrcmp	 TEXTEQU <lstrcmpA>
1  5162					 lstrcmpiA	 PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  5163		  = lstrcmpiA		 lstrcmpi	 TEXTEQU <lstrcmpiA>
1  5164					 SetFilePointer	 PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  5165
1  5166					 CopyFileA	 PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  5167		  = CopyFileA		 CopyFile	 TEXTEQU <CopyFileA>
1  5168
1  5169					 DeleteFileA	   PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  5170		  = DeleteFileA		 DeleteFile	   TEXTEQU <DeleteFileA>
1  5171					 MoveFileA	   PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  5172		  = MoveFileA		 MoveFile	   TEXTEQU <MoveFileA>
1  5173
1  5174					 GetShortPathNameA	 PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  5175		  = GetShortPathNameA	 GetShortPathName	 TEXTEQU <GetShortPathNameA>
1  5176
1  5177					 GetUserNameA	    PROCDESC	WINAPI	:LPCSTR	,:LPCSTR
1  5178		  = GetUserNameA	 GetUserName	    TEXTEQU <GetUserNameA>
1  5179
1  5180					 WaitForSingleObject	   PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  5181					 Sleep	     PROCDESC	 WINAPI	 :DWORD
1  5182					 WindowFromPoint       PROCDESC	   WINAPI  :DWORD
1  5183					 GetWindow	 PROCDESC    WINAPI  :DWORD
1  5184
1  5185					 ValidateRect	       PROCDESC	       WINAPI  :HWND, :LPRECT, :UINT
1  5186
1  5187					 GetBitmapDimensionEx	 PROCDESC	 WINAPI
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 92
pmScript.ASM



1  5188					 TransparentBlt	 PROCDESC	 WINAPI
1  5189					 GetObjectA		 PROCDESC	 WINAPI
1  5190		  = GetObjectA		 GetObject		 TEXTEQU <GetObjectA>
1  5191					 SetPixel		 PROCDESC	 WINAPI	:DWORD
1  5192					 GetPixel		 PROCDESC	 WINAPI	:DWORD
1  5193					 CreateThread		 PROCDESC	 WINAPI	:DWORD
1  5194
1  5195					 GetDIBColorTable	 PROCDESC	 WINAPI	:DWORD
1  5196					 SetDIBColorTable	 PROCDESC	 WINAPI	:DWORD
1  5197					 GetCurrentObject	 PROCDESC	 WINAPI	:DWORD
1  5198
1  5199		  =0001			 OBJ_PEN	     EQU	 1
1  5200		  =0002			 OBJ_BRUSH	     EQU	 2
1  5201		  =0003			 OBJ_DC		     EQU	 3
1  5202		  =0004			 OBJ_METADC	     EQU	 4
1  5203		  =0005			 OBJ_PAL	     EQU	 5
1  5204		  =0006			 OBJ_FONT	     EQU	 6
1  5205		  =0007			 OBJ_BITMAP	     EQU	 7
1  5206		  =0008			 OBJ_REGION	     EQU	 8
1  5207		  =0009			 OBJ_METAFILE	     EQU	 9
1  5208		  =000A			 OBJ_MEMDC	     EQU	 10
1  5209		  =000B			 OBJ_EXTPEN	     EQU	 11
1  5210		  =000C			 OBJ_ENHMETADC	     EQU	 12
1  5211		  =000D			 OBJ_ENHMETAFILE     EQU	 13
1  5212		  =000E			 OBJ_COLORSPACE	     EQU	 14
1  5213
1  5214					 TransparentBlt	 PROCDESC	 WINAPI	:DWORD
1  5215					 TerminateProcess	 PROCDESC	 WINAPI
1  5216
1  5217
1  5218	00000000			 BLENDFUNCTION		 struct
1  5219	00000000  01*(??)			 bf_blendOp	 BYTE	 ?
1  5220	00000001  01*(??)			 bf_blenFlags	 BYTE	 ?
1  5221	00000002  01*(??)			 bf_srcAlpha	 BYTE	 ?
1  5222	00000003  01*(??)			 bf_Format	 BYTE	 ?
1  5223	00000004			 BLENDFUNCTION		 ends
1  5224		  =0004			 BLENDFUNCTION_	 equ	 4
1  5225
1  5226
1  5227		  =0000			 AC_SRC_OVER		 equ	 0
1  5228		  =0001			 AC_SRC_ALPHA		 equ	 1
1  5229
1  5230					 AlphaBlend		 PROCDESC	 WINAPI	:DWORD
1  5231
1  5232	00000000			 BITMAPINFO		 struct
1  5233	00000000  01*(28*(??))			 bmiHeader	 BITMAPINFOHEADER	 ?
1  5234	00000028  01*(04*(??))			 bmiColors	 RGBQUAD	 ?
1  5235	0000002C			 BITMAPINFO		 ends
1  5236		  =002C			 BITMAPINFO_		 equ	 BITMAPINFOHEADER_ + RGBQUAD_
1  5237
1  5238					 CreateDIBSection	 PROCDESC	 WINAPI
1  5239					 SetDIBits		 PROCDESC	 WINAPI
1  5240					 GetDIBits		 PROCDESC	 WINAPI
1  5241
1  5242		  =0078			 SHADEBLENDCAPS	 equ	 120
1  5243					 GetDeviceCaps		 PROCDESC	 WINAPI
1  5244
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 93
pmScript.ASM



1  5245		  =00080000		 WS_EX_LAYERED		 equ	 00080000h
1  5246					 SetLayeredWindowAttributes	 PROCDESC	 WINAPI
1  5247					 CreateBitmap		 PROCDESC	 WINAPI
1  5248
1  5249					 SizeofResource	 PROCDESC	 WINAPI	:DWORD
1  5250					 LoadResource		 PROCDESC	 WINAPI	:DWORD
1  5251					 LockResource		 PROCDESC	 WINAPI	:DWORD
1  5252
1  5253		  =0001			 RT_CURSOR		 equ	 1
1  5254		  =0002			 RT_BITMAP		 equ	 2
1  5255		  =0003			 RT_ICON	 equ	 3
1  5256		  =0004			 RT_MENU	 equ	 4
1  5257		  =0005			 RT_DIALOG		 equ	 5
1  5258		  =0006			 RT_STRING		 equ	 6
1  5259		  =0007			 RT_FONTDIR		 equ	 7
1  5260		  =0008			 RT_FONT	 equ	 8
1  5261		  =0009			 RT_ACCELERATOR	 equ	 9
1  5262		  =000A			 RT_RCDATA		 equ	 10
1  5263
1  5264					 ShowCursor		 PROCDESC	 WINAPI	:DWORD
   5265					 INCLUDELIB	 ..\Win32.LIB
   5266
   5267					 public	 LoadScript
   5268					 public	 LoadScriptFromFile
   5269					 public	 CreateVirtualMachine
   5270					 public	 RunScript
   5271					 public	 TakeStep
   5272					 public	ResetVirtualMachine
   5273
   5274	00000000				 .data?
   5275
   5276	00000000  ????????		 randomSeed	 dd	 ?
   5277
   5278	00000004  ????????		 fileHnd dd	 ?
   5279	00000008  ????????		 mappingHnd	 dd	 ?
   5280	0000000C  ????????		 viewHnd dd	 ?
   5281	00000010  ????????		 lastHnd dd	 ?
   5282	00000014  ????????		 machineHnd	 dd	 ?
   5283
   5284	00000018				 .code
   5285
   5286	00000000			 DLLMain	 proc	 STDCALL, hInst:DWORD, hReason:DWORD, hReserved:DWORD
1  5287	00000000  C8 0000 00			 ENTERD	 00000h,0
1  5288	00000004  E8 00000000e			 call	 GetTickCount
   5289	00000009  C1 C0	10			 rol	 eax, 10h
   5290	0000000C  A3 00000000r			 mov	 randomSeed, eax
   5291
   5292	00000011  B8 00000001			 mov	 eax, 1			 ;Return True
1  5293	00000016  C9				 LEAVED
1  5294	00000017  C2 000C			 RET	 0000Ch
   5295	0000001A			 DLLMain	 endp
   5296
   5297	0000001A			 LoadScript			 proc	 STDCALL, ptrPortableBinary:DWORD,		    +
   5298					 lenPortableBinary:DWORD, ptrAPICallback:DWORD
1  5299	0000001A  C8 0000 00			 ENTERD	 00000h,0
1  5300	0000001E  8B 75	08			 mov	 esi, ptrPortableBinary
   5301	00000021  8B 06				 mov	 eax, dword ptr	[esi]
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 94
pmScript.ASM



   5302						 .IF eax == 00014D50h		 ; 'PM'	and file version 1.0
1  5303	00000023  3D 00014D50			 cmp	 eax,00014D50H
1  5304	00000028  75 17				 jnz	 @C0001
   5305
   5306	0000002A  FF 75	10				 push	 ptrAPICallback
   5307	0000002D  FF 76	0C				 push	 dword ptr [esi	+ 0Ch]	 ; Start IP
   5308	00000030  FF 76	10				 push	 dword ptr [esi	+ 10h]	 ; Stack Length
   5309	00000033  FF 76	08				 push	 dword ptr [esi	+ 08h]	 ; Code	Length
   5310	00000036  03 76	04				 add	 esi, [esi + 04h]		 ; ESI == Code Start
   5311	00000039  56					 push	 esi
   5312	0000003A  E8 000000D6				 call	 CreateVirtualMachine		 ; EAX will return a machine handle
   5313
   5314						 .ELSE
1  5315	0000003F  EB 02				 jmp	 @C0000
1  5316	00000041			 @C0001:
   5317	00000041  33 C0					 xor	 eax, eax
   5318						 .ENDIF
1  5319	00000043			 @C0000:
1  5320	00000043  C9				 LEAVED
1  5321	00000044  C2 000C			 RET	 0000Ch
   5322	00000047			 LoadScript			 endp
   5323
   5324	00000047			 LoadScriptFromFile		 proc	 STDCALL, ptrFilename:DWORD, ptrAPICallback:DWORD
1  5325	00000047  C8 0000 00			 ENTERD	 00000h,0
1  5326	0000004B  C7 05	00000010r     +		 mov	 lastHnd, 0
   5327		  00000000
   5328
   5329	00000055  6A 00				 push	 0
   5330	00000057  68 00000080			 push	 FILE_ATTRIBUTE_NORMAL
   5331	0000005C  6A 03				 push	 OPEN_EXISTING
   5332	0000005E  6A 00				 push	 0
   5333	00000060  6A 03				 push	 FILE_SHARE_READWRITE
   5334	00000062  68 C0000000			 push	 GENERIC_READWRITE
   5335	00000067  FF 75	08			 push	 ptrFilename
   5336	0000006A  E8 00000000e			 call	 CreateFile
   5337	0000006F  A3 00000004r			 mov	 fileHnd, eax
   5338	00000074  40				 inc	 eax
   5339	00000075  0F 84	00000094		 jz	 loadscriptfile_failed
   5340
   5341	0000007B  6A 00				 push	 0
   5342	0000007D  6A 00				 push	 0
   5343	0000007F  6A 00				 push	 0
   5344	00000081  6A 02				 push	 PAGE_READONLY
   5345	00000083  6A 00				 push	 0
   5346	00000085  FF 35	00000004r		 push	 fileHnd
   5347	0000008B  E8 00000000e			 call	 CreateFileMapping
   5348	00000090  A3 00000008r			 mov	 mappingHnd, eax
   5349	00000095  0B C0				 or	 eax, eax
   5350	00000097  74 6B				 jz	 loadscriptfile_failedclosefile
   5351
   5352	00000099  6A 00				 push	 0
   5353	0000009B  6A 00				 push	 0
   5354	0000009D  6A 00				 push	 0
   5355	0000009F  6A 04				 push	 FILE_MAP_READ
   5356	000000A1  50				 push	 eax
   5357	000000A2  E8 00000000e			 call	 MapViewOfFile
   5358	000000A7  A3 0000000Cr			 mov	 viewHnd, eax
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 95
pmScript.ASM



   5359	000000AC  0B C0				 or	 eax, eax
   5360	000000AE  74 49				 jz	 loadscriptfile_failedclosemap
   5361
   5362	000000B0  6A 00				 push	 0
   5363	000000B2  FF 35	00000004r		 push	 fileHnd
   5364	000000B8  E8 00000000e			 call	 GetFileSize
   5365
   5366	000000BD  FF 75	0C			 push	 ptrAPICallback
   5367	000000C0  50				 push	 eax
   5368	000000C1  FF 35	0000000Cr		 push	 viewHnd
   5369	000000C7  E8 FFFFFF4E			 call	 LoadScript
   5370	000000CC  A3 00000010r			 mov	 lastHnd, eax
   5371
   5372	000000D1  FF 35	0000000Cr		 push	 viewHnd
   5373	000000D7  E8 00000000e			 call	 UnmapViewOfFile
   5374	000000DC  FF 35	00000008r		 push	 mappingHnd
   5375	000000E2  E8 00000000e			 call	 CloseHandle
   5376	000000E7  FF 35	00000004r		 push	 fileHnd
   5377	000000ED  E8 00000000e			 call	 CloseHandle
   5378
   5379	000000F2  A1 00000010r			 mov	 eax, lastHnd
   5380	000000F7  EB 18				 jmp	 loadscriptfile_leave
   5381
   5382	000000F9			 loadscriptfile_failedclosemap:
   5383	000000F9  FF 35	00000008r		 push	 mappingHnd
   5384	000000FF  E8 00000000e			 call	 CloseHandle
   5385	00000104			 loadscriptfile_failedclosefile:
   5386	00000104  FF 35	00000004r		 push	 fileHnd
   5387	0000010A  E8 00000000e			 call	 CloseHandle
   5388	0000010F			 loadscriptfile_failed:
   5389	0000010F  33 C0				 xor	 eax, eax
   5390	00000111			 loadscriptfile_leave:
1  5391	00000111  C9				 LEAVED
1  5392	00000112  C2 0008			 RET	 00008h
   5393	00000115			 LoadScriptFromFile		 endp
   5394
   5395	00000115			 CreateVirtualMachine		 proc	 STDCALL, ptrCodeBlock:DWORD, lenCodeBlock:DWORD,   +
   5396					 lenStack:DWORD, intStartIP:DWORD, ptrAPICallback:DWORD
   5397
1  5398	00000115  C8 0000 00			 ENTERD	 00000h,0
1  5399	00000119  68 0000023D			 push	 size virtualmachine
   5400	0000011E  E8 000000F2			 call	 AllocFunc
   5401	00000123  A3 00000014r			 mov	 machineHnd, eax
   5402	00000128  8B F0				 mov	 esi, eax
   5403
   5404	0000012A  8B 45	0C			 mov	 eax, lenCodeBlock
   5405	0000012D  89 46	29			 mov	 [esi].code_len, eax
   5406	00000130  50				 push	 eax
   5407	00000131  FF 75	08			 push	 ptrCodeBlock
   5408	00000134  E8 00000126			 call	 CloneMemory
   5409	00000139  89 46	25			 mov	 [esi].code_ptr, eax
   5410
   5411	0000013C  8B 45	10			 mov	 eax, lenStack
   5412	0000013F  C1 E0	02			 shl	 eax, 2
   5413	00000142  89 46	31			 mov	 [esi].stack_len, eax
   5414	00000145  50				 push	 eax
   5415	00000146  E8 000000CA			 call	 AllocFunc
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 96
pmScript.ASM



   5416	0000014B  89 46	2D			 mov	 [esi].stack_ptr, eax
   5417
   5418	0000014E  8B 45	14			 mov	 eax, intStartIP
   5419	00000151  89 46	35			 mov	 [esi].init_ip,	eax
   5420	00000154  8B 45	18			 mov	 eax, ptrAPICallback
   5421	00000157  89 46	39			 mov	 [esi].ptr_api,	eax
   5422
   5423	0000015A  56				 push	 esi
   5424	0000015B  E8 00000050			 call	 ResetVirtualMachine
   5425
   5426	00000160  A1 00000014r			 mov	 eax, machineHnd
1  5427	00000165  C9				 LEAVED
1  5428	00000166  C2 0014			 RET	 00014h
   5429	00000169			 CreateVirtualMachine		 endp
   5430
   5431	00000169			 RunScript			 proc	 STDCALL, hndMachine:DWORD
1  5432	00000169  C8 0000 00			 ENTERD	 00000h,0
1  5433	0000016D  8B 75	08			 mov	 esi, hndMachine
   5434	00000170			 runscript_untilend:
   5435	00000170  56				 push	 esi
   5436	00000171  E8 0000000E			 call	 TakeStep
   5437	00000176  83 F8	01			 cmp	 eax, VMSTATE_RUNNING
   5438	00000179  74 F5				 je	 runscript_untilend
   5439	0000017B  83 F8	00			 cmp	 eax, VMSTATE_READY
   5440	0000017E  74 F0				 je	 runscript_untilend
1  5441	00000180  C9				 LEAVED
1  5442	00000181  C2 0004			 RET	 00004h
   5443	00000184			 RunScript			 endp
   5444
   5445	00000184			 TakeStep			 proc	 STDCALL, hndMachine:DWORD
1  5446	00000184  C8 0000 00			 ENTERD	 00000h,0
1  5447	00000188  56				 push	 esi
   5448	00000189  57				 push	 edi
   5449	0000018A  8B 75	08			 mov	 esi, hndMachine
   5450	0000018D  8B 7E	1C			 mov	 edi, [esi].reg_ip
   5451	00000190  57				 push	 edi
   5452	00000191  56				 push	 esi
   5453	00000192  E8 000001B7			 call	 internals_ReadByte
   5454	00000197  C1 E7	02			 shl	 edi, 2			 ; *4
   5455	0000019A  81 C7	00000055r		 add	 edi, offset OpCodeTable
   5456	000001A0  87 F7				 xchg	 esi, edi
   5457	000001A2  AD				 lodsd
   5458	000001A3  57				 push	 edi
   5459	000001A4  57				 push	 edi
   5460	000001A5  FF D0				 call	 eax
   5461	000001A7  5F				 pop	 edi
   5462	000001A8  8B 07				 mov	 eax, [edi].state
   5463	000001AA  5F				 pop	 edi
   5464	000001AB  5E				 pop	 esi
1  5465	000001AC  C9				 LEAVED
1  5466	000001AD  C2 0004			 RET	 00004h
   5467	000001B0			 TakeStep			 endp
   5468
   5469	000001B0			 ResetVirtualMachine		 proc	 STDCALL, hndMachine:DWORD
1  5470	000001B0  C8 0000 00			 ENTERD	 00000h,0
1  5471	000001B4  56				 push	 esi
   5472	000001B5  8B 75	08			 mov	 esi, hndMachine
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 97
pmScript.ASM



   5473
   5474	000001B8  8B 46	35			 mov	 eax, [esi].init_ip
   5475	000001BB  89 46	1C			 mov	 [esi].reg_ip, eax
   5476
   5477	000001BE  E8 00000000e			 call	 GetTickCount
   5478	000001C3  50				 push	 eax
   5479	000001C4  E8 00000025			 call	 RandomNumber
   5480	000001C9  89 46	10			 mov	 [esi].reg_rnd,	eax
   5481
   5482	000001CC  33 C0				 xor	 eax, eax
   5483	000001CE  89 46	04			 mov	 [esi].reg_acc,	eax
   5484	000001D1  89 46	08			 mov	 [esi].reg_cnt,	eax
   5485	000001D4  89 46	0C			 mov	 [esi].reg_dat,	eax
   5486	000001D7  89 46	14			 mov	 [esi].reg_cps,	eax
   5487	000001DA  89 46	18			 mov	 [esi].reg_cpd,	eax
   5488	000001DD  89 46	20			 mov	 [esi].reg_sp, eax
   5489	000001E0  88 46	24			 mov	 [esi].reg_flags, al
   5490	000001E3  C7 06	00000000		 mov	 [esi].state, VMSTATE_READY
   5491
   5492	000001E9  5E				 pop	 esi
1  5493	000001EA  C9				 LEAVED
1  5494	000001EB  C2 0004			 RET	 00004h
   5495	000001EE			 ResetVirtualMachine		 endp
   5496
   5497	000001EE			 RandomNumber			 proc STDCALL, SeedExtra:DWORD
1  5498	000001EE  C8 0000 00			 ENTERD	 00000h,0
1  5499	000001F2  53				 push	 ebx
   5500	000001F3  E8 00000000e			 call	 GetTickCount
   5501	000001F8  8B 5D	08			 mov	 ebx, SeedExtra
   5502	000001FB  C1 C8	0A			 ror	 eax, 0Ah
   5503	000001FE  33 C3				 xor	 eax, ebx
   5504	00000200  8B 1D	00000000r		 mov	 ebx, randomSeed
   5505	00000206  33 C3				 xor	 eax, ebx
   5506	00000208  C1 C0	03			 rol	 eax, 3h
   5507	0000020B  A3 00000000r			 mov	 randomSeed, eax
   5508	00000210  5B				 pop	 ebx
1  5509	00000211  C9				 LEAVED
1  5510	00000212  C2 0004			 RET	 00004h
   5511	00000215			 RandomNumber			 endp
   5512
   5513					 INCLUDE memory.inc
1  5514	00000215				 .code
1  5515
1  5516	00000215			 AllocFunc	 proc	 STDCALL, nMemSize:DWORD
2  5517	00000215  C8 0000 00			 ENTERD	 00000h,0
2  5518	00000219  8B 45	08			 mov	 eax,nMemSize
1  5519	0000021C  50				 push	 eax
1  5520	0000021D  6A 00				 push	 GMEM_FIXED
1  5521	0000021F  E8 00000000e			 call	 GlobalAlloc
2  5522	00000224  C9				 LEAVED
2  5523	00000225  C2 0004			 RET	 00004h
1  5524	00000228			 AllocFunc	 endp
1  5525
1  5526	00000228			 DeallocFunc	 proc	 STDCALL, pBuffer:DWORD
2  5527	00000228  C8 0000 00			 ENTERD	 00000h,0
2  5528	0000022C  8B 45	08			 mov	 eax,pBuffer
1  5529	0000022F  50				 push	 eax
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 98
pmScript.ASM



1  5530	00000230  E8 00000000e			 call	 GlobalFree
1  5531	00000235  33 C0				 xor	 eax,eax
1  5532	00000237  48				 dec	 eax
2  5533	00000238  C9				 LEAVED
2  5534	00000239  C2 0004			 RET	 00004h
1  5535	0000023C			 DeallocFunc	 endp
1  5536
1  5537	0000023C			 MemCopy proc	 STDCALL, ptrSrc:DWORD,	ptrDest:DWORD, dataLength:DWORD
2  5538	0000023C  C8 0000 00			 ENTERD	 00000h,0
2  5539	00000240  56				 push	 esi
1  5540	00000241  57				 push	 edi
1  5541	00000242  51				 push	 ecx
1  5542
1  5543	00000243  8B 4D	10			 mov	 ecx, dataLength
1  5544	00000246  51				 push	 ecx
1  5545	00000247  8B 75	08			 mov	 esi, ptrSrc
1  5546	0000024A  8B 7D	0C			 mov	 edi, ptrDest
1  5547	0000024D  C1 E9	02			 shr	 ecx, 2
1  5548	00000250  F3> A5			 rep	 movsd
1  5549	00000252  59				 pop	 ecx
1  5550	00000253  83 E1	03			 and	 ecx, 00000003h
1  5551	00000256  F3> A4			 rep	 movsb
1  5552
1  5553	00000258  59				 pop	 ecx
1  5554	00000259  5F				 pop	 edi
1  5555	0000025A  5E				 pop	 esi
2  5556	0000025B  C9				 LEAVED
2  5557	0000025C  C2 000C			 RET	 0000Ch
1  5558	0000025F			 MemCopy endp
1  5559
1  5560	0000025F			 CloneMemory	 proc	 STDCALL, ptrSrc:DWORD,	lenSrc:DWORD
2  5561	0000025F  C8 0000 00			 ENTERD	 00000h,0
2  5562	00000263  FF 75	0C			 push	 lenSrc
1  5563	00000266  E8 FFFFFFAA			 call	 AllocFunc
1  5564	0000026B  FF 75	0C			 push	 lenSrc
1  5565	0000026E  50				 push	 eax
1  5566	0000026F  FF 75	08			 push	 ptrSrc
1  5567	00000272  E8 FFFFFFC5			 call	 MemCopy
2  5568	00000277  C9				 LEAVED
2  5569	00000278  C2 0008			 RET	 00008h
1  5570	0000027B			 CloneMemory	 endp
   5571					 INCLUDE vmstruct.inc
1  5572
1  5573
1  5574	0000027B			 virtualmachine	 struct
1  5575	00000000  01*(????????)			 state		 dd	 ?		 ; Machine State
1  5576	00000004  01*(????????)			 reg_acc dd	 ?		 ; Accumulator
1  5577	00000008  01*(????????)			 reg_cnt dd	 ?		 ; Counter
1  5578	0000000C  01*(????????)			 reg_dat dd	 ?		 ; Data
1  5579	00000010  01*(????????)			 reg_rnd dd	 ?		 ; Random Number
1  5580	00000014  01*(????????)			 reg_cps dd	 ?		 ; Copier Source
1  5581	00000018  01*(????????)			 reg_cpd dd	 ?		 ; Copier Destination
1  5582	0000001C  01*(????????)			 reg_ip		 dd	 ?		 ; Instruction Pointer
1  5583	00000020  01*(????????)			 reg_sp		 dd	 ?		 ; Stack Pointer (inside stack area)
1  5584	00000024  01*(??)			 reg_flags	 db	 ?		 ; Flags ( 0000cdbz - d	= direction, b =    +
   5585					 below,	z = zero, c = carry )
1  5586	00000025  01*(????????)			 code_ptr	 dd	 ?		 ; Points to the memory	holding	the script
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 99
pmScript.ASM



1  5587	00000029  01*(????????)			 code_len	 dd	 ?		 ; Length of the compiled script
1  5588	0000002D  01*(????????)			 stack_ptr	 dd	 ?		 ; Pointer to the stack	buffer
1  5589	00000031  01*(????????)			 stack_len	 dd	 ?		 ; Length of stack buffer
1  5590	00000035  01*(????????)			 init_ip dd	 ?		 ; Initial starting IP (for restarting the machine)
1  5591	00000039  01*(????????)			 ptr_api dd	 ?		 ; Address of client callback for script API ::	    +
   5592					 Callback(ptrMachine:DWORD, intAPINumber:DWORD)
1  5593	0000003D  01*(0200*(??))		 txt_crash	 db	 200h dup (?)	 ; Crash details for script
1  5594	0000023D			 virtualmachine	 ends
1  5595
1  5596
1  5597		  =0000			 VMSTATE_READY		 equ	 0
1  5598		  =0001			 VMSTATE_RUNNING equ	 1
1  5599		  =0002			 VMSTATE_PAUSED	 equ	 2
1  5600		  =0003			 VMSTATE_ENDED		 equ	 3
1  5601		  =0004			 VMSTATE_CRASH		 equ	 4
1  5602
1  5603		  =0008			 VMFLAG_CARRY		 equ	 00001000b
1  5604		  =0004			 VMFLAG_DIRECTION	 equ	 00000100b
1  5605		  =0002			 VMFLAG_BELOW		 equ	 00000010b
1  5606		  =0001			 VMFLAG_ZERO		 equ	 00000001b
1  5607
1  5608	0000027B				 .data
1  5609	00000000  4F 75	74 20 6F 66 20+	 crash_outofstack	 db	 'Out of stack space', 0
   5610		  73 74	61 63 6B 20 73+
   5611		  70 61	63 65 00
1  5612		  =OFFSET 0013		 crash_outofstack_len	 equ	 offset	$ - offset crash_outofstack
1  5613
1  5614	00000013  53 74	61 63 6B 20 61+	 crash_emptystack	 db	 'Stack	already	empty',	0
   5615		  6C 72	65 61 64 79 20+
   5616		  65 6D	70 74 79 00
1  5617		  =OFFSET 0014		 crash_emptystack_len	 equ	 offset	$ - offset crash_emptystack
1  5618
1  5619	00000027  41 64	64 72 65 73 73+	 crash_invalidaddr	 db	 'Address out of range', 0
   5620		  20 6F	75 74 20 6F 66+
   5621		  20 72	61 6E 67 65 00
1  5622		  =OFFSET 0015		 crash_invalidaddr_len	 equ	 offset	$ - offset crash_invalidaddr
1  5623
1  5624	0000003C  4D 65	6D 6F 72 79 20+	 crash_allocfail db	 'Memory allocation failed', 0
   5625		  61 6C	6C 6F 63 61 74+
   5626		  69 6F	6E 20 66 61 69+
   5627		  6C 65	64 00
1  5628		  =OFFSET 0019		 crash_allocfail_len	 equ	 offset	$ - offset crash_allocfail
1  5629
1  5630	00000055				 .code
1  5631
1  5632					 ;-------------------------------------------------------------------------------------------
   5633					 [ Memory access functions (Internal Use)
1  5634
1  5635	0000027B			 internals_PushValue		 proc	 STDCALL, ptrMachine:DWORD, valNew:DWORD
2  5636	0000027B  C8 0000 00			 ENTERD	 00000h,0
2  5637	0000027F  56				 push	 esi
1  5638	00000280  50				 push	 eax
1  5639
1  5640	00000281  8B 75	08			 mov	 esi, ptrMachine		 ; Gets	Machine
1  5641	00000284  8B 46	20			 mov	 eax, [esi].reg_sp			 ; Reads stack pointer
1  5642	00000287  3B 46	31			 cmp	 eax, [esi].stack_len			 ; Compares point to stack length
1  5643	0000028A  7C 0E				 jl	 intPush_okay				 ; If we have space, jump to	    +
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 100
pmScript.ASM



   5644					 intPush_okay
1  5645
1  5646	0000028C  6A 13				 push	 crash_outofstack_len
1  5647	0000028E  68 00000000r			 push	 offset	crash_outofstack
1  5648	00000293  E8 0000016D			 call	 internals_SetCrashMsg		 ; Report out of stack space
1  5649	00000298  EB 0F				 jmp	 intPush_leave
1  5650
1  5651	0000029A			 intPush_okay:
1  5652	0000029A  57				 push	 edi
1  5653	0000029B  8B 7E	2D			 mov	 edi, [esi].stack_ptr			 ; Gets	the memory address of stack
1  5654	0000029E  03 F8				 add	 edi, eax				 ; Move	to our current position
1  5655	000002A0  8B 45	0C			 mov	 eax, valNew
1  5656	000002A3  A5				 movsd						 ; Store the value
1  5657	000002A4  83 46	20 04			 add	 [esi].reg_sp, 4		 ; Move	the stack up
1  5658	000002A8  5F				 pop	 edi
1  5659
1  5660	000002A9			 intPush_leave:
1  5661	000002A9  58				 pop	 eax
1  5662	000002AA  5E				 pop	 esi
2  5663	000002AB  C9				 LEAVED
2  5664	000002AC  C2 0008			 RET	 00008h
1  5665	000002AF			 internals_PushValue		 endp
1  5666
1  5667	000002AF			 internals_PopValue		 proc	 STDCALL, ptrMachine:DWORD
2  5668	000002AF  C8 0000 00			 ENTERD	 00000h,0
2  5669	000002B3  56				 push	 esi
1  5670	000002B4  8B 75	08			 mov	 esi, ptrMachine		 ; Gets	machine
1  5671	000002B7  8B 46	20			 mov	 eax, [esi].reg_sp			 ; Reads stack pointer
1  5672	000002BA  0B C0				 or	 eax, eax				 ; Checks not at the floor
1  5673	000002BC  7F 0E				 jg	 intPop_okay				 ; Got poppable	value, jump to	    +
   5674					 intPop_okay
1  5675
1  5676	000002BE  6A 14				 push	 crash_emptystack_len
1  5677	000002C0  68 00000013r			 push	 offset	crash_emptystack
1  5678	000002C5  E8 0000013B			 call	 internals_SetCrashMsg		 ; Report empty	stack
1  5679	000002CA  EB 0E				 jmp	 intPop_leave
1  5680
1  5681	000002CC			 intPop_okay:
1  5682	000002CC  57				 push	 edi
1  5683	000002CD  83 E8	04			 sub	 eax, 4					 ; Move	stack down
1  5684	000002D0  89 46	20			 mov	 [esi].reg_sp, eax			 ; Store new stack position
1  5685	000002D3  8B 7E	2D			 mov	 edi, [esi].stack_ptr
1  5686	000002D6  03 F8				 add	 edi, eax				 ; EDI -> Stack	item
1  5687	000002D8  AD				 lodsd						 ; Load	stack value
1  5688	000002D9  5F				 pop	 edi
1  5689
1  5690	000002DA			 intPop_leave:
1  5691	000002DA  5E				 pop	 esi
2  5692	000002DB  C9				 LEAVED
2  5693	000002DC  C2 0004			 RET	 00004h
1  5694	000002DF			 internals_PopValue		 endp
1  5695
1  5696	000002DF			 internals_ReadValue		 proc	 STDCALL, ptrMachine:DWORD, ptrOffset:DWORD
2  5697	000002DF  C8 0000 00			 ENTERD	 00000h,0
2  5698	000002E3  56				 push	 esi
1  5699	000002E4  53				 push	 ebx
1  5700	000002E5  8B 75	08			 mov	 esi, ptrMachine		 ; Gets	machine
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 101
pmScript.ASM



1  5701	000002E8  8B 45	0C			 mov	 eax, ptrOffset			 ; Gets	script address
1  5702	000002EB  83 F8	00			 cmp	 eax, 0					 ; Checks the address is >= 0
1  5703	000002EE  7C 12				 jl	 intReadV_error
1  5704	000002F0  8B 5E	29			 mov	 ebx, [esi].code_len			 ; Checks the address is <= script  +
   5705					 length	- 4
1  5706	000002F3  83 EB	04			 sub	 ebx, 4					 ; (ReadValue does 32bits, so make  +
   5707					 sure don't try	and read past end of script)
1  5708	000002F6  3B C3				 cmp	 eax, ebx
1  5709	000002F8  7F 08				 jg	 intReadV_error
1  5710
1  5711	000002FA  8B 76	25			 mov	 esi, [esi].code_ptr
1  5712	000002FD  03 F0				 add	 esi, eax				 ; ESI -> Address in code
1  5713	000002FF  AD				 lodsd
1  5714
1  5715	00000300  EB 0C				 jmp	 intReadV_leave
1  5716
1  5717	00000302			 intReadV_error:
1  5718	00000302  6A 15				 push	 crash_invalidaddr_len
1  5719	00000304  68 00000027r			 push	 offset	crash_invalidaddr
1  5720	00000309  E8 000000F7			 call	 internals_SetCrashMsg		 ; Address out of range	error
1  5721
1  5722	0000030E			 intReadV_leave:
1  5723	0000030E  5B				 pop	 ebx
1  5724	0000030F  5E				 pop	 esi
2  5725	00000310  C9				 LEAVED
2  5726	00000311  C2 0008			 RET	 00008h
1  5727	00000314			 internals_ReadValue		 endp
1  5728
1  5729	00000314			 internals_WriteValue		 proc	 STDCALL, ptrMachine:DWORD, ptrOffset:DWORD,	    +
   5730					 valNew:DWORD
2  5731	00000314  C8 0000 00			 ENTERD	 00000h,0
2  5732	00000318  56				 push	 esi
1  5733	00000319  53				 push	 ebx
1  5734	0000031A  8B 75	08			 mov	 esi, ptrMachine		 ; Gets	machine
1  5735	0000031D  8B 45	0C			 mov	 eax, ptrOffset			 ; Gets	script address
1  5736	00000320  83 F8	00			 cmp	 eax, 0					 ; Checks the address is >= 0
1  5737	00000323  7C 17				 jl	 intWriteV_error
1  5738	00000325  8B 5E	29			 mov	 ebx, [esi].code_len			 ; Checks the address is <= script  +
   5739					 length	- 4
1  5740	00000328  83 EB	04			 sub	 ebx, 4					 ; (WriteValue does 32bits, so make +
   5741					 sure don't try	and read past end of script)
1  5742	0000032B  3B C3				 cmp	 eax, ebx
1  5743	0000032D  7F 0D				 jg	 intWriteV_error
1  5744
1  5745	0000032F  57				 push	 edi
1  5746	00000330  8B 7E	25			 mov	 edi, [esi].code_ptr
1  5747	00000333  03 F8				 add	 edi, eax				 ; EDI -> Address in code
1  5748	00000335  8B 45	10			 mov	 eax, valNew				 ; EAX == New Value
1  5749	00000338  AB				 stosd
1  5750	00000339  5F				 pop	 edi
1  5751
1  5752	0000033A  EB 0C				 jmp	 intWriteV_leave
1  5753
1  5754	0000033C			 intWriteV_error:
1  5755	0000033C  6A 15				 push	 crash_invalidaddr_len
1  5756	0000033E  68 00000027r			 push	 offset	crash_invalidaddr
1  5757	00000343  E8 000000BD			 call	 internals_SetCrashMsg		 ; Address out of range	error
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 102
pmScript.ASM



1  5758
1  5759	00000348			 intWriteV_leave:
1  5760	00000348  5B				 pop	 ebx
1  5761	00000349  5E				 pop	 esi
2  5762	0000034A  C9				 LEAVED
2  5763	0000034B  C2 000C			 RET	 0000Ch
1  5764	0000034E			 internals_WriteValue		 endp
1  5765
1  5766	0000034E			 internals_ReadByte		 proc	 STDCALL, ptrMachine:DWORD, ptrOffset:DWORD
2  5767	0000034E  C8 0000 00			 ENTERD	 00000h,0
2  5768	00000352  56				 push	 esi
1  5769	00000353  53				 push	 ebx
1  5770	00000354  8B 75	08			 mov	 esi, ptrMachine		 ; Gets	machine
1  5771	00000357  8B 45	0C			 mov	 eax, ptrOffset			 ; Gets	script address
1  5772	0000035A  83 F8	00			 cmp	 eax, 0					 ; Checks the address is >= 0
1  5773	0000035D  7C 12				 jl	 intReadB_error
1  5774	0000035F  8B 5E	29			 mov	 ebx, [esi].code_len			 ; Checks the address is <= script  +
   5775					 length	- 1
1  5776	00000362  4B				 dec	 ebx					 ; (ReadByte does 8bits, so make    +
   5777					 sure don't try	and read past end of script)
1  5778	00000363  3B C3				 cmp	 eax, ebx
1  5779	00000365  7F 0A				 jg	 intReadB_error
1  5780
1  5781	00000367  8B 76	25			 mov	 esi, [esi].code_ptr
1  5782	0000036A  03 F0				 add	 esi, eax				 ; ESI -> Address in code
1  5783	0000036C  33 C0				 xor	 eax, eax
1  5784	0000036E  AC				 lodsb						 ; EAX/AL == Read byte
1  5785
1  5786	0000036F  EB 0C				 jmp	 intReadB_leave
1  5787
1  5788	00000371			 intReadB_error:
1  5789	00000371  6A 15				 push	 crash_invalidaddr_len
1  5790	00000373  68 00000027r			 push	 offset	crash_invalidaddr
1  5791	00000378  E8 00000088			 call	 internals_SetCrashMsg		 ; Address out of range	error
1  5792
1  5793	0000037D			 intReadB_leave:
1  5794	0000037D  5B				 pop	 ebx
1  5795	0000037E  5E				 pop	 esi
2  5796	0000037F  C9				 LEAVED
2  5797	00000380  C2 0008			 RET	 00008h
1  5798	00000383			 internals_ReadByte		 endp
1  5799
1  5800	00000383			 internals_WriteByte		 proc	 STDCALL, ptrMachine:DWORD, ptrOffset:DWORD,	    +
   5801					 valNew:DWORD
2  5802	00000383  C8 0000 00			 ENTERD	 00000h,0
2  5803	00000387  56				 push	 esi
1  5804	00000388  53				 push	 ebx
1  5805	00000389  8B 75	08			 mov	 esi, ptrMachine		 ; Gets	machine
1  5806	0000038C  8B 45	0C			 mov	 eax, ptrOffset			 ; Gets	script address
1  5807	0000038F  83 F8	00			 cmp	 eax, 0					 ; Checks the address is >= 0
1  5808	00000392  7C 15				 jl	 intWriteB_error
1  5809	00000394  8B 5E	29			 mov	 ebx, [esi].code_len			 ; Checks the address is <= script  +
   5810					 length	- 1
1  5811	00000397  4B				 dec	 ebx					 ; (WriteByte does 8bits, so make   +
   5812					 sure don't try	and read past end of script)
1  5813	00000398  3B C3				 cmp	 eax, ebx
1  5814	0000039A  7F 0D				 jg	 intWriteB_error
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 103
pmScript.ASM



1  5815
1  5816	0000039C  57				 push	 edi
1  5817	0000039D  8B 7E	25			 mov	 edi, [esi].code_ptr
1  5818	000003A0  03 F8				 add	 edi, eax				 ; EDI -> Address in code
1  5819	000003A2  8B 45	10			 mov	 eax, valNew				 ; EAX == New Value
1  5820	000003A5  AA				 stosb
1  5821	000003A6  5F				 pop	 edi
1  5822
1  5823	000003A7  EB 0C				 jmp	 intWriteB_leave
1  5824
1  5825	000003A9			 intWriteB_error:
1  5826	000003A9  6A 15				 push	 crash_invalidaddr_len
1  5827	000003AB  68 00000027r			 push	 offset	crash_invalidaddr
1  5828	000003B0  E8 00000050			 call	 internals_SetCrashMsg		 ; Address out of range	error
1  5829
1  5830	000003B5			 intWriteB_leave:
1  5831	000003B5  5B				 pop	 ebx
1  5832	000003B6  5E				 pop	 esi
2  5833	000003B7  C9				 LEAVED
2  5834	000003B8  C2 000C			 RET	 0000Ch
1  5835	000003BB			 internals_WriteByte		 endp
1  5836
1  5837	000003BB			 internals_Allocate		 proc	 STDCALL, ptrMachine:DWORD, lenAllocSize:DWORD
2  5838	000003BB  C8 0000 00			 ENTERD	 00000h,0
2  5839	000003BF  56				 push	 esi
1  5840	000003C0  51				 push	 ecx
1  5841	000003C1  8B 75	08			 mov	 esi, ptrMachine		 ; Gets	machine
1  5842	000003C4  8B 4E	29			 mov	 ecx, [esi].code_len
1  5843	000003C7  03 4D	0C			 add	 ecx, lenAllocSize			 ; ECX == Script Length	+ new size
1  5844
1  5845	000003CA  3B 4E	29			 cmp	 ecx, [esi].code_len			 ; Check allocating a negative	    +
   5846					 amount	(or too	large)
1  5847	000003CD  7E 21				 jle	 intAlloc_error
1  5848
1  5849	000003CF  51				 push	 ecx
1  5850	000003D0  E8 FFFFFE40			 call	 AllocFunc				 ; EAX -> Newly	allocated space
1  5851
1  5852	000003D5  50				 push	 eax					 ; Temp	save new script	address
1  5853
1  5854	000003D6  FF 76	29			 push	 [esi].code_len
1  5855	000003D9  50				 push	 eax
1  5856	000003DA  FF 76	25			 push	 [esi].code_ptr
1  5857	000003DD  E8 FFFFFE5A			 call	 MemCopy			 ; Copy	script across
1  5858
1  5859	000003E2  FF 76	25			 push	 [esi].code_ptr
1  5860	000003E5  E8 FFFFFE3E			 call	 DeallocFunc				 ; Deallocate old script address
1  5861
1  5862	000003EA  58				 pop	 eax					 ; EAX == New script address
1  5863	000003EB  89 46	25			 mov	 [esi].code_ptr, eax
1  5864
1  5865	000003EE  EB 0F				 jmp	 intAlloc_leave
1  5866
1  5867	000003F0			 intAlloc_error:
1  5868	000003F0  8B 75	08			 mov	 esi, ptrMachine		 ; Make	sure machine is	set
1  5869	000003F3  6A 19				 push	 crash_allocfail_len
1  5870	000003F5  68 0000003Cr			 push	 offset	crash_allocfail
1  5871	000003FA  E8 00000006			 call	 internals_SetCrashMsg		 ; Address out of range	error
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 104
pmScript.ASM



1  5872
1  5873	000003FF			 intAlloc_leave:
1  5874	000003FF  59				 pop	 ecx
1  5875	00000400  5E				 pop	 esi
2  5876	00000401  C9				 LEAVED
2  5877	00000402  C2 0008			 RET	 00008h
1  5878	00000405			 internals_Allocate		 endp
1  5879
1  5880	00000405			 internals_SetCrashMsg	 proc	 STDCALL, ptrCrashMessage:DWORD, lenCrashMessage:DWORD
1  5881						 ; ESI *MUST* point to machine
2  5882	00000405  C8 0000 00			 ENTERD	 00000h,0
2  5883	00000409  57				 push	 edi
1  5884	0000040A  51				 push	 ecx
1  5885	0000040B  C7 06	00000004		 mov	 [esi].state, VMSTATE_CRASH
1  5886	00000411  8D 7E	3D			 lea	 edi, [esi].txt_crash
1  5887	00000414  8B 75	08			 mov	 esi, ptrCrashMessage
1  5888	00000417  8B 4D	0C			 mov	 ecx, lenCrashMessage
1  5889	0000041A  F3> A4			 rep	 movsb
1  5890	0000041C  59				 pop	 ecx
1  5891	0000041D  5F				 pop	 edi
2  5892	0000041E  C9				 LEAVED
2  5893	0000041F  C2 0008			 RET	 00008h
1  5894	00000422			 internals_SetCrashMsg	 endp
1  5895
1  5896	00000422			 internals_CompareValues proc	 STDCALL, ptrMachine:DWORD, intLeftSide:DWORD,		    +
   5897					 intRightSide:DWORD
1  5898					 ;	 push	 esi
1  5899					 ;	 push	 eax
1  5900					 ;	 push	 ebx
1  5901					 ;	 mov	 esi, ptrMachine
1  5902					 ;	 mov	 bl, [esi].reg_flags
1  5903					 ;
1  5904					 ;	 mov	 eax, intLeftSide
1  5905					 ;	 cmp	 eax, intRightSide
1  5906					 ;	 jz	 cmpval_setz
1  5907					 ;	 and	 bl, NOT VMFLAG_ZERO
1  5908					 ;	 jmp	 cmpval_chkedz
1  5909					 ;cmpval_setz:
1  5910					 ;	 or	 bl, VMFLAG_ZERO
1  5911					 ;cmpval_chkedz:
1  5912					 ;	 jz	 cmpval_setc
1  5913					 ;	 and	 bl, NOT VMFLAG_BELOW
1  5914					 ;	 jmp	 cmpval_chkedb
1  5915					 ;cmpval_setc:
1  5916					 ;	 or	 bl, VMFLAG_BELOW
1  5917					 ;cmpval_chkedb:
1  5918					 ;
1  5919					 ;	 mov	 [esi].reg_flags, bl
1  5920					 ;	 pop	 ebx
1  5921					 ;	 pop	 eax
1  5922					 ;	 pop	 esi
1  5923
2  5924	00000422  C8 0000 00			 ENTERD	 00000h,0
2  5925	00000426  50				 push	 eax
1  5926	00000427  8B 45	0C			 mov	 eax, intLeftSide
1  5927	0000042A  2B 45	10			 sub	 eax, intRightSide
1  5928	0000042D  50				 push	 eax
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 105
pmScript.ASM



1  5929	0000042E  FF 75	08			 push	 ptrMachine
1  5930	00000431  E8 00000005			 call	 internals_SetFlags
1  5931	00000436  58				 pop	 eax
1  5932
2  5933	00000437  C9				 LEAVED
2  5934	00000438  C2 000C			 RET	 0000Ch
1  5935	0000043B			 internals_CompareValues endp
1  5936
1  5937	0000043B			 internals_SetFlags		 proc	 STDCALL, ptrMachine:DWORD, intToFlag:DWORD
2  5938	0000043B  C8 0000 00			 ENTERD	 00000h,0
2  5939	0000043F  56				 push	 esi
1  5940	00000440  53				 push	 ebx
1  5941	00000441  50				 push	 eax
1  5942	00000442  8B 75	08			 mov	 esi, ptrMachine
1  5943	00000445  8A 5E	24			 mov	 bl, [esi].reg_flags
1  5944	00000448  8B 45	0C			 mov	 eax, intToFlag
1  5945
1  5946	0000044B  0B C0				 or	 eax, eax				 ; Check zero
1  5947	0000044D  74 05				 jz	 setflags_setz
1  5948	0000044F  80 E3	FE			 and	 bl, NOT VMFLAG_ZERO
1  5949	00000452  EB 03				 jmp	 setflags_finishedzero
1  5950	00000454			 setflags_setz:
1  5951	00000454  80 CB	01			 or	 bl, VMFLAG_ZERO
1  5952	00000457			 setflags_finishedzero:
1  5953
1  5954	00000457  83 F8	00			 cmp	 eax, 0					 ; Check below zero
1  5955	0000045A  7C 05				 jl	 setflags_setb
1  5956	0000045C  80 E3	FD			 and	 bl, NOT VMFLAG_BELOW
1  5957	0000045F  EB 03				 jmp	 setflags_finishedbelow
1  5958	00000461			 setflags_setb:
1  5959	00000461  80 CB	02			 or	 bl, VMFLAG_BELOW
1  5960	00000464			 setflags_finishedbelow:
1  5961
1  5962	00000464  58				 pop	 eax
1  5963	00000465  5B				 pop	 ebx
1  5964	00000466  5E				 pop	 esi
2  5965	00000467  C9				 LEAVED
2  5966	00000468  C2 0008			 RET	 00008h
1  5967	0000046B			 internals_SetFlags		 endp
1  5968
1  5969
   5970					 INCLUDE optable.inc
1  5971
1  5972	0000046B				 .data
1  5973
1  5974	00000055			 OpCodeTable:
1  5975	00000055  0000046Br			 dd	 offset	vm_nop				 ; 00h
1  5976	00000059  00000473r			 dd	 offset	vm_pushimm			 ; 01h
1  5977	0000005D  00000494r			 dd	 offset	vm_pushvar			 ; 02h
1  5978	00000061  000004BCr			 dd	 offset	vm_pushacc			 ; 03h
1  5979	00000065  000004D4r			 dd	 offset	vm_pushcnt			 ; 04h
1  5980	00000069  000004ECr			 dd	 offset	vm_pushdat			 ; 05h
1  5981	0000006D  00000504r			 dd	 offset	vm_pushcps			 ; 06h
1  5982	00000071  0000051Cr			 dd	 offset	vm_pushcpd			 ; 07h
1  5983	00000075  00000534r			 dd	 offset	vm_popvar			 ; 08h
1  5984	00000079  00000549r			 dd	 offset	vm_popacc			 ; 09h
1  5985	0000007D  00000560r			 dd	 offset	vm_popcnt			 ; 0Ah
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 106
pmScript.ASM



1  5986	00000081  00000577r			 dd	 offset	vm_popdat			 ; 0Bh
1  5987	00000085  0000058Er			 dd	 offset	vm_popcps			 ; 0Ch
1  5988	00000089  000005A5r			 dd	 offset	vm_popcpd			 ; 0Dh
1  5989	0000008D  000005BCr			 dd	 offset	vm_movaccimm			 ; 0Eh
1  5990	00000091  000005D9r			 dd	 offset	vm_movcntimm			 ; 0Fh
1  5991	00000095  000005F6r			 dd	 offset	vm_movdatimm			 ; 10h
1  5992	00000099  00000613r			 dd	 offset	vm_movacccnt			 ; 11h
1  5993	0000009D  00000627r			 dd	 offset	vm_movaccdat			 ; 12h
1  5994	000000A1  0000063Br			 dd	 offset	vm_movaccrnd			 ; 13h
1  5995	000000A5  00000658r			 dd	 offset	vm_movcntacc			 ; 14h
1  5996	000000A9  0000066Cr			 dd	 offset	vm_movcntdat			 ; 15h
1  5997	000000AD  00000680r			 dd	 offset	vm_movcntrnd			 ; 16h
1  5998	000000B1  0000069Dr			 dd	 offset	vm_movdatacc			 ; 17h
1  5999	000000B5  000006B1r			 dd	 offset	vm_movdatcnt			 ; 18h
1  6000	000000B9  000006C5r			 dd	 offset	vm_movdatrnd			 ; 19h
1  6001	000000BD  000006E2r			 dd	 offset	vm_movaccvar			 ; 1Ah
1  6002	000000C1  00000706r			 dd	 offset	vm_movcntvar			 ; 1Bh
1  6003	000000C5  0000072Ar			 dd	 offset	vm_movdatvar			 ; 1Ch
1  6004	000000C9  0000074Er			 dd	 offset	vm_movcpsvar			 ; 1Dh
1  6005	000000CD  00000772r			 dd	 offset	vm_movcpdvar			 ; 1Eh
1  6006	000000D1  00000796r			 dd	 offset	vm_movvarimm			 ; 1Fh
1  6007	000000D5  000007C4r			 dd	 offset	vm_movvaracc			 ; 20h
1  6008	000000D9  000007E8r			 dd	 offset	vm_movvarcnt			 ; 21h
1  6009	000000DD  0000080Cr			 dd	 offset	vm_movvardat			 ; 22h
1  6010	000000E1  00000830r			 dd	 offset	vm_movvarrnd			 ; 23h
1  6011	000000E5  00000927r			 dd	 offset	vm_lods			 ; 24h
1  6012	000000E9  0000095Br			 dd	 offset	vm_stos			 ; 25h
1  6013	000000ED  0000098Fr			 dd	 offset	vm_movs			 ; 26h
1  6014	000000F1  00000AEDr			 dd	 offset	vm_cmpacccnt			 ; 27h
1  6015	000000F5  00000B07r			 dd	 offset	vm_cmpaccdat			 ; 28h
1  6016	000000F9  00000B21r			 dd	 offset	vm_cmpaccimm			 ; 29h
1  6017	000000FD  00000B45r			 dd	 offset	vm_cmpaccvar			 ; 2Ah
1  6018	00000101  00000B70r			 dd	 offset	vm_cmpcntacc			 ; 2Bh
1  6019	00000105  00000B8Ar			 dd	 offset	vm_cmpcntdat			 ; 2Ch
1  6020	00000109  00000BA4r			 dd	 offset	vm_cmpcntimm			 ; 2Dh
1  6021	0000010D  00000BC8r			 dd	 offset	vm_cmpcntvar			 ; 2Eh
1  6022	00000111  00000BF3r			 dd	 offset	vm_cmpdatacc			 ; 2Fh
1  6023	00000115  00000C0Dr			 dd	 offset	vm_cmpdatcnt			 ; 30h
1  6024	00000119  00000C27r			 dd	 offset	vm_cmpdatimm			 ; 31h
1  6025	0000011D  00000C4Br			 dd	 offset	vm_cmpdatvar			 ; 32h
1  6026	00000121  00000C76r			 dd	 offset	vm_jmp				 ; 33h
1  6027	00000125  00000C93r			 dd	 offset	vm_je				 ; 34h
1  6028	00000129  00000CB8r			 dd	 offset	vm_jne				 ; 35h
1  6029	0000012D  00000CDDr			 dd	 offset	vm_jb				 ; 36h
1  6030	00000131  00000D02r			 dd	 offset	vm_jbe				 ; 37h
1  6031	00000135  00000D27r			 dd	 offset	vm_loop			 ; 38h
1  6032	00000139  00000D4Dr			 dd	 offset	vm_call			 ; 39h
1  6033	0000013D  00000D70r			 dd	 offset	vm_api				 ; 3Ah
1  6034	00000141  00000D8Fr			 dd	 offset	vm_ret				 ; 3Bh
1  6035	00000145  00000DA3r			 dd	 offset	vm_end				 ; 3Ch
1  6036	00000149  00000DB4r			 dd	 offset	vm_addaccimm			 ; 3Dh
1  6037	0000014D  00000DD9r			 dd	 offset	vm_addaccdat			 ; 3Eh
1  6038	00000151  00000DF5r			 dd	 offset	vm_addaccrnd			 ; 3Fh
1  6039	00000155  00000E1Ar			 dd	 offset	vm_addaccvar			 ; 40h
1  6040	00000159  00000E46r			 dd	 offset	vm_addcntimm			 ; 41h
1  6041	0000015D  00000E6Br			 dd	 offset	vm_addcntacc			 ; 42h
1  6042	00000161  00000E87r			 dd	 offset	vm_addcntdat			 ; 43h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 107
pmScript.ASM



1  6043	00000165  00000EA3r			 dd	 offset	vm_addcntrnd			 ; 44h
1  6044	00000169  00000EC8r			 dd	 offset	vm_addcntvar			 ; 45h
1  6045	0000016D  00000EF4r			 dd	 offset	vm_adddatimm			 ; 46h
1  6046	00000171  00000F19r			 dd	 offset	vm_adddatacc			 ; 47h
1  6047	00000175  00000F35r			 dd	 offset	vm_adddatrnd			 ; 48h
1  6048	00000179  00000F5Ar			 dd	 offset	vm_adddatvar			 ; 49h
1  6049	0000017D  00000F86r			 dd	 offset	vm_subaccimm			 ; 4Ah
1  6050	00000181  00000FABr			 dd	 offset	vm_subaccdat			 ; 4Bh
1  6051	00000185  00000FC7r			 dd	 offset	vm_subaccrnd			 ; 4Ch
1  6052	00000189  00000FECr			 dd	 offset	vm_subaccvar			 ; 4Dh
1  6053	0000018D  00001018r			 dd	 offset	vm_subcntimm			 ; 4Eh
1  6054	00000191  0000103Dr			 dd	 offset	vm_subcntacc			 ; 4Fh
1  6055	00000195  00001059r			 dd	 offset	vm_subcntdat			 ; 50h
1  6056	00000199  00001075r			 dd	 offset	vm_subcntrnd			 ; 51h
1  6057	0000019D  0000109Ar			 dd	 offset	vm_subcntvar			 ; 52h
1  6058	000001A1  000010C6r			 dd	 offset	vm_subdatimm			 ; 53h
1  6059	000001A5  000010EBr			 dd	 offset	vm_subdatacc			 ; 54h
1  6060	000001A9  00001107r			 dd	 offset	vm_subdatrnd			 ; 55h
1  6061	000001AD  0000112Cr			 dd	 offset	vm_subdatvar			 ; 56h
1  6062	000001B1  00001158r			 dd	 offset	vm_incacc			 ; 57h
1  6063	000001B5  00001171r			 dd	 offset	vm_inccnt			 ; 58h
1  6064	000001B9  0000118Ar			 dd	 offset	vm_incdat			 ; 59h
1  6065	000001BD  000011A3r			 dd	 offset	vm_decacc			 ; 5Ah
1  6066	000001C1  000011BCr			 dd	 offset	vm_deccnt			 ; 5Bh
1  6067	000001C5  000011D5r			 dd	 offset	vm_decdat			 ; 5Ch
1  6068	000001C9  000011EEr			 dd	 offset	vm_mulimm			 ; 5Dh
1  6069	000001CD  0000121Ar			 dd	 offset	vm_mulvar			 ; 5Eh
1  6070	000001D1  0000124Dr			 dd	 offset	vm_mulcnt			 ; 5Fh
1  6071	000001D5  00001272r			 dd	 offset	vm_divimm			 ; 60h
1  6072	000001D9  000012A0r			 dd	 offset	vm_divvar			 ; 61h
1  6073	000001DD  000012D5r			 dd	 offset	vm_divcnt			 ; 62h
1  6074	000001E1  00001386r			 dd	 offset	vm_andaccimm			 ; 63h
1  6075	000001E5  000013ABr			 dd	 offset	vm_andaccdat			 ; 64h
1  6076	000001E9  000013C7r			 dd	 offset	vm_andaccvar			 ; 65h
1  6077	000001ED  000013F3r			 dd	 offset	vm_anddatimm			 ; 66h
1  6078	000001F1  00001418r			 dd	 offset	vm_anddatacc			 ; 67h
1  6079	000001F5  00001434r			 dd	 offset	vm_anddatvar			 ; 68h
1  6080	000001F9  00001460r			 dd	 offset	vm_oraccimm			 ; 69h
1  6081	000001FD  00001485r			 dd	 offset	vm_oraccdat			 ; 6Ah
1  6082	00000201  000014A1r			 dd	 offset	vm_oraccvar			 ; 6Bh
1  6083	00000205  000014CDr			 dd	 offset	vm_ordatimm			 ; 6Ch
1  6084	00000209  000014F2r			 dd	 offset	vm_ordatacc			 ; 6Dh
1  6085	0000020D  0000150Er			 dd	 offset	vm_ordatvar			 ; 6Eh
1  6086	00000211  0000153Ar			 dd	 offset	vm_xoraccimm			 ; 6Fh
1  6087	00000215  0000155Fr			 dd	 offset	vm_xoraccdat			 ; 70h
1  6088	00000219  0000157Br			 dd	 offset	vm_xoraccvar			 ; 71h
1  6089	0000021D  000015A7r			 dd	 offset	vm_xordatimm			 ; 72h
1  6090	00000221  000015CCr			 dd	 offset	vm_xordatacc			 ; 73h
1  6091	00000225  000015E8r			 dd	 offset	vm_xordatvar			 ; 74h
1  6092	00000229  00001614r			 dd	 offset	vm_notacc			 ; 75h
1  6093	0000022D  0000162Dr			 dd	 offset	vm_notdat			 ; 76h
1  6094	00000231  00001646r			 dd	 offset	vm_negacc			 ; 77h
1  6095	00000235  0000165Fr			 dd	 offset	vm_negdat			 ; 78h
1  6096	00000239  00001813r			 dd	 offset	vm_sinimm			 ; 79h
1  6097	0000023D  00001844r			 dd	 offset	vm_sincnt			 ; 7Ah
1  6098	00000241  0000186Cr			 dd	 offset	vm_sinvar			 ; 7Bh
1  6099	00000245  000018A4r			 dd	 offset	vm_cosimm			 ; 7Ch
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 108
pmScript.ASM



1  6100	00000249  000018D5r			 dd	 offset	vm_coscnt			 ; 7Dh
1  6101	0000024D  000018FDr			 dd	 offset	vm_cosvar			 ; 7Eh
1  6102	00000251  00001935r			 dd	 offset	vm_tanimm			 ; 7Fh
1  6103	00000255  00001966r			 dd	 offset	vm_tancnt			 ; 80h
1  6104	00000259  0000198Er			 dd	 offset	vm_tanvar			 ; 81h
1  6105	0000025D  000019C6r			 dd	 offset	vm_rolimm			 ; 82h
1  6106	00000261  000019E7r			 dd	 offset	vm_rolcnt			 ; 83h
1  6107	00000265  000019FDr			 dd	 offset	vm_rorimm			 ; 84h
1  6108	00000269  00001A1Er			 dd	 offset	vm_rorcnt			 ; 85h
1  6109	0000026D  00001A34r			 dd	 offset	vm_shlimm			 ; 86h
1  6110	00000271  00001A55r			 dd	 offset	vm_shlcnt			 ; 87h
1  6111	00000275  00001A6Br			 dd	 offset	vm_shrimm			 ; 88h
1  6112	00000279  00001A8Cr			 dd	 offset	vm_shrcnt			 ; 89h
1  6113	0000027D  00000AD3r			 dd	 offset	vm_xchgaccdat			 ; 8Ah
1  6114	00000281  000012FCr			 dd	 offset	vm_modimm			 ; 8Bh
1  6115	00000285  0000132Ar			 dd	 offset	vm_modvar			 ; 8Ch
1  6116	00000289  0000135Fr			 dd	 offset	vm_modcnt			 ; 8Dh
1  6117	0000028D  000009E1r			 dd	 offset	vm_lodsb		 ; 8Eh
1  6118	00000291  00000A11r			 dd	 offset	vm_stosb		 ; 8Fh
1  6119	00000295  00000A41r			 dd	 offset	vm_movsb		 ; 90h
1  6120	00000299  00000A8Br			 dd	 offset	vm_std				 ; 91h
1  6121	0000029D  00000AA2r			 dd	 offset	vm_cld				 ; 92h
1  6122	000002A1  00000AB9r			 dd	 offset	vm_xchgacccnt			 ; 93h
1  6123	000002A5  00001678r			 dd	 offset	vm_andcntimm			 ; 94h
1  6124	000002A9  0000169Dr			 dd	 offset	vm_andcntacc			 ; 95h
1  6125	000002AD  000016B9r			 dd	 offset	vm_andcntvar			 ; 96h
1  6126	000002B1  000016E5r			 dd	 offset	vm_orcntimm			 ; 97h
1  6127	000002B5  0000170Ar			 dd	 offset	vm_orcntacc			 ; 98h
1  6128	000002B9  00001726r			 dd	 offset	vm_orcntvar			 ; 99h
1  6129	000002BD  00001752r			 dd	 offset	vm_xorcntimm			 ; 9Ah
1  6130	000002C1  00001777r			 dd	 offset	vm_xorcntacc			 ; 9Bh
1  6131	000002C5  00001793r			 dd	 offset	vm_xorcntvar			 ; 9Ch
1  6132	000002C9  000017BFr			 dd	 offset	vm_andacccnt			 ; 9Dh
1  6133	000002CD  000017DBr			 dd	 offset	vm_oracccnt			 ; 9Eh
1  6134	000002D1  000017F7r			 dd	 offset	vm_xoracccnt			 ; 9Fh
1  6135	000002D5  00001AC9r			 dd	 offset	vm_alloccnt			 ; A0h
1  6136	000002D9  00001AA2r			 dd	 offset	vm_allocimm			 ; A1h
1  6137	000002DD  0000085Fr			 dd	 offset	vm_movcpsacc			 ; A2h
1  6138	000002E1  00000873r			 dd	 offset	vm_movcpdacc			 ; A3h
1  6139	000002E5  00000887r			 dd	 offset	vm_movacccps			 ; A4h
1  6140	000002E9  0000089Br			 dd	 offset	vm_movacccpd			 ; A5h
1  6141	000002ED  000008AFr			 dd	 offset	vm_movcpsdat			 ; A6h
1  6142	000002F1  000008C3r			 dd	 offset	vm_movcpddat			 ; A7h
1  6143	000002F5  000008D7r			 dd	 offset	vm_movdatcps			 ; A8h
1  6144	000002F9  000008EBr			 dd	 offset	vm_movdatcpd			 ; A9h
1  6145	000002FD  000008FFr			 dd	 offset	vm_movcpscpd			 ; AAh
1  6146	00000301  00000913r			 dd	 offset	vm_movcpdcps			 ; ABh
1  6147	00000305  00001AE6r			 dd	 offset	vm_allocacc			 ; ACh
1  6148
1  6149
1  6150
1  6151	00000309				 .code
1  6152
1  6153	0000046B			 vm_nop		 proc	 STDCALL, ptrMachine:DWORD
2  6154	0000046B  C8 0000 00			 ENTERD	 00000h,0
3  6155	0000046F  C9				 LEAVED
3  6156	00000470  C2 0004			 RET	 00004h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 109
pmScript.ASM



1  6157	00000473			 vm_nop		 endp
1  6158
1  6159					 INCLUDE ops_pushpop.inc
2  6160
2  6161	00000473				 .code
2  6162
2  6163	00000473			 vm_pushimm		 proc	 STDCALL, ptrMachine:DWORD
3  6164	00000473  C8 0000 00			 ENTERD	 00000h,0
3  6165	00000477  8B 75	08			 mov	 esi, ptrMachine
2  6166	0000047A  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6167	0000047D  47				 inc	 edi
2  6168
2  6169	0000047E  57				 push	 edi
2  6170	0000047F  56				 push	 esi
2  6171	00000480  E8 FFFFFE5A			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  6172
2  6173	00000485  50				 push	 eax
2  6174	00000486  56				 push	 esi
2  6175	00000487  E8 FFFFFDEF			 call	 internals_PushValue
2  6176
2  6177	0000048C  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6178	00000490  C9				 LEAVED
3  6179	00000491  C2 0004			 RET	 00004h
2  6180	00000494			 vm_pushimm		 endp
2  6181
2  6182	00000494			 vm_pushvar		 proc	 STDCALL, ptrMachine:DWORD
3  6183	00000494  C8 0000 00			 ENTERD	 00000h,0
3  6184	00000498  8B 75	08			 mov	 esi, ptrMachine
2  6185	0000049B  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6186	0000049E  47				 inc	 edi
2  6187
2  6188	0000049F  57				 push	 edi
2  6189	000004A0  56				 push	 esi
2  6190	000004A1  E8 FFFFFE39			 call	 internals_ReadValue			 ; Gets	address	of var
2  6191
2  6192	000004A6  50				 push	 eax
2  6193	000004A7  56				 push	 esi
2  6194	000004A8  E8 FFFFFE32			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  6195
2  6196	000004AD  50				 push	 eax
2  6197	000004AE  56				 push	 esi
2  6198	000004AF  E8 FFFFFDC7			 call	 internals_PushValue
2  6199
2  6200	000004B4  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6201	000004B8  C9				 LEAVED
3  6202	000004B9  C2 0004			 RET	 00004h
2  6203	000004BC			 vm_pushvar		 endp
2  6204
2  6205	000004BC			 vm_pushacc		 proc	 STDCALL, ptrMachine:DWORD
3  6206	000004BC  C8 0000 00			 ENTERD	 00000h,0
3  6207	000004C0  8B 75	08			 mov	 esi, ptrMachine
2  6208	000004C3  8B 46	04			 mov	 eax, [esi].reg_acc
2  6209
2  6210	000004C6  50				 push	 eax
2  6211	000004C7  56				 push	 esi
2  6212	000004C8  E8 FFFFFDAE			 call	 internals_PushValue
2  6213
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 110
pmScript.ASM



2  6214	000004CD  FF 46	1C			 inc	 [esi].reg_ip
3  6215	000004D0  C9				 LEAVED
3  6216	000004D1  C2 0004			 RET	 00004h
2  6217	000004D4			 vm_pushacc		 endp
2  6218
2  6219	000004D4			 vm_pushcnt		 proc	 STDCALL, ptrMachine:DWORD
3  6220	000004D4  C8 0000 00			 ENTERD	 00000h,0
3  6221	000004D8  8B 75	08			 mov	 esi, ptrMachine
2  6222	000004DB  8B 46	08			 mov	 eax, [esi].reg_cnt
2  6223
2  6224	000004DE  50				 push	 eax
2  6225	000004DF  56				 push	 esi
2  6226	000004E0  E8 FFFFFD96			 call	 internals_PushValue
2  6227
2  6228	000004E5  FF 46	1C			 inc	 [esi].reg_ip
3  6229	000004E8  C9				 LEAVED
3  6230	000004E9  C2 0004			 RET	 00004h
2  6231	000004EC			 vm_pushcnt		 endp
2  6232
2  6233	000004EC			 vm_pushdat		 proc	 STDCALL, ptrMachine:DWORD
3  6234	000004EC  C8 0000 00			 ENTERD	 00000h,0
3  6235	000004F0  8B 75	08			 mov	 esi, ptrMachine
2  6236	000004F3  8B 46	0C			 mov	 eax, [esi].reg_dat
2  6237
2  6238	000004F6  50				 push	 eax
2  6239	000004F7  56				 push	 esi
2  6240	000004F8  E8 FFFFFD7E			 call	 internals_PushValue
2  6241
2  6242	000004FD  FF 46	1C			 inc	 [esi].reg_ip
3  6243	00000500  C9				 LEAVED
3  6244	00000501  C2 0004			 RET	 00004h
2  6245	00000504			 vm_pushdat		 endp
2  6246
2  6247	00000504			 vm_pushcps		 proc	 STDCALL, ptrMachine:DWORD
3  6248	00000504  C8 0000 00			 ENTERD	 00000h,0
3  6249	00000508  8B 75	08			 mov	 esi, ptrMachine
2  6250	0000050B  8B 46	14			 mov	 eax, [esi].reg_cps
2  6251
2  6252	0000050E  50				 push	 eax
2  6253	0000050F  56				 push	 esi
2  6254	00000510  E8 FFFFFD66			 call	 internals_PushValue
2  6255
2  6256	00000515  FF 46	1C			 inc	 [esi].reg_ip
3  6257	00000518  C9				 LEAVED
3  6258	00000519  C2 0004			 RET	 00004h
2  6259	0000051C			 vm_pushcps		 endp
2  6260
2  6261	0000051C			 vm_pushcpd		 proc	 STDCALL, ptrMachine:DWORD
3  6262	0000051C  C8 0000 00			 ENTERD	 00000h,0
3  6263	00000520  8B 75	08			 mov	 esi, ptrMachine
2  6264	00000523  8B 46	18			 mov	 eax, [esi].reg_cpd
2  6265
2  6266	00000526  50				 push	 eax
2  6267	00000527  56				 push	 esi
2  6268	00000528  E8 FFFFFD4E			 call	 internals_PushValue
2  6269
2  6270	0000052D  FF 46	1C			 inc	 [esi].reg_ip
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 111
pmScript.ASM



3  6271	00000530  C9				 LEAVED
3  6272	00000531  C2 0004			 RET	 00004h
2  6273	00000534			 vm_pushcpd		 endp
2  6274
2  6275	00000534			 vm_popvar		 proc	 STDCALL, ptrMachine:DWORD
3  6276	00000534  C8 0000 00			 ENTERD	 00000h,0
3  6277	00000538  8B 75	08			 mov	 esi, ptrMachine
2  6278	0000053B  56				 push	 esi
2  6279	0000053C  E8 FFFFFD6E			 call	 internals_PopValue
2  6280
2  6281	00000541  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6282	00000545  C9				 LEAVED
3  6283	00000546  C2 0004			 RET	 00004h
2  6284	00000549			 vm_popvar		 endp
2  6285
2  6286	00000549			 vm_popacc		 proc	 STDCALL, ptrMachine:DWORD
3  6287	00000549  C8 0000 00			 ENTERD	 00000h,0
3  6288	0000054D  8B 75	08			 mov	 esi, ptrMachine
2  6289	00000550  56				 push	 esi
2  6290	00000551  E8 FFFFFD59			 call	 internals_PopValue
2  6291	00000556  89 46	04			 mov	 [esi].reg_acc,	eax
2  6292
2  6293	00000559  FF 46	1C			 inc	 [esi].reg_ip
3  6294	0000055C  C9				 LEAVED
3  6295	0000055D  C2 0004			 RET	 00004h
2  6296	00000560			 vm_popacc		 endp
2  6297
2  6298	00000560			 vm_popcnt		 proc	 STDCALL, ptrMachine:DWORD
3  6299	00000560  C8 0000 00			 ENTERD	 00000h,0
3  6300	00000564  8B 75	08			 mov	 esi, ptrMachine
2  6301	00000567  56				 push	 esi
2  6302	00000568  E8 FFFFFD42			 call	 internals_PopValue
2  6303	0000056D  89 46	08			 mov	 [esi].reg_cnt,	eax
2  6304
2  6305	00000570  FF 46	1C			 inc	 [esi].reg_ip
3  6306	00000573  C9				 LEAVED
3  6307	00000574  C2 0004			 RET	 00004h
2  6308	00000577			 vm_popcnt		 endp
2  6309
2  6310	00000577			 vm_popdat		 proc	 STDCALL, ptrMachine:DWORD
3  6311	00000577  C8 0000 00			 ENTERD	 00000h,0
3  6312	0000057B  8B 75	08			 mov	 esi, ptrMachine
2  6313	0000057E  56				 push	 esi
2  6314	0000057F  E8 FFFFFD2B			 call	 internals_PopValue
2  6315	00000584  89 46	0C			 mov	 [esi].reg_dat,	eax
2  6316
2  6317	00000587  FF 46	1C			 inc	 [esi].reg_ip
3  6318	0000058A  C9				 LEAVED
3  6319	0000058B  C2 0004			 RET	 00004h
2  6320	0000058E			 vm_popdat		 endp
2  6321
2  6322	0000058E			 vm_popcps		 proc	 STDCALL, ptrMachine:DWORD
3  6323	0000058E  C8 0000 00			 ENTERD	 00000h,0
3  6324	00000592  8B 75	08			 mov	 esi, ptrMachine
2  6325	00000595  56				 push	 esi
2  6326	00000596  E8 FFFFFD14			 call	 internals_PopValue
2  6327	0000059B  89 46	14			 mov	 [esi].reg_cps,	eax
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 112
pmScript.ASM



2  6328
2  6329	0000059E  FF 46	1C			 inc	 [esi].reg_ip
3  6330	000005A1  C9				 LEAVED
3  6331	000005A2  C2 0004			 RET	 00004h
2  6332	000005A5			 vm_popcps		 endp
2  6333
2  6334	000005A5			 vm_popcpd		 proc	 STDCALL, ptrMachine:DWORD
3  6335	000005A5  C8 0000 00			 ENTERD	 00000h,0
3  6336	000005A9  8B 75	08			 mov	 esi, ptrMachine
2  6337	000005AC  56				 push	 esi
2  6338	000005AD  E8 FFFFFCFD			 call	 internals_PopValue
2  6339	000005B2  89 46	18			 mov	 [esi].reg_cpd,	eax
2  6340
2  6341	000005B5  FF 46	1C			 inc	 [esi].reg_ip
3  6342	000005B8  C9				 LEAVED
3  6343	000005B9  C2 0004			 RET	 00004h
2  6344	000005BC			 vm_popcpd		 endp
2  6345
2  6346
2  6347
1  6348					 INCLUDE ops_mov.inc
2  6349
2  6350
2  6351	000005BC				 .code
2  6352
2  6353					 ;-----------------------------------------------------------------------------------------[+
   6354					 mov acc, immediate
2  6355	000005BC			 vm_movaccimm		 proc	 STDCALL, ptrMachine:DWORD
3  6356	000005BC  C8 0000 00			 ENTERD	 00000h,0
3  6357	000005C0  8B 75	08			 mov	 esi, ptrMachine
2  6358	000005C3  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6359	000005C6  47				 inc	 edi
2  6360
2  6361	000005C7  57				 push	 edi
2  6362	000005C8  56				 push	 esi
2  6363	000005C9  E8 FFFFFD11			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  6364
2  6365	000005CE  89 46	04			 mov	 [esi].reg_acc,	eax
2  6366
2  6367	000005D1  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6368	000005D5  C9				 LEAVED
3  6369	000005D6  C2 0004			 RET	 00004h
2  6370	000005D9			 vm_movaccimm		 endp
2  6371
2  6372					 ;-----------------------------------------------------------------------------------------[+
   6373					 mov cnt, immediate
2  6374	000005D9			 vm_movcntimm		 proc	 STDCALL, ptrMachine:DWORD
3  6375	000005D9  C8 0000 00			 ENTERD	 00000h,0
3  6376	000005DD  8B 75	08			 mov	 esi, ptrMachine
2  6377	000005E0  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6378	000005E3  47				 inc	 edi
2  6379
2  6380	000005E4  57				 push	 edi
2  6381	000005E5  56				 push	 esi
2  6382	000005E6  E8 FFFFFCF4			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  6383
2  6384	000005EB  89 46	08			 mov	 [esi].reg_cnt,	eax
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 113
pmScript.ASM



2  6385
2  6386	000005EE  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6387	000005F2  C9				 LEAVED
3  6388	000005F3  C2 0004			 RET	 00004h
2  6389	000005F6			 vm_movcntimm		 endp
2  6390
2  6391					 ;-----------------------------------------------------------------------------------------[+
   6392					 mov dat, immediate
2  6393	000005F6			 vm_movdatimm		 proc	 STDCALL, ptrMachine:DWORD
3  6394	000005F6  C8 0000 00			 ENTERD	 00000h,0
3  6395	000005FA  8B 75	08			 mov	 esi, ptrMachine
2  6396	000005FD  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6397	00000600  47				 inc	 edi
2  6398
2  6399	00000601  57				 push	 edi
2  6400	00000602  56				 push	 esi
2  6401	00000603  E8 FFFFFCD7			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  6402
2  6403	00000608  89 46	0C			 mov	 [esi].reg_dat,	eax
2  6404
2  6405	0000060B  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6406	0000060F  C9				 LEAVED
3  6407	00000610  C2 0004			 RET	 00004h
2  6408	00000613			 vm_movdatimm		 endp
2  6409
2  6410					 ;-----------------------------------------------------------------------------------------[+
   6411					 mov acc, cnt
2  6412	00000613			 vm_movacccnt		 proc	 STDCALL, ptrMachine:DWORD
3  6413	00000613  C8 0000 00			 ENTERD	 00000h,0
3  6414	00000617  8B 75	08			 mov	 esi, ptrMachine
2  6415	0000061A  8B 46	08			 mov	 eax, [esi].reg_cnt
2  6416	0000061D  89 46	04			 mov	 [esi].reg_acc,	eax
2  6417	00000620  FF 46	1C			 inc	 [esi].reg_ip
3  6418	00000623  C9				 LEAVED
3  6419	00000624  C2 0004			 RET	 00004h
2  6420	00000627			 vm_movacccnt		 endp
2  6421
2  6422					 ;-----------------------------------------------------------------------------------------[+
   6423					 mov acc, dat
2  6424	00000627			 vm_movaccdat		 proc	 STDCALL, ptrMachine:DWORD
3  6425	00000627  C8 0000 00			 ENTERD	 00000h,0
3  6426	0000062B  8B 75	08			 mov	 esi, ptrMachine
2  6427	0000062E  8B 46	0C			 mov	 eax, [esi].reg_dat
2  6428	00000631  89 46	04			 mov	 [esi].reg_acc,	eax
2  6429	00000634  FF 46	1C			 inc	 [esi].reg_ip
3  6430	00000637  C9				 LEAVED
3  6431	00000638  C2 0004			 RET	 00004h
2  6432	0000063B			 vm_movaccdat		 endp
2  6433
2  6434					 ;-----------------------------------------------------------------------------------------[+
   6435					 mov acc, rnd
2  6436	0000063B			 vm_movaccrnd		 proc	 STDCALL, ptrMachine:DWORD
3  6437	0000063B  C8 0000 00			 ENTERD	 00000h,0
3  6438	0000063F  8B 75	08			 mov	 esi, ptrMachine
2  6439	00000642  8B 46	10			 mov	 eax, [esi].reg_rnd
2  6440	00000645  89 46	04			 mov	 [esi].reg_acc,	eax
2  6441	00000648  50				 push	 eax
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 114
pmScript.ASM



2  6442	00000649  E8 FFFFFBA0			 call	 RandomNumber
2  6443	0000064E  89 46	10			 mov	 [esi].reg_rnd,	eax
2  6444	00000651  FF 46	1C			 inc	 [esi].reg_ip
3  6445	00000654  C9				 LEAVED
3  6446	00000655  C2 0004			 RET	 00004h
2  6447	00000658			 vm_movaccrnd		 endp
2  6448
2  6449					 ;-----------------------------------------------------------------------------------------[+
   6450					 mov cnt, acc
2  6451	00000658			 vm_movcntacc		 proc	 STDCALL, ptrMachine:DWORD
3  6452	00000658  C8 0000 00			 ENTERD	 00000h,0
3  6453	0000065C  8B 75	08			 mov	 esi, ptrMachine
2  6454	0000065F  8B 46	04			 mov	 eax, [esi].reg_acc
2  6455	00000662  89 46	08			 mov	 [esi].reg_cnt,	eax
2  6456	00000665  FF 46	1C			 inc	 [esi].reg_ip
3  6457	00000668  C9				 LEAVED
3  6458	00000669  C2 0004			 RET	 00004h
2  6459	0000066C			 vm_movcntacc		 endp
2  6460
2  6461					 ;-----------------------------------------------------------------------------------------[+
   6462					 mov cnt, dat
2  6463	0000066C			 vm_movcntdat		 proc	 STDCALL, ptrMachine:DWORD
3  6464	0000066C  C8 0000 00			 ENTERD	 00000h,0
3  6465	00000670  8B 75	08			 mov	 esi, ptrMachine
2  6466	00000673  8B 46	0C			 mov	 eax, [esi].reg_dat
2  6467	00000676  89 46	08			 mov	 [esi].reg_cnt,	eax
2  6468	00000679  FF 46	1C			 inc	 [esi].reg_ip
3  6469	0000067C  C9				 LEAVED
3  6470	0000067D  C2 0004			 RET	 00004h
2  6471	00000680			 vm_movcntdat		 endp
2  6472
2  6473					 ;-----------------------------------------------------------------------------------------[+
   6474					 mov cnt, rnd
2  6475	00000680			 vm_movcntrnd		 proc	 STDCALL, ptrMachine:DWORD
3  6476	00000680  C8 0000 00			 ENTERD	 00000h,0
3  6477	00000684  8B 75	08			 mov	 esi, ptrMachine
2  6478	00000687  8B 46	10			 mov	 eax, [esi].reg_rnd
2  6479	0000068A  89 46	08			 mov	 [esi].reg_cnt,	eax
2  6480	0000068D  50				 push	 eax
2  6481	0000068E  E8 FFFFFB5B			 call	 RandomNumber
2  6482	00000693  89 46	10			 mov	 [esi].reg_rnd,	eax
2  6483	00000696  FF 46	1C			 inc	 [esi].reg_ip
3  6484	00000699  C9				 LEAVED
3  6485	0000069A  C2 0004			 RET	 00004h
2  6486	0000069D			 vm_movcntrnd		 endp
2  6487
2  6488					 ;-----------------------------------------------------------------------------------------[+
   6489					 mov dat, acc
2  6490	0000069D			 vm_movdatacc		 proc	 STDCALL, ptrMachine:DWORD
3  6491	0000069D  C8 0000 00			 ENTERD	 00000h,0
3  6492	000006A1  8B 75	08			 mov	 esi, ptrMachine
2  6493	000006A4  8B 46	04			 mov	 eax, [esi].reg_acc
2  6494	000006A7  89 46	0C			 mov	 [esi].reg_dat,	eax
2  6495	000006AA  FF 46	1C			 inc	 [esi].reg_ip
3  6496	000006AD  C9				 LEAVED
3  6497	000006AE  C2 0004			 RET	 00004h
2  6498	000006B1			 vm_movdatacc		 endp
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 115
pmScript.ASM



2  6499
2  6500					 ;-----------------------------------------------------------------------------------------[+
   6501					 mov dat, cnt
2  6502	000006B1			 vm_movdatcnt		 proc	 STDCALL, ptrMachine:DWORD
3  6503	000006B1  C8 0000 00			 ENTERD	 00000h,0
3  6504	000006B5  8B 75	08			 mov	 esi, ptrMachine
2  6505	000006B8  8B 46	08			 mov	 eax, [esi].reg_cnt
2  6506	000006BB  89 46	0C			 mov	 [esi].reg_dat,	eax
2  6507	000006BE  FF 46	1C			 inc	 [esi].reg_ip
3  6508	000006C1  C9				 LEAVED
3  6509	000006C2  C2 0004			 RET	 00004h
2  6510	000006C5			 vm_movdatcnt		 endp
2  6511
2  6512					 ;-----------------------------------------------------------------------------------------[+
   6513					 mov dat, rnd
2  6514	000006C5			 vm_movdatrnd		 proc	 STDCALL, ptrMachine:DWORD
3  6515	000006C5  C8 0000 00			 ENTERD	 00000h,0
3  6516	000006C9  8B 75	08			 mov	 esi, ptrMachine
2  6517	000006CC  8B 46	10			 mov	 eax, [esi].reg_rnd
2  6518	000006CF  89 46	0C			 mov	 [esi].reg_dat,	eax
2  6519	000006D2  50				 push	 eax
2  6520	000006D3  E8 FFFFFB16			 call	 RandomNumber
2  6521	000006D8  89 46	10			 mov	 [esi].reg_rnd,	eax
2  6522	000006DB  FF 46	1C			 inc	 [esi].reg_ip
3  6523	000006DE  C9				 LEAVED
3  6524	000006DF  C2 0004			 RET	 00004h
2  6525	000006E2			 vm_movdatrnd		 endp
2  6526
2  6527					 ;-----------------------------------------------------------------------------------------[+
   6528					 mov acc, variable
2  6529	000006E2			 vm_movaccvar		 proc	 STDCALL, ptrMachine:DWORD
3  6530	000006E2  C8 0000 00			 ENTERD	 00000h,0
3  6531	000006E6  8B 75	08			 mov	 esi, ptrMachine
2  6532	000006E9  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6533	000006EC  47				 inc	 edi
2  6534
2  6535	000006ED  57				 push	 edi
2  6536	000006EE  56				 push	 esi
2  6537	000006EF  E8 FFFFFBEB			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6538					 (address)
2  6539
2  6540	000006F4  50				 push	 eax
2  6541	000006F5  56				 push	 esi
2  6542	000006F6  E8 FFFFFBE4			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6543					 (value)
2  6544
2  6545	000006FB  89 46	04			 mov	 [esi].reg_acc,	eax
2  6546
2  6547	000006FE  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6548	00000702  C9				 LEAVED
3  6549	00000703  C2 0004			 RET	 00004h
2  6550	00000706			 vm_movaccvar		 endp
2  6551
2  6552					 ;-----------------------------------------------------------------------------------------[+
   6553					 mov cnt, variable
2  6554	00000706			 vm_movcntvar		 proc	 STDCALL, ptrMachine:DWORD
3  6555	00000706  C8 0000 00			 ENTERD	 00000h,0
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 116
pmScript.ASM



3  6556	0000070A  8B 75	08			 mov	 esi, ptrMachine
2  6557	0000070D  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6558	00000710  47				 inc	 edi
2  6559
2  6560	00000711  57				 push	 edi
2  6561	00000712  56				 push	 esi
2  6562	00000713  E8 FFFFFBC7			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6563					 (address)
2  6564
2  6565	00000718  50				 push	 eax
2  6566	00000719  56				 push	 esi
2  6567	0000071A  E8 FFFFFBC0			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6568					 (value)
2  6569
2  6570	0000071F  89 46	08			 mov	 [esi].reg_cnt,	eax
2  6571
2  6572	00000722  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6573	00000726  C9				 LEAVED
3  6574	00000727  C2 0004			 RET	 00004h
2  6575	0000072A			 vm_movcntvar		 endp
2  6576
2  6577					 ;-----------------------------------------------------------------------------------------[+
   6578					 mov dat, variable
2  6579	0000072A			 vm_movdatvar		 proc	 STDCALL, ptrMachine:DWORD
3  6580	0000072A  C8 0000 00			 ENTERD	 00000h,0
3  6581	0000072E  8B 75	08			 mov	 esi, ptrMachine
2  6582	00000731  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6583	00000734  47				 inc	 edi
2  6584
2  6585	00000735  57				 push	 edi
2  6586	00000736  56				 push	 esi
2  6587	00000737  E8 FFFFFBA3			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6588					 (address)
2  6589
2  6590	0000073C  50				 push	 eax
2  6591	0000073D  56				 push	 esi
2  6592	0000073E  E8 FFFFFB9C			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6593					 (value)
2  6594
2  6595	00000743  89 46	0C			 mov	 [esi].reg_dat,	eax
2  6596
2  6597	00000746  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6598	0000074A  C9				 LEAVED
3  6599	0000074B  C2 0004			 RET	 00004h
2  6600	0000074E			 vm_movdatvar		 endp
2  6601
2  6602					 ;-----------------------------------------------------------------------------------------[+
   6603					 mov cps, variable
2  6604	0000074E			 vm_movcpsvar		 proc	 STDCALL, ptrMachine:DWORD
3  6605	0000074E  C8 0000 00			 ENTERD	 00000h,0
3  6606	00000752  8B 75	08			 mov	 esi, ptrMachine
2  6607	00000755  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6608	00000758  47				 inc	 edi
2  6609
2  6610	00000759  57				 push	 edi
2  6611	0000075A  56				 push	 esi
2  6612	0000075B  E8 FFFFFB7F			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 117
pmScript.ASM



   6613					 (address)
2  6614
2  6615	00000760  50				 push	 eax
2  6616	00000761  56				 push	 esi
2  6617	00000762  E8 FFFFFB78			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6618					 (value)
2  6619
2  6620	00000767  89 46	14			 mov	 [esi].reg_cps,	eax
2  6621
2  6622	0000076A  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6623	0000076E  C9				 LEAVED
3  6624	0000076F  C2 0004			 RET	 00004h
2  6625	00000772			 vm_movcpsvar		 endp
2  6626
2  6627					 ;-----------------------------------------------------------------------------------------[+
   6628					 mov cpd, variable
2  6629	00000772			 vm_movcpdvar		 proc	 STDCALL, ptrMachine:DWORD
3  6630	00000772  C8 0000 00			 ENTERD	 00000h,0
3  6631	00000776  8B 75	08			 mov	 esi, ptrMachine
2  6632	00000779  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6633	0000077C  47				 inc	 edi
2  6634
2  6635	0000077D  57				 push	 edi
2  6636	0000077E  56				 push	 esi
2  6637	0000077F  E8 FFFFFB5B			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6638					 (address)
2  6639
2  6640	00000784  50				 push	 eax
2  6641	00000785  56				 push	 esi
2  6642	00000786  E8 FFFFFB54			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6643					 (value)
2  6644
2  6645	0000078B  89 46	18			 mov	 [esi].reg_cpd,	eax
2  6646
2  6647	0000078E  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6648	00000792  C9				 LEAVED
3  6649	00000793  C2 0004			 RET	 00004h
2  6650	00000796			 vm_movcpdvar		 endp
2  6651
2  6652					 ;-----------------------------------------------------------------------------------------[+
   6653					 mov variable, immediate
2  6654	00000796			 vm_movvarimm		 proc	 STDCALL, ptrMachine:DWORD
3  6655	00000796  C8 0000 00			 ENTERD	 00000h,0
3  6656	0000079A  8B 75	08			 mov	 esi, ptrMachine
2  6657	0000079D  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6658	000007A0  47				 inc	 edi
2  6659
2  6660	000007A1  57				 push	 edi
2  6661	000007A2  56				 push	 esi
2  6662	000007A3  E8 FFFFFB37			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6663					 (address)
2  6664	000007A8  8B D0				 mov	 edx, eax				 ; EDX -> variable address
2  6665
2  6666	000007AA  83 C7	04			 add	 edi, 4					 ; Gets	next 32	bit value
2  6667	000007AD  57				 push	 edi
2  6668	000007AE  56				 push	 esi
2  6669	000007AF  E8 FFFFFB2B			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 118
pmScript.ASM



   6670					 (value)
2  6671
2  6672	000007B4  50				 push	 eax
2  6673	000007B5  52				 push	 edx
2  6674	000007B6  56				 push	 esi
2  6675	000007B7  E8 FFFFFB58			 call	 internals_WriteValue			 ; Store immediate in variable
2  6676
2  6677	000007BC  83 46	1C 09			 add	 [esi].reg_ip, 9
3  6678	000007C0  C9				 LEAVED
3  6679	000007C1  C2 0004			 RET	 00004h
2  6680	000007C4			 vm_movvarimm		 endp
2  6681
2  6682					 ;-----------------------------------------------------------------------------------------[+
   6683					 mov variable, acc
2  6684	000007C4			 vm_movvaracc		 proc	 STDCALL, ptrMachine:DWORD
3  6685	000007C4  C8 0000 00			 ENTERD	 00000h,0
3  6686	000007C8  8B 75	08			 mov	 esi, ptrMachine
2  6687	000007CB  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6688	000007CE  47				 inc	 edi
2  6689
2  6690	000007CF  57				 push	 edi
2  6691	000007D0  56				 push	 esi
2  6692	000007D1  E8 FFFFFB09			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6693					 (address)
2  6694
2  6695	000007D6  FF 76	04			 push	 [esi].reg_acc
2  6696	000007D9  50				 push	 eax
2  6697	000007DA  56				 push	 esi
2  6698	000007DB  E8 FFFFFB34			 call	 internals_WriteValue			 ; Store acc in	variable
2  6699
2  6700	000007E0  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6701	000007E4  C9				 LEAVED
3  6702	000007E5  C2 0004			 RET	 00004h
2  6703	000007E8			 vm_movvaracc		 endp
2  6704
2  6705					 ;-----------------------------------------------------------------------------------------[+
   6706					 mov variable, cnt
2  6707	000007E8			 vm_movvarcnt		 proc	 STDCALL, ptrMachine:DWORD
3  6708	000007E8  C8 0000 00			 ENTERD	 00000h,0
3  6709	000007EC  8B 75	08			 mov	 esi, ptrMachine
2  6710	000007EF  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6711	000007F2  47				 inc	 edi
2  6712
2  6713	000007F3  57				 push	 edi
2  6714	000007F4  56				 push	 esi
2  6715	000007F5  E8 FFFFFAE5			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6716					 (address)
2  6717
2  6718	000007FA  FF 76	08			 push	 [esi].reg_cnt
2  6719	000007FD  50				 push	 eax
2  6720	000007FE  56				 push	 esi
2  6721	000007FF  E8 FFFFFB10			 call	 internals_WriteValue			 ; Store acc in	variable
2  6722
2  6723	00000804  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6724	00000808  C9				 LEAVED
3  6725	00000809  C2 0004			 RET	 00004h
2  6726	0000080C			 vm_movvarcnt		 endp
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 119
pmScript.ASM



2  6727
2  6728					 ;-----------------------------------------------------------------------------------------[+
   6729					 mov variable, dat
2  6730	0000080C			 vm_movvardat		 proc	 STDCALL, ptrMachine:DWORD
3  6731	0000080C  C8 0000 00			 ENTERD	 00000h,0
3  6732	00000810  8B 75	08			 mov	 esi, ptrMachine
2  6733	00000813  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6734	00000816  47				 inc	 edi
2  6735
2  6736	00000817  57				 push	 edi
2  6737	00000818  56				 push	 esi
2  6738	00000819  E8 FFFFFAC1			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6739					 (address)
2  6740
2  6741	0000081E  FF 76	0C			 push	 [esi].reg_dat
2  6742	00000821  50				 push	 eax
2  6743	00000822  56				 push	 esi
2  6744	00000823  E8 FFFFFAEC			 call	 internals_WriteValue			 ; Store acc in	variable
2  6745
2  6746	00000828  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6747	0000082C  C9				 LEAVED
3  6748	0000082D  C2 0004			 RET	 00004h
2  6749	00000830			 vm_movvardat		 endp
2  6750
2  6751					 ;-----------------------------------------------------------------------------------------[+
   6752					 mov variable, rnd
2  6753	00000830			 vm_movvarrnd		 proc	 STDCALL, ptrMachine:DWORD
3  6754	00000830  C8 0000 00			 ENTERD	 00000h,0
3  6755	00000834  8B 75	08			 mov	 esi, ptrMachine
2  6756	00000837  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6757	0000083A  47				 inc	 edi
2  6758
2  6759	0000083B  57				 push	 edi
2  6760	0000083C  56				 push	 esi
2  6761	0000083D  E8 FFFFFA9D			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   6762					 (address)
2  6763
2  6764	00000842  FF 76	10			 push	 [esi].reg_rnd
2  6765	00000845  50				 push	 eax
2  6766	00000846  56				 push	 esi
2  6767	00000847  E8 FFFFFAC8			 call	 internals_WriteValue			 ; Store acc in	variable
2  6768
2  6769	0000084C  FF 76	10			 push	 [esi].reg_rnd
2  6770	0000084F  E8 FFFFF99A			 call	 RandomNumber
2  6771	00000854  89 46	10			 mov	 [esi].reg_rnd,	eax
2  6772
2  6773	00000857  83 46	1C 05			 add	 [esi].reg_ip, 5
3  6774	0000085B  C9				 LEAVED
3  6775	0000085C  C2 0004			 RET	 00004h
2  6776	0000085F			 vm_movvarrnd		 endp
2  6777
2  6778					 ;-----------------------------------------------------------------------------------------[+
   6779					 mov cps, acc
2  6780	0000085F			 vm_movcpsacc		 proc	 STDCALL, ptrMachine:DWORD
3  6781	0000085F  C8 0000 00			 ENTERD	 00000h,0
3  6782	00000863  8B 75	08			 mov	 esi, ptrMachine
2  6783	00000866  8B 46	04			 mov	 eax, [esi].reg_acc
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 120
pmScript.ASM



2  6784	00000869  89 46	14			 mov	 [esi].reg_cps,	eax
2  6785	0000086C  FF 46	1C			 inc	 [esi].reg_ip
3  6786	0000086F  C9				 LEAVED
3  6787	00000870  C2 0004			 RET	 00004h
2  6788	00000873			 vm_movcpsacc		 endp
2  6789
2  6790					 ;-----------------------------------------------------------------------------------------[+
   6791					 mov cpd, acc
2  6792	00000873			 vm_movcpdacc		 proc	 STDCALL, ptrMachine:DWORD
3  6793	00000873  C8 0000 00			 ENTERD	 00000h,0
3  6794	00000877  8B 75	08			 mov	 esi, ptrMachine
2  6795	0000087A  8B 46	04			 mov	 eax, [esi].reg_acc
2  6796	0000087D  89 46	18			 mov	 [esi].reg_cpd,	eax
2  6797	00000880  FF 46	1C			 inc	 [esi].reg_ip
3  6798	00000883  C9				 LEAVED
3  6799	00000884  C2 0004			 RET	 00004h
2  6800	00000887			 vm_movcpdacc		 endp
2  6801
2  6802					 ;-----------------------------------------------------------------------------------------[+
   6803					 mov acc, cps
2  6804	00000887			 vm_movacccps		 proc	 STDCALL, ptrMachine:DWORD
3  6805	00000887  C8 0000 00			 ENTERD	 00000h,0
3  6806	0000088B  8B 75	08			 mov	 esi, ptrMachine
2  6807	0000088E  8B 46	14			 mov	 eax, [esi].reg_cps
2  6808	00000891  89 46	04			 mov	 [esi].reg_acc,	eax
2  6809	00000894  FF 46	1C			 inc	 [esi].reg_ip
3  6810	00000897  C9				 LEAVED
3  6811	00000898  C2 0004			 RET	 00004h
2  6812	0000089B			 vm_movacccps		 endp
2  6813
2  6814					 ;-----------------------------------------------------------------------------------------[+
   6815					 mov acc, cpd
2  6816	0000089B			 vm_movacccpd		 proc	 STDCALL, ptrMachine:DWORD
3  6817	0000089B  C8 0000 00			 ENTERD	 00000h,0
3  6818	0000089F  8B 75	08			 mov	 esi, ptrMachine
2  6819	000008A2  8B 46	18			 mov	 eax, [esi].reg_cpd
2  6820	000008A5  89 46	04			 mov	 [esi].reg_acc,	eax
2  6821	000008A8  FF 46	1C			 inc	 [esi].reg_ip
3  6822	000008AB  C9				 LEAVED
3  6823	000008AC  C2 0004			 RET	 00004h
2  6824	000008AF			 vm_movacccpd		 endp
2  6825
2  6826					 ;-----------------------------------------------------------------------------------------[+
   6827					 mov cps, dat
2  6828	000008AF			 vm_movcpsdat		 proc	 STDCALL, ptrMachine:DWORD
3  6829	000008AF  C8 0000 00			 ENTERD	 00000h,0
3  6830	000008B3  8B 75	08			 mov	 esi, ptrMachine
2  6831	000008B6  8B 46	0C			 mov	 eax, [esi].reg_dat
2  6832	000008B9  89 46	14			 mov	 [esi].reg_cps,	eax
2  6833	000008BC  FF 46	1C			 inc	 [esi].reg_ip
3  6834	000008BF  C9				 LEAVED
3  6835	000008C0  C2 0004			 RET	 00004h
2  6836	000008C3			 vm_movcpsdat		 endp
2  6837
2  6838					 ;-----------------------------------------------------------------------------------------[+
   6839					 mov cpd, dat
2  6840	000008C3			 vm_movcpddat		 proc	 STDCALL, ptrMachine:DWORD
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 121
pmScript.ASM



3  6841	000008C3  C8 0000 00			 ENTERD	 00000h,0
3  6842	000008C7  8B 75	08			 mov	 esi, ptrMachine
2  6843	000008CA  8B 46	0C			 mov	 eax, [esi].reg_dat
2  6844	000008CD  89 46	18			 mov	 [esi].reg_cpd,	eax
2  6845	000008D0  FF 46	1C			 inc	 [esi].reg_ip
3  6846	000008D3  C9				 LEAVED
3  6847	000008D4  C2 0004			 RET	 00004h
2  6848	000008D7			 vm_movcpddat		 endp
2  6849
2  6850					 ;-----------------------------------------------------------------------------------------[+
   6851					 mov dat, cps
2  6852	000008D7			 vm_movdatcps		 proc	 STDCALL, ptrMachine:DWORD
3  6853	000008D7  C8 0000 00			 ENTERD	 00000h,0
3  6854	000008DB  8B 75	08			 mov	 esi, ptrMachine
2  6855	000008DE  8B 46	14			 mov	 eax, [esi].reg_cps
2  6856	000008E1  89 46	0C			 mov	 [esi].reg_dat,	eax
2  6857	000008E4  FF 46	1C			 inc	 [esi].reg_ip
3  6858	000008E7  C9				 LEAVED
3  6859	000008E8  C2 0004			 RET	 00004h
2  6860	000008EB			 vm_movdatcps		 endp
2  6861
2  6862					 ;-----------------------------------------------------------------------------------------[+
   6863					 mov dat, cpd
2  6864	000008EB			 vm_movdatcpd		 proc	 STDCALL, ptrMachine:DWORD
3  6865	000008EB  C8 0000 00			 ENTERD	 00000h,0
3  6866	000008EF  8B 75	08			 mov	 esi, ptrMachine
2  6867	000008F2  8B 46	18			 mov	 eax, [esi].reg_cpd
2  6868	000008F5  89 46	0C			 mov	 [esi].reg_dat,	eax
2  6869	000008F8  FF 46	1C			 inc	 [esi].reg_ip
3  6870	000008FB  C9				 LEAVED
3  6871	000008FC  C2 0004			 RET	 00004h
2  6872	000008FF			 vm_movdatcpd		 endp
2  6873
2  6874					 ;-----------------------------------------------------------------------------------------[+
   6875					 mov cps, cpd
2  6876	000008FF			 vm_movcpscpd		 proc	 STDCALL, ptrMachine:DWORD
3  6877	000008FF  C8 0000 00			 ENTERD	 00000h,0
3  6878	00000903  8B 75	08			 mov	 esi, ptrMachine
2  6879	00000906  8B 46	18			 mov	 eax, [esi].reg_cpd
2  6880	00000909  89 46	14			 mov	 [esi].reg_cps,	eax
2  6881	0000090C  FF 46	1C			 inc	 [esi].reg_ip
3  6882	0000090F  C9				 LEAVED
3  6883	00000910  C2 0004			 RET	 00004h
2  6884	00000913			 vm_movcpscpd		 endp
2  6885
2  6886					 ;-----------------------------------------------------------------------------------------[+
   6887					 mov cpd, cps
2  6888	00000913			 vm_movcpdcps		 proc	 STDCALL, ptrMachine:DWORD
3  6889	00000913  C8 0000 00			 ENTERD	 00000h,0
3  6890	00000917  8B 75	08			 mov	 esi, ptrMachine
2  6891	0000091A  8B 46	14			 mov	 eax, [esi].reg_cps
2  6892	0000091D  89 46	18			 mov	 [esi].reg_cpd,	eax
2  6893	00000920  FF 46	1C			 inc	 [esi].reg_ip
3  6894	00000923  C9				 LEAVED
3  6895	00000924  C2 0004			 RET	 00004h
2  6896	00000927			 vm_movcpdcps		 endp
2  6897
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 122
pmScript.ASM



2  6898
1  6899					 INCLUDE ops_copier.inc
2  6900					 MoveDirection		 macro	 regkey
2  6901						 mov	 bl, [esi].reg_flags
2  6902						 and	 bl, VMFLAG_DIRECTION
2  6903						 .IF bl	== 0
2  6904							 inc	 [esi].regkey
2  6905						 .ELSE
2  6906							 dec	 [esi].regkey
2  6907						 .ENDIF
2  6908								 endm
2  6909
2  6910					 MoveDirection4	 macro	 regkey
2  6911						 push	 ebx
2  6912						 mov	 bl, [esi].reg_flags
2  6913						 and	 bl, VMFLAG_DIRECTION
2  6914						 .IF bl	== 0
2  6915							 add	 [esi].regkey, 4
2  6916						 .ELSE
2  6917							 sub	 [esi].regkey, 4
2  6918						 .ENDIF
2  6919						 pop	 ebx
2  6920								 endm
2  6921
2  6922	00000927				 .code
2  6923
2  6924					 ;-----------------------------------------------------------------------------------------[+
   6925					 lods
2  6926	00000927			 vm_lods	 proc	 STDCALL, ptrMachine:DWORD
3  6927	00000927  C8 0000 00			 ENTERD	 00000h,0
3  6928	0000092B  8B 75	08			 mov	 esi, ptrMachine
2  6929	0000092E  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6930
2  6931	00000931  FF 76	14			 push	 [esi].reg_cps
2  6932	00000934  56				 push	 esi
2  6933	00000935  E8 FFFFF9A5			 call	 internals_ReadValue
2  6934						 MoveDirection4	 reg_cps
3  6935	0000093A  53				 push	 ebx
3  6936	0000093B  8A 5E	24			 mov	 bl, [esi].reg_flags
3  6937	0000093E  80 E3	04			 and	 bl, VMFLAG_DIRECTION
4  6938	00000941  80 FB	00			 cmp	 bl,0
4  6939	00000944  75 06				 jnz	 @C0003
3  6940	00000946  83 46	14 04				 add	 [esi].reg_cps,	4
4  6941	0000094A  EB 04				 jmp	 @C0002
4  6942	0000094C			 @C0003:
3  6943	0000094C  83 6E	14 04				 sub	 [esi].reg_cps,	4
4  6944	00000950			 @C0002:
3  6945	00000950  5B				 pop	 ebx
2  6946	00000951  89 46	04			 mov	 [esi].reg_acc,	eax
2  6947
2  6948	00000954  FF 46	1C			 inc	 [esi].reg_ip
3  6949	00000957  C9				 LEAVED
3  6950	00000958  C2 0004			 RET	 00004h
2  6951	0000095B			 vm_lods	 endp
2  6952
2  6953					 ;-----------------------------------------------------------------------------------------[+
   6954					 stos
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 123
pmScript.ASM



2  6955	0000095B			 vm_stos	 proc	 STDCALL, ptrMachine:DWORD
3  6956	0000095B  C8 0000 00			 ENTERD	 00000h,0
3  6957	0000095F  8B 75	08			 mov	 esi, ptrMachine
2  6958	00000962  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6959
2  6960	00000965  FF 76	04			 push	 [esi].reg_acc
2  6961	00000968  FF 76	18			 push	 [esi].reg_cpd
2  6962	0000096B  56				 push	 esi
2  6963	0000096C  E8 FFFFF9A3			 call	 internals_WriteValue
2  6964						 MoveDirection4	 reg_cpd
3  6965	00000971  53				 push	 ebx
3  6966	00000972  8A 5E	24			 mov	 bl, [esi].reg_flags
3  6967	00000975  80 E3	04			 and	 bl, VMFLAG_DIRECTION
4  6968	00000978  80 FB	00			 cmp	 bl,0
4  6969	0000097B  75 06				 jnz	 @C0005
3  6970	0000097D  83 46	18 04				 add	 [esi].reg_cpd,	4
4  6971	00000981  EB 04				 jmp	 @C0004
4  6972	00000983			 @C0005:
3  6973	00000983  83 6E	18 04				 sub	 [esi].reg_cpd,	4
4  6974	00000987			 @C0004:
3  6975	00000987  5B				 pop	 ebx
2  6976
2  6977	00000988  FF 46	1C			 inc	 [esi].reg_ip
3  6978	0000098B  C9				 LEAVED
3  6979	0000098C  C2 0004			 RET	 00004h
2  6980	0000098F			 vm_stos	 endp
2  6981
2  6982					 ;-----------------------------------------------------------------------------------------[+
   6983					 movs
2  6984	0000098F			 vm_movs	 proc	 STDCALL, ptrMachine:DWORD
3  6985	0000098F  C8 0000 00			 ENTERD	 00000h,0
3  6986	00000993  8B 75	08			 mov	 esi, ptrMachine
2  6987	00000996  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  6988
2  6989	00000999  FF 76	14			 push	 [esi].reg_cps
2  6990	0000099C  56				 push	 esi
2  6991	0000099D  E8 FFFFF93D			 call	 internals_ReadValue
2  6992						 MoveDirection4	 reg_cps
3  6993	000009A2  53				 push	 ebx
3  6994	000009A3  8A 5E	24			 mov	 bl, [esi].reg_flags
3  6995	000009A6  80 E3	04			 and	 bl, VMFLAG_DIRECTION
4  6996	000009A9  80 FB	00			 cmp	 bl,0
4  6997	000009AC  75 06				 jnz	 @C0007
3  6998	000009AE  83 46	14 04				 add	 [esi].reg_cps,	4
4  6999	000009B2  EB 04				 jmp	 @C0006
4  7000	000009B4			 @C0007:
3  7001	000009B4  83 6E	14 04				 sub	 [esi].reg_cps,	4
4  7002	000009B8			 @C0006:
3  7003	000009B8  5B				 pop	 ebx
2  7004	000009B9  50				 push	 eax
2  7005	000009BA  FF 76	18			 push	 [esi].reg_cpd
2  7006	000009BD  56				 push	 esi
2  7007	000009BE  E8 FFFFF951			 call	 internals_WriteValue
2  7008						 MoveDirection4	 reg_cpd
3  7009	000009C3  53				 push	 ebx
3  7010	000009C4  8A 5E	24			 mov	 bl, [esi].reg_flags
3  7011	000009C7  80 E3	04			 and	 bl, VMFLAG_DIRECTION
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 124
pmScript.ASM



4  7012	000009CA  80 FB	00			 cmp	 bl,0
4  7013	000009CD  75 06				 jnz	 @C0009
3  7014	000009CF  83 46	18 04				 add	 [esi].reg_cpd,	4
4  7015	000009D3  EB 04				 jmp	 @C0008
4  7016	000009D5			 @C0009:
3  7017	000009D5  83 6E	18 04				 sub	 [esi].reg_cpd,	4
4  7018	000009D9			 @C0008:
3  7019	000009D9  5B				 pop	 ebx
2  7020
2  7021	000009DA  FF 46	1C			 inc	 [esi].reg_ip
3  7022	000009DD  C9				 LEAVED
3  7023	000009DE  C2 0004			 RET	 00004h
2  7024	000009E1			 vm_movs	 endp
2  7025
2  7026					 ;-----------------------------------------------------------------------------------------[+
   7027					 lodsb
2  7028	000009E1			 vm_lodsb		 proc	 STDCALL, ptrMachine:DWORD
3  7029	000009E1  C8 0000 00			 ENTERD	 00000h,0
3  7030	000009E5  8B 75	08			 mov	 esi, ptrMachine
2  7031	000009E8  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7032
2  7033	000009EB  FF 76	14			 push	 [esi].reg_cps
2  7034	000009EE  56				 push	 esi
2  7035	000009EF  E8 FFFFF95A			 call	 internals_ReadByte
2  7036						 MoveDirection	 reg_cps
3  7037	000009F4  8A 5E	24			 mov	 bl, [esi].reg_flags
3  7038	000009F7  80 E3	04			 and	 bl, VMFLAG_DIRECTION
4  7039	000009FA  80 FB	00			 cmp	 bl,0
4  7040	000009FD  75 05				 jnz	 @C0011
3  7041	000009FF  FF 46	14				 inc	 [esi].reg_cps
4  7042	00000A02  EB 03				 jmp	 @C0010
4  7043	00000A04			 @C0011:
3  7044	00000A04  FF 4E	14				 dec	 [esi].reg_cps
4  7045	00000A07			 @C0010:
2  7046	00000A07  89 46	04			 mov	 [esi].reg_acc,	eax
2  7047
2  7048	00000A0A  FF 46	1C			 inc	 [esi].reg_ip
3  7049	00000A0D  C9				 LEAVED
3  7050	00000A0E  C2 0004			 RET	 00004h
2  7051	00000A11			 vm_lodsb		 endp
2  7052
2  7053					 ;-----------------------------------------------------------------------------------------[+
   7054					 stosb
2  7055	00000A11			 vm_stosb		 proc	 STDCALL, ptrMachine:DWORD
3  7056	00000A11  C8 0000 00			 ENTERD	 00000h,0
3  7057	00000A15  8B 75	08			 mov	 esi, ptrMachine
2  7058	00000A18  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7059
2  7060	00000A1B  FF 76	04			 push	 [esi].reg_acc
2  7061	00000A1E  FF 76	18			 push	 [esi].reg_cpd
2  7062	00000A21  56				 push	 esi
2  7063	00000A22  E8 FFFFF95C			 call	 internals_WriteByte
2  7064						 MoveDirection	 reg_cpd
3  7065	00000A27  8A 5E	24			 mov	 bl, [esi].reg_flags
3  7066	00000A2A  80 E3	04			 and	 bl, VMFLAG_DIRECTION
4  7067	00000A2D  80 FB	00			 cmp	 bl,0
4  7068	00000A30  75 05				 jnz	 @C0013
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 125
pmScript.ASM



3  7069	00000A32  FF 46	18				 inc	 [esi].reg_cpd
4  7070	00000A35  EB 03				 jmp	 @C0012
4  7071	00000A37			 @C0013:
3  7072	00000A37  FF 4E	18				 dec	 [esi].reg_cpd
4  7073	00000A3A			 @C0012:
2  7074
2  7075	00000A3A  FF 46	1C			 inc	 [esi].reg_ip
3  7076	00000A3D  C9				 LEAVED
3  7077	00000A3E  C2 0004			 RET	 00004h
2  7078	00000A41			 vm_stosb		 endp
2  7079
2  7080					 ;-----------------------------------------------------------------------------------------[+
   7081					 movsb
2  7082	00000A41			 vm_movsb		 proc	 STDCALL, ptrMachine:DWORD
3  7083	00000A41  C8 0000 00			 ENTERD	 00000h,0
3  7084	00000A45  8B 75	08			 mov	 esi, ptrMachine
2  7085	00000A48  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7086
2  7087	00000A4B  FF 76	14			 push	 [esi].reg_cps
2  7088	00000A4E  56				 push	 esi
2  7089	00000A4F  E8 FFFFF8FA			 call	 internals_ReadByte
2  7090						 MoveDirection	 reg_cps
3  7091	00000A54  8A 5E	24			 mov	 bl, [esi].reg_flags
3  7092	00000A57  80 E3	04			 and	 bl, VMFLAG_DIRECTION
4  7093	00000A5A  80 FB	00			 cmp	 bl,0
4  7094	00000A5D  75 05				 jnz	 @C0015
3  7095	00000A5F  FF 46	14				 inc	 [esi].reg_cps
4  7096	00000A62  EB 03				 jmp	 @C0014
4  7097	00000A64			 @C0015:
3  7098	00000A64  FF 4E	14				 dec	 [esi].reg_cps
4  7099	00000A67			 @C0014:
2  7100	00000A67  50				 push	 eax
2  7101	00000A68  FF 76	18			 push	 [esi].reg_cpd
2  7102	00000A6B  56				 push	 esi
2  7103	00000A6C  E8 FFFFF912			 call	 internals_WriteByte
2  7104						 MoveDirection	 reg_cpd
3  7105	00000A71  8A 5E	24			 mov	 bl, [esi].reg_flags
3  7106	00000A74  80 E3	04			 and	 bl, VMFLAG_DIRECTION
4  7107	00000A77  80 FB	00			 cmp	 bl,0
4  7108	00000A7A  75 05				 jnz	 @C0017
3  7109	00000A7C  FF 46	18				 inc	 [esi].reg_cpd
4  7110	00000A7F  EB 03				 jmp	 @C0016
4  7111	00000A81			 @C0017:
3  7112	00000A81  FF 4E	18				 dec	 [esi].reg_cpd
4  7113	00000A84			 @C0016:
2  7114
2  7115	00000A84  FF 46	1C			 inc	 [esi].reg_ip
3  7116	00000A87  C9				 LEAVED
3  7117	00000A88  C2 0004			 RET	 00004h
2  7118	00000A8B			 vm_movsb		 endp
2  7119
2  7120					 ;-----------------------------------------------------------------------------------------[+
   7121					 std
2  7122	00000A8B			 vm_std			 proc	 STDCALL, ptrMachine:DWORD
3  7123	00000A8B  C8 0000 00			 ENTERD	 00000h,0
3  7124	00000A8F  8B 75	08			 mov	 esi, ptrMachine
2  7125
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 126
pmScript.ASM



2  7126	00000A92  8A 5E	24			 mov	 bl, [esi].reg_flags
2  7127	00000A95  80 CB	04			 or	 bl, VMFLAG_DIRECTION
2  7128	00000A98  88 5E	24			 mov	 [esi].reg_flags, bl
2  7129
2  7130	00000A9B  FF 46	1C			 inc	 [esi].reg_ip
3  7131	00000A9E  C9				 LEAVED
3  7132	00000A9F  C2 0004			 RET	 00004h
2  7133	00000AA2			 vm_std			 endp
2  7134
2  7135					 ;-----------------------------------------------------------------------------------------[+
   7136					 cld
2  7137	00000AA2			 vm_cld			 proc	 STDCALL, ptrMachine:DWORD
3  7138	00000AA2  C8 0000 00			 ENTERD	 00000h,0
3  7139	00000AA6  8B 75	08			 mov	 esi, ptrMachine
2  7140
2  7141	00000AA9  8A 5E	24			 mov	 bl, [esi].reg_flags
2  7142	00000AAC  80 E3	FB			 and	 bl, NOT VMFLAG_DIRECTION
2  7143	00000AAF  88 5E	24			 mov	 [esi].reg_flags, bl
2  7144
2  7145
2  7146	00000AB2  FF 46	1C			 inc	 [esi].reg_ip
3  7147	00000AB5  C9				 LEAVED
3  7148	00000AB6  C2 0004			 RET	 00004h
2  7149	00000AB9			 vm_cld			 endp
2  7150
2  7151					 ;-----------------------------------------------------------------------------------------[+
   7152					 xchg acc, cnt
2  7153	00000AB9			 vm_xchgacccnt		 proc	 STDCALL, ptrMachine:DWORD
3  7154	00000AB9  C8 0000 00			 ENTERD	 00000h,0
3  7155	00000ABD  8B 75	08			 mov	 esi, ptrMachine
2  7156	00000AC0  8B 46	08			 mov	 eax, [esi].reg_cnt
2  7157	00000AC3  8B 5E	04			 mov	 ebx, [esi].reg_acc
2  7158	00000AC6  89 46	04			 mov	 [esi].reg_acc,	eax
2  7159	00000AC9  89 5E	08			 mov	 [esi].reg_cnt,	ebx
2  7160	00000ACC  FF 46	1C			 inc	 [esi].reg_ip
3  7161	00000ACF  C9				 LEAVED
3  7162	00000AD0  C2 0004			 RET	 00004h
2  7163	00000AD3			 vm_xchgacccnt		 endp
2  7164
2  7165					 ;-----------------------------------------------------------------------------------------[+
   7166					 xchg acc, dat
2  7167	00000AD3			 vm_xchgaccdat		 proc	 STDCALL, ptrMachine:DWORD
3  7168	00000AD3  C8 0000 00			 ENTERD	 00000h,0
3  7169	00000AD7  8B 75	08			 mov	 esi, ptrMachine
2  7170	00000ADA  8B 46	0C			 mov	 eax, [esi].reg_dat
2  7171	00000ADD  8B 5E	04			 mov	 ebx, [esi].reg_acc
2  7172	00000AE0  89 46	04			 mov	 [esi].reg_acc,	eax
2  7173	00000AE3  89 5E	0C			 mov	 [esi].reg_dat,	ebx
2  7174	00000AE6  FF 46	1C			 inc	 [esi].reg_ip
3  7175	00000AE9  C9				 LEAVED
3  7176	00000AEA  C2 0004			 RET	 00004h
2  7177	00000AED			 vm_xchgaccdat		 endp
2  7178
2  7179
2  7180
1  7181					 INCLUDE ops_cmp.inc
2  7182
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 127
pmScript.ASM



2  7183
2  7184	00000AED				 .code
2  7185
2  7186					 ;-----------------------------------------------------------------------------------------[+
   7187					 cmp acc, cnt
2  7188	00000AED			 vm_cmpacccnt		 proc	 STDCALL, ptrMachine:DWORD
3  7189	00000AED  C8 0000 00			 ENTERD	 00000h,0
3  7190	00000AF1  8B 75	08			 mov	 esi, ptrMachine
2  7191
2  7192	00000AF4  FF 76	08			 push	 [esi].reg_cnt
2  7193	00000AF7  FF 76	04			 push	 [esi].reg_acc
2  7194	00000AFA  56				 push	 esi
2  7195	00000AFB  E8 FFFFF922			 call	 internals_CompareValues
2  7196
2  7197	00000B00  FF 46	1C			 inc	 [esi].reg_ip
3  7198	00000B03  C9				 LEAVED
3  7199	00000B04  C2 0004			 RET	 00004h
2  7200	00000B07			 vm_cmpacccnt		 endp
2  7201
2  7202					 ;-----------------------------------------------------------------------------------------[+
   7203					 cmp acc, dat
2  7204	00000B07			 vm_cmpaccdat		 proc	 STDCALL, ptrMachine:DWORD
3  7205	00000B07  C8 0000 00			 ENTERD	 00000h,0
3  7206	00000B0B  8B 75	08			 mov	 esi, ptrMachine
2  7207
2  7208	00000B0E  FF 76	0C			 push	 [esi].reg_dat
2  7209	00000B11  FF 76	04			 push	 [esi].reg_acc
2  7210	00000B14  56				 push	 esi
2  7211	00000B15  E8 FFFFF908			 call	 internals_CompareValues
2  7212
2  7213	00000B1A  FF 46	1C			 inc	 [esi].reg_ip
3  7214	00000B1D  C9				 LEAVED
3  7215	00000B1E  C2 0004			 RET	 00004h
2  7216	00000B21			 vm_cmpaccdat		 endp
2  7217
2  7218					 ;-----------------------------------------------------------------------------------------[+
   7219					 cmp acc, immediate
2  7220	00000B21			 vm_cmpaccimm		 proc	 STDCALL, ptrMachine:DWORD
3  7221	00000B21  C8 0000 00			 ENTERD	 00000h,0
3  7222	00000B25  8B 75	08			 mov	 esi, ptrMachine
2  7223	00000B28  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7224	00000B2B  47				 inc	 edi
2  7225
2  7226	00000B2C  57				 push	 edi
2  7227	00000B2D  56				 push	 esi
2  7228	00000B2E  E8 FFFFF7AC			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7229	00000B33  50				 push	 eax
2  7230	00000B34  FF 76	04			 push	 [esi].reg_acc
2  7231	00000B37  56				 push	 esi
2  7232	00000B38  E8 FFFFF8E5			 call	 internals_CompareValues
2  7233
2  7234	00000B3D  83 46	1C 05			 add	 [esi].reg_ip, 5
3  7235	00000B41  C9				 LEAVED
3  7236	00000B42  C2 0004			 RET	 00004h
2  7237	00000B45			 vm_cmpaccimm		 endp
2  7238
2  7239					 ;-----------------------------------------------------------------------------------------[+
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 128
pmScript.ASM



   7240					 cmp acc, variable
2  7241	00000B45			 vm_cmpaccvar		 proc	 STDCALL, ptrMachine:DWORD
3  7242	00000B45  C8 0000 00			 ENTERD	 00000h,0
3  7243	00000B49  8B 75	08			 mov	 esi, ptrMachine
2  7244	00000B4C  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7245	00000B4F  47				 inc	 edi
2  7246
2  7247	00000B50  57				 push	 edi
2  7248	00000B51  56				 push	 esi
2  7249	00000B52  E8 FFFFF788			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   7250					 (address)
2  7251	00000B57  50				 push	 eax
2  7252	00000B58  56				 push	 esi
2  7253	00000B59  E8 FFFFF781			 call	 internals_ReadValue			 ; Gets	32 bit value from address
2  7254	00000B5E  50				 push	 eax
2  7255	00000B5F  FF 76	04			 push	 [esi].reg_acc
2  7256	00000B62  56				 push	 esi
2  7257	00000B63  E8 FFFFF8BA			 call	 internals_CompareValues
2  7258
2  7259	00000B68  83 46	1C 05			 add	 [esi].reg_ip, 5
3  7260	00000B6C  C9				 LEAVED
3  7261	00000B6D  C2 0004			 RET	 00004h
2  7262	00000B70			 vm_cmpaccvar		 endp
2  7263
2  7264					 ;-----------------------------------------------------------------------------------------[+
   7265					 cmp cnt, acc
2  7266	00000B70			 vm_cmpcntacc		 proc	 STDCALL, ptrMachine:DWORD
3  7267	00000B70  C8 0000 00			 ENTERD	 00000h,0
3  7268	00000B74  8B 75	08			 mov	 esi, ptrMachine
2  7269
2  7270	00000B77  FF 76	04			 push	 [esi].reg_acc
2  7271	00000B7A  FF 76	08			 push	 [esi].reg_cnt
2  7272	00000B7D  56				 push	 esi
2  7273	00000B7E  E8 FFFFF89F			 call	 internals_CompareValues
2  7274
2  7275	00000B83  FF 46	1C			 inc	 [esi].reg_ip
3  7276	00000B86  C9				 LEAVED
3  7277	00000B87  C2 0004			 RET	 00004h
2  7278	00000B8A			 vm_cmpcntacc		 endp
2  7279
2  7280					 ;-----------------------------------------------------------------------------------------[+
   7281					 cmp cnt, dat
2  7282	00000B8A			 vm_cmpcntdat		 proc	 STDCALL, ptrMachine:DWORD
3  7283	00000B8A  C8 0000 00			 ENTERD	 00000h,0
3  7284	00000B8E  8B 75	08			 mov	 esi, ptrMachine
2  7285
2  7286	00000B91  FF 76	0C			 push	 [esi].reg_dat
2  7287	00000B94  FF 76	08			 push	 [esi].reg_cnt
2  7288	00000B97  56				 push	 esi
2  7289	00000B98  E8 FFFFF885			 call	 internals_CompareValues
2  7290
2  7291	00000B9D  FF 46	1C			 inc	 [esi].reg_ip
3  7292	00000BA0  C9				 LEAVED
3  7293	00000BA1  C2 0004			 RET	 00004h
2  7294	00000BA4			 vm_cmpcntdat		 endp
2  7295
2  7296					 ;-----------------------------------------------------------------------------------------[+
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 129
pmScript.ASM



   7297					 cmp cnt, immediate
2  7298	00000BA4			 vm_cmpcntimm		 proc	 STDCALL, ptrMachine:DWORD
3  7299	00000BA4  C8 0000 00			 ENTERD	 00000h,0
3  7300	00000BA8  8B 75	08			 mov	 esi, ptrMachine
2  7301	00000BAB  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7302	00000BAE  47				 inc	 edi
2  7303
2  7304	00000BAF  57				 push	 edi
2  7305	00000BB0  56				 push	 esi
2  7306	00000BB1  E8 FFFFF729			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7307	00000BB6  50				 push	 eax
2  7308	00000BB7  FF 76	08			 push	 [esi].reg_cnt
2  7309	00000BBA  56				 push	 esi
2  7310	00000BBB  E8 FFFFF862			 call	 internals_CompareValues
2  7311
2  7312	00000BC0  83 46	1C 05			 add	 [esi].reg_ip, 5
3  7313	00000BC4  C9				 LEAVED
3  7314	00000BC5  C2 0004			 RET	 00004h
2  7315	00000BC8			 vm_cmpcntimm		 endp
2  7316
2  7317					 ;-----------------------------------------------------------------------------------------[+
   7318					 cmp cnt, variable
2  7319	00000BC8			 vm_cmpcntvar		 proc	 STDCALL, ptrMachine:DWORD
3  7320	00000BC8  C8 0000 00			 ENTERD	 00000h,0
3  7321	00000BCC  8B 75	08			 mov	 esi, ptrMachine
2  7322	00000BCF  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7323	00000BD2  47				 inc	 edi
2  7324
2  7325	00000BD3  57				 push	 edi
2  7326	00000BD4  56				 push	 esi
2  7327	00000BD5  E8 FFFFF705			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   7328					 (address)
2  7329	00000BDA  50				 push	 eax
2  7330	00000BDB  56				 push	 esi
2  7331	00000BDC  E8 FFFFF6FE			 call	 internals_ReadValue			 ; Gets	32 bit value from address
2  7332	00000BE1  50				 push	 eax
2  7333	00000BE2  FF 76	08			 push	 [esi].reg_cnt
2  7334	00000BE5  56				 push	 esi
2  7335	00000BE6  E8 FFFFF837			 call	 internals_CompareValues
2  7336
2  7337	00000BEB  83 46	1C 05			 add	 [esi].reg_ip, 5
3  7338	00000BEF  C9				 LEAVED
3  7339	00000BF0  C2 0004			 RET	 00004h
2  7340	00000BF3			 vm_cmpcntvar		 endp
2  7341
2  7342					 ;-----------------------------------------------------------------------------------------[+
   7343					 cmp dat, acc
2  7344	00000BF3			 vm_cmpdatacc		 proc	 STDCALL, ptrMachine:DWORD
3  7345	00000BF3  C8 0000 00			 ENTERD	 00000h,0
3  7346	00000BF7  8B 75	08			 mov	 esi, ptrMachine
2  7347
2  7348	00000BFA  FF 76	04			 push	 [esi].reg_acc
2  7349	00000BFD  FF 76	0C			 push	 [esi].reg_dat
2  7350	00000C00  56				 push	 esi
2  7351	00000C01  E8 FFFFF81C			 call	 internals_CompareValues
2  7352
2  7353	00000C06  FF 46	1C			 inc	 [esi].reg_ip
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 130
pmScript.ASM



3  7354	00000C09  C9				 LEAVED
3  7355	00000C0A  C2 0004			 RET	 00004h
2  7356	00000C0D			 vm_cmpdatacc		 endp
2  7357
2  7358					 ;-----------------------------------------------------------------------------------------[+
   7359					 cmp dat, cnt
2  7360	00000C0D			 vm_cmpdatcnt		 proc	 STDCALL, ptrMachine:DWORD
3  7361	00000C0D  C8 0000 00			 ENTERD	 00000h,0
3  7362	00000C11  8B 75	08			 mov	 esi, ptrMachine
2  7363
2  7364	00000C14  FF 76	08			 push	 [esi].reg_cnt
2  7365	00000C17  FF 76	0C			 push	 [esi].reg_dat
2  7366	00000C1A  56				 push	 esi
2  7367	00000C1B  E8 FFFFF802			 call	 internals_CompareValues
2  7368
2  7369	00000C20  FF 46	1C			 inc	 [esi].reg_ip
3  7370	00000C23  C9				 LEAVED
3  7371	00000C24  C2 0004			 RET	 00004h
2  7372	00000C27			 vm_cmpdatcnt		 endp
2  7373
2  7374					 ;-----------------------------------------------------------------------------------------[+
   7375					 cmp dat, immediate
2  7376	00000C27			 vm_cmpdatimm		 proc	 STDCALL, ptrMachine:DWORD
3  7377	00000C27  C8 0000 00			 ENTERD	 00000h,0
3  7378	00000C2B  8B 75	08			 mov	 esi, ptrMachine
2  7379	00000C2E  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7380	00000C31  47				 inc	 edi
2  7381
2  7382	00000C32  57				 push	 edi
2  7383	00000C33  56				 push	 esi
2  7384	00000C34  E8 FFFFF6A6			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7385	00000C39  50				 push	 eax
2  7386	00000C3A  FF 76	0C			 push	 [esi].reg_dat
2  7387	00000C3D  56				 push	 esi
2  7388	00000C3E  E8 FFFFF7DF			 call	 internals_CompareValues
2  7389
2  7390	00000C43  83 46	1C 05			 add	 [esi].reg_ip, 5
3  7391	00000C47  C9				 LEAVED
3  7392	00000C48  C2 0004			 RET	 00004h
2  7393	00000C4B			 vm_cmpdatimm		 endp
2  7394
2  7395					 ;-----------------------------------------------------------------------------------------[+
   7396					 cmp dat, variable
2  7397	00000C4B			 vm_cmpdatvar		 proc	 STDCALL, ptrMachine:DWORD
3  7398	00000C4B  C8 0000 00			 ENTERD	 00000h,0
3  7399	00000C4F  8B 75	08			 mov	 esi, ptrMachine
2  7400	00000C52  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7401	00000C55  47				 inc	 edi
2  7402
2  7403	00000C56  57				 push	 edi
2  7404	00000C57  56				 push	 esi
2  7405	00000C58  E8 FFFFF682			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode   +
   7406					 (address)
2  7407	00000C5D  50				 push	 eax
2  7408	00000C5E  56				 push	 esi
2  7409	00000C5F  E8 FFFFF67B			 call	 internals_ReadValue			 ; Gets	32 bit value from address
2  7410	00000C64  50				 push	 eax
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 131
pmScript.ASM



2  7411	00000C65  FF 76	0C			 push	 [esi].reg_dat
2  7412	00000C68  56				 push	 esi
2  7413	00000C69  E8 FFFFF7B4			 call	 internals_CompareValues
2  7414
2  7415	00000C6E  83 46	1C 05			 add	 [esi].reg_ip, 5
3  7416	00000C72  C9				 LEAVED
3  7417	00000C73  C2 0004			 RET	 00004h
2  7418	00000C76			 vm_cmpdatvar		 endp
2  7419
2  7420
2  7421
2  7422
2  7423
1  7424					 INCLUDE ops_flow.inc
2  7425
2  7426	00000C76				 .code
2  7427
2  7428					 ;-----------------------------------------------------------------------------------------[+
   7429					 jmp label
2  7430	00000C76			 vm_jmp			 proc	 STDCALL, ptrMachine:DWORD
3  7431	00000C76  C8 0000 00			 ENTERD	 00000h,0
3  7432	00000C7A  8B 75	08			 mov	 esi, ptrMachine
2  7433	00000C7D  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7434	00000C80  47				 inc	 edi
2  7435	00000C81  83 46	1C 05			 add	 [esi].reg_ip, 5		 ; Premake the IP move incase check fails
2  7436
2  7437	00000C85  57				 push	 edi
2  7438	00000C86  56				 push	 esi
2  7439	00000C87  E8 FFFFF653			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7440
2  7441	00000C8C  89 46	1C			 mov	 [esi].reg_ip, eax
2  7442
3  7443	00000C8F  C9				 LEAVED
3  7444	00000C90  C2 0004			 RET	 00004h
2  7445	00000C93			 vm_jmp			 endp
2  7446
2  7447					 ;-----------------------------------------------------------------------------------------[+
   7448					 je label
2  7449	00000C93			 vm_je			 proc	 STDCALL, ptrMachine:DWORD
3  7450	00000C93  C8 0000 00			 ENTERD	 00000h,0
3  7451	00000C97  8B 75	08			 mov	 esi, ptrMachine
2  7452	00000C9A  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7453	00000C9D  47				 inc	 edi
2  7454	00000C9E  83 46	1C 05			 add	 [esi].reg_ip, 5		 ; Premake the IP move incase check fails
2  7455
2  7456	00000CA2  57				 push	 edi
2  7457	00000CA3  56				 push	 esi
2  7458	00000CA4  E8 FFFFF636			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7459
2  7460	00000CA9  8A 5E	24			 mov	 bl, [esi].reg_flags
2  7461	00000CAC  80 E3	01			 and	 bl, VMFLAG_ZERO
2  7462	00000CAF  74 03				 jz	 vm_je_nojump
2  7463
2  7464	00000CB1  89 46	1C			 mov	 [esi].reg_ip, eax
2  7465
2  7466	00000CB4			 vm_je_nojump:
3  7467	00000CB4  C9				 LEAVED
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 132
pmScript.ASM



3  7468	00000CB5  C2 0004			 RET	 00004h
2  7469	00000CB8			 vm_je			 endp
2  7470
2  7471					 ;-----------------------------------------------------------------------------------------[+
   7472					 jne label
2  7473	00000CB8			 vm_jne			 proc	 STDCALL, ptrMachine:DWORD
3  7474	00000CB8  C8 0000 00			 ENTERD	 00000h,0
3  7475	00000CBC  8B 75	08			 mov	 esi, ptrMachine
2  7476	00000CBF  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7477	00000CC2  47				 inc	 edi
2  7478	00000CC3  83 46	1C 05			 add	 [esi].reg_ip, 5		 ; Premake the IP move incase check fails
2  7479
2  7480	00000CC7  57				 push	 edi
2  7481	00000CC8  56				 push	 esi
2  7482	00000CC9  E8 FFFFF611			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7483
2  7484	00000CCE  8A 5E	24			 mov	 bl, [esi].reg_flags
2  7485	00000CD1  80 E3	01			 and	 bl, VMFLAG_ZERO
2  7486	00000CD4  75 03				 jnz	 vm_jne_nojump
2  7487
2  7488	00000CD6  89 46	1C			 mov	 [esi].reg_ip, eax
2  7489
2  7490	00000CD9			 vm_jne_nojump:
3  7491	00000CD9  C9				 LEAVED
3  7492	00000CDA  C2 0004			 RET	 00004h
2  7493	00000CDD			 vm_jne			 endp
2  7494
2  7495					 ;-----------------------------------------------------------------------------------------[+
   7496					 jb label
2  7497	00000CDD			 vm_jb			 proc	 STDCALL, ptrMachine:DWORD
3  7498	00000CDD  C8 0000 00			 ENTERD	 00000h,0
3  7499	00000CE1  8B 75	08			 mov	 esi, ptrMachine
2  7500	00000CE4  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7501	00000CE7  47				 inc	 edi
2  7502	00000CE8  83 46	1C 05			 add	 [esi].reg_ip, 5		 ; Premake the IP move incase check fails
2  7503
2  7504	00000CEC  57				 push	 edi
2  7505	00000CED  56				 push	 esi
2  7506	00000CEE  E8 FFFFF5EC			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7507
2  7508	00000CF3  8A 5E	24			 mov	 bl, [esi].reg_flags
2  7509	00000CF6  80 E3	02			 and	 bl, VMFLAG_BELOW
2  7510	00000CF9  74 03				 jz	 vm_jb_nojump
2  7511
2  7512	00000CFB  89 46	1C			 mov	 [esi].reg_ip, eax
2  7513
2  7514	00000CFE			 vm_jb_nojump:
3  7515	00000CFE  C9				 LEAVED
3  7516	00000CFF  C2 0004			 RET	 00004h
2  7517	00000D02			 vm_jb			 endp
2  7518
2  7519					 ;-----------------------------------------------------------------------------------------[+
   7520					 jbe label
2  7521	00000D02			 vm_jbe			 proc	 STDCALL, ptrMachine:DWORD
3  7522	00000D02  C8 0000 00			 ENTERD	 00000h,0
3  7523	00000D06  8B 75	08			 mov	 esi, ptrMachine
2  7524	00000D09  8B 7E	1C			 mov	 edi, [esi].reg_ip
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 133
pmScript.ASM



2  7525	00000D0C  47				 inc	 edi
2  7526	00000D0D  83 46	1C 05			 add	 [esi].reg_ip, 5		 ; Premake the IP move incase check fails
2  7527
2  7528	00000D11  57				 push	 edi
2  7529	00000D12  56				 push	 esi
2  7530	00000D13  E8 FFFFF5C7			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7531
2  7532	00000D18  8A 5E	24			 mov	 bl, [esi].reg_flags
2  7533	00000D1B  80 E3	03			 and	 bl, VMFLAG_ZERO + VMFLAG_BELOW
2  7534	00000D1E  74 03				 jz	 vm_jbe_nojump
2  7535
2  7536	00000D20  89 46	1C			 mov	 [esi].reg_ip, eax
2  7537
2  7538	00000D23			 vm_jbe_nojump:
3  7539	00000D23  C9				 LEAVED
3  7540	00000D24  C2 0004			 RET	 00004h
2  7541	00000D27			 vm_jbe		 endp
2  7542
2  7543					 ;-----------------------------------------------------------------------------------------[+
   7544					 loop label
2  7545	00000D27			 vm_loop	 proc	 STDCALL, ptrMachine:DWORD
3  7546	00000D27  C8 0000 00			 ENTERD	 00000h,0
3  7547	00000D2B  8B 75	08			 mov	 esi, ptrMachine
2  7548	00000D2E  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7549	00000D31  47				 inc	 edi
2  7550	00000D32  83 46	1C 05			 add	 [esi].reg_ip, 5		 ; Premake the IP move incase check fails
2  7551
2  7552						 .IF [esi].reg_cnt > 0
3  7553	00000D36  83 7E	08 00			 cmp	 [esi].	reg_cnt,0
3  7554	00000D3A  76 0D				 jbe	 @C0019
2  7555	00000D3C  FF 4E	08				 dec	 [esi].reg_cnt
2  7556
2  7557	00000D3F  57					 push	 edi
2  7558	00000D40  56					 push	 esi
2  7559	00000D41  E8 FFFFF599				 call	 internals_ReadValue			 ; Gets	32 bit value after  +
   7560					 opcode
2  7561
2  7562	00000D46  89 46	1C				 mov	 [esi].reg_ip, eax
2  7563						 .ENDIF
3  7564	00000D49			 @C0019:
3  7565	00000D49			 @C0018:
2  7566
3  7567	00000D49  C9				 LEAVED
3  7568	00000D4A  C2 0004			 RET	 00004h
2  7569	00000D4D			 vm_loop	 endp
2  7570
2  7571
2  7572					 ;-----------------------------------------------------------------------------------------[+
   7573					 call label
2  7574	00000D4D			 vm_call	 proc	 STDCALL, ptrMachine:DWORD
3  7575	00000D4D  C8 0000 00			 ENTERD	 00000h,0
3  7576	00000D51  8B 75	08			 mov	 esi, ptrMachine
2  7577	00000D54  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7578	00000D57  47				 inc	 edi
2  7579
2  7580	00000D58  57				 push	 edi
2  7581	00000D59  56				 push	 esi
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 134
pmScript.ASM



2  7582	00000D5A  E8 FFFFF580			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7583
2  7584	00000D5F  89 46	1C			 mov	 [esi].reg_ip, eax
2  7585
2  7586	00000D62  83 C7	04			 add	 edi, 4
2  7587	00000D65  57				 push	 edi
2  7588	00000D66  56				 push	 esi
2  7589	00000D67  E8 FFFFF50F			 call	 internals_PushValue			 ; Push	return location
2  7590
3  7591	00000D6C  C9				 LEAVED
3  7592	00000D6D  C2 0004			 RET	 00004h
2  7593	00000D70			 vm_call	 endp
2  7594
2  7595					 ;-----------------------------------------------------------------------------------------[+
   7596					 api immediate
2  7597	00000D70			 vm_api			 proc	 STDCALL, ptrMachine:DWORD
3  7598	00000D70  C8 0000 00			 ENTERD	 00000h,0
3  7599	00000D74  8B 75	08			 mov	 esi, ptrMachine
2  7600	00000D77  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7601	00000D7A  47				 inc	 edi
2  7602	00000D7B  83 46	1C 05			 add	 [esi].reg_ip, 5
2  7603
2  7604	00000D7F  57				 push	 edi
2  7605	00000D80  56				 push	 esi
2  7606	00000D81  E8 FFFFF559			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7607
2  7608	00000D86  50				 push	 eax
2  7609	00000D87  56				 push	 esi
2  7610	00000D88  FF 56	39			 call	 [esi].ptr_api
2  7611
3  7612	00000D8B  C9				 LEAVED
3  7613	00000D8C  C2 0004			 RET	 00004h
2  7614	00000D8F			 vm_api			 endp
2  7615
2  7616					 ;-----------------------------------------------------------------------------------------[+
   7617					 ret
2  7618	00000D8F			 vm_ret			 proc	 STDCALL, ptrMachine:DWORD
3  7619	00000D8F  C8 0000 00			 ENTERD	 00000h,0
3  7620	00000D93  8B 75	08			 mov	 esi, ptrMachine
2  7621	00000D96  56				 push	 esi
2  7622	00000D97  E8 FFFFF513			 call	 internals_PopValue
2  7623	00000D9C  89 46	1C			 mov	 [esi].reg_ip, eax
2  7624
3  7625	00000D9F  C9				 LEAVED
3  7626	00000DA0  C2 0004			 RET	 00004h
2  7627	00000DA3			 vm_ret			 endp
2  7628
2  7629					 ;-----------------------------------------------------------------------------------------[+
   7630					 end
2  7631	00000DA3			 vm_end			 proc	 STDCALL, ptrMachine:DWORD
3  7632	00000DA3  C8 0000 00			 ENTERD	 00000h,0
3  7633	00000DA7  8B 75	08			 mov	 esi, ptrMachine
2  7634	00000DAA  C7 06	00000003		 mov	 [esi].state, VMSTATE_ENDED
3  7635	00000DB0  C9				 LEAVED
3  7636	00000DB1  C2 0004			 RET	 00004h
2  7637	00000DB4			 vm_end			 endp
2  7638
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 135
pmScript.ASM



2  7639
1  7640					 INCLUDE ops_add.inc
2  7641
2  7642
2  7643	00000DB4				 .code
2  7644
2  7645					 ;-----------------------------------------------------------------------------------------[+
   7646					 add acc, immediate
2  7647	00000DB4			 vm_addaccimm		 proc	 STDCALL, ptrMachine:DWORD
3  7648	00000DB4  C8 0000 00			 ENTERD	 00000h,0
3  7649	00000DB8  8B 75	08			 mov	 esi, ptrMachine
2  7650	00000DBB  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7651	00000DBE  47				 inc	 edi
2  7652
2  7653	00000DBF  57				 push	 edi
2  7654	00000DC0  56				 push	 esi
2  7655	00000DC1  E8 FFFFF519			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7656
2  7657	00000DC6  01 46	04			 add	 [esi].reg_acc,	eax
2  7658
2  7659	00000DC9  FF 76	04			 push	 [esi].reg_acc
2  7660	00000DCC  E8 FFFFF66A			 call	 internals_SetFlags
2  7661
2  7662	00000DD1  83 46	1C 05			 add	 [esi].reg_ip, 5
3  7663	00000DD5  C9				 LEAVED
3  7664	00000DD6  C2 0004			 RET	 00004h
2  7665	00000DD9			 vm_addaccimm		 endp
2  7666
2  7667					 ;-----------------------------------------------------------------------------------------[+
   7668					 add acc, dat
2  7669	00000DD9			 vm_addaccdat		 proc	 STDCALL, ptrMachine:DWORD
3  7670	00000DD9  C8 0000 00			 ENTERD	 00000h,0
3  7671	00000DDD  8B 75	08			 mov	 esi, ptrMachine
2  7672
2  7673	00000DE0  8B 46	0C			 mov	 eax, [esi].reg_dat
2  7674	00000DE3  01 46	04			 add	 [esi].reg_acc,	eax
2  7675
2  7676	00000DE6  FF 76	04			 push	 [esi].reg_acc
2  7677	00000DE9  E8 FFFFF64D			 call	 internals_SetFlags
2  7678
2  7679	00000DEE  FF 46	1C			 inc	 [esi].reg_ip
3  7680	00000DF1  C9				 LEAVED
3  7681	00000DF2  C2 0004			 RET	 00004h
2  7682	00000DF5			 vm_addaccdat		 endp
2  7683
2  7684					 ;-----------------------------------------------------------------------------------------[+
   7685					 add acc, rnd
2  7686	00000DF5			 vm_addaccrnd		 proc	 STDCALL, ptrMachine:DWORD
3  7687	00000DF5  C8 0000 00			 ENTERD	 00000h,0
3  7688	00000DF9  8B 75	08			 mov	 esi, ptrMachine
2  7689
2  7690	00000DFC  8B 46	10			 mov	 eax, [esi].reg_rnd
2  7691	00000DFF  01 46	04			 add	 [esi].reg_acc,	eax
2  7692	00000E02  50				 push	 eax
2  7693	00000E03  E8 FFFFF3E6			 call	 RandomNumber
2  7694	00000E08  89 46	10			 mov	 [esi].reg_rnd,	eax
2  7695
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 136
pmScript.ASM



2  7696	00000E0B  FF 76	04			 push	 [esi].reg_acc
2  7697	00000E0E  E8 FFFFF628			 call	 internals_SetFlags
2  7698
2  7699	00000E13  FF 46	1C			 inc	 [esi].reg_ip
3  7700	00000E16  C9				 LEAVED
3  7701	00000E17  C2 0004			 RET	 00004h
2  7702	00000E1A			 vm_addaccrnd		 endp
2  7703
2  7704					 ;-----------------------------------------------------------------------------------------[+
   7705					 add acc, variable
2  7706	00000E1A			 vm_addaccvar		 proc	 STDCALL, ptrMachine:DWORD
3  7707	00000E1A  C8 0000 00			 ENTERD	 00000h,0
3  7708	00000E1E  8B 75	08			 mov	 esi, ptrMachine
2  7709	00000E21  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7710	00000E24  47				 inc	 edi
2  7711
2  7712	00000E25  57				 push	 edi
2  7713	00000E26  56				 push	 esi
2  7714	00000E27  E8 FFFFF4B3			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7715
2  7716	00000E2C  50				 push	 eax
2  7717	00000E2D  56				 push	 esi
2  7718	00000E2E  E8 FFFFF4AC			 call	 internals_ReadValue			 ; Get variable
2  7719
2  7720	00000E33  01 46	04			 add	 [esi].reg_acc,	eax
2  7721
2  7722	00000E36  FF 76	04			 push	 [esi].reg_acc
2  7723	00000E39  E8 FFFFF5FD			 call	 internals_SetFlags
2  7724
2  7725	00000E3E  83 46	1C 05			 add	 [esi].reg_ip, 5
3  7726	00000E42  C9				 LEAVED
3  7727	00000E43  C2 0004			 RET	 00004h
2  7728	00000E46			 vm_addaccvar		 endp
2  7729
2  7730					 ;-----------------------------------------------------------------------------------------[+
   7731					 add cnt, immediate
2  7732	00000E46			 vm_addcntimm		 proc	 STDCALL, ptrMachine:DWORD
3  7733	00000E46  C8 0000 00			 ENTERD	 00000h,0
3  7734	00000E4A  8B 75	08			 mov	 esi, ptrMachine
2  7735	00000E4D  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7736	00000E50  47				 inc	 edi
2  7737
2  7738	00000E51  57				 push	 edi
2  7739	00000E52  56				 push	 esi
2  7740	00000E53  E8 FFFFF487			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7741
2  7742	00000E58  01 46	08			 add	 [esi].reg_cnt,	eax
2  7743
2  7744	00000E5B  FF 76	08			 push	 [esi].reg_cnt
2  7745	00000E5E  E8 FFFFF5D8			 call	 internals_SetFlags
2  7746
2  7747	00000E63  83 46	1C 05			 add	 [esi].reg_ip, 5
3  7748	00000E67  C9				 LEAVED
3  7749	00000E68  C2 0004			 RET	 00004h
2  7750	00000E6B			 vm_addcntimm		 endp
2  7751
2  7752					 ;-----------------------------------------------------------------------------------------[+
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 137
pmScript.ASM



   7753					 add cnt, acc
2  7754	00000E6B			 vm_addcntacc		 proc	 STDCALL, ptrMachine:DWORD
3  7755	00000E6B  C8 0000 00			 ENTERD	 00000h,0
3  7756	00000E6F  8B 75	08			 mov	 esi, ptrMachine
2  7757
2  7758	00000E72  8B 46	04			 mov	 eax, [esi].reg_acc
2  7759	00000E75  01 46	08			 add	 [esi].reg_cnt,	eax
2  7760
2  7761	00000E78  FF 76	08			 push	 [esi].reg_cnt
2  7762	00000E7B  E8 FFFFF5BB			 call	 internals_SetFlags
2  7763
2  7764	00000E80  FF 46	1C			 inc	 [esi].reg_ip
3  7765	00000E83  C9				 LEAVED
3  7766	00000E84  C2 0004			 RET	 00004h
2  7767	00000E87			 vm_addcntacc		 endp
2  7768
2  7769					 ;-----------------------------------------------------------------------------------------[+
   7770					 add cnt, dat
2  7771	00000E87			 vm_addcntdat		 proc	 STDCALL, ptrMachine:DWORD
3  7772	00000E87  C8 0000 00			 ENTERD	 00000h,0
3  7773	00000E8B  8B 75	08			 mov	 esi, ptrMachine
2  7774
2  7775	00000E8E  8B 46	0C			 mov	 eax, [esi].reg_dat
2  7776	00000E91  01 46	08			 add	 [esi].reg_cnt,	eax
2  7777
2  7778	00000E94  FF 76	08			 push	 [esi].reg_cnt
2  7779	00000E97  E8 FFFFF59F			 call	 internals_SetFlags
2  7780
2  7781	00000E9C  FF 46	1C			 inc	 [esi].reg_ip
3  7782	00000E9F  C9				 LEAVED
3  7783	00000EA0  C2 0004			 RET	 00004h
2  7784	00000EA3			 vm_addcntdat		 endp
2  7785
2  7786					 ;-----------------------------------------------------------------------------------------[+
   7787					 add cnt, rnd
2  7788	00000EA3			 vm_addcntrnd		 proc	 STDCALL, ptrMachine:DWORD
3  7789	00000EA3  C8 0000 00			 ENTERD	 00000h,0
3  7790	00000EA7  8B 75	08			 mov	 esi, ptrMachine
2  7791
2  7792	00000EAA  8B 46	10			 mov	 eax, [esi].reg_rnd
2  7793	00000EAD  01 46	08			 add	 [esi].reg_cnt,	eax
2  7794	00000EB0  50				 push	 eax
2  7795	00000EB1  E8 FFFFF338			 call	 RandomNumber
2  7796	00000EB6  89 46	10			 mov	 [esi].reg_rnd,	eax
2  7797
2  7798	00000EB9  FF 76	08			 push	 [esi].reg_cnt
2  7799	00000EBC  E8 FFFFF57A			 call	 internals_SetFlags
2  7800
2  7801	00000EC1  FF 46	1C			 inc	 [esi].reg_ip
3  7802	00000EC4  C9				 LEAVED
3  7803	00000EC5  C2 0004			 RET	 00004h
2  7804	00000EC8			 vm_addcntrnd		 endp
2  7805
2  7806					 ;-----------------------------------------------------------------------------------------[+
   7807					 add cnt, variable
2  7808	00000EC8			 vm_addcntvar		 proc	 STDCALL, ptrMachine:DWORD
3  7809	00000EC8  C8 0000 00			 ENTERD	 00000h,0
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 138
pmScript.ASM



3  7810	00000ECC  8B 75	08			 mov	 esi, ptrMachine
2  7811	00000ECF  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7812	00000ED2  47				 inc	 edi
2  7813
2  7814	00000ED3  57				 push	 edi
2  7815	00000ED4  56				 push	 esi
2  7816	00000ED5  E8 FFFFF405			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7817
2  7818	00000EDA  50				 push	 eax
2  7819	00000EDB  56				 push	 esi
2  7820	00000EDC  E8 FFFFF3FE			 call	 internals_ReadValue			 ; Get variable
2  7821
2  7822	00000EE1  01 46	08			 add	 [esi].reg_cnt,	eax
2  7823
2  7824	00000EE4  FF 76	08			 push	 [esi].reg_cnt
2  7825	00000EE7  E8 FFFFF54F			 call	 internals_SetFlags
2  7826
2  7827	00000EEC  83 46	1C 05			 add	 [esi].reg_ip, 5
3  7828	00000EF0  C9				 LEAVED
3  7829	00000EF1  C2 0004			 RET	 00004h
2  7830	00000EF4			 vm_addcntvar		 endp
2  7831
2  7832					 ;-----------------------------------------------------------------------------------------[+
   7833					 add dat, immediate
2  7834	00000EF4			 vm_adddatimm		 proc	 STDCALL, ptrMachine:DWORD
3  7835	00000EF4  C8 0000 00			 ENTERD	 00000h,0
3  7836	00000EF8  8B 75	08			 mov	 esi, ptrMachine
2  7837	00000EFB  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7838	00000EFE  47				 inc	 edi
2  7839
2  7840	00000EFF  57				 push	 edi
2  7841	00000F00  56				 push	 esi
2  7842	00000F01  E8 FFFFF3D9			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7843
2  7844	00000F06  01 46	0C			 add	 [esi].reg_dat,	eax
2  7845
2  7846	00000F09  FF 76	0C			 push	 [esi].reg_dat
2  7847	00000F0C  E8 FFFFF52A			 call	 internals_SetFlags
2  7848
2  7849	00000F11  83 46	1C 05			 add	 [esi].reg_ip, 5
3  7850	00000F15  C9				 LEAVED
3  7851	00000F16  C2 0004			 RET	 00004h
2  7852	00000F19			 vm_adddatimm		 endp
2  7853
2  7854					 ;-----------------------------------------------------------------------------------------[+
   7855					 add dat, acc
2  7856	00000F19			 vm_adddatacc		 proc	 STDCALL, ptrMachine:DWORD
3  7857	00000F19  C8 0000 00			 ENTERD	 00000h,0
3  7858	00000F1D  8B 75	08			 mov	 esi, ptrMachine
2  7859
2  7860	00000F20  8B 46	04			 mov	 eax, [esi].reg_acc
2  7861	00000F23  01 46	0C			 add	 [esi].reg_dat,	eax
2  7862
2  7863	00000F26  FF 76	0C			 push	 [esi].reg_dat
2  7864	00000F29  E8 FFFFF50D			 call	 internals_SetFlags
2  7865
2  7866	00000F2E  FF 46	1C			 inc	 [esi].reg_ip
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 139
pmScript.ASM



3  7867	00000F31  C9				 LEAVED
3  7868	00000F32  C2 0004			 RET	 00004h
2  7869	00000F35			 vm_adddatacc		 endp
2  7870
2  7871					 ;-----------------------------------------------------------------------------------------[+
   7872					 add dat, rnd
2  7873	00000F35			 vm_adddatrnd		 proc	 STDCALL, ptrMachine:DWORD
3  7874	00000F35  C8 0000 00			 ENTERD	 00000h,0
3  7875	00000F39  8B 75	08			 mov	 esi, ptrMachine
2  7876
2  7877	00000F3C  8B 46	10			 mov	 eax, [esi].reg_rnd
2  7878	00000F3F  01 46	0C			 add	 [esi].reg_dat,	eax
2  7879	00000F42  50				 push	 eax
2  7880	00000F43  E8 FFFFF2A6			 call	 RandomNumber
2  7881	00000F48  89 46	10			 mov	 [esi].reg_rnd,	eax
2  7882
2  7883	00000F4B  FF 76	0C			 push	 [esi].reg_dat
2  7884	00000F4E  E8 FFFFF4E8			 call	 internals_SetFlags
2  7885
2  7886	00000F53  FF 46	1C			 inc	 [esi].reg_ip
3  7887	00000F56  C9				 LEAVED
3  7888	00000F57  C2 0004			 RET	 00004h
2  7889	00000F5A			 vm_adddatrnd		 endp
2  7890
2  7891					 ;-----------------------------------------------------------------------------------------[+
   7892					 add dat, variable
2  7893	00000F5A			 vm_adddatvar		 proc	 STDCALL, ptrMachine:DWORD
3  7894	00000F5A  C8 0000 00			 ENTERD	 00000h,0
3  7895	00000F5E  8B 75	08			 mov	 esi, ptrMachine
2  7896	00000F61  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7897	00000F64  47				 inc	 edi
2  7898
2  7899	00000F65  57				 push	 edi
2  7900	00000F66  56				 push	 esi
2  7901	00000F67  E8 FFFFF373			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7902
2  7903	00000F6C  50				 push	 eax
2  7904	00000F6D  56				 push	 esi
2  7905	00000F6E  E8 FFFFF36C			 call	 internals_ReadValue			 ; Get variable
2  7906
2  7907	00000F73  01 46	0C			 add	 [esi].reg_dat,	eax
2  7908
2  7909	00000F76  FF 76	0C			 push	 [esi].reg_dat
2  7910	00000F79  E8 FFFFF4BD			 call	 internals_SetFlags
2  7911
2  7912	00000F7E  83 46	1C 05			 add	 [esi].reg_ip, 5
3  7913	00000F82  C9				 LEAVED
3  7914	00000F83  C2 0004			 RET	 00004h
2  7915	00000F86			 vm_adddatvar		 endp
2  7916
2  7917
1  7918					 INCLUDE ops_sub.inc
2  7919
2  7920
2  7921	00000F86				 .code
2  7922
2  7923					 ;-----------------------------------------------------------------------------------------[+
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 140
pmScript.ASM



   7924					 sub acc, immediate
2  7925	00000F86			 vm_subaccimm		 proc	 STDCALL, ptrMachine:DWORD
3  7926	00000F86  C8 0000 00			 ENTERD	 00000h,0
3  7927	00000F8A  8B 75	08			 mov	 esi, ptrMachine
2  7928	00000F8D  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7929	00000F90  47				 inc	 edi
2  7930
2  7931	00000F91  57				 push	 edi
2  7932	00000F92  56				 push	 esi
2  7933	00000F93  E8 FFFFF347			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7934
2  7935	00000F98  29 46	04			 sub	 [esi].reg_acc,	eax
2  7936
2  7937	00000F9B  FF 76	04			 push	 [esi].reg_acc
2  7938	00000F9E  E8 FFFFF498			 call	 internals_SetFlags
2  7939
2  7940	00000FA3  83 46	1C 05			 add	 [esi].reg_ip, 5
3  7941	00000FA7  C9				 LEAVED
3  7942	00000FA8  C2 0004			 RET	 00004h
2  7943	00000FAB			 vm_subaccimm		 endp
2  7944
2  7945					 ;-----------------------------------------------------------------------------------------[+
   7946					 sub acc, dat
2  7947	00000FAB			 vm_subaccdat		 proc	 STDCALL, ptrMachine:DWORD
3  7948	00000FAB  C8 0000 00			 ENTERD	 00000h,0
3  7949	00000FAF  8B 75	08			 mov	 esi, ptrMachine
2  7950
2  7951	00000FB2  8B 46	0C			 mov	 eax, [esi].reg_dat
2  7952	00000FB5  29 46	04			 sub	 [esi].reg_acc,	eax
2  7953
2  7954	00000FB8  FF 76	04			 push	 [esi].reg_acc
2  7955	00000FBB  E8 FFFFF47B			 call	 internals_SetFlags
2  7956
2  7957	00000FC0  FF 46	1C			 inc	 [esi].reg_ip
3  7958	00000FC3  C9				 LEAVED
3  7959	00000FC4  C2 0004			 RET	 00004h
2  7960	00000FC7			 vm_subaccdat		 endp
2  7961
2  7962					 ;-----------------------------------------------------------------------------------------[+
   7963					 sub acc, rnd
2  7964	00000FC7			 vm_subaccrnd		 proc	 STDCALL, ptrMachine:DWORD
3  7965	00000FC7  C8 0000 00			 ENTERD	 00000h,0
3  7966	00000FCB  8B 75	08			 mov	 esi, ptrMachine
2  7967
2  7968	00000FCE  8B 46	10			 mov	 eax, [esi].reg_rnd
2  7969	00000FD1  29 46	04			 sub	 [esi].reg_acc,	eax
2  7970	00000FD4  50				 push	 eax
2  7971	00000FD5  E8 FFFFF214			 call	 RandomNumber
2  7972	00000FDA  89 46	10			 mov	 [esi].reg_rnd,	eax
2  7973
2  7974	00000FDD  FF 76	04			 push	 [esi].reg_acc
2  7975	00000FE0  E8 FFFFF456			 call	 internals_SetFlags
2  7976
2  7977	00000FE5  FF 46	1C			 inc	 [esi].reg_ip
3  7978	00000FE8  C9				 LEAVED
3  7979	00000FE9  C2 0004			 RET	 00004h
2  7980	00000FEC			 vm_subaccrnd		 endp
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 141
pmScript.ASM



2  7981
2  7982					 ;-----------------------------------------------------------------------------------------[+
   7983					 sub acc, variable
2  7984	00000FEC			 vm_subaccvar		 proc	 STDCALL, ptrMachine:DWORD
3  7985	00000FEC  C8 0000 00			 ENTERD	 00000h,0
3  7986	00000FF0  8B 75	08			 mov	 esi, ptrMachine
2  7987	00000FF3  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  7988	00000FF6  47				 inc	 edi
2  7989
2  7990	00000FF7  57				 push	 edi
2  7991	00000FF8  56				 push	 esi
2  7992	00000FF9  E8 FFFFF2E1			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  7993
2  7994	00000FFE  50				 push	 eax
2  7995	00000FFF  56				 push	 esi
2  7996	00001000  E8 FFFFF2DA			 call	 internals_ReadValue			 ; Get variable
2  7997
2  7998	00001005  29 46	04			 sub	 [esi].reg_acc,	eax
2  7999
2  8000	00001008  FF 76	04			 push	 [esi].reg_acc
2  8001	0000100B  E8 FFFFF42B			 call	 internals_SetFlags
2  8002
2  8003	00001010  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8004	00001014  C9				 LEAVED
3  8005	00001015  C2 0004			 RET	 00004h
2  8006	00001018			 vm_subaccvar		 endp
2  8007
2  8008					 ;-----------------------------------------------------------------------------------------[+
   8009					 sub cnt, immediate
2  8010	00001018			 vm_subcntimm		 proc	 STDCALL, ptrMachine:DWORD
3  8011	00001018  C8 0000 00			 ENTERD	 00000h,0
3  8012	0000101C  8B 75	08			 mov	 esi, ptrMachine
2  8013	0000101F  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8014	00001022  47				 inc	 edi
2  8015
2  8016	00001023  57				 push	 edi
2  8017	00001024  56				 push	 esi
2  8018	00001025  E8 FFFFF2B5			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8019
2  8020	0000102A  29 46	08			 sub	 [esi].reg_cnt,	eax
2  8021
2  8022	0000102D  FF 76	08			 push	 [esi].reg_cnt
2  8023	00001030  E8 FFFFF406			 call	 internals_SetFlags
2  8024
2  8025	00001035  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8026	00001039  C9				 LEAVED
3  8027	0000103A  C2 0004			 RET	 00004h
2  8028	0000103D			 vm_subcntimm		 endp
2  8029
2  8030					 ;-----------------------------------------------------------------------------------------[+
   8031					 sub cnt, acc
2  8032	0000103D			 vm_subcntacc		 proc	 STDCALL, ptrMachine:DWORD
3  8033	0000103D  C8 0000 00			 ENTERD	 00000h,0
3  8034	00001041  8B 75	08			 mov	 esi, ptrMachine
2  8035
2  8036	00001044  8B 46	04			 mov	 eax, [esi].reg_acc
2  8037	00001047  29 46	08			 sub	 [esi].reg_cnt,	eax
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 142
pmScript.ASM



2  8038
2  8039	0000104A  FF 76	08			 push	 [esi].reg_cnt
2  8040	0000104D  E8 FFFFF3E9			 call	 internals_SetFlags
2  8041
2  8042	00001052  FF 46	1C			 inc	 [esi].reg_ip
3  8043	00001055  C9				 LEAVED
3  8044	00001056  C2 0004			 RET	 00004h
2  8045	00001059			 vm_subcntacc		 endp
2  8046
2  8047					 ;-----------------------------------------------------------------------------------------[+
   8048					 sub cnt, dat
2  8049	00001059			 vm_subcntdat		 proc	 STDCALL, ptrMachine:DWORD
3  8050	00001059  C8 0000 00			 ENTERD	 00000h,0
3  8051	0000105D  8B 75	08			 mov	 esi, ptrMachine
2  8052
2  8053	00001060  8B 46	0C			 mov	 eax, [esi].reg_dat
2  8054	00001063  29 46	08			 sub	 [esi].reg_cnt,	eax
2  8055
2  8056	00001066  FF 76	08			 push	 [esi].reg_cnt
2  8057	00001069  E8 FFFFF3CD			 call	 internals_SetFlags
2  8058
2  8059	0000106E  FF 46	1C			 inc	 [esi].reg_ip
3  8060	00001071  C9				 LEAVED
3  8061	00001072  C2 0004			 RET	 00004h
2  8062	00001075			 vm_subcntdat		 endp
2  8063
2  8064					 ;-----------------------------------------------------------------------------------------[+
   8065					 sub cnt, rnd
2  8066	00001075			 vm_subcntrnd		 proc	 STDCALL, ptrMachine:DWORD
3  8067	00001075  C8 0000 00			 ENTERD	 00000h,0
3  8068	00001079  8B 75	08			 mov	 esi, ptrMachine
2  8069
2  8070	0000107C  8B 46	10			 mov	 eax, [esi].reg_rnd
2  8071	0000107F  29 46	08			 sub	 [esi].reg_cnt,	eax
2  8072	00001082  50				 push	 eax
2  8073	00001083  E8 FFFFF166			 call	 RandomNumber
2  8074	00001088  89 46	10			 mov	 [esi].reg_rnd,	eax
2  8075
2  8076	0000108B  FF 76	08			 push	 [esi].reg_cnt
2  8077	0000108E  E8 FFFFF3A8			 call	 internals_SetFlags
2  8078
2  8079	00001093  FF 46	1C			 inc	 [esi].reg_ip
3  8080	00001096  C9				 LEAVED
3  8081	00001097  C2 0004			 RET	 00004h
2  8082	0000109A			 vm_subcntrnd		 endp
2  8083
2  8084					 ;-----------------------------------------------------------------------------------------[+
   8085					 sub cnt, variable
2  8086	0000109A			 vm_subcntvar		 proc	 STDCALL, ptrMachine:DWORD
3  8087	0000109A  C8 0000 00			 ENTERD	 00000h,0
3  8088	0000109E  8B 75	08			 mov	 esi, ptrMachine
2  8089	000010A1  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8090	000010A4  47				 inc	 edi
2  8091
2  8092	000010A5  57				 push	 edi
2  8093	000010A6  56				 push	 esi
2  8094	000010A7  E8 FFFFF233			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 143
pmScript.ASM



2  8095
2  8096	000010AC  50				 push	 eax
2  8097	000010AD  56				 push	 esi
2  8098	000010AE  E8 FFFFF22C			 call	 internals_ReadValue			 ; Get variable
2  8099
2  8100	000010B3  29 46	08			 sub	 [esi].reg_cnt,	eax
2  8101
2  8102	000010B6  FF 76	08			 push	 [esi].reg_cnt
2  8103	000010B9  E8 FFFFF37D			 call	 internals_SetFlags
2  8104
2  8105	000010BE  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8106	000010C2  C9				 LEAVED
3  8107	000010C3  C2 0004			 RET	 00004h
2  8108	000010C6			 vm_subcntvar		 endp
2  8109
2  8110					 ;-----------------------------------------------------------------------------------------[+
   8111					 sub dat, immediate
2  8112	000010C6			 vm_subdatimm		 proc	 STDCALL, ptrMachine:DWORD
3  8113	000010C6  C8 0000 00			 ENTERD	 00000h,0
3  8114	000010CA  8B 75	08			 mov	 esi, ptrMachine
2  8115	000010CD  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8116	000010D0  47				 inc	 edi
2  8117
2  8118	000010D1  57				 push	 edi
2  8119	000010D2  56				 push	 esi
2  8120	000010D3  E8 FFFFF207			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8121
2  8122	000010D8  29 46	0C			 sub	 [esi].reg_dat,	eax
2  8123
2  8124	000010DB  FF 76	0C			 push	 [esi].reg_dat
2  8125	000010DE  E8 FFFFF358			 call	 internals_SetFlags
2  8126
2  8127	000010E3  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8128	000010E7  C9				 LEAVED
3  8129	000010E8  C2 0004			 RET	 00004h
2  8130	000010EB			 vm_subdatimm		 endp
2  8131
2  8132					 ;-----------------------------------------------------------------------------------------[+
   8133					 sub dat, acc
2  8134	000010EB			 vm_subdatacc		 proc	 STDCALL, ptrMachine:DWORD
3  8135	000010EB  C8 0000 00			 ENTERD	 00000h,0
3  8136	000010EF  8B 75	08			 mov	 esi, ptrMachine
2  8137
2  8138	000010F2  8B 46	04			 mov	 eax, [esi].reg_acc
2  8139	000010F5  29 46	0C			 sub	 [esi].reg_dat,	eax
2  8140
2  8141	000010F8  FF 76	0C			 push	 [esi].reg_dat
2  8142	000010FB  E8 FFFFF33B			 call	 internals_SetFlags
2  8143
2  8144	00001100  FF 46	1C			 inc	 [esi].reg_ip
3  8145	00001103  C9				 LEAVED
3  8146	00001104  C2 0004			 RET	 00004h
2  8147	00001107			 vm_subdatacc		 endp
2  8148
2  8149					 ;-----------------------------------------------------------------------------------------[+
   8150					 sub dat, rnd
2  8151	00001107			 vm_subdatrnd		 proc	 STDCALL, ptrMachine:DWORD
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 144
pmScript.ASM



3  8152	00001107  C8 0000 00			 ENTERD	 00000h,0
3  8153	0000110B  8B 75	08			 mov	 esi, ptrMachine
2  8154
2  8155	0000110E  8B 46	10			 mov	 eax, [esi].reg_rnd
2  8156	00001111  29 46	0C			 sub	 [esi].reg_dat,	eax
2  8157	00001114  50				 push	 eax
2  8158	00001115  E8 FFFFF0D4			 call	 RandomNumber
2  8159	0000111A  89 46	10			 mov	 [esi].reg_rnd,	eax
2  8160
2  8161	0000111D  FF 76	0C			 push	 [esi].reg_dat
2  8162	00001120  E8 FFFFF316			 call	 internals_SetFlags
2  8163
2  8164	00001125  FF 46	1C			 inc	 [esi].reg_ip
3  8165	00001128  C9				 LEAVED
3  8166	00001129  C2 0004			 RET	 00004h
2  8167	0000112C			 vm_subdatrnd		 endp
2  8168
2  8169					 ;-----------------------------------------------------------------------------------------[+
   8170					 sub dat, variable
2  8171	0000112C			 vm_subdatvar		 proc	 STDCALL, ptrMachine:DWORD
3  8172	0000112C  C8 0000 00			 ENTERD	 00000h,0
3  8173	00001130  8B 75	08			 mov	 esi, ptrMachine
2  8174	00001133  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8175	00001136  47				 inc	 edi
2  8176
2  8177	00001137  57				 push	 edi
2  8178	00001138  56				 push	 esi
2  8179	00001139  E8 FFFFF1A1			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8180
2  8181	0000113E  50				 push	 eax
2  8182	0000113F  56				 push	 esi
2  8183	00001140  E8 FFFFF19A			 call	 internals_ReadValue			 ; Get variable
2  8184
2  8185	00001145  29 46	0C			 sub	 [esi].reg_dat,	eax
2  8186
2  8187	00001148  FF 76	0C			 push	 [esi].reg_dat
2  8188	0000114B  E8 FFFFF2EB			 call	 internals_SetFlags
2  8189
2  8190	00001150  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8191	00001154  C9				 LEAVED
3  8192	00001155  C2 0004			 RET	 00004h
2  8193	00001158			 vm_subdatvar		 endp
2  8194
2  8195
1  8196					 INCLUDE ops_incdec.inc
2  8197
2  8198
2  8199	00001158				 .code
2  8200
2  8201					 ;-----------------------------------------------------------------------------------------[+
   8202					 inc acc
2  8203	00001158			 vm_incacc		 proc	 STDCALL, ptrMachine:DWORD
3  8204	00001158  C8 0000 00			 ENTERD	 00000h,0
3  8205	0000115C  8B 75	08			 mov	 esi, ptrMachine
2  8206	0000115F  FF 46	04			 inc	 [esi].reg_acc
2  8207	00001162  FF 46	1C			 inc	 [esi].reg_ip
2  8208	00001165  FF 76	04			 push	 [esi].reg_acc
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 145
pmScript.ASM



2  8209	00001168  E8 FFFFF2CE			 call	 internals_SetFlags
3  8210	0000116D  C9				 LEAVED
3  8211	0000116E  C2 0004			 RET	 00004h
2  8212	00001171			 vm_incacc		 endp
2  8213
2  8214					 ;-----------------------------------------------------------------------------------------[+
   8215					 inc cnt
2  8216	00001171			 vm_inccnt		 proc	 STDCALL, ptrMachine:DWORD
3  8217	00001171  C8 0000 00			 ENTERD	 00000h,0
3  8218	00001175  8B 75	08			 mov	 esi, ptrMachine
2  8219	00001178  FF 46	08			 inc	 [esi].reg_cnt
2  8220	0000117B  FF 46	1C			 inc	 [esi].reg_ip
2  8221	0000117E  FF 76	08			 push	 [esi].reg_cnt
2  8222	00001181  E8 FFFFF2B5			 call	 internals_SetFlags
3  8223	00001186  C9				 LEAVED
3  8224	00001187  C2 0004			 RET	 00004h
2  8225	0000118A			 vm_inccnt		 endp
2  8226
2  8227					 ;-----------------------------------------------------------------------------------------[+
   8228					 inc dat
2  8229	0000118A			 vm_incdat		 proc	 STDCALL, ptrMachine:DWORD
3  8230	0000118A  C8 0000 00			 ENTERD	 00000h,0
3  8231	0000118E  8B 75	08			 mov	 esi, ptrMachine
2  8232	00001191  FF 46	0C			 inc	 [esi].reg_dat
2  8233	00001194  FF 46	1C			 inc	 [esi].reg_ip
2  8234	00001197  FF 76	0C			 push	 [esi].reg_dat
2  8235	0000119A  E8 FFFFF29C			 call	 internals_SetFlags
3  8236	0000119F  C9				 LEAVED
3  8237	000011A0  C2 0004			 RET	 00004h
2  8238	000011A3			 vm_incdat		 endp
2  8239
2  8240					 ;-----------------------------------------------------------------------------------------[+
   8241					 dec acc
2  8242	000011A3			 vm_decacc		 proc	 STDCALL, ptrMachine:DWORD
3  8243	000011A3  C8 0000 00			 ENTERD	 00000h,0
3  8244	000011A7  8B 75	08			 mov	 esi, ptrMachine
2  8245	000011AA  FF 4E	04			 dec	 [esi].reg_acc
2  8246	000011AD  FF 46	1C			 inc	 [esi].reg_ip
2  8247	000011B0  FF 76	04			 push	 [esi].reg_acc
2  8248	000011B3  E8 FFFFF283			 call	 internals_SetFlags
3  8249	000011B8  C9				 LEAVED
3  8250	000011B9  C2 0004			 RET	 00004h
2  8251	000011BC			 vm_decacc		 endp
2  8252
2  8253					 ;-----------------------------------------------------------------------------------------[+
   8254					 dec cnt
2  8255	000011BC			 vm_deccnt		 proc	 STDCALL, ptrMachine:DWORD
3  8256	000011BC  C8 0000 00			 ENTERD	 00000h,0
3  8257	000011C0  8B 75	08			 mov	 esi, ptrMachine
2  8258	000011C3  FF 4E	08			 dec	 [esi].reg_cnt
2  8259	000011C6  FF 46	1C			 inc	 [esi].reg_ip
2  8260	000011C9  FF 76	08			 push	 [esi].reg_cnt
2  8261	000011CC  E8 FFFFF26A			 call	 internals_SetFlags
3  8262	000011D1  C9				 LEAVED
3  8263	000011D2  C2 0004			 RET	 00004h
2  8264	000011D5			 vm_deccnt		 endp
2  8265
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 146
pmScript.ASM



2  8266					 ;-----------------------------------------------------------------------------------------[+
   8267					 dec dat
2  8268	000011D5			 vm_decdat		 proc	 STDCALL, ptrMachine:DWORD
3  8269	000011D5  C8 0000 00			 ENTERD	 00000h,0
3  8270	000011D9  8B 75	08			 mov	 esi, ptrMachine
2  8271	000011DC  FF 4E	0C			 dec	 [esi].reg_dat
2  8272	000011DF  FF 46	1C			 inc	 [esi].reg_ip
2  8273	000011E2  FF 76	0C			 push	 [esi].reg_dat
2  8274	000011E5  E8 FFFFF251			 call	 internals_SetFlags
3  8275	000011EA  C9				 LEAVED
3  8276	000011EB  C2 0004			 RET	 00004h
2  8277	000011EE			 vm_decdat		 endp
2  8278
2  8279
1  8280					 INCLUDE ops_muldiv.inc
2  8281
2  8282
2  8283	000011EE				 .code
2  8284
2  8285					 ;-----------------------------------------------------------------------------------------[+
   8286					 mul immediate
2  8287	000011EE			 vm_mulimm		 proc	 STDCALL, ptrMachine:DWORD
3  8288	000011EE  C8 0000 00			 ENTERD	 00000h,0
3  8289	000011F2  8B 75	08			 mov	 esi, ptrMachine
2  8290	000011F5  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8291	000011F8  47				 inc	 edi
2  8292
2  8293	000011F9  57				 push	 edi
2  8294	000011FA  56				 push	 esi
2  8295	000011FB  E8 FFFFF0DF			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8296	00001200  8B C8				 mov	 ecx, eax
2  8297	00001202  8B 46	04			 mov	 eax, [esi].reg_acc
2  8298	00001205  F7 E1				 mul	 ecx
2  8299
2  8300	00001207  89 46	04			 mov	 [esi].reg_acc,	eax
2  8301
2  8302	0000120A  FF 76	04			 push	 [esi].reg_acc
2  8303	0000120D  E8 FFFFF229			 call	 internals_SetFlags
2  8304	00001212  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8305	00001216  C9				 LEAVED
3  8306	00001217  C2 0004			 RET	 00004h
2  8307	0000121A			 vm_mulimm		 endp
2  8308
2  8309					 ;-----------------------------------------------------------------------------------------[+
   8310					 mul variable
2  8311	0000121A			 vm_mulvar		 proc	 STDCALL, ptrMachine:DWORD
3  8312	0000121A  C8 0000 00			 ENTERD	 00000h,0
3  8313	0000121E  8B 75	08			 mov	 esi, ptrMachine
2  8314	00001221  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8315	00001224  47				 inc	 edi
2  8316
2  8317	00001225  57				 push	 edi
2  8318	00001226  56				 push	 esi
2  8319	00001227  E8 FFFFF0B3			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8320	0000122C  50				 push	 eax
2  8321	0000122D  56				 push	 esi
2  8322	0000122E  E8 FFFFF0AC			 call	 internals_ReadValue			 ; Gets	variable
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 147
pmScript.ASM



2  8323	00001233  8B C8				 mov	 ecx, eax
2  8324	00001235  8B 46	04			 mov	 eax, [esi].reg_acc
2  8325	00001238  F7 E1				 mul	 ecx
2  8326
2  8327	0000123A  89 46	04			 mov	 [esi].reg_acc,	eax
2  8328
2  8329	0000123D  FF 76	04			 push	 [esi].reg_acc
2  8330	00001240  E8 FFFFF1F6			 call	 internals_SetFlags
2  8331	00001245  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8332	00001249  C9				 LEAVED
3  8333	0000124A  C2 0004			 RET	 00004h
2  8334	0000124D			 vm_mulvar		 endp
2  8335
2  8336					 ;-----------------------------------------------------------------------------------------[+
   8337					 mul cnt
2  8338	0000124D			 vm_mulcnt		 proc	 STDCALL, ptrMachine:DWORD
3  8339	0000124D  C8 0000 00			 ENTERD	 00000h,0
3  8340	00001251  8B 75	08			 mov	 esi, ptrMachine
2  8341	00001254  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8342	00001257  47				 inc	 edi
2  8343
2  8344	00001258  8B 4E	08			 mov	 ecx, [esi].reg_cnt
2  8345	0000125B  8B 46	04			 mov	 eax, [esi].reg_acc
2  8346	0000125E  F7 E1				 mul	 ecx
2  8347
2  8348	00001260  89 46	04			 mov	 [esi].reg_acc,	eax
2  8349
2  8350	00001263  FF 76	04			 push	 [esi].reg_acc
2  8351	00001266  E8 FFFFF1D0			 call	 internals_SetFlags
2  8352	0000126B  FF 46	1C			 inc	 [esi].reg_ip
3  8353	0000126E  C9				 LEAVED
3  8354	0000126F  C2 0004			 RET	 00004h
2  8355	00001272			 vm_mulcnt		 endp
2  8356
2  8357					 ;-----------------------------------------------------------------------------------------[+
   8358					 div immediate
2  8359	00001272			 vm_divimm		 proc	 STDCALL, ptrMachine:DWORD
3  8360	00001272  C8 0000 00			 ENTERD	 00000h,0
3  8361	00001276  8B 75	08			 mov	 esi, ptrMachine
2  8362	00001279  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8363	0000127C  47				 inc	 edi
2  8364
2  8365	0000127D  57				 push	 edi
2  8366	0000127E  56				 push	 esi
2  8367	0000127F  E8 FFFFF05B			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8368	00001284  8B C8				 mov	 ecx, eax
2  8369	00001286  8B 46	04			 mov	 eax, [esi].reg_acc
2  8370	00001289  33 D2				 xor	 edx, edx
2  8371	0000128B  F7 F1				 div	 ecx
2  8372
2  8373	0000128D  89 46	04			 mov	 [esi].reg_acc,	eax
2  8374
2  8375	00001290  FF 76	04			 push	 [esi].reg_acc
2  8376	00001293  E8 FFFFF1A3			 call	 internals_SetFlags
2  8377	00001298  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8378	0000129C  C9				 LEAVED
3  8379	0000129D  C2 0004			 RET	 00004h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 148
pmScript.ASM



2  8380	000012A0			 vm_divimm		 endp
2  8381
2  8382					 ;-----------------------------------------------------------------------------------------[+
   8383					 div variable
2  8384	000012A0			 vm_divvar		 proc	 STDCALL, ptrMachine:DWORD
3  8385	000012A0  C8 0000 00			 ENTERD	 00000h,0
3  8386	000012A4  8B 75	08			 mov	 esi, ptrMachine
2  8387	000012A7  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8388	000012AA  47				 inc	 edi
2  8389
2  8390	000012AB  57				 push	 edi
2  8391	000012AC  56				 push	 esi
2  8392	000012AD  E8 FFFFF02D			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8393	000012B2  50				 push	 eax
2  8394	000012B3  56				 push	 esi
2  8395	000012B4  E8 FFFFF026			 call	 internals_ReadValue			 ; Gets	variable
2  8396	000012B9  8B C8				 mov	 ecx, eax
2  8397	000012BB  8B 46	04			 mov	 eax, [esi].reg_acc
2  8398	000012BE  33 D2				 xor	 edx, edx
2  8399	000012C0  F7 F1				 div	 ecx
2  8400
2  8401	000012C2  89 46	04			 mov	 [esi].reg_acc,	eax
2  8402
2  8403	000012C5  FF 76	04			 push	 [esi].reg_acc
2  8404	000012C8  E8 FFFFF16E			 call	 internals_SetFlags
2  8405	000012CD  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8406	000012D1  C9				 LEAVED
3  8407	000012D2  C2 0004			 RET	 00004h
2  8408	000012D5			 vm_divvar		 endp
2  8409
2  8410					 ;-----------------------------------------------------------------------------------------[+
   8411					 div cnt
2  8412	000012D5			 vm_divcnt		 proc	 STDCALL, ptrMachine:DWORD
3  8413	000012D5  C8 0000 00			 ENTERD	 00000h,0
3  8414	000012D9  8B 75	08			 mov	 esi, ptrMachine
2  8415	000012DC  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8416	000012DF  47				 inc	 edi
2  8417
2  8418	000012E0  8B 4E	08			 mov	 ecx, [esi].reg_cnt
2  8419	000012E3  8B 46	04			 mov	 eax, [esi].reg_acc
2  8420	000012E6  33 D2				 xor	 edx, edx
2  8421	000012E8  F7 F1				 div	 ecx
2  8422
2  8423	000012EA  89 46	04			 mov	 [esi].reg_acc,	eax
2  8424
2  8425	000012ED  FF 76	04			 push	 [esi].reg_acc
2  8426	000012F0  E8 FFFFF146			 call	 internals_SetFlags
2  8427	000012F5  FF 46	1C			 inc	 [esi].reg_ip
3  8428	000012F8  C9				 LEAVED
3  8429	000012F9  C2 0004			 RET	 00004h
2  8430	000012FC			 vm_divcnt		 endp
2  8431
2  8432					 ;-----------------------------------------------------------------------------------------[+
   8433					 mod immediate
2  8434	000012FC			 vm_modimm		 proc	 STDCALL, ptrMachine:DWORD
3  8435	000012FC  C8 0000 00			 ENTERD	 00000h,0
3  8436	00001300  8B 75	08			 mov	 esi, ptrMachine
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 149
pmScript.ASM



2  8437	00001303  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8438	00001306  47				 inc	 edi
2  8439
2  8440	00001307  57				 push	 edi
2  8441	00001308  56				 push	 esi
2  8442	00001309  E8 FFFFEFD1			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8443	0000130E  8B C8				 mov	 ecx, eax
2  8444	00001310  8B 46	04			 mov	 eax, [esi].reg_acc
2  8445	00001313  33 D2				 xor	 edx, edx
2  8446	00001315  F7 F1				 div	 ecx
2  8447
2  8448	00001317  89 56	04			 mov	 [esi].reg_acc,	edx
2  8449
2  8450	0000131A  FF 76	04			 push	 [esi].reg_acc
2  8451	0000131D  E8 FFFFF119			 call	 internals_SetFlags
2  8452	00001322  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8453	00001326  C9				 LEAVED
3  8454	00001327  C2 0004			 RET	 00004h
2  8455	0000132A			 vm_modimm		 endp
2  8456
2  8457					 ;-----------------------------------------------------------------------------------------[+
   8458					 mod variable
2  8459	0000132A			 vm_modvar		 proc	 STDCALL, ptrMachine:DWORD
3  8460	0000132A  C8 0000 00			 ENTERD	 00000h,0
3  8461	0000132E  8B 75	08			 mov	 esi, ptrMachine
2  8462	00001331  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8463	00001334  47				 inc	 edi
2  8464
2  8465	00001335  57				 push	 edi
2  8466	00001336  56				 push	 esi
2  8467	00001337  E8 FFFFEFA3			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8468	0000133C  50				 push	 eax
2  8469	0000133D  56				 push	 esi
2  8470	0000133E  E8 FFFFEF9C			 call	 internals_ReadValue			 ; Gets	variable
2  8471	00001343  8B C8				 mov	 ecx, eax
2  8472	00001345  8B 46	04			 mov	 eax, [esi].reg_acc
2  8473	00001348  33 D2				 xor	 edx, edx
2  8474	0000134A  F7 F1				 div	 ecx
2  8475
2  8476	0000134C  89 56	04			 mov	 [esi].reg_acc,	edx
2  8477
2  8478	0000134F  FF 76	04			 push	 [esi].reg_acc
2  8479	00001352  E8 FFFFF0E4			 call	 internals_SetFlags
2  8480	00001357  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8481	0000135B  C9				 LEAVED
3  8482	0000135C  C2 0004			 RET	 00004h
2  8483	0000135F			 vm_modvar		 endp
2  8484
2  8485					 ;-----------------------------------------------------------------------------------------[+
   8486					 mod cnt
2  8487	0000135F			 vm_modcnt		 proc	 STDCALL, ptrMachine:DWORD
3  8488	0000135F  C8 0000 00			 ENTERD	 00000h,0
3  8489	00001363  8B 75	08			 mov	 esi, ptrMachine
2  8490	00001366  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8491	00001369  47				 inc	 edi
2  8492
2  8493	0000136A  8B 4E	08			 mov	 ecx, [esi].reg_cnt
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 150
pmScript.ASM



2  8494	0000136D  8B 46	04			 mov	 eax, [esi].reg_acc
2  8495	00001370  33 D2				 xor	 edx, edx
2  8496	00001372  F7 F1				 div	 ecx
2  8497
2  8498	00001374  89 56	04			 mov	 [esi].reg_acc,	edx
2  8499
2  8500	00001377  FF 76	04			 push	 [esi].reg_acc
2  8501	0000137A  E8 FFFFF0BC			 call	 internals_SetFlags
2  8502	0000137F  FF 46	1C			 inc	 [esi].reg_ip
3  8503	00001382  C9				 LEAVED
3  8504	00001383  C2 0004			 RET	 00004h
2  8505	00001386			 vm_modcnt		 endp
2  8506
2  8507
2  8508
1  8509					 INCLUDE ops_andor.inc
2  8510
2  8511
2  8512	00001386				 .code
2  8513
2  8514					 ;-----------------------------------------------------------------------------------------[+
   8515					 and acc, immediate
2  8516	00001386			 vm_andaccimm		 proc	 STDCALL, ptrMachine:DWORD
3  8517	00001386  C8 0000 00			 ENTERD	 00000h,0
3  8518	0000138A  8B 75	08			 mov	 esi, ptrMachine
2  8519	0000138D  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8520	00001390  47				 inc	 edi
2  8521
2  8522	00001391  57				 push	 edi
2  8523	00001392  56				 push	 esi
2  8524	00001393  E8 FFFFEF47			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8525
2  8526	00001398  21 46	04			 and	 [esi].reg_acc,	eax
2  8527
2  8528	0000139B  FF 76	04			 push	 [esi].reg_acc
2  8529	0000139E  E8 FFFFF098			 call	 internals_SetFlags
2  8530
2  8531	000013A3  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8532	000013A7  C9				 LEAVED
3  8533	000013A8  C2 0004			 RET	 00004h
2  8534	000013AB			 vm_andaccimm		 endp
2  8535
2  8536					 ;-----------------------------------------------------------------------------------------[+
   8537					 and acc, dat
2  8538	000013AB			 vm_andaccdat		 proc	 STDCALL, ptrMachine:DWORD
3  8539	000013AB  C8 0000 00			 ENTERD	 00000h,0
3  8540	000013AF  8B 75	08			 mov	 esi, ptrMachine
2  8541
2  8542	000013B2  8B 46	0C			 mov	 eax, [esi].reg_dat
2  8543	000013B5  21 46	04			 and	 [esi].reg_acc,	eax
2  8544
2  8545	000013B8  FF 76	04			 push	 [esi].reg_acc
2  8546	000013BB  E8 FFFFF07B			 call	 internals_SetFlags
2  8547
2  8548	000013C0  FF 46	1C			 inc	 [esi].reg_ip
3  8549	000013C3  C9				 LEAVED
3  8550	000013C4  C2 0004			 RET	 00004h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 151
pmScript.ASM



2  8551	000013C7			 vm_andaccdat		 endp
2  8552
2  8553					 ;-----------------------------------------------------------------------------------------[+
   8554					 and acc, variable
2  8555	000013C7			 vm_andaccvar		 proc	 STDCALL, ptrMachine:DWORD
3  8556	000013C7  C8 0000 00			 ENTERD	 00000h,0
3  8557	000013CB  8B 75	08			 mov	 esi, ptrMachine
2  8558	000013CE  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8559	000013D1  47				 inc	 edi
2  8560
2  8561	000013D2  57				 push	 edi
2  8562	000013D3  56				 push	 esi
2  8563	000013D4  E8 FFFFEF06			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8564	000013D9  50				 push	 eax
2  8565	000013DA  56				 push	 esi
2  8566	000013DB  E8 FFFFEEFF			 call	 internals_ReadValue			 ; Gets	variable
2  8567
2  8568	000013E0  21 46	04			 and	 [esi].reg_acc,	eax
2  8569
2  8570	000013E3  FF 76	04			 push	 [esi].reg_acc
2  8571	000013E6  E8 FFFFF050			 call	 internals_SetFlags
2  8572
2  8573	000013EB  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8574	000013EF  C9				 LEAVED
3  8575	000013F0  C2 0004			 RET	 00004h
2  8576	000013F3			 vm_andaccvar		 endp
2  8577
2  8578					 ;-----------------------------------------------------------------------------------------[+
   8579					 and dat, immediate
2  8580	000013F3			 vm_anddatimm		 proc	 STDCALL, ptrMachine:DWORD
3  8581	000013F3  C8 0000 00			 ENTERD	 00000h,0
3  8582	000013F7  8B 75	08			 mov	 esi, ptrMachine
2  8583	000013FA  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8584	000013FD  47				 inc	 edi
2  8585
2  8586	000013FE  57				 push	 edi
2  8587	000013FF  56				 push	 esi
2  8588	00001400  E8 FFFFEEDA			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8589
2  8590	00001405  21 46	0C			 and	 [esi].reg_dat,	eax
2  8591
2  8592	00001408  FF 76	0C			 push	 [esi].reg_dat
2  8593	0000140B  E8 FFFFF02B			 call	 internals_SetFlags
2  8594
2  8595	00001410  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8596	00001414  C9				 LEAVED
3  8597	00001415  C2 0004			 RET	 00004h
2  8598	00001418			 vm_anddatimm		 endp
2  8599
2  8600					 ;-----------------------------------------------------------------------------------------[+
   8601					 and dat, acc
2  8602	00001418			 vm_anddatacc		 proc	 STDCALL, ptrMachine:DWORD
3  8603	00001418  C8 0000 00			 ENTERD	 00000h,0
3  8604	0000141C  8B 75	08			 mov	 esi, ptrMachine
2  8605
2  8606	0000141F  8B 46	04			 mov	 eax, [esi].reg_acc
2  8607	00001422  21 46	0C			 and	 [esi].reg_dat,	eax
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 152
pmScript.ASM



2  8608
2  8609	00001425  FF 76	0C			 push	 [esi].reg_dat
2  8610	00001428  E8 FFFFF00E			 call	 internals_SetFlags
2  8611
2  8612	0000142D  FF 46	1C			 inc	 [esi].reg_ip
3  8613	00001430  C9				 LEAVED
3  8614	00001431  C2 0004			 RET	 00004h
2  8615	00001434			 vm_anddatacc		 endp
2  8616
2  8617					 ;-----------------------------------------------------------------------------------------[+
   8618					 and dat, variable
2  8619	00001434			 vm_anddatvar		 proc	 STDCALL, ptrMachine:DWORD
3  8620	00001434  C8 0000 00			 ENTERD	 00000h,0
3  8621	00001438  8B 75	08			 mov	 esi, ptrMachine
2  8622	0000143B  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8623	0000143E  47				 inc	 edi
2  8624
2  8625	0000143F  57				 push	 edi
2  8626	00001440  56				 push	 esi
2  8627	00001441  E8 FFFFEE99			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8628	00001446  50				 push	 eax
2  8629	00001447  56				 push	 esi
2  8630	00001448  E8 FFFFEE92			 call	 internals_ReadValue			 ; Gets	variable
2  8631
2  8632	0000144D  21 46	0C			 and	 [esi].reg_dat,	eax
2  8633
2  8634	00001450  FF 76	0C			 push	 [esi].reg_dat
2  8635	00001453  E8 FFFFEFE3			 call	 internals_SetFlags
2  8636
2  8637	00001458  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8638	0000145C  C9				 LEAVED
3  8639	0000145D  C2 0004			 RET	 00004h
2  8640	00001460			 vm_anddatvar		 endp
2  8641
2  8642					 ;-----------------------------------------------------------------------------------------[+
   8643					 or acc, immediate
2  8644	00001460			 vm_oraccimm		 proc	 STDCALL, ptrMachine:DWORD
3  8645	00001460  C8 0000 00			 ENTERD	 00000h,0
3  8646	00001464  8B 75	08			 mov	 esi, ptrMachine
2  8647	00001467  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8648	0000146A  47				 inc	 edi
2  8649
2  8650	0000146B  57				 push	 edi
2  8651	0000146C  56				 push	 esi
2  8652	0000146D  E8 FFFFEE6D			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8653
2  8654	00001472  09 46	04			 or	 [esi].reg_acc,	eax
2  8655
2  8656	00001475  FF 76	04			 push	 [esi].reg_acc
2  8657	00001478  E8 FFFFEFBE			 call	 internals_SetFlags
2  8658
2  8659	0000147D  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8660	00001481  C9				 LEAVED
3  8661	00001482  C2 0004			 RET	 00004h
2  8662	00001485			 vm_oraccimm		 endp
2  8663
2  8664					 ;-----------------------------------------------------------------------------------------[+
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 153
pmScript.ASM



   8665					 or acc, dat
2  8666	00001485			 vm_oraccdat		 proc	 STDCALL, ptrMachine:DWORD
3  8667	00001485  C8 0000 00			 ENTERD	 00000h,0
3  8668	00001489  8B 75	08			 mov	 esi, ptrMachine
2  8669
2  8670	0000148C  8B 46	0C			 mov	 eax, [esi].reg_dat
2  8671	0000148F  09 46	04			 or	 [esi].reg_acc,	eax
2  8672
2  8673	00001492  FF 76	04			 push	 [esi].reg_acc
2  8674	00001495  E8 FFFFEFA1			 call	 internals_SetFlags
2  8675
2  8676	0000149A  FF 46	1C			 inc	 [esi].reg_ip
3  8677	0000149D  C9				 LEAVED
3  8678	0000149E  C2 0004			 RET	 00004h
2  8679	000014A1			 vm_oraccdat		 endp
2  8680
2  8681					 ;-----------------------------------------------------------------------------------------[+
   8682					 or acc, variable
2  8683	000014A1			 vm_oraccvar		 proc	 STDCALL, ptrMachine:DWORD
3  8684	000014A1  C8 0000 00			 ENTERD	 00000h,0
3  8685	000014A5  8B 75	08			 mov	 esi, ptrMachine
2  8686	000014A8  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8687	000014AB  47				 inc	 edi
2  8688
2  8689	000014AC  57				 push	 edi
2  8690	000014AD  56				 push	 esi
2  8691	000014AE  E8 FFFFEE2C			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8692	000014B3  50				 push	 eax
2  8693	000014B4  56				 push	 esi
2  8694	000014B5  E8 FFFFEE25			 call	 internals_ReadValue			 ; Gets	variable
2  8695
2  8696	000014BA  09 46	04			 or	 [esi].reg_acc,	eax
2  8697
2  8698	000014BD  FF 76	04			 push	 [esi].reg_acc
2  8699	000014C0  E8 FFFFEF76			 call	 internals_SetFlags
2  8700
2  8701	000014C5  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8702	000014C9  C9				 LEAVED
3  8703	000014CA  C2 0004			 RET	 00004h
2  8704	000014CD			 vm_oraccvar		 endp
2  8705
2  8706					 ;-----------------------------------------------------------------------------------------[+
   8707					 or dat, immediate
2  8708	000014CD			 vm_ordatimm		 proc	 STDCALL, ptrMachine:DWORD
3  8709	000014CD  C8 0000 00			 ENTERD	 00000h,0
3  8710	000014D1  8B 75	08			 mov	 esi, ptrMachine
2  8711	000014D4  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8712	000014D7  47				 inc	 edi
2  8713
2  8714	000014D8  57				 push	 edi
2  8715	000014D9  56				 push	 esi
2  8716	000014DA  E8 FFFFEE00			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8717
2  8718	000014DF  09 46	0C			 or	 [esi].reg_dat,	eax
2  8719
2  8720	000014E2  FF 76	0C			 push	 [esi].reg_dat
2  8721	000014E5  E8 FFFFEF51			 call	 internals_SetFlags
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 154
pmScript.ASM



2  8722
2  8723	000014EA  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8724	000014EE  C9				 LEAVED
3  8725	000014EF  C2 0004			 RET	 00004h
2  8726	000014F2			 vm_ordatimm		 endp
2  8727
2  8728					 ;-----------------------------------------------------------------------------------------[+
   8729					 or dat, acc
2  8730	000014F2			 vm_ordatacc		 proc	 STDCALL, ptrMachine:DWORD
3  8731	000014F2  C8 0000 00			 ENTERD	 00000h,0
3  8732	000014F6  8B 75	08			 mov	 esi, ptrMachine
2  8733
2  8734	000014F9  8B 46	04			 mov	 eax, [esi].reg_acc
2  8735	000014FC  09 46	0C			 or	 [esi].reg_dat,	eax
2  8736
2  8737	000014FF  FF 76	0C			 push	 [esi].reg_dat
2  8738	00001502  E8 FFFFEF34			 call	 internals_SetFlags
2  8739
2  8740	00001507  FF 46	1C			 inc	 [esi].reg_ip
3  8741	0000150A  C9				 LEAVED
3  8742	0000150B  C2 0004			 RET	 00004h
2  8743	0000150E			 vm_ordatacc		 endp
2  8744
2  8745					 ;-----------------------------------------------------------------------------------------[+
   8746					 or dat, variable
2  8747	0000150E			 vm_ordatvar		 proc	 STDCALL, ptrMachine:DWORD
3  8748	0000150E  C8 0000 00			 ENTERD	 00000h,0
3  8749	00001512  8B 75	08			 mov	 esi, ptrMachine
2  8750	00001515  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8751	00001518  47				 inc	 edi
2  8752
2  8753	00001519  57				 push	 edi
2  8754	0000151A  56				 push	 esi
2  8755	0000151B  E8 FFFFEDBF			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8756	00001520  50				 push	 eax
2  8757	00001521  56				 push	 esi
2  8758	00001522  E8 FFFFEDB8			 call	 internals_ReadValue			 ; Gets	variable
2  8759
2  8760	00001527  09 46	0C			 or	 [esi].reg_dat,	eax
2  8761
2  8762	0000152A  FF 76	0C			 push	 [esi].reg_dat
2  8763	0000152D  E8 FFFFEF09			 call	 internals_SetFlags
2  8764
2  8765	00001532  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8766	00001536  C9				 LEAVED
3  8767	00001537  C2 0004			 RET	 00004h
2  8768	0000153A			 vm_ordatvar		 endp
2  8769
2  8770
2  8771					 ;-----------------------------------------------------------------------------------------[+
   8772					 xor acc, immediate
2  8773	0000153A			 vm_xoraccimm		 proc	 STDCALL, ptrMachine:DWORD
3  8774	0000153A  C8 0000 00			 ENTERD	 00000h,0
3  8775	0000153E  8B 75	08			 mov	 esi, ptrMachine
2  8776	00001541  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8777	00001544  47				 inc	 edi
2  8778
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 155
pmScript.ASM



2  8779	00001545  57				 push	 edi
2  8780	00001546  56				 push	 esi
2  8781	00001547  E8 FFFFED93			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8782
2  8783	0000154C  31 46	04			 xor	 [esi].reg_acc,	eax
2  8784
2  8785	0000154F  FF 76	04			 push	 [esi].reg_acc
2  8786	00001552  E8 FFFFEEE4			 call	 internals_SetFlags
2  8787
2  8788	00001557  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8789	0000155B  C9				 LEAVED
3  8790	0000155C  C2 0004			 RET	 00004h
2  8791	0000155F			 vm_xoraccimm		 endp
2  8792
2  8793					 ;-----------------------------------------------------------------------------------------[+
   8794					 xor acc, dat
2  8795	0000155F			 vm_xoraccdat		 proc	 STDCALL, ptrMachine:DWORD
3  8796	0000155F  C8 0000 00			 ENTERD	 00000h,0
3  8797	00001563  8B 75	08			 mov	 esi, ptrMachine
2  8798
2  8799	00001566  8B 46	0C			 mov	 eax, [esi].reg_dat
2  8800	00001569  31 46	04			 xor	 [esi].reg_acc,	eax
2  8801
2  8802	0000156C  FF 76	04			 push	 [esi].reg_acc
2  8803	0000156F  E8 FFFFEEC7			 call	 internals_SetFlags
2  8804
2  8805	00001574  FF 46	1C			 inc	 [esi].reg_ip
3  8806	00001577  C9				 LEAVED
3  8807	00001578  C2 0004			 RET	 00004h
2  8808	0000157B			 vm_xoraccdat		 endp
2  8809
2  8810					 ;-----------------------------------------------------------------------------------------[+
   8811					 xor acc, variable
2  8812	0000157B			 vm_xoraccvar		 proc	 STDCALL, ptrMachine:DWORD
3  8813	0000157B  C8 0000 00			 ENTERD	 00000h,0
3  8814	0000157F  8B 75	08			 mov	 esi, ptrMachine
2  8815	00001582  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8816	00001585  47				 inc	 edi
2  8817
2  8818	00001586  57				 push	 edi
2  8819	00001587  56				 push	 esi
2  8820	00001588  E8 FFFFED52			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8821	0000158D  50				 push	 eax
2  8822	0000158E  56				 push	 esi
2  8823	0000158F  E8 FFFFED4B			 call	 internals_ReadValue			 ; Gets	variable
2  8824
2  8825	00001594  31 46	04			 xor	 [esi].reg_acc,	eax
2  8826
2  8827	00001597  FF 76	04			 push	 [esi].reg_acc
2  8828	0000159A  E8 FFFFEE9C			 call	 internals_SetFlags
2  8829
2  8830	0000159F  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8831	000015A3  C9				 LEAVED
3  8832	000015A4  C2 0004			 RET	 00004h
2  8833	000015A7			 vm_xoraccvar		 endp
2  8834
2  8835					 ;-----------------------------------------------------------------------------------------[+
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 156
pmScript.ASM



   8836					 xor dat, immediate
2  8837	000015A7			 vm_xordatimm		 proc	 STDCALL, ptrMachine:DWORD
3  8838	000015A7  C8 0000 00			 ENTERD	 00000h,0
3  8839	000015AB  8B 75	08			 mov	 esi, ptrMachine
2  8840	000015AE  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8841	000015B1  47				 inc	 edi
2  8842
2  8843	000015B2  57				 push	 edi
2  8844	000015B3  56				 push	 esi
2  8845	000015B4  E8 FFFFED26			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8846
2  8847	000015B9  31 46	0C			 xor	 [esi].reg_dat,	eax
2  8848
2  8849	000015BC  FF 76	0C			 push	 [esi].reg_dat
2  8850	000015BF  E8 FFFFEE77			 call	 internals_SetFlags
2  8851
2  8852	000015C4  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8853	000015C8  C9				 LEAVED
3  8854	000015C9  C2 0004			 RET	 00004h
2  8855	000015CC			 vm_xordatimm		 endp
2  8856
2  8857					 ;-----------------------------------------------------------------------------------------[+
   8858					 xor dat, acc
2  8859	000015CC			 vm_xordatacc		 proc	 STDCALL, ptrMachine:DWORD
3  8860	000015CC  C8 0000 00			 ENTERD	 00000h,0
3  8861	000015D0  8B 75	08			 mov	 esi, ptrMachine
2  8862
2  8863	000015D3  8B 46	04			 mov	 eax, [esi].reg_acc
2  8864	000015D6  31 46	0C			 xor	 [esi].reg_dat,	eax
2  8865
2  8866	000015D9  FF 76	0C			 push	 [esi].reg_dat
2  8867	000015DC  E8 FFFFEE5A			 call	 internals_SetFlags
2  8868
2  8869	000015E1  FF 46	1C			 inc	 [esi].reg_ip
3  8870	000015E4  C9				 LEAVED
3  8871	000015E5  C2 0004			 RET	 00004h
2  8872	000015E8			 vm_xordatacc		 endp
2  8873
2  8874					 ;-----------------------------------------------------------------------------------------[+
   8875					 xor dat, variable
2  8876	000015E8			 vm_xordatvar		 proc	 STDCALL, ptrMachine:DWORD
3  8877	000015E8  C8 0000 00			 ENTERD	 00000h,0
3  8878	000015EC  8B 75	08			 mov	 esi, ptrMachine
2  8879	000015EF  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8880	000015F2  47				 inc	 edi
2  8881
2  8882	000015F3  57				 push	 edi
2  8883	000015F4  56				 push	 esi
2  8884	000015F5  E8 FFFFECE5			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8885	000015FA  50				 push	 eax
2  8886	000015FB  56				 push	 esi
2  8887	000015FC  E8 FFFFECDE			 call	 internals_ReadValue			 ; Gets	variable
2  8888
2  8889	00001601  31 46	0C			 xor	 [esi].reg_dat,	eax
2  8890
2  8891	00001604  FF 76	0C			 push	 [esi].reg_dat
2  8892	00001607  E8 FFFFEE2F			 call	 internals_SetFlags
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 157
pmScript.ASM



2  8893
2  8894	0000160C  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8895	00001610  C9				 LEAVED
3  8896	00001611  C2 0004			 RET	 00004h
2  8897	00001614			 vm_xordatvar		 endp
2  8898
2  8899					 ;-----------------------------------------------------------------------------------------[+
   8900					 not acc
2  8901	00001614			 vm_notacc		 proc	 STDCALL, ptrMachine:DWORD
3  8902	00001614  C8 0000 00			 ENTERD	 00000h,0
3  8903	00001618  8B 75	08			 mov	 esi, ptrMachine
2  8904
2  8905	0000161B  F7 56	04			 not	 [esi].reg_acc
2  8906
2  8907	0000161E  FF 76	04			 push	 [esi].reg_acc
2  8908	00001621  E8 FFFFEE15			 call	 internals_SetFlags
2  8909
2  8910	00001626  FF 46	1C			 inc	 [esi].reg_ip
3  8911	00001629  C9				 LEAVED
3  8912	0000162A  C2 0004			 RET	 00004h
2  8913	0000162D			 vm_notacc		 endp
2  8914
2  8915					 ;-----------------------------------------------------------------------------------------[+
   8916					 not dat
2  8917	0000162D			 vm_notdat		 proc	 STDCALL, ptrMachine:DWORD
3  8918	0000162D  C8 0000 00			 ENTERD	 00000h,0
3  8919	00001631  8B 75	08			 mov	 esi, ptrMachine
2  8920
2  8921	00001634  F7 56	0C			 not	 [esi].reg_dat
2  8922
2  8923	00001637  FF 76	0C			 push	 [esi].reg_dat
2  8924	0000163A  E8 FFFFEDFC			 call	 internals_SetFlags
2  8925
2  8926	0000163F  FF 46	1C			 inc	 [esi].reg_ip
3  8927	00001642  C9				 LEAVED
3  8928	00001643  C2 0004			 RET	 00004h
2  8929	00001646			 vm_notdat		 endp
2  8930
2  8931					 ;-----------------------------------------------------------------------------------------[+
   8932					 neg acc
2  8933	00001646			 vm_negacc		 proc	 STDCALL, ptrMachine:DWORD
3  8934	00001646  C8 0000 00			 ENTERD	 00000h,0
3  8935	0000164A  8B 75	08			 mov	 esi, ptrMachine
2  8936
2  8937	0000164D  F7 5E	04			 neg	 [esi].reg_acc
2  8938
2  8939	00001650  FF 76	04			 push	 [esi].reg_acc
2  8940	00001653  E8 FFFFEDE3			 call	 internals_SetFlags
2  8941
2  8942	00001658  FF 46	1C			 inc	 [esi].reg_ip
3  8943	0000165B  C9				 LEAVED
3  8944	0000165C  C2 0004			 RET	 00004h
2  8945	0000165F			 vm_negacc		 endp
2  8946
2  8947					 ;-----------------------------------------------------------------------------------------[+
   8948					 neg dat
2  8949	0000165F			 vm_negdat		 proc	 STDCALL, ptrMachine:DWORD
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 158
pmScript.ASM



3  8950	0000165F  C8 0000 00			 ENTERD	 00000h,0
3  8951	00001663  8B 75	08			 mov	 esi, ptrMachine
2  8952
2  8953	00001666  F7 5E	0C			 neg	 [esi].reg_dat
2  8954
2  8955	00001669  FF 76	0C			 push	 [esi].reg_dat
2  8956	0000166C  E8 FFFFEDCA			 call	 internals_SetFlags
2  8957
2  8958	00001671  FF 46	1C			 inc	 [esi].reg_ip
3  8959	00001674  C9				 LEAVED
3  8960	00001675  C2 0004			 RET	 00004h
2  8961	00001678			 vm_negdat		 endp
2  8962
2  8963					 ;-----------------------------------------------------------------------------------------[+
   8964					 and cnt, immediate
2  8965	00001678			 vm_andcntimm		 proc	 STDCALL, ptrMachine:DWORD
3  8966	00001678  C8 0000 00			 ENTERD	 00000h,0
3  8967	0000167C  8B 75	08			 mov	 esi, ptrMachine
2  8968	0000167F  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  8969	00001682  47				 inc	 edi
2  8970
2  8971	00001683  57				 push	 edi
2  8972	00001684  56				 push	 esi
2  8973	00001685  E8 FFFFEC55			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  8974
2  8975	0000168A  21 46	08			 and	 [esi].reg_cnt,	eax
2  8976
2  8977	0000168D  FF 76	08			 push	 [esi].reg_cnt
2  8978	00001690  E8 FFFFEDA6			 call	 internals_SetFlags
2  8979
2  8980	00001695  83 46	1C 05			 add	 [esi].reg_ip, 5
3  8981	00001699  C9				 LEAVED
3  8982	0000169A  C2 0004			 RET	 00004h
2  8983	0000169D			 vm_andcntimm		 endp
2  8984
2  8985					 ;-----------------------------------------------------------------------------------------[+
   8986					 and cnt, acc
2  8987	0000169D			 vm_andcntacc		 proc	 STDCALL, ptrMachine:DWORD
3  8988	0000169D  C8 0000 00			 ENTERD	 00000h,0
3  8989	000016A1  8B 75	08			 mov	 esi, ptrMachine
2  8990
2  8991	000016A4  8B 46	04			 mov	 eax, [esi].reg_acc
2  8992	000016A7  21 46	08			 and	 [esi].reg_cnt,	eax
2  8993
2  8994	000016AA  FF 76	08			 push	 [esi].reg_cnt
2  8995	000016AD  E8 FFFFED89			 call	 internals_SetFlags
2  8996
2  8997	000016B2  FF 46	1C			 inc	 [esi].reg_ip
3  8998	000016B5  C9				 LEAVED
3  8999	000016B6  C2 0004			 RET	 00004h
2  9000	000016B9			 vm_andcntacc		 endp
2  9001
2  9002					 ;-----------------------------------------------------------------------------------------[+
   9003					 and cnt, variable
2  9004	000016B9			 vm_andcntvar		 proc	 STDCALL, ptrMachine:DWORD
3  9005	000016B9  C8 0000 00			 ENTERD	 00000h,0
3  9006	000016BD  8B 75	08			 mov	 esi, ptrMachine
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 159
pmScript.ASM



2  9007	000016C0  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9008	000016C3  47				 inc	 edi
2  9009
2  9010	000016C4  57				 push	 edi
2  9011	000016C5  56				 push	 esi
2  9012	000016C6  E8 FFFFEC14			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9013	000016CB  50				 push	 eax
2  9014	000016CC  56				 push	 esi
2  9015	000016CD  E8 FFFFEC0D			 call	 internals_ReadValue			 ; Gets	variable
2  9016
2  9017	000016D2  21 46	08			 and	 [esi].reg_cnt,	eax
2  9018
2  9019	000016D5  FF 76	08			 push	 [esi].reg_cnt
2  9020	000016D8  E8 FFFFED5E			 call	 internals_SetFlags
2  9021
2  9022	000016DD  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9023	000016E1  C9				 LEAVED
3  9024	000016E2  C2 0004			 RET	 00004h
2  9025	000016E5			 vm_andcntvar		 endp
2  9026
2  9027					 ;-----------------------------------------------------------------------------------------[+
   9028					 or cnt, immediate
2  9029	000016E5			 vm_orcntimm		 proc	 STDCALL, ptrMachine:DWORD
3  9030	000016E5  C8 0000 00			 ENTERD	 00000h,0
3  9031	000016E9  8B 75	08			 mov	 esi, ptrMachine
2  9032	000016EC  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9033	000016EF  47				 inc	 edi
2  9034
2  9035	000016F0  57				 push	 edi
2  9036	000016F1  56				 push	 esi
2  9037	000016F2  E8 FFFFEBE8			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9038
2  9039	000016F7  09 46	08			 or	 [esi].reg_cnt,	eax
2  9040
2  9041	000016FA  FF 76	08			 push	 [esi].reg_cnt
2  9042	000016FD  E8 FFFFED39			 call	 internals_SetFlags
2  9043
2  9044	00001702  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9045	00001706  C9				 LEAVED
3  9046	00001707  C2 0004			 RET	 00004h
2  9047	0000170A			 vm_orcntimm		 endp
2  9048
2  9049					 ;-----------------------------------------------------------------------------------------[+
   9050					 or cnt, acc
2  9051	0000170A			 vm_orcntacc		 proc	 STDCALL, ptrMachine:DWORD
3  9052	0000170A  C8 0000 00			 ENTERD	 00000h,0
3  9053	0000170E  8B 75	08			 mov	 esi, ptrMachine
2  9054
2  9055	00001711  8B 46	04			 mov	 eax, [esi].reg_acc
2  9056	00001714  09 46	08			 or	 [esi].reg_cnt,	eax
2  9057
2  9058	00001717  FF 76	08			 push	 [esi].reg_cnt
2  9059	0000171A  E8 FFFFED1C			 call	 internals_SetFlags
2  9060
2  9061	0000171F  FF 46	1C			 inc	 [esi].reg_ip
3  9062	00001722  C9				 LEAVED
3  9063	00001723  C2 0004			 RET	 00004h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 160
pmScript.ASM



2  9064	00001726			 vm_orcntacc		 endp
2  9065
2  9066					 ;-----------------------------------------------------------------------------------------[+
   9067					 or cnt, variable
2  9068	00001726			 vm_orcntvar		 proc	 STDCALL, ptrMachine:DWORD
3  9069	00001726  C8 0000 00			 ENTERD	 00000h,0
3  9070	0000172A  8B 75	08			 mov	 esi, ptrMachine
2  9071	0000172D  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9072	00001730  47				 inc	 edi
2  9073
2  9074	00001731  57				 push	 edi
2  9075	00001732  56				 push	 esi
2  9076	00001733  E8 FFFFEBA7			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9077	00001738  50				 push	 eax
2  9078	00001739  56				 push	 esi
2  9079	0000173A  E8 FFFFEBA0			 call	 internals_ReadValue			 ; Gets	variable
2  9080
2  9081	0000173F  09 46	08			 or	 [esi].reg_cnt,	eax
2  9082
2  9083	00001742  FF 76	08			 push	 [esi].reg_cnt
2  9084	00001745  E8 FFFFECF1			 call	 internals_SetFlags
2  9085
2  9086	0000174A  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9087	0000174E  C9				 LEAVED
3  9088	0000174F  C2 0004			 RET	 00004h
2  9089	00001752			 vm_orcntvar		 endp
2  9090
2  9091					 ;-----------------------------------------------------------------------------------------[+
   9092					 xor cnt, immediate
2  9093	00001752			 vm_xorcntimm		 proc	 STDCALL, ptrMachine:DWORD
3  9094	00001752  C8 0000 00			 ENTERD	 00000h,0
3  9095	00001756  8B 75	08			 mov	 esi, ptrMachine
2  9096	00001759  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9097	0000175C  47				 inc	 edi
2  9098
2  9099	0000175D  57				 push	 edi
2  9100	0000175E  56				 push	 esi
2  9101	0000175F  E8 FFFFEB7B			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9102
2  9103	00001764  31 46	08			 xor	 [esi].reg_cnt,	eax
2  9104
2  9105	00001767  FF 76	08			 push	 [esi].reg_cnt
2  9106	0000176A  E8 FFFFECCC			 call	 internals_SetFlags
2  9107
2  9108	0000176F  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9109	00001773  C9				 LEAVED
3  9110	00001774  C2 0004			 RET	 00004h
2  9111	00001777			 vm_xorcntimm		 endp
2  9112
2  9113					 ;-----------------------------------------------------------------------------------------[+
   9114					 xor cnt, acc
2  9115	00001777			 vm_xorcntacc		 proc	 STDCALL, ptrMachine:DWORD
3  9116	00001777  C8 0000 00			 ENTERD	 00000h,0
3  9117	0000177B  8B 75	08			 mov	 esi, ptrMachine
2  9118
2  9119	0000177E  8B 46	04			 mov	 eax, [esi].reg_acc
2  9120	00001781  31 46	08			 xor	 [esi].reg_cnt,	eax
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 161
pmScript.ASM



2  9121
2  9122	00001784  FF 76	08			 push	 [esi].reg_cnt
2  9123	00001787  E8 FFFFECAF			 call	 internals_SetFlags
2  9124
2  9125	0000178C  FF 46	1C			 inc	 [esi].reg_ip
3  9126	0000178F  C9				 LEAVED
3  9127	00001790  C2 0004			 RET	 00004h
2  9128	00001793			 vm_xorcntacc		 endp
2  9129
2  9130					 ;-----------------------------------------------------------------------------------------[+
   9131					 xor cnt, variable
2  9132	00001793			 vm_xorcntvar		 proc	 STDCALL, ptrMachine:DWORD
3  9133	00001793  C8 0000 00			 ENTERD	 00000h,0
3  9134	00001797  8B 75	08			 mov	 esi, ptrMachine
2  9135	0000179A  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9136	0000179D  47				 inc	 edi
2  9137
2  9138	0000179E  57				 push	 edi
2  9139	0000179F  56				 push	 esi
2  9140	000017A0  E8 FFFFEB3A			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9141	000017A5  50				 push	 eax
2  9142	000017A6  56				 push	 esi
2  9143	000017A7  E8 FFFFEB33			 call	 internals_ReadValue			 ; Gets	variable
2  9144
2  9145	000017AC  31 46	08			 xor	 [esi].reg_cnt,	eax
2  9146
2  9147	000017AF  FF 76	08			 push	 [esi].reg_cnt
2  9148	000017B2  E8 FFFFEC84			 call	 internals_SetFlags
2  9149
2  9150	000017B7  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9151	000017BB  C9				 LEAVED
3  9152	000017BC  C2 0004			 RET	 00004h
2  9153	000017BF			 vm_xorcntvar		 endp
2  9154
2  9155					 ;-----------------------------------------------------------------------------------------[+
   9156					 and acc, cnt
2  9157	000017BF			 vm_andacccnt		 proc	 STDCALL, ptrMachine:DWORD
3  9158	000017BF  C8 0000 00			 ENTERD	 00000h,0
3  9159	000017C3  8B 75	08			 mov	 esi, ptrMachine
2  9160
2  9161	000017C6  8B 46	08			 mov	 eax, [esi].reg_cnt
2  9162	000017C9  21 46	04			 and	 [esi].reg_acc,	eax
2  9163
2  9164	000017CC  FF 76	04			 push	 [esi].reg_acc
2  9165	000017CF  E8 FFFFEC67			 call	 internals_SetFlags
2  9166
2  9167	000017D4  FF 46	1C			 inc	 [esi].reg_ip
3  9168	000017D7  C9				 LEAVED
3  9169	000017D8  C2 0004			 RET	 00004h
2  9170	000017DB			 vm_andacccnt		 endp
2  9171
2  9172					 ;-----------------------------------------------------------------------------------------[+
   9173					 or acc, cnt
2  9174	000017DB			 vm_oracccnt		 proc	 STDCALL, ptrMachine:DWORD
3  9175	000017DB  C8 0000 00			 ENTERD	 00000h,0
3  9176	000017DF  8B 75	08			 mov	 esi, ptrMachine
2  9177
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 162
pmScript.ASM



2  9178	000017E2  8B 46	08			 mov	 eax, [esi].reg_cnt
2  9179	000017E5  09 46	04			 or	 [esi].reg_acc,	eax
2  9180
2  9181	000017E8  FF 76	04			 push	 [esi].reg_acc
2  9182	000017EB  E8 FFFFEC4B			 call	 internals_SetFlags
2  9183
2  9184	000017F0  FF 46	1C			 inc	 [esi].reg_ip
3  9185	000017F3  C9				 LEAVED
3  9186	000017F4  C2 0004			 RET	 00004h
2  9187	000017F7			 vm_oracccnt		 endp
2  9188
2  9189					 ;-----------------------------------------------------------------------------------------[+
   9190					 xor acc, cnt
2  9191	000017F7			 vm_xoracccnt		 proc	 STDCALL, ptrMachine:DWORD
3  9192	000017F7  C8 0000 00			 ENTERD	 00000h,0
3  9193	000017FB  8B 75	08			 mov	 esi, ptrMachine
2  9194
2  9195	000017FE  8B 46	08			 mov	 eax, [esi].reg_cnt
2  9196	00001801  31 46	04			 xor	 [esi].reg_acc,	eax
2  9197
2  9198	00001804  FF 76	04			 push	 [esi].reg_acc
2  9199	00001807  E8 FFFFEC2F			 call	 internals_SetFlags
2  9200
2  9201	0000180C  FF 46	1C			 inc	 [esi].reg_ip
3  9202	0000180F  C9				 LEAVED
3  9203	00001810  C2 0004			 RET	 00004h
2  9204	00001813			 vm_xoracccnt		 endp
2  9205
2  9206
1  9207					 INCLUDE ops_trig.inc
2  9208
2  9209	00001813				 .data
2  9210
2  9211					 ; Figures multiplied by 32767
2  9212
2  9213	00000309			 trig_SineTable:
2  9214	00000309  0000 023B 0477 06B2 +		 dw	 0, 571, 1143, 1714, 2285, 2855, 3425, 3993, 4560, 5125, 5689, 6252, 6812,  +
   9215		  08ED 0B27 0D61 0F99 +	 7370, 7927, 8480, 9031, 9580, 10125, 10667, 11206, 11742, 12274, 12803, 13327,	13847,	    +
   9216		  11D0 1405 1639 186C +	 14364,	14875, 15383, 15885, 16383, 16876, 17363, 17846, 18323,	18794
   9217		  1A9C 1CCA 1EF7 2120 +
   9218		  2347 256C 278D 29AB +
   9219		  2BC6 2DDE 2FF2 3203 +
   9220		  340F 3617 381C 3A1B +
   9221		  3C17 3E0D 3FFF 41EC +
   9222		  43D3 45B6 4793 496A
2  9223	00000351  4B3B 4D07 4ECD 508C +		 dw	 19259,	19719, 20173, 20620, 21062, 21497, 21925, 22347, 22761,	23169,	    +
   9224		  5246 53F9 55A5 574B +	 23570,	23964, 24350, 24729, 25100, 25464, 25820, 26168, 26509,	26841, 27165, 27480, 27787, +
   9225		  58E9 5A81 5C12 5D9C +	 28086,	28377, 28658, 28931, 29195, 29450, 29696, 29934, 30162,	30381, 30590, 30790, 30981
   9226		  5F1E 6099 620C 6378 +
   9227		  64DC 6638 678D 68D9 +
   9228		  6A1D 6B58 6C8B 6DB6 +
   9229		  6ED9 6FF2 7103 720B +
   9230		  730A 7400 74EE 75D2 +
   9231		  76AD 777E 7846 7905
2  9232	00000399  79BB 7A67 7B09 7BA2 +		 dw	 31163,	31335, 31497, 31650, 31793, 31927, 32050, 32164, 32269,	32363,	    +
   9233		  7C31 7CB7 7D32 7DA4 +	 32448,	32522, 32587, 32642, 32687, 32722, 32747, 32762, 32767,	32762, 32747, 32722, 32687, +
   9234		  7E0D 7E6B 7EC0 7F0A +	 32642,	32587, 32522, 32448, 32363, 32269, 32164, 32050, 31927,	31793, 31650, 31497, 31335
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 163
pmScript.ASM



   9235		  7F4B 7F82 7FAF 7FD2 +
   9236		  7FEB 7FFA 7FFF 7FFA +
   9237		  7FEB 7FD2 7FAF 7F82 +
   9238		  7F4B 7F0A 7EC0 7E6B +
   9239		  7E0D 7DA4 7D32 7CB7 +
   9240		  7C31 7BA2 7B09 7A67
2  9241	000003E1  79BB 7905 7846 777E +		 dw	 31163,	30981, 30790, 30590, 30381, 30162, 29934, 29696, 29450,	29195,	    +
   9242		  76AD 75D2 74EE 7400 +	 28931,	28658, 28377, 28086, 27787, 27480, 27165, 26841, 26509,	26168, 25820, 25464, 25100, +
   9243		  730A 720B 7103 6FF2 +	 24729,	24350, 23964, 23570, 23169, 22761, 22347, 21925, 21497,	21062, 20620, 20173, 19719
   9244		  6ED9 6DB6 6C8B 6B58 +
   9245		  6A1D 68D9 678D 6638 +
   9246		  64DC 6378 620C 6099 +
   9247		  5F1E 5D9C 5C12 5A81 +
   9248		  58E9 574B 55A5 53F9 +
   9249		  5246 508C 4ECD 4D07
2  9250	00000429  4B3B 496A 4793 45B6 +		 dw	 19259,	18794, 18323, 17846, 17363, 16876, 16383, 15885, 15383,	14875,	    +
   9251		  43D3 41EC 3FFF 3E0D +	 14364,	13847, 13327, 12803, 12274, 11742, 11206, 10667, 10125,	9580, 9031, 8480, 7927,	    +
   9252		  3C17 3A1B 381C 3617 +	 7370, 6812, 6252, 5689, 5125, 4560, 3993, 3425, 2855, 2285, 1714, 1143, 571
   9253		  340F 3203 2FF2 2DDE +
   9254		  2BC6 29AB 278D 256C +
   9255		  2347 2120 1EF7 1CCA +
   9256		  1A9C 186C 1639 1405 +
   9257		  11D0 0F99 0D61 0B27 +
   9258		  08ED 06B2 0477 023B
2  9259	00000471  0000 FDC4 FB88 F94D +		 dw	 0, -572, -1144, -1715,	-2286, -2856, -3426, -3994, -4561, -5126, -5690,    +
   9260		  F712 F4D8 F29E F066 +	 -6253,	-6813, -7371, -7928, -8481, -9032, -9581, -10126, -10668, -11207, -11743, -12275,   +
   9261		  EE2F EBFA E9C6 E793 +	 -12804, -13328, -13848, -14365, -14876, -15384, -15886, -16384, -16877, -17364, -17847,    +
   9262		  E563 E335 E108 DEDF +	 -18324, -18795
   9263		  DCB8 DA93 D872 D654 +
   9264		  D439 D221 D00D CDFC +
   9265		  CBF0 C9E8 C7E3 C5E4 +
   9266		  C3E8 C1F2 C000 BE13 +
   9267		  BC2C BA49 B86C B695
2  9268	000004B9  B4C4 B2F8 B132 AF73 +		 dw	 -19260, -19720, -20174, -20621, -21063, -21498, -21926, -22348, -22762,    +
   9269		  ADB9 AC06 AA5A A8B4 +	 -23170, -23571, -23965, -24351, -24730, -25101, -25465, -25821, -26169, -26510, -26842,    +
   9270		  A716 A57E A3ED A263 +	 -27166, -27481, -27788, -28087, -28378, -28659, -28932, -29196, -29451, -29697, -29935,    +
   9271		  A0E1 9F66 9DF3 9C87 +	 -30163, -30382, -30591, -30791, -30982
   9272		  9B23 99C7 9872 9726 +
   9273		  95E2 94A7 9374 9249 +
   9274		  9126 900D 8EFC 8DF4 +
   9275		  8CF5 8BFF 8B11 8A2D +
   9276		  8952 8881 87B9 86FA
2  9277	00000501  8644 8598 84F6 845D +		 dw	 -31164, -31336, -31498, -31651, -31794, -31928, -32051, -32165, -32270,    +
   9278		  83CE 8348 82CD 825B +	 -32364, -32449, -32523, -32588, -32643, -32688, -32723, -32748, -32763, -32767, -32763,    +
   9279		  81F2 8194 813F 80F5 +	 -32748, -32723, -32688, -32643, -32588, -32523, -32449, -32364, -32270, -32165, -32051,    +
   9280		  80B4 807D 8050 802D +	 -31928, -31794, -31651, -31498, -31336
   9281		  8014 8005 8001 8005 +
   9282		  8014 802D 8050 807D +
   9283		  80B4 80F5 813F 8194 +
   9284		  81F2 825B 82CD 8348 +
   9285		  83CE 845D 84F6 8598
2  9286	00000549  8644 86FA 87B9 8881 +		 dw	 -31164, -30982, -30791, -30591, -30382, -30163, -29935, -29697, -29451,    +
   9287		  8952 8A2D 8B11 8BFF +	 -29196, -28932, -28659, -28378, -28087, -27788, -27481, -27166, -26842, -26510, -26169,    +
   9288		  8CF5 8DF4 8EFC 900D +	 -25821, -25465, -25101, -24730, -24351, -23965, -23571, -23170, -22762, -22348, -21926,    +
   9289		  9126 9249 9374 94A7 +	 -21498, -21063, -20621, -20174, -19720
   9290		  95E2 9726 9872 99C7 +
   9291		  9B23 9C87 9DF3 9F66 +
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 164
pmScript.ASM



   9292		  A0E1 A263 A3ED A57E +
   9293		  A716 A8B4 AA5A AC06 +
   9294		  ADB9 AF73 B132 B2F8
2  9295	00000591  B4C4 B695 B86C BA49 +		 dw	 -19260, -18795, -18324, -17847, -17364, -16877, -16384, -15886, -15384,    +
   9296		  BC2C BE13 C000 C1F2 +	 -14876, -14365, -13848, -13328, -12804, -12275, -11743, -11207, -10668, -10126, -9581,	    +
   9297		  C3E8 C5E4 C7E3 C9E8 +	 -9032,	-8481, -7928, -7371, -6813, -6253, -5690, -5126, -4561,	-3994, -3426, -2856, -2286, +
   9298		  CBF0 CDFC D00D D221 +	 -1715,	-1144, -572
   9299		  D439 D654 D872 DA93 +
   9300		  DCB8 DEDF E108 E335 +
   9301		  E563 E793 E9C6 EBFA +
   9302		  EE2F F066 F29E F4D8 +
   9303		  F712 F94D FB88 FDC4
2  9304
2  9305	000005D9			 trig_CosineTable:
2  9306	000005D9  7FFF 7FFA 7FEB 7FD2 +		 dw	 32767,	32762, 32747, 32722, 32687, 32642, 32587, 32522, 32448,	32363,	    +
   9307		  7FAF 7F82 7F4B 7F0A +	 32269,	32164, 32050, 31927, 31793, 31650, 31497, 31335, 31163,	30981, 30790, 30590, 30381, +
   9308		  7EC0 7E6B 7E0D 7DA4 +	 30162,	29934, 29696, 29450, 29195, 28931, 28658, 28377, 28086,	27787, 27480, 27165, 26841
   9309		  7D32 7CB7 7C31 7BA2 +
   9310		  7B09 7A67 79BB 7905 +
   9311		  7846 777E 76AD 75D2 +
   9312		  74EE 7400 730A 720B +
   9313		  7103 6FF2 6ED9 6DB6 +
   9314		  6C8B 6B58 6A1D 68D9
2  9315	00000621  678D 6638 64DC 6378 +		 dw	 26509,	26168, 25820, 25464, 25100, 24729, 24350, 23964, 23570,	23169,	    +
   9316		  620C 6099 5F1E 5D9C +	 22761,	22347, 21925, 21497, 21062, 20620, 20173, 19719, 19259,	18794, 18323, 17846, 17363, +
   9317		  5C12 5A81 58E9 574B +	 16876,	16383, 15885, 15383, 14875, 14364, 13847, 13327, 12803,	12274, 11742, 11206, 10667
   9318		  55A5 53F9 5246 508C +
   9319		  4ECD 4D07 4B3B 496A +
   9320		  4793 45B6 43D3 41EC +
   9321		  3FFF 3E0D 3C17 3A1B +
   9322		  381C 3617 340F 3203 +
   9323		  2FF2 2DDE 2BC6 29AB
2  9324	00000669  278D 256C 2347 2120 +		 dw	 10125,	9580, 9031, 8480, 7927,	7370, 6812, 6252, 5689,	5125, 4560, 3993,   +
   9325		  1EF7 1CCA 1A9C 186C +	 3425, 2855, 2285, 1714, 1143, 571, 0, -572, -1144, -1715, -2286, -2856, -3426,	-3994,	    +
   9326		  1639 1405 11D0 0F99 +	 -4561,	-5126, -5690, -6253, -6813, -7371, -7928, -8481, -9032,	-9581
   9327		  0D61 0B27 08ED 06B2 +
   9328		  0477 023B 0000 FDC4 +
   9329		  FB88 F94D F712 F4D8 +
   9330		  F29E F066 EE2F EBFA +
   9331		  E9C6 E793 E563 E335 +
   9332		  E108 DEDF DCB8 DA93
2  9333	000006B1  D872 D654 D439 D221 +		 dw	 -10126, -10668, -11207, -11743, -12275, -12804, -13328, -13848, -14365,    +
   9334		  D00D CDFC CBF0 C9E8 +	 -14876, -15384, -15886, -16384, -16877, -17364, -17847, -18324, -18795, -19260, -19720,    +
   9335		  C7E3 C5E4 C3E8 C1F2 +	 -20174, -20621, -21063, -21498, -21926, -22348, -22762, -23170, -23571, -23965, -24351,    +
   9336		  C000 BE13 BC2C BA49 +	 -24730, -25101, -25465, -25821, -26169
   9337		  B86C B695 B4C4 B2F8 +
   9338		  B132 AF73 ADB9 AC06 +
   9339		  AA5A A8B4 A716 A57E +
   9340		  A3ED A263 A0E1 9F66 +
   9341		  9DF3 9C87 9B23 99C7
2  9342	000006F9  9872 9726 95E2 94A7 +		 dw	 -26510, -26842, -27166, -27481, -27788, -28087, -28378, -28659, -28932,    +
   9343		  9374 9249 9126 900D +	 -29196, -29451, -29697, -29935, -30163, -30382, -30591, -30791, -30982, -31164, -31336,    +
   9344		  8EFC 8DF4 8CF5 8BFF +	 -31498, -31651, -31794, -31928, -32051, -32165, -32270, -32364, -32449, -32523, -32588,    +
   9345		  8B11 8A2D 8952 8881 +	 -32643, -32688, -32723, -32748, -32763
   9346		  87B9 86FA 8644 8598 +
   9347		  84F6 845D 83CE 8348 +
   9348		  82CD 825B 81F2 8194 +
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 165
pmScript.ASM



   9349		  813F 80F5 80B4 807D +
   9350		  8050 802D 8014 8005
2  9351	00000741  8001 8005 8014 802D +		 dw	 -32767, -32763, -32748, -32723, -32688, -32643, -32588, -32523, -32449,    +
   9352		  8050 807D 80B4 80F5 +	 -32364, -32270, -32165, -32051, -31928, -31794, -31651, -31498, -31336, -31164, -30982,    +
   9353		  813F 8194 81F2 825B +	 -30791, -30591, -30382, -30163, -29935, -29697, -29451, -29196, -28932, -28659, -28378,    +
   9354		  82CD 8348 83CE 845D +	 -28087, -27788, -27481, -27166, -26842
   9355		  84F6 8598 8644 86FA +
   9356		  87B9 8881 8952 8A2D +
   9357		  8B11 8BFF 8CF5 8DF4 +
   9358		  8EFC 900D 9126 9249 +
   9359		  9374 94A7 95E2 9726
2  9360	00000789  9872 99C7 9B23 9C87 +		 dw	 -26510, -26169, -25821, -25465, -25101, -24730, -24351, -23965, -23571,    +
   9361		  9DF3 9F66 A0E1 A263 +	 -23170, -22762, -22348, -21926, -21498, -21063, -20621, -20174, -19720, -19260, -18795,    +
   9362		  A3ED A57E A716 A8B4 +	 -18324, -17847, -17364, -16877, -16384, -15886, -15384, -14876, -14365, -13848, -13328,    +
   9363		  AA5A AC06 ADB9 AF73 +	 -12804, -12275, -11743, -11207, -10668
   9364		  B132 B2F8 B4C4 B695 +
   9365		  B86C BA49 BC2C BE13 +
   9366		  C000 C1F2 C3E8 C5E4 +
   9367		  C7E3 C9E8 CBF0 CDFC +
   9368		  D00D D221 D439 D654
2  9369	000007D1  D872 DA93 DCB8 DEDF +		 dw	 -10126, -9581,	-9032, -8481, -7928, -7371, -6813, -6253, -5690, -5126,	    +
   9370		  E108 E335 E563 E793 +	 -4561,	-3994, -3426, -2856, -2286, -1715, -1144, -572,	-1, 571, 1143, 1714, 2285, 2855,    +
   9371		  E9C6 EBFA EE2F F066 +	 3425, 3993, 4560, 5125, 5689, 6252, 6812, 7370, 7927, 8480, 9031, 9580
   9372		  F29E F4D8 F712 F94D +
   9373		  FB88 FDC4 FFFF 023B +
   9374		  0477 06B2 08ED 0B27 +
   9375		  0D61 0F99 11D0 1405 +
   9376		  1639 186C 1A9C 1CCA +
   9377		  1EF7 2120 2347 256C
2  9378	00000819  278D 29AB 2BC6 2DDE +		 dw	 10125,	10667, 11206, 11742, 12274, 12803, 13327, 13847, 14364,	14875,	    +
   9379		  2FF2 3203 340F 3617 +	 15383,	15885, 16383, 16876, 17363, 17846, 18323, 18794, 19259,	19719, 20173, 20620, 21062, +
   9380		  381C 3A1B 3C17 3E0D +	 21497,	21925, 22347, 22761, 23169, 23570, 23964, 24350, 24729,	25100, 25464, 25820, 26168
   9381		  3FFF 41EC 43D3 45B6 +
   9382		  4793 496A 4B3B 4D07 +
   9383		  4ECD 508C 5246 53F9 +
   9384		  55A5 574B 58E9 5A81 +
   9385		  5C12 5D9C 5F1E 6099 +
   9386		  620C 6378 64DC 6638
2  9387	00000861  678D 68D9 6A1D 6B58 +		 dw	 26509,	26841, 27165, 27480, 27787, 28086, 28377, 28658, 28931,	29195,	    +
   9388		  6C8B 6DB6 6ED9 6FF2 +	 29450,	29696, 29934, 30162, 30381, 30590, 30790, 30981, 31163,	31335, 31497, 31650, 31793, +
   9389		  7103 720B 730A 7400 +	 31927,	32050, 32164, 32269, 32363, 32448, 32522, 32587, 32642,	32687, 32722, 32747, 32762
   9390		  74EE 75D2 76AD 777E +
   9391		  7846 7905 79BB 7A67 +
   9392		  7B09 7BA2 7C31 7CB7 +
   9393		  7D32 7DA4 7E0D 7E6B +
   9394		  7EC0 7F0A 7F4B 7F82 +
   9395		  7FAF 7FD2 7FEB 7FFA
2  9396
2  9397	000008A9			 trig_TangentTable:		 ; Trig	* 512, and not 32767...	and maxed out
2  9398	000008A9  0000 0008 0011 001A +		 dw	 0, 8, 17, 26, 35, 44, 53, 62, 71, 81, 90, 99, 108, 118, 127, 137, 146,	156,+
   9399		  0023 002C 0035 003E +	 166, 176, 186,	196, 206, 217, 227, 238, 249, 260, 272,	283, 295, 307, 319, 332, 345, 358
   9400		  0047 0051 005A 0063 +
   9401		  006C 0076 007F 0089 +
   9402		  0092 009C 00A6 00B0 +
   9403		  00BA 00C4 00CE 00D9 +
   9404		  00E3 00EE 00F9 0104 +
   9405		  0110 011B 0127 0133 +
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 166
pmScript.ASM



   9406		  013F 014C 0159 0166
2  9407	000008F1  0173 0181 0190 019E +		 dw	 371, 385, 400,	414, 429, 445, 461, 477, 494, 511, 530,	549, 568, 588, 610, +
   9408		  01AD 01BD 01CD 01DD +	 632, 655, 679,	704, 731, 759, 788, 819, 852, 886, 923,	962, 1004, 1049, 1097, 1149, 1206,  +
   9409		  01EE 01FF 0212 0225 +	 1267, 1333, 1406, 1486
   9410		  0238 024C 0262 0278 +
   9411		  028F 02A7 02C0 02DB +
   9412		  02F7 0314 0333 0354 +
   9413		  0376 039B 03C2 03EC +
   9414		  0419 0449 047D 04B6 +
   9415		  04F3 0535 057E 05CE
2  9416	00000939  0627 068A 06F9 0776 +		 dw	 1575, 1674, 1785, 1910, 2053, 2217, 2408, 2634, 2903, 3232, 3643, 4169,    +
   9417		  0805 08A9 0968 0A4A +	 4871, 5852, 7321, 9769, 14661,	29332, 32767, -29333, -14662, -9770, -7322, -5853, -4872,   +
   9418		  0B57 0CA0 0E3B 1049 +	 -4170,	-3644, -3233, -2904, -2635, -2409, -2218, -2054, -1911,	-1786, -1675
   9419		  1307 16DC 1C99 2629 +
   9420		  3945 7294 7FFF 8D6B +
   9421		  C6BA D9D6 E366 E923 +
   9422		  ECF8 EFB6 F1C4 F35F +
   9423		  F4A8 F5B5 F697 F756 +
   9424		  F7FA F889 F906 F975
2  9425	00000981  F9D8 FA31 FA81 FACA +		 dw	 -1576,	-1487, -1407, -1334, -1268, -1207, -1150, -1098, -1050,	-1005, -963,+
   9426		  FB0C FB49 FB82 FBB6 +	 -924, -887, -853, -820, -789, -760, -732, -705, -680, -656, -633, -611, -589, -569, -550,  +
   9427		  FBE6 FC13 FC3D FC64 +	 -531, -513, -495, -478, -462, -446, -430, -415, -401, -386
   9428		  FC89 FCAB FCCC FCEB +
   9429		  FD08 FD24 FD3F FD58 +
   9430		  FD70 FD87 FD9D FDB3 +
   9431		  FDC7 FDDA FDED FDFF +
   9432		  FE11 FE22 FE32 FE42 +
   9433		  FE52 FE61 FE6F FE7E
2  9434	000009C9  FE8C FE99 FEA6 FEB3 +		 dw	 -372, -359, -346, -333, -320, -308, -296, -284, -273, -261, -250, -239,    +
   9435		  FEC0 FECC FED8 FEE4 +	 -228, -218, -207, -197, -187, -177, -167, -157, -147, -138, -128, -119, -109, -100, -91,   +
   9436		  FEEF FEFB FF06 FF11 +	 -82, -72, -63,	-54, -45, -36, -27, -18, -9
   9437		  FF1C FF26 FF31 FF3B +
   9438		  FF45 FF4F FF59 FF63 +
   9439		  FF6D FF76 FF80 FF89 +
   9440		  FF93 FF9C FFA5 FFAE +
   9441		  FFB8 FFC1 FFCA FFD3 +
   9442		  FFDC FFE5 FFEE FFF7
2  9443	00000A11  FFFF 0008 0011 001A +		 dw	 -1, 8,	17, 26,	35, 44,	53, 62,	71, 81,	90, 99,	108, 118, 127, 137, 146,    +
   9444		  0023 002C 0035 003E +	 156, 166, 176,	186, 196, 206, 217, 227, 238, 249, 260,	272, 283, 295, 307, 319, 332, 345,  +
   9445		  0047 0051 005A 0063 +	 358
   9446		  006C 0076 007F 0089 +
   9447		  0092 009C 00A6 00B0 +
   9448		  00BA 00C4 00CE 00D9 +
   9449		  00E3 00EE 00F9 0104 +
   9450		  0110 011B 0127 0133 +
   9451		  013F 014C 0159 0166
2  9452	00000A59  0173 0181 0190 019E +		 dw	 371, 385, 400,	414, 429, 445, 461, 477, 494, 511, 530,	549, 568, 588, 610, +
   9453		  01AD 01BD 01CD 01DD +	 632, 655, 679,	704, 731, 759, 788, 819, 852, 886, 923,	962, 1004, 1049, 1097, 1149, 1206,  +
   9454		  01EE 01FF 0212 0225 +	 1267, 1333, 1406, 1486
   9455		  0238 024C 0262 0278 +
   9456		  028F 02A7 02C0 02DB +
   9457		  02F7 0314 0333 0354 +
   9458		  0376 039B 03C2 03EC +
   9459		  0419 0449 047D 04B6 +
   9460		  04F3 0535 057E 05CE
2  9461	00000AA1  0627 068A 06F9 0776 +		 dw	 1575, 1674, 1785, 1910, 2053, 2217, 2408, 2634, 2903, 3232, 3643, 4169,    +
   9462		  0805 08A9 0968 0A4A +	 4871, 5852, 7321, 9769, 14661,	29332, 32767, -29333, -14662, -9770, -7322, -5853, -4872,   +
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 167
pmScript.ASM



   9463		  0B57 0CA0 0E3B 1049 +	 -4170,	-3644, -3233, -2904, -2635, -2409, -2218, -2054, -1911,	-1786, -1675
   9464		  1307 16DC 1C99 2629 +
   9465		  3945 7294 7FFF 8D6B +
   9466		  C6BA D9D6 E366 E923 +
   9467		  ECF8 EFB6 F1C4 F35F +
   9468		  F4A8 F5B5 F697 F756 +
   9469		  F7FA F889 F906 F975
2  9470	00000AE9  F9D8 FA31 FA81 FACA +		 dw	 -1576,	-1487, -1407, -1334, -1268, -1207, -1150, -1098, -1050,	-1005, -963,+
   9471		  FB0C FB49 FB82 FBB6 +	 -924, -887, -853, -820, -789, -760, -732, -705, -680, -656, -633, -611, -589, -569, -550,  +
   9472		  FBE6 FC13 FC3D FC64 +	 -531, -513, -495, -478, -462, -446, -430, -415, -401, -386
   9473		  FC89 FCAB FCCC FCEB +
   9474		  FD08 FD24 FD3F FD58 +
   9475		  FD70 FD87 FD9D FDB3 +
   9476		  FDC7 FDDA FDED FDFF +
   9477		  FE11 FE22 FE32 FE42 +
   9478		  FE52 FE61 FE6F FE7E
2  9479	00000B31  FE8C FE99 FEA6 FEB3 +		 dw	 -372, -359, -346, -333, -320, -308, -296, -284, -273, -261, -250, -239,    +
   9480		  FEC0 FECC FED8 FEE4 +	 -228, -218, -207, -197, -187, -177, -167, -157, -147, -138, -128, -119, -109, -100, -91,   +
   9481		  FEEF FEFB FF06 FF11 +	 -82, -72, -63,	-54, -45, -36, -27, -18, -9
   9482		  FF1C FF26 FF31 FF3B +
   9483		  FF45 FF4F FF59 FF63 +
   9484		  FF6D FF76 FF80 FF89 +
   9485		  FF93 FF9C FFA5 FFAE +
   9486		  FFB8 FFC1 FFCA FFD3 +
   9487		  FFDC FFE5 FFEE FFF7
2  9488
2  9489
2  9490	00000B79				 .code
2  9491
2  9492					 ;-----------------------------------------------------------------------------------------[+
   9493					 sin imm
2  9494	00001813			 vm_sinimm		 proc	 STDCALL, ptrMachine:DWORD
3  9495	00001813  C8 0000 00			 ENTERD	 00000h,0
3  9496	00001817  8B 75	08			 mov	 esi, ptrMachine
2  9497	0000181A  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9498	0000181D  47				 inc	 edi
2  9499
2  9500	0000181E  57				 push	 edi
2  9501	0000181F  56				 push	 esi
2  9502	00001820  E8 FFFFEABA			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9503
2  9504	00001825  33 D2				 xor	 edx, edx
2  9505	00001827  B9 00000168			 mov	 ecx, 360
2  9506	0000182C  F7 F1				 div	 ecx
2  9507	0000182E  D1 E2				 shl	 edx, 1					 ; EDX == Pointer in sine table
2  9508	00001830  81 C2	00000309r		 add	 edx, offset trig_SineTable
2  9509	00001836  0F B7	02			 movzx	 eax, word ptr [edx]
2  9510
2  9511	00001839  89 46	04			 mov	 [esi].reg_acc,	eax
2  9512
2  9513	0000183C  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9514	00001840  C9				 LEAVED
3  9515	00001841  C2 0004			 RET	 00004h
2  9516	00001844			 vm_sinimm		 endp
2  9517
2  9518					 ;-----------------------------------------------------------------------------------------[+
   9519					 sin cnt
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 168
pmScript.ASM



2  9520	00001844			 vm_sincnt		 proc	 STDCALL, ptrMachine:DWORD
3  9521	00001844  C8 0000 00			 ENTERD	 00000h,0
3  9522	00001848  8B 75	08			 mov	 esi, ptrMachine
2  9523	0000184B  8B 46	08			 mov	 eax, [esi].reg_cnt
2  9524	0000184E  33 D2				 xor	 edx, edx
2  9525	00001850  B9 00000168			 mov	 ecx, 360
2  9526	00001855  F7 F1				 div	 ecx
2  9527	00001857  D1 E2				 shl	 edx, 1					 ; EDX == Pointer in sine table
2  9528	00001859  81 C2	00000309r		 add	 edx, offset trig_SineTable
2  9529	0000185F  0F B7	02			 movzx	 eax, word ptr [edx]
2  9530
2  9531	00001862  89 46	04			 mov	 [esi].reg_acc,	eax
2  9532
2  9533	00001865  FF 46	1C			 inc	 [esi].reg_ip
3  9534	00001868  C9				 LEAVED
3  9535	00001869  C2 0004			 RET	 00004h
2  9536	0000186C			 vm_sincnt		 endp
2  9537
2  9538					 ;-----------------------------------------------------------------------------------------[+
   9539					 sin var
2  9540	0000186C			 vm_sinvar		 proc	 STDCALL, ptrMachine:DWORD
3  9541	0000186C  C8 0000 00			 ENTERD	 00000h,0
3  9542	00001870  8B 75	08			 mov	 esi, ptrMachine
2  9543	00001873  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9544	00001876  47				 inc	 edi
2  9545
2  9546	00001877  57				 push	 edi
2  9547	00001878  56				 push	 esi
2  9548	00001879  E8 FFFFEA61			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9549	0000187E  50				 push	 eax
2  9550	0000187F  56				 push	 esi
2  9551	00001880  E8 FFFFEA5A			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9552
2  9553	00001885  33 D2				 xor	 edx, edx
2  9554	00001887  B9 00000168			 mov	 ecx, 360
2  9555	0000188C  F7 F1				 div	 ecx
2  9556	0000188E  D1 E2				 shl	 edx, 1					 ; EDX == Pointer in sine table
2  9557	00001890  81 C2	00000309r		 add	 edx, offset trig_SineTable
2  9558	00001896  0F B7	02			 movzx	 eax, word ptr [edx]
2  9559
2  9560	00001899  89 46	04			 mov	 [esi].reg_acc,	eax
2  9561
2  9562	0000189C  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9563	000018A0  C9				 LEAVED
3  9564	000018A1  C2 0004			 RET	 00004h
2  9565	000018A4			 vm_sinvar		 endp
2  9566
2  9567					 ;-----------------------------------------------------------------------------------------[+
   9568					 cos imm
2  9569	000018A4			 vm_cosimm		 proc	 STDCALL, ptrMachine:DWORD
3  9570	000018A4  C8 0000 00			 ENTERD	 00000h,0
3  9571	000018A8  8B 75	08			 mov	 esi, ptrMachine
2  9572	000018AB  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9573	000018AE  47				 inc	 edi
2  9574
2  9575	000018AF  57				 push	 edi
2  9576	000018B0  56				 push	 esi
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 169
pmScript.ASM



2  9577	000018B1  E8 FFFFEA29			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9578
2  9579	000018B6  33 D2				 xor	 edx, edx
2  9580	000018B8  B9 00000168			 mov	 ecx, 360
2  9581	000018BD  F7 F1				 div	 ecx
2  9582	000018BF  D1 E2				 shl	 edx, 1					 ; EDX == Pointer in cose table
2  9583	000018C1  81 C2	000005D9r		 add	 edx, offset trig_CosineTable
2  9584	000018C7  0F B7	02			 movzx	 eax, word ptr [edx]
2  9585
2  9586	000018CA  89 46	04			 mov	 [esi].reg_acc,	eax
2  9587
2  9588	000018CD  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9589	000018D1  C9				 LEAVED
3  9590	000018D2  C2 0004			 RET	 00004h
2  9591	000018D5			 vm_cosimm		 endp
2  9592
2  9593					 ;-----------------------------------------------------------------------------------------[+
   9594					 cos cnt
2  9595	000018D5			 vm_coscnt		 proc	 STDCALL, ptrMachine:DWORD
3  9596	000018D5  C8 0000 00			 ENTERD	 00000h,0
3  9597	000018D9  8B 75	08			 mov	 esi, ptrMachine
2  9598	000018DC  8B 46	08			 mov	 eax, [esi].reg_cnt
2  9599	000018DF  33 D2				 xor	 edx, edx
2  9600	000018E1  B9 00000168			 mov	 ecx, 360
2  9601	000018E6  F7 F1				 div	 ecx
2  9602	000018E8  D1 E2				 shl	 edx, 1					 ; EDX == Pointer in cose table
2  9603	000018EA  81 C2	000005D9r		 add	 edx, offset trig_CosineTable
2  9604	000018F0  0F B7	02			 movzx	 eax, word ptr [edx]
2  9605
2  9606	000018F3  89 46	04			 mov	 [esi].reg_acc,	eax
2  9607
2  9608	000018F6  FF 46	1C			 inc	 [esi].reg_ip
3  9609	000018F9  C9				 LEAVED
3  9610	000018FA  C2 0004			 RET	 00004h
2  9611	000018FD			 vm_coscnt		 endp
2  9612
2  9613					 ;-----------------------------------------------------------------------------------------[+
   9614					 cos var
2  9615	000018FD			 vm_cosvar		 proc	 STDCALL, ptrMachine:DWORD
3  9616	000018FD  C8 0000 00			 ENTERD	 00000h,0
3  9617	00001901  8B 75	08			 mov	 esi, ptrMachine
2  9618	00001904  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9619	00001907  47				 inc	 edi
2  9620
2  9621	00001908  57				 push	 edi
2  9622	00001909  56				 push	 esi
2  9623	0000190A  E8 FFFFE9D0			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9624	0000190F  50				 push	 eax
2  9625	00001910  56				 push	 esi
2  9626	00001911  E8 FFFFE9C9			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9627
2  9628	00001916  33 D2				 xor	 edx, edx
2  9629	00001918  B9 00000168			 mov	 ecx, 360
2  9630	0000191D  F7 F1				 div	 ecx
2  9631	0000191F  D1 E2				 shl	 edx, 1					 ; EDX == Pointer in cose table
2  9632	00001921  81 C2	000005D9r		 add	 edx, offset trig_CosineTable
2  9633	00001927  0F B7	02			 movzx	 eax, word ptr [edx]
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 170
pmScript.ASM



2  9634
2  9635	0000192A  89 46	04			 mov	 [esi].reg_acc,	eax
2  9636
2  9637	0000192D  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9638	00001931  C9				 LEAVED
3  9639	00001932  C2 0004			 RET	 00004h
2  9640	00001935			 vm_cosvar		 endp
2  9641
2  9642					 ;-----------------------------------------------------------------------------------------[+
   9643					 tan imm
2  9644	00001935			 vm_tanimm		 proc	 STDCALL, ptrMachine:DWORD
3  9645	00001935  C8 0000 00			 ENTERD	 00000h,0
3  9646	00001939  8B 75	08			 mov	 esi, ptrMachine
2  9647	0000193C  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9648	0000193F  47				 inc	 edi
2  9649
2  9650	00001940  57				 push	 edi
2  9651	00001941  56				 push	 esi
2  9652	00001942  E8 FFFFE998			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9653
2  9654	00001947  33 D2				 xor	 edx, edx
2  9655	00001949  B9 00000168			 mov	 ecx, 360
2  9656	0000194E  F7 F1				 div	 ecx
2  9657	00001950  D1 E2				 shl	 edx, 1					 ; EDX == Pointer in tane table
2  9658	00001952  81 C2	000008A9r		 add	 edx, offset trig_TangentTable
2  9659	00001958  0F B7	02			 movzx	 eax, word ptr [edx]
2  9660
2  9661	0000195B  89 46	04			 mov	 [esi].reg_acc,	eax
2  9662
2  9663	0000195E  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9664	00001962  C9				 LEAVED
3  9665	00001963  C2 0004			 RET	 00004h
2  9666	00001966			 vm_tanimm		 endp
2  9667
2  9668					 ;-----------------------------------------------------------------------------------------[+
   9669					 tan cnt
2  9670	00001966			 vm_tancnt		 proc	 STDCALL, ptrMachine:DWORD
3  9671	00001966  C8 0000 00			 ENTERD	 00000h,0
3  9672	0000196A  8B 75	08			 mov	 esi, ptrMachine
2  9673	0000196D  8B 46	08			 mov	 eax, [esi].reg_cnt
2  9674	00001970  33 D2				 xor	 edx, edx
2  9675	00001972  B9 00000168			 mov	 ecx, 360
2  9676	00001977  F7 F1				 div	 ecx
2  9677	00001979  D1 E2				 shl	 edx, 1					 ; EDX == Pointer in tane table
2  9678	0000197B  81 C2	000008A9r		 add	 edx, offset trig_TangentTable
2  9679	00001981  0F B7	02			 movzx	 eax, word ptr [edx]
2  9680
2  9681	00001984  89 46	04			 mov	 [esi].reg_acc,	eax
2  9682
2  9683	00001987  FF 46	1C			 inc	 [esi].reg_ip
3  9684	0000198A  C9				 LEAVED
3  9685	0000198B  C2 0004			 RET	 00004h
2  9686	0000198E			 vm_tancnt		 endp
2  9687
2  9688					 ;-----------------------------------------------------------------------------------------[+
   9689					 tan var
2  9690	0000198E			 vm_tanvar		 proc	 STDCALL, ptrMachine:DWORD
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 171
pmScript.ASM



3  9691	0000198E  C8 0000 00			 ENTERD	 00000h,0
3  9692	00001992  8B 75	08			 mov	 esi, ptrMachine
2  9693	00001995  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9694	00001998  47				 inc	 edi
2  9695
2  9696	00001999  57				 push	 edi
2  9697	0000199A  56				 push	 esi
2  9698	0000199B  E8 FFFFE93F			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9699	000019A0  50				 push	 eax
2  9700	000019A1  56				 push	 esi
2  9701	000019A2  E8 FFFFE938			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9702
2  9703	000019A7  33 D2				 xor	 edx, edx
2  9704	000019A9  B9 00000168			 mov	 ecx, 360
2  9705	000019AE  F7 F1				 div	 ecx
2  9706	000019B0  D1 E2				 shl	 edx, 1					 ; EDX == Pointer in tane table
2  9707	000019B2  81 C2	000008A9r		 add	 edx, offset trig_TangentTable
2  9708	000019B8  0F B7	02			 movzx	 eax, word ptr [edx]
2  9709
2  9710	000019BB  89 46	04			 mov	 [esi].reg_acc,	eax
2  9711
2  9712	000019BE  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9713	000019C2  C9				 LEAVED
3  9714	000019C3  C2 0004			 RET	 00004h
2  9715	000019C6			 vm_tanvar		 endp
2  9716
2  9717
2  9718
1  9719					 INCLUDE ops_rotate.inc
2  9720
2  9721
2  9722	000019C6				 .code
2  9723
2  9724					 ;-----------------------------------------------------------------------------------------[+
   9725					 rol immediate
2  9726	000019C6			 vm_rolimm		 proc	 STDCALL, ptrMachine:DWORD
3  9727	000019C6  C8 0000 00			 ENTERD	 00000h,0
3  9728	000019CA  8B 75	08			 mov	 esi, ptrMachine
2  9729	000019CD  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9730	000019D0  47				 inc	 edi
2  9731
2  9732	000019D1  57				 push	 edi
2  9733	000019D2  56				 push	 esi
2  9734	000019D3  E8 FFFFE907			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9735	000019D8  8B C8				 mov	 ecx, eax
2  9736	000019DA  8B 46	04			 mov	 eax, [esi].reg_acc
2  9737	000019DD  D3 C0				 rol	 eax, cl
2  9738
2  9739	000019DF  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9740	000019E3  C9				 LEAVED
3  9741	000019E4  C2 0004			 RET	 00004h
2  9742	000019E7			 vm_rolimm		 endp
2  9743
2  9744					 ;-----------------------------------------------------------------------------------------[+
   9745					 rol cnt
2  9746	000019E7			 vm_rolcnt		 proc	 STDCALL, ptrMachine:DWORD
3  9747	000019E7  C8 0000 00			 ENTERD	 00000h,0
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 172
pmScript.ASM



3  9748	000019EB  8B 75	08			 mov	 esi, ptrMachine
2  9749
2  9750	000019EE  8B 4E	08			 mov	 ecx, [esi].reg_cnt
2  9751	000019F1  8B 46	04			 mov	 eax, [esi].reg_acc
2  9752	000019F4  D3 C0				 rol	 eax, cl
2  9753
2  9754	000019F6  FF 46	1C			 inc	 [esi].reg_ip
3  9755	000019F9  C9				 LEAVED
3  9756	000019FA  C2 0004			 RET	 00004h
2  9757	000019FD			 vm_rolcnt		 endp
2  9758
2  9759					 ;-----------------------------------------------------------------------------------------[+
   9760					 ror immediate
2  9761	000019FD			 vm_rorimm		 proc	 STDCALL, ptrMachine:DWORD
3  9762	000019FD  C8 0000 00			 ENTERD	 00000h,0
3  9763	00001A01  8B 75	08			 mov	 esi, ptrMachine
2  9764	00001A04  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9765	00001A07  47				 inc	 edi
2  9766
2  9767	00001A08  57				 push	 edi
2  9768	00001A09  56				 push	 esi
2  9769	00001A0A  E8 FFFFE8D0			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9770	00001A0F  8B C8				 mov	 ecx, eax
2  9771	00001A11  8B 46	04			 mov	 eax, [esi].reg_acc
2  9772	00001A14  D3 C8				 ror	 eax, cl
2  9773
2  9774	00001A16  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9775	00001A1A  C9				 LEAVED
3  9776	00001A1B  C2 0004			 RET	 00004h
2  9777	00001A1E			 vm_rorimm		 endp
2  9778
2  9779					 ;-----------------------------------------------------------------------------------------[+
   9780					 ror cnt
2  9781	00001A1E			 vm_rorcnt		 proc	 STDCALL, ptrMachine:DWORD
3  9782	00001A1E  C8 0000 00			 ENTERD	 00000h,0
3  9783	00001A22  8B 75	08			 mov	 esi, ptrMachine
2  9784
2  9785	00001A25  8B 4E	08			 mov	 ecx, [esi].reg_cnt
2  9786	00001A28  8B 46	04			 mov	 eax, [esi].reg_acc
2  9787	00001A2B  D3 C8				 ror	 eax, cl
2  9788
2  9789	00001A2D  FF 46	1C			 inc	 [esi].reg_ip
3  9790	00001A30  C9				 LEAVED
3  9791	00001A31  C2 0004			 RET	 00004h
2  9792	00001A34			 vm_rorcnt		 endp
2  9793
2  9794					 ;-----------------------------------------------------------------------------------------[+
   9795					 shl immediate
2  9796	00001A34			 vm_shlimm		 proc	 STDCALL, ptrMachine:DWORD
3  9797	00001A34  C8 0000 00			 ENTERD	 00000h,0
3  9798	00001A38  8B 75	08			 mov	 esi, ptrMachine
2  9799	00001A3B  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9800	00001A3E  47				 inc	 edi
2  9801
2  9802	00001A3F  57				 push	 edi
2  9803	00001A40  56				 push	 esi
2  9804	00001A41  E8 FFFFE899			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 173
pmScript.ASM



2  9805	00001A46  8B C8				 mov	 ecx, eax
2  9806	00001A48  8B 46	04			 mov	 eax, [esi].reg_acc
2  9807	00001A4B  D3 E0				 shl	 eax, cl
2  9808
2  9809	00001A4D  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9810	00001A51  C9				 LEAVED
3  9811	00001A52  C2 0004			 RET	 00004h
2  9812	00001A55			 vm_shlimm		 endp
2  9813
2  9814					 ;-----------------------------------------------------------------------------------------[+
   9815					 shl cnt
2  9816	00001A55			 vm_shlcnt		 proc	 STDCALL, ptrMachine:DWORD
3  9817	00001A55  C8 0000 00			 ENTERD	 00000h,0
3  9818	00001A59  8B 75	08			 mov	 esi, ptrMachine
2  9819
2  9820	00001A5C  8B 4E	08			 mov	 ecx, [esi].reg_cnt
2  9821	00001A5F  8B 46	04			 mov	 eax, [esi].reg_acc
2  9822	00001A62  D3 E0				 shl	 eax, cl
2  9823
2  9824	00001A64  FF 46	1C			 inc	 [esi].reg_ip
3  9825	00001A67  C9				 LEAVED
3  9826	00001A68  C2 0004			 RET	 00004h
2  9827	00001A6B			 vm_shlcnt		 endp
2  9828
2  9829					 ;-----------------------------------------------------------------------------------------[+
   9830					 shr immediate
2  9831	00001A6B			 vm_shrimm		 proc	 STDCALL, ptrMachine:DWORD
3  9832	00001A6B  C8 0000 00			 ENTERD	 00000h,0
3  9833	00001A6F  8B 75	08			 mov	 esi, ptrMachine
2  9834	00001A72  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9835	00001A75  47				 inc	 edi
2  9836
2  9837	00001A76  57				 push	 edi
2  9838	00001A77  56				 push	 esi
2  9839	00001A78  E8 FFFFE862			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9840	00001A7D  8B C8				 mov	 ecx, eax
2  9841	00001A7F  8B 46	04			 mov	 eax, [esi].reg_acc
2  9842	00001A82  D3 E8				 shr	 eax, cl
2  9843
2  9844	00001A84  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9845	00001A88  C9				 LEAVED
3  9846	00001A89  C2 0004			 RET	 00004h
2  9847	00001A8C			 vm_shrimm		 endp
2  9848
2  9849					 ;-----------------------------------------------------------------------------------------[+
   9850					 shr cnt
2  9851	00001A8C			 vm_shrcnt		 proc	 STDCALL, ptrMachine:DWORD
3  9852	00001A8C  C8 0000 00			 ENTERD	 00000h,0
3  9853	00001A90  8B 75	08			 mov	 esi, ptrMachine
2  9854
2  9855	00001A93  8B 4E	08			 mov	 ecx, [esi].reg_cnt
2  9856	00001A96  8B 46	04			 mov	 eax, [esi].reg_acc
2  9857	00001A99  D3 E8				 shr	 eax, cl
2  9858
2  9859	00001A9B  FF 46	1C			 inc	 [esi].reg_ip
3  9860	00001A9E  C9				 LEAVED
3  9861	00001A9F  C2 0004			 RET	 00004h
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 174
pmScript.ASM



2  9862	00001AA2			 vm_shrcnt		 endp
2  9863
2  9864
1  9865					 INCLUDE ops_alloc.inc
2  9866
2  9867
2  9868	00001AA2				 .code
2  9869
2  9870					 ;-----------------------------------------------------------------------------------------[+
   9871					 alloc immediate
2  9872	00001AA2			 vm_allocimm		 proc	 STDCALL, ptrMachine:DWORD
3  9873	00001AA2  C8 0000 00			 ENTERD	 00000h,0
3  9874	00001AA6  8B 75	08			 mov	 esi, ptrMachine
2  9875	00001AA9  8B 5E	29			 mov	 ebx, [esi].code_len
2  9876
2  9877	00001AAC  8B 7E	1C			 mov	 edi, [esi].reg_ip
2  9878	00001AAF  47				 inc	 edi
2  9879
2  9880	00001AB0  57				 push	 edi
2  9881	00001AB1  56				 push	 esi
2  9882	00001AB2  E8 FFFFE828			 call	 internals_ReadValue			 ; Gets	32 bit value after opcode
2  9883
2  9884	00001AB7  50				 push	 eax
2  9885	00001AB8  56				 push	 esi
2  9886	00001AB9  E8 FFFFE8FD			 call	 internals_Allocate			 ; Allocate the	extra memory
2  9887
2  9888	00001ABE  89 5E	04			 mov	 [esi].reg_acc,	ebx			 ; acc -> new area
2  9889	00001AC1  83 46	1C 05			 add	 [esi].reg_ip, 5
3  9890	00001AC5  C9				 LEAVED
3  9891	00001AC6  C2 0004			 RET	 00004h
2  9892	00001AC9			 vm_allocimm		 endp
2  9893
2  9894					 ;-----------------------------------------------------------------------------------------[+
   9895					 alloc cnt
2  9896	00001AC9			 vm_alloccnt		 proc	 STDCALL, ptrMachine:DWORD
3  9897	00001AC9  C8 0000 00			 ENTERD	 00000h,0
3  9898	00001ACD  8B 75	08			 mov	 esi, ptrMachine
2  9899	00001AD0  8B 5E	29			 mov	 ebx, [esi].code_len
2  9900
2  9901	00001AD3  FF 76	08			 push	 [esi].reg_cnt
2  9902	00001AD6  56				 push	 esi
2  9903	00001AD7  E8 FFFFE8DF			 call	 internals_Allocate			 ; Allocate the	extra memory
2  9904
2  9905	00001ADC  89 5E	04			 mov	 [esi].reg_acc,	ebx			 ; acc -> new area
2  9906	00001ADF  FF 46	1C			 inc	 [esi].reg_ip
3  9907	00001AE2  C9				 LEAVED
3  9908	00001AE3  C2 0004			 RET	 00004h
2  9909	00001AE6			 vm_alloccnt		 endp
2  9910
2  9911					 ;-----------------------------------------------------------------------------------------[+
   9912					 alloc acc
2  9913	00001AE6			 vm_allocacc		 proc	 STDCALL, ptrMachine:DWORD
3  9914	00001AE6  C8 0000 00			 ENTERD	 00000h,0
3  9915	00001AEA  8B 75	08			 mov	 esi, ptrMachine
2  9916	00001AED  8B 5E	29			 mov	 ebx, [esi].code_len
2  9917
2  9918	00001AF0  FF 76	04			 push	 [esi].reg_acc
Turbo Assembler	 Version 5.0	    07-22-08 20:46:41	    Page 175
pmScript.ASM



2  9919	00001AF3  56				 push	 esi
2  9920	00001AF4  E8 FFFFE8C2			 call	 internals_Allocate			 ; Allocate the	extra memory
2  9921
2  9922	00001AF9  89 5E	04			 mov	 [esi].reg_acc,	ebx			 ; acc -> new area
2  9923	00001AFC  FF 46	1C			 inc	 [esi].reg_ip
3  9924	00001AFF  C9				 LEAVED
3  9925	00001B00  C2 0004			 RET	 00004h
2  9926	00001B03			 vm_allocacc		 endp
1  9927
1  9928
1  9929
   9930
   9931						 end	 DLLMain
